cset: moving following pidspec: 1436
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.293725469 seconds)
loading group "string"... done (took 0.534987374 seconds)
loading group "linalg"... done (took 6.820331912 seconds)
loading group "parallel"... done (took 0.156745795 seconds)
loading group "find"... done (took 1.19140486 seconds)
loading group "tuple"... done (took 1.694964177 seconds)
loading group "dates"... done (took 1.183346472 seconds)
loading group "micro"... done (took 0.222191652 seconds)
loading group "io"... done (took 0.979247325 seconds)
loading group "scalar"... done (took 37.330416614 seconds)
loading group "sparse"... done (took 12.655220378 seconds)
loading group "broadcast"... done (took 0.949452589 seconds)
loading group "union"... done (took 12.774922847 seconds)
loading group "simd"... done (took 4.282529993 seconds)
loading group "random"... done (took 8.559552952 seconds)
loading group "problem"... done (took 2.014987694 seconds)
loading group "array"... done (took 20.751854672 seconds)
loading group "misc"... done (took 1.785234787 seconds)
loading group "sort"... done (took 3.258192066 seconds)
loading group "collection"... done (took 17.18013379 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.510583661 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140884178 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133042104 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134398411 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.171969739 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.128340089 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140460395 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099765228 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.103726565 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15604091 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.134465779 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.465823082 seconds)
done (took 5.216681774 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.2059039 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083699226 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096385087 seconds)
  done (took 1.02511766 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066562784 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121931056 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065812178 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.083038396 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067321572 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064944662 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082244296 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06607631 seconds)
  done (took 1.402364507 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.0737724 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068210085 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085023497 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06863245 seconds)
  done (took 1.147006691 seconds)
done (took 4.706713589 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.838712434 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.242134735 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183411677 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.432167693 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.146137114 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.181692227 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671809998 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.338413283 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.201820207 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082485595 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.120171305 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.357154431 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124164286 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669919254 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075391673 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.10742286 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160920463 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.413820133 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068828114 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085784876 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104065297 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128772839 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101783343 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091609289 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.158761955 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083184347 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14730608 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081633286 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083023593 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.227109849 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188265584 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.676034889 seconds)
  done (took 10.462898803 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096172726 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.11358714 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068611501 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139383045 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097174374 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086702253 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071461778 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066515636 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.103521459 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.1442699 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088187788 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.118246177 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065424854 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085671102 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084728793 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.222605373 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082882037 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099421917 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070661255 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091337062 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107222264 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094065491 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078964532 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094391199 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128983475 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19577303 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097181546 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112085987 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068403536 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097438593 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130034209 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128061999 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065973185 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083333143 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124997108 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111764314 seconds)
  done (took 4.580349121 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.030187931 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.155466362 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090756313 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150457895 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06727193 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125300176 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082224513 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085534167 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109851051 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.234973408 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.122583841 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.485623452 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128020296 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.085285475 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06763468 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086211106 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066893794 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.555337719 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145827483 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121946434 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084203589 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089746706 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070175962 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.356737237 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068089092 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066136319 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085114352 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059926404 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142940743 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068351324 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.146852273 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.108802019 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068608091 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119694345 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.179239322 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067162224 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104816556 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.153865055 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066798382 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065130455 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16598952 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092097315 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065816159 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100727336 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103112409 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119964861 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084650904 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068297938 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.17699913 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067068435 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084172966 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083089365 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.838689339 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165871852 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077187889 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065535872 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.28127099 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084138829 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084255432 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06460372 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.258797456 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.146475455 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067247459 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083196448 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066731549 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063481293 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085096425 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364744019 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067509621 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.886583776 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069228385 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077240555 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085656184 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067579554 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089403465 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072929359 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100969871 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066985261 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068059458 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083231214 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066346547 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067644795 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102155922 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205692864 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065777007 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084549262 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065357115 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102269864 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097229438 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086451235 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065805108 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115067093 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068990046 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066910282 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118533022 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066713909 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101838681 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085245564 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114027091 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082704772 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.125478925 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066375019 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.112018423 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071480775 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114960887 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095746931 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068272895 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.148325932 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064476313 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064020259 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084667452 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067525113 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083704612 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068752522 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078468527 seconds)
  done (took 21.049334499 seconds)
done (took 37.973876819 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.290400893 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093375044 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075626323 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.094177082 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093207909 seconds)
  done (took 1.574231205 seconds)
done (took 2.474737576 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119440793 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117768341 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063553318 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114036672 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063784472 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118932559 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097712664 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099253832 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115477591 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065227535 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095347734 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082006257 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063990807 seconds)
  done (took 2.144847578 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082816871 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08277768 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086995611 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08173735 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063178221 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098902147 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079949447 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104627797 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080851976 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070991583 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081052977 seconds)
  done (took 1.809208426 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081812208 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082832803 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086324046 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081451658 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062285011 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09893719 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079590774 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10245071 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081027287 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089127583 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064643113 seconds)
  done (took 1.805164086 seconds)
done (took 6.650561294 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077777478 seconds)
  done (took 0.967038448 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.650369026 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.076125094 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.07996042 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134205783 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.201192718 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.140452112 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.34167206 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087257109 seconds)
  done (took 9.796637901 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100061918 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087512908 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068649397 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089199131 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069711181 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068435083 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.090140117 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069183833 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068828065 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068115075 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071536338 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0886433 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070243808 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088911463 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071486083 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087734877 seconds)
  done (took 2.213095921 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091273067 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109626463 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073187414 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.094483746 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07207735 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.09116837 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075248114 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091555322 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070267156 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.08902822 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075309228 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091378501 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072114381 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082230693 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074097433 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093391419 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071584007 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090351639 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076675371 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091203244 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075517039 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063674861 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070210215 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073085758 seconds)
  done (took 2.93926593 seconds)
done (took 16.812535349 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112147453 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.088943767 seconds)
  done (took 1.093414635 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081626728 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099273816 seconds)
  done (took 1.078029594 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08398362 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08209861 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09058248 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095076897 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066016833 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.08299373 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104605679 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06631075 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065872565 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.084046507 seconds)
  done (took 1.722902792 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068701172 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093660725 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071512272 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098344704 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073913026 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081436043 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073508357 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083756722 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078875711 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062737537 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.089510161 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099451922 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071797214 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102070152 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073263527 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085932582 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070376468 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08505058 seconds)
  done (took 2.364667332 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066495799 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066645593 seconds)
  done (took 1.033266881 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068232144 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063436432 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084478304 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066609639 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081125558 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063395117 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079687943 seconds)
  done (took 1.409584569 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.409775644 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110145657 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329974351 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071744224 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101552686 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.267809819 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065259331 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070070281 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092908443 seconds)
  done (took 2.460586416 seconds)
done (took 12.061955346 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080097873 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085290204 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111871407 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416103168 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093221773 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083618335 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132439342 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.227285671 seconds)
done (took 2.136227597 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125901058 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.617035666 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.407070895 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212665687 seconds)
  done (took 2.145455576 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.311254052 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11018651 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059181882 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084131706 seconds)
  done (took 1.474189454 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067151265 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069008399 seconds)
  done (took 1.042757149 seconds)
done (took 5.695772885 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067535203 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081907637 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085368578 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064075046 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084128369 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064612792 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063679848 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084125453 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066954409 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065758221 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.083149573 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069039333 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063135869 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081394082 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064236533 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065505506 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084007423 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064586413 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063696909 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081188971 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06689434 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063404196 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080961907 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066091351 seconds)
  done (took 2.670439594 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084048766 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083171133 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072954367 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070728819 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090955992 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071577193 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090191385 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066783327 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088926985 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069062006 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087196493 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071143124 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068294636 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088165824 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068169417 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088756483 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07170099 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084034244 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068538506 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087394144 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072956911 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065926275 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087288153 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072266405 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088639021 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069602041 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087573947 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06764078 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088931182 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071422558 seconds)
  done (took 3.255731629 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070421947 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063260664 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082002512 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070921181 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063823415 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082805565 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064831536 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063935284 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.0827573 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064213884 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06479591 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082637372 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063772431 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081655235 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066333267 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067179967 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09770032 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065094142 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063947765 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.083129485 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067616047 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063901679 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082933239 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064339954 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.08107203 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064999143 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065291429 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081043736 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06565539 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063712036 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084596238 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068102762 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06297673 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.088337269 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067895069 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062940597 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086229757 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063867284 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06419818 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081159992 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06355736 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063020205 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063002242 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069753002 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.083340126 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066171221 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064007566 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083702338 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065066057 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066179119 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06310443 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062741033 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084329927 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067005885 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068074185 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081079721 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065257089 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063338047 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082598925 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064113931 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063480218 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081053675 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066877586 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064303567 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09661534 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071007727 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081171922 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066298843 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064695392 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084085389 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065988511 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07606804 seconds)
  done (took 6.062065071 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092552616 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106099533 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064840384 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.083803438 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062655342 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081902404 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068681858 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063791791 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083661751 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070455314 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081971891 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066790166 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065209118 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094741895 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064909743 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082409147 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071464611 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062999292 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.190675383 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067976247 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082060995 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068890248 seconds)
  done (took 2.695266758 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.173887313 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071333668 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.124361956 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072694719 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0663243 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092623636 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070839174 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069657421 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090035633 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068843293 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085947382 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070238632 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086257885 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068475346 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086004844 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069587632 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087021193 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069411911 seconds)
  done (took 2.441021084 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078026526 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066295757 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10413308 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066061688 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084513074 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068622794 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089191321 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074652285 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084728347 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067286308 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074154133 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087182553 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068639081 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083762037 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069984594 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065773591 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.086467894 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066233956 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092340438 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071369852 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089672915 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074885436 seconds)
  done (took 2.633259324 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080945352 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068316671 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101282672 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068723453 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081032833 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064818264 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088052809 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066862668 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070371775 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.086147776 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067338914 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081976151 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071266621 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066359483 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.088027565 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066721838 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085526386 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06771989 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06787147 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080746284 seconds)
  done (took 2.440785562 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088404132 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08510833 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068898639 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094312699 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068644476 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085503389 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077214491 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085207098 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069385623 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105153788 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06915749 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067279645 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094497083 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090453882 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068159827 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093768278 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076293374 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094402128 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067301983 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086042557 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087767484 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066379643 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074098698 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08775347 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067503276 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085355727 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068465392 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091197136 seconds)
  done (took 3.182621811 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067513325 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06611033 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080981205 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064025474 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063377935 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081245212 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064640028 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063800811 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083709154 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064441595 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066495859 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084496356 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066988732 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065877307 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084432701 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067391788 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065267918 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082072322 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064027203 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063437091 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084156488 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066007576 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066414632 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082083673 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064253514 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083276335 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065414811 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064880138 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083969347 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065243697 seconds)
  done (took 3.057781599 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076897885 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073088058 seconds)
  done (took 1.074068696 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064696293 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079988865 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082277557 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070314651 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087934957 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067978472 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073436891 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08980535 seconds)
  done (took 1.541860051 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082812449 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076315477 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086026694 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079756129 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095363647 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08257435 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155345226 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085439017 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073680004 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064044235 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.099246 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066424596 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09098574 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068055543 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071810019 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091399915 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06444093 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091131255 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069763038 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064704584 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085992572 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074933631 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087724393 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063102478 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067251974 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107894508 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095166424 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067384712 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069446607 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092679196 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072344086 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077571633 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068397584 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067207506 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082835963 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076949172 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099591982 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069976176 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091740499 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068905562 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095005016 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063434388 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070754123 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091249186 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076195127 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084230263 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068245718 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062274536 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082739453 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069776757 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061908809 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084978955 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061745534 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091141961 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071262779 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078794717 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084187522 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068232557 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087414455 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070148879 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072821707 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086468729 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069294079 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083993895 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076957425 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071040247 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093724935 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061564836 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07915763 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06607771 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07528578 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087494943 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071048985 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088066098 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067081437 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082522973 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071202355 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067204675 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091365109 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072529812 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085281796 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073418132 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0914844 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0677191 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068731953 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093546884 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064633374 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088053895 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064581766 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101746929 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06618458 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064229566 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083234974 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076765589 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087988104 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067574117 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063724973 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092013792 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061505856 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084714574 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069482047 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066995798 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095989747 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071543199 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090827663 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075413788 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092584815 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06745341 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069295483 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062312633 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066432411 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085974521 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07470704 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060848968 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088705396 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067690581 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.08502575 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076870856 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064557609 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085291009 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074344583 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090799177 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066531215 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062757376 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08815427 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067380468 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088127758 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075621354 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064995676 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081529476 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062386123 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087965534 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067424867 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070143058 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089986877 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070212745 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079555588 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065358074 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088886997 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076026886 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066315465 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086304067 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073265762 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085451454 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06613386 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07310408 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08767492 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066169496 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090522223 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068005623 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061666097 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088716922 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069417417 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064931237 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068852614 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069136162 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089580312 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06695601 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083850565 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075669166 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085862552 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067997596 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066540819 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08387092 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077983152 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068195927 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081455851 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064046228 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094128015 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064896362 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083293825 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066862191 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068242784 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086408231 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065736883 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066304441 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087019446 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076437603 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090630764 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067547302 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09033078 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078351459 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066720595 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068381474 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065008704 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087997797 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068121285 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093798428 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072965488 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071190635 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088424772 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063635423 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090395319 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075240859 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06536658 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083187583 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066048421 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089625083 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073645951 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089079414 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068026207 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064382167 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086025564 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070252693 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086716752 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067760226 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066331758 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092290423 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065593949 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09299361 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069235155 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094163705 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070695461 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061464101 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088823141 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065422596 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072504395 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061076875 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063822571 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086378876 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068499277 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065079208 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088744125 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060815155 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091721438 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074674032 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066754563 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084832315 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066803121 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09202009 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069078738 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070179338 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089417465 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072844052 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095126785 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066502408 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069065648 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096084651 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066803884 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079539177 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072236542 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065053471 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085466741 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065913826 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082681421 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070747907 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093220997 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075004521 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060751546 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088462718 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065635547 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065084353 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08177003 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070753611 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088149019 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068710813 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072662038 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086880925 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067602291 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089701509 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067150699 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067101232 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08718845 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069288042 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086057406 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06921807 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065655848 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089005575 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06588076 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082832129 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069978189 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067185279 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086570239 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073330197 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08410532 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067889432 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069165527 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086675775 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067820062 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085091967 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067749575 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069361158 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086250409 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067656682 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068630819 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081377234 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074500436 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065978039 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073182022 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06587749 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084540007 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074541936 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087681819 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073433478 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086207595 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068087634 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068041902 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085413451 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070333803 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091788945 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065530017 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076734126 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093638123 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067039735 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088479132 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067927958 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068465201 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085054932 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068139929 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085064265 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068627729 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066500554 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070441167 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067866161 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086300075 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070015177 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067199153 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086419365 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068441003 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061392251 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085637189 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06675195 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085193607 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07744812 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066685992 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085227718 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065236225 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086479972 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066536366 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063350808 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094463324 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076464674 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086458061 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073270032 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085338347 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06884553 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095122011 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061818614 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065668718 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08339084 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066037448 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073537633 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086947769 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076080561 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08559258 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067600875 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063421481 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087112947 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065394226 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060977393 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063500251 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069146946 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086704726 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066686553 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066130862 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088928241 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068070159 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095507487 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066383295 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066747061 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086774985 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06337776 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084298604 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067888358 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069445742 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087043936 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065132926 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063597238 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085904405 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068485992 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086583274 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067267305 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067776359 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092154278 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06725572 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088442079 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070860782 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063352385 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089021362 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067300174 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084722351 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066790871 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070269788 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089144086 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067858119 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094402591 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06755459 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067297015 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085892816 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065179447 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084709223 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067859205 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067205617 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085894536 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069150034 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09319656 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066410475 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069506133 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086555948 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068231865 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091653193 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069470306 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069350353 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093039914 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067360882 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086720919 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075834161 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088586083 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070907028 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067486385 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087135535 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072983561 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084267338 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074550873 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067248283 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087013926 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068934938 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064383891 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08531753 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066556096 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084038151 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074321023 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066642091 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085498721 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067338305 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082418057 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069051177 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070236863 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093175945 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068750982 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088436808 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063000423 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063839633 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086960451 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064854536 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068307989 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067849062 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070893339 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090049832 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067536836 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064726845 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096122154 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072722584 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089846422 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065713665 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088379049 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068781581 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069026681 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087638186 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067525948 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067665736 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09031989 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.0690782 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085695678 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074166364 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069985989 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066548303 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067476879 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089217706 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06819425 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061873685 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088041159 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069872035 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090402289 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069936467 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066462009 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097423163 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065291391 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086474842 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072168644 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066610587 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09146897 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062555883 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086780045 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069411636 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067743323 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.08188864 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067313531 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063827324 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089167202 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066090991 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081258559 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077879332 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094690293 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070600076 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06544708 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085070356 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06277204 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062124307 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085703091 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068165215 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087012021 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077421615 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065318118 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08555926 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062223325 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08596292 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070607388 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069764508 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084250126 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062755212 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065565979 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068408003 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070131106 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08656011 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066562084 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069226287 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089743666 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064844428 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08942835 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064147112 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069552476 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098959794 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067359728 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087109058 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07383012 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093211258 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067953378 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061818451 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087254649 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070289731 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085833072 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068281612 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06732046 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10138762 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069326089 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085706509 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066435082 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068516439 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086617824 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074630607 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087230895 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067916278 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089544039 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069561051 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07592412 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089535004 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074549942 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08936864 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069792823 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.084440504 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068044078 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064712443 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085479959 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069232564 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067208579 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091822569 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.0749591 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08609606 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07680586 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095300174 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069209443 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082294006 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067261708 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066345463 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081548409 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068482053 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064667532 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08450221 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065124387 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065622223 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087928813 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071526409 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088268928 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06855779 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066568408 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081043738 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069763692 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087547205 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068528343 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064009104 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08607719 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067763704 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069731635 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090642396 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064707108 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08748256 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068861037 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066874523 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081458377 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073499969 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084140794 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069278514 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06654275 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086729036 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068336146 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088666823 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073169507 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067640415 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088590397 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070355748 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088371181 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064897597 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063235269 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092076822 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06519115 seconds)
  done (took 46.334657132 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099930892 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082671386 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063132884 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061951608 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094597713 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063503358 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082307872 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063508307 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081066937 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067278361 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062509374 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081701362 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0720279 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097926728 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073893731 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087182925 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062111499 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082432137 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062550202 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062926283 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091751404 seconds)
  done (took 2.570089614 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075353278 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.0696611 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071153942 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074077979 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066322996 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094349714 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07333999 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091485696 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076624774 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087704202 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076136982 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090668591 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067400048 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087357547 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067271772 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091123289 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075776724 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088277974 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071117662 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092948578 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070527603 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093611474 seconds)
  done (took 2.724263514 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068266686 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065578143 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086475172 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062874061 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065655508 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081292341 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070627805 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063624791 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075309151 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064228798 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08664362 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065013497 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067554359 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082462112 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066428725 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.0636993 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.128761124 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089670199 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066945711 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066472463 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061000763 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066942237 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.084379595 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062947913 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064765718 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091350828 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067055311 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083410906 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066553537 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065554999 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085853505 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064827402 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066914491 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086783858 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065925114 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064427754 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086645569 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06587751 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081246392 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065874582 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06683676 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082052867 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067448428 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066577191 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085022924 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064661087 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086771149 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06720259 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061287207 seconds)
  done (took 4.558065906 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080654011 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129100983 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066794589 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089099658 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102390284 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073499381 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090898318 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109349514 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064296678 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06442079 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.104031408 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.10356155 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066503376 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091474296 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.0739801 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085613828 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068320542 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064353525 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090917242 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064869196 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090725463 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073159775 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100873443 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.099972469 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071183541 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084008362 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06623582 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07061068 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100155506 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089920297 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071795356 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091161457 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082871164 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091474353 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065807755 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087528903 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083699013 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087442341 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069170114 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.083113633 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069728594 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088907867 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073558566 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102465507 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06683739 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090361624 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068072428 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062682467 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099791822 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067673492 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094783837 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10116683 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069971123 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085737632 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07143148 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101083162 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066786886 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083966028 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070246796 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098446039 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064632014 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088021373 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081193259 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08792731 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074273221 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078901562 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069850318 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091483066 seconds)
  done (took 6.737159596 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07556937 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092182903 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081718115 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101848986 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072152786 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071414259 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093177004 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074001577 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092268778 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07820894 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093274395 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113816913 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068942515 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095636158 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074255029 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093388024 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073882131 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09280566 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07323567 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093364154 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072995238 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.100836976 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091709173 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082782296 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096036187 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06636893 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094655041 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073097015 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102803791 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091958846 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081340177 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092387293 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073244889 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101608941 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079450657 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093561193 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064719595 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093000667 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073082899 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071564178 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066620083 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103749652 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092642132 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068633828 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092486266 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074080988 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102170735 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080593711 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095607944 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0979025 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073732379 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100248659 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072622188 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093266877 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100780152 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106502683 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102225834 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101240343 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072743042 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101497217 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100704519 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087550904 seconds)
  done (took 6.368964398 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084699473 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095036643 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076721339 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082883687 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065613362 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069922034 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063456984 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063429642 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099019324 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073747681 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099234163 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089675179 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075005228 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09785111 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070361239 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093897964 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070093008 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090864685 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074281591 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091736842 seconds)
  done (took 2.611885007 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075596106 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082463439 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089005579 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072025731 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090024558 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072234424 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089859746 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069792342 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086182928 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07058081 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077241415 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097449807 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067072047 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092393956 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094957763 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073583422 seconds)
  done (took 2.28574242 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07638139 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.092588816 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080922696 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086515551 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06596592 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063200804 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086964436 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062661835 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062107943 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.099464641 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066444709 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089626333 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066949603 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084686228 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063890627 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068957225 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.084044857 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064961755 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085001877 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079543321 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096655817 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066623003 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066549222 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087507166 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067135586 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092589693 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066798492 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.084027313 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064932424 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06694933 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087559418 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069575513 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083484897 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065038833 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064668838 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084784679 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066441382 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087106741 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070200164 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065952776 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085571252 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066021618 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085948595 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067512405 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062024262 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.087335359 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063049873 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.08902041 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065967756 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086627556 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066910644 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068638841 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087211649 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072892282 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.08940644 seconds)
  done (took 5.167297816 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079581457 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06899904 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083038439 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065305097 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06825401 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.08949854 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069065962 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088891417 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068652518 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083872847 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069469921 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068960602 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088545187 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070155592 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067160834 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068419345 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060897838 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090938921 seconds)
  done (took 2.336775309 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072534409 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065992125 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093468288 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066756611 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065719586 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090045765 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062912723 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08515107 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065899246 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06568192 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086599514 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069111561 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084289921 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069636633 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066817873 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086791179 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069292327 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063971373 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086607273 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062554626 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088763874 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065758602 seconds)
  done (took 2.622645412 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073024114 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091347457 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.160128951 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.104318076 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082973775 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078527164 seconds)
  done (took 1.583962968 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091464476 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099775515 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067892198 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0872148 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09513003 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067134242 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090051887 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067998372 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097860805 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098000543 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069417368 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097235955 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077095417 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097898219 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093908944 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075048387 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087808876 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070299537 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066658811 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083006922 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090253668 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077164201 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089121511 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069278973 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088691022 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077827623 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098346854 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096426774 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069623389 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097166713 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075737303 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08946687 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077977604 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098653831 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070321037 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097225461 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067903063 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106072262 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09471543 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077621424 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090026722 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074702613 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098460374 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074037981 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098333827 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067888817 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094097219 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068120951 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090057509 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107662331 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075189281 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097876069 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073930282 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098411606 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097324802 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088179959 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098470964 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096819297 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075413136 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09806789 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076745126 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095163859 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097128965 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078286387 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095106556 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079163282 seconds)
  done (took 6.673125506 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082709644 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107464124 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069179967 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099173592 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076377018 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090168139 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068277302 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088883465 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068430955 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088417809 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1296698 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069987401 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097618694 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077972184 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089503781 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068423316 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089442162 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076875235 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089572271 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107382399 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069625544 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09692399 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076567081 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097424389 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097951464 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074817763 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088701086 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069257845 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088423659 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069601323 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094583429 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068917009 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097834699 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067872197 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098099588 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068421804 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089495919 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072804529 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090050606 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073492318 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097964335 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105987349 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069204326 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089277638 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078163884 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089529976 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068676203 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089064986 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069105883 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088710483 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077827018 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075962733 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075429799 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074381749 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092859849 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069681399 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089170059 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069686497 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089038885 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075463559 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09742181 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068956287 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108370828 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068332619 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09028486 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09707855 seconds)
  done (took 6.553126893 seconds)
done (took 131.091783797 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.200680981 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187252643 seconds)
  done (took 1.381823313 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069495858 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096843086 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099262597 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128274346 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088574775 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101014429 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098696677 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.100137145 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066816341 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088007416 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068653305 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068325726 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153139099 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068091808 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066366748 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067359611 seconds)
  done (took 2.429892188 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102793686 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196080707 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109885391 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066241184 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099113545 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079026029 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064397731 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096955846 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071175489 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086313917 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078860355 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096403138 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066026788 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07427978 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07018104 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098684184 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067248986 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077147548 seconds)
  done (took 2.606875399 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101852801 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14282501 seconds)
  done (took 1.250925252 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.18512359 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13818166 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.188634112 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.422579171 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.204715044 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.264661388 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.178120218 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.174990704 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15688823 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.173214231 seconds)
  done (took 3.085311957 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100140525 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170262108 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304425804 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116341769 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.095662014 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114489581 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12044019 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.099724058 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.098596918 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080109194 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.099111659 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078103391 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118102221 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075707308 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095523614 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077555112 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121080828 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073624284 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096616005 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075711204 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118944991 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066940017 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094656147 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074932879 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075307194 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097203514 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065713049 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087264239 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076754405 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094712821 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079163661 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.089012735 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074090851 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.131255923 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092634619 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.132067274 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077284999 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094046739 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075098962 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093406236 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077411236 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098481831 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073249888 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098260419 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066750376 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076345726 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088140626 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066548542 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100011261 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06787962 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100228297 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078862592 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.127612765 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.088038832 seconds)
  done (took 6.21134738 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.714646557 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.126990244 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070298404 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.130595579 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117212555 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074218619 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.76474439 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11442451 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199128168 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092654434 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109806239 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072344508 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102080748 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084935972 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.130580605 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101776047 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115090889 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071753562 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.12332879 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.121303663 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06906052 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114509585 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091083203 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.399616891 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068437168 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092000723 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068698405 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070091909 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.13327741 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.09927367 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069667174 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.165404554 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085763417 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.145063188 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089414257 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068881913 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068382524 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.101078172 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.203315622 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.180868878 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.152604686 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068559399 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068886938 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.091114292 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090268595 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088625355 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.13484437 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080709898 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.117375241 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093478893 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070180065 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088830956 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071053074 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100779635 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07935406 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101749036 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.254967122 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089069947 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069897631 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071093912 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.225510985 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080042207 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101599946 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092413941 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.176754324 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069175198 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.726710166 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084425983 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068298497 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094202391 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068323355 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091481569 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07043065 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.140778806 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.365009045 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07118494 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069866984 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089954133 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186326203 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078656338 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090071532 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.112836671 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067247937 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091924258 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070682429 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069501926 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.139599652 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078928003 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06912776 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092147393 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070505246 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.089635555 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067739458 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.186470841 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.100645401 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081274587 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.180771222 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090548215 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.135339354 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080077429 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091204643 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081423255 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.089307804 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071790554 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069287808 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.100114395 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.118674739 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080615269 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09031201 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069447071 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.120533288 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080863577 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.089310952 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079014511 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.42105127 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.101659477 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067443306 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102771652 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068235571 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.134518268 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091097426 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.202748735 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068104642 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101248078 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068884217 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088775597 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068089636 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.133712761 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0909715 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069950038 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068833314 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091419367 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080942324 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.180200798 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071196661 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.182826805 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.156615717 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.091032752 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.14372124 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069430726 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.139082294 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069218807 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091613806 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070182329 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.743840431 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068890896 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068244034 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091743423 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161370909 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069349034 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079772624 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076687087 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066745316 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.742700756 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080283595 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099071796 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079872279 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091714449 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068890057 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088594421 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071231254 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.133261374 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.189864783 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070935681 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067771812 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099512399 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.135018057 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067550293 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100054724 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079286262 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100616404 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06913671 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091765233 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082116802 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141104193 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.100590656 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.15826582 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.561111453 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070308836 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.097557771 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.168369954 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068412586 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106418711 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06772228 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.104767336 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136167702 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097814972 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.254288744 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.136915806 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.161346779 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07969962 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104948538 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06778459 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.089875822 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080242758 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089325055 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070995119 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.09891233 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070872657 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069841829 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.105766072 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068933917 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.197016588 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.0894281 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079940307 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089486972 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070618959 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10504061 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069699906 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06960846 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.0784019 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0690356 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102012215 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.672451011 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099968512 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069440079 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070437484 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.181330386 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.13792545 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068245874 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090359015 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070256871 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.132497865 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.179762371 seconds)
  done (took 30.611633865 seconds)
done (took 48.576097614 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.258050969 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173722719 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.250398602 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.141561946 seconds)
  done (took 1.9248911 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145874045 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101804258 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118677054 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065384733 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125429868 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086999479 seconds)
  done (took 1.668661468 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.386993746 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.265334401 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.227696901 seconds)
  done (took 1.908140674 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.220062631 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235195263 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.415439277 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299546328 seconds)
  done (took 2.306577671 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.166708556 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113564907 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067623739 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106247496 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159214002 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209085213 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124658051 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.172346116 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078811057 seconds)
  done (took 2.275578999 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.191616614 seconds)
done (took 11.300838331 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.097568872 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.269037287 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.173932921 seconds)
    (4/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.17154127 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.215630867 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.208223971 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08080857 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102203913 seconds)
    (9/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.216611562 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073302134 seconds)
    (11/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.188093432 seconds)
    (12/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109389521 seconds)
    (13/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134125045 seconds)
    (14/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.111436691 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.162201298 seconds)
    (16/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.222799974 seconds)
    (17/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.230565971 seconds)
    (18/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.162522512 seconds)
    (19/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076652112 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.168344322 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075531048 seconds)
    (22/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.179211975 seconds)
    (23/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.103188378 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.16499702 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05201767 seconds)
    (26/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078308161 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.098061698 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.10942681 seconds)
    (29/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.205132359 seconds)
    (30/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072597884 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.20207085 seconds)
    (32/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.061918217 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.138090485 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066743701 seconds)
    (35/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076246703 seconds)
    (36/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.152835541 seconds)
    (37/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.098158611 seconds)
    (38/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.063695019 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105025781 seconds)
    (40/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.219536231 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.097048754 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.098140542 seconds)
    (43/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074377612 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072736692 seconds)
    (45/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.14320109 seconds)
    (46/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069821964 seconds)
    (47/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.217257199 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.094158355 seconds)
    (49/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.11112671 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160609373 seconds)
    (51/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068495592 seconds)
    (52/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.078269164 seconds)
    (53/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.203490792 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075396877 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.11970326 seconds)
    (56/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077772182 seconds)
    (57/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.14022973 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.183717838 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.108395808 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.08992239 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.148793474 seconds)
    (62/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089130728 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098573696 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.119200865 seconds)
    (65/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.17092697 seconds)
    (66/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051735367 seconds)
    (67/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073465365 seconds)
    (68/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.07393559 seconds)
    (69/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.103681528 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115169146 seconds)
    (71/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.163831074 seconds)
    (72/309) benchmarking ("sort", Int8, false)...
    done (took 0.164280816 seconds)
    (73/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103379167 seconds)
    (74/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172410708 seconds)
    (75/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.166838079 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051188566 seconds)
    (77/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196112131 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065264193 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.158169388 seconds)
    (80/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073489971 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.090487512 seconds)
    (82/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073835553 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051407624 seconds)
    (84/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.180264314 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.112402208 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066835463 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.146052176 seconds)
    (88/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106485945 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126644592 seconds)
    (90/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.178811981 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092372678 seconds)
    (92/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073671271 seconds)
    (93/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.162133154 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087945737 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.194470567 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.114133264 seconds)
    (97/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076890946 seconds)
    (98/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051743849 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.111731003 seconds)
    (100/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081903857 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.124102752 seconds)
    (102/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079032941 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.100435136 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051814884 seconds)
    (105/309) benchmarking ("sort", Float64, false)...
    done (took 0.148282571 seconds)
    (106/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104507281 seconds)
    (107/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.224699815 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166722177 seconds)
    (109/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098528488 seconds)
    (110/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065769861 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065529128 seconds)
    (112/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102451779 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073675649 seconds)
    (114/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075518121 seconds)
    (115/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099301927 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069306301 seconds)
    (117/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08600941 seconds)
    (118/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072804134 seconds)
    (119/309) benchmarking ("sort", BigInt, false)...
    done (took 0.208715937 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.166140534 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068010825 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.211270401 seconds)
    (123/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072891438 seconds)
    (124/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.160917765 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07762549 seconds)
    (126/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.076152348 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.392601029 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088335244 seconds)
    (129/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067855509 seconds)
    (130/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068698539 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.140425717 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.099752482 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075913275 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088980916 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07349501 seconds)
    (136/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098236506 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.116035858 seconds)
    (138/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067198463 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.096600032 seconds)
    (140/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073019009 seconds)
    (141/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159282936 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066950188 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07105162 seconds)
    (144/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.171820235 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071522982 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093590183 seconds)
    (147/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.165794365 seconds)
    (148/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096701681 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.0722956 seconds)
    (150/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.087264583 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053613036 seconds)
    (152/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051066184 seconds)
    (153/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052171177 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121668313 seconds)
    (155/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.197027669 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051686618 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051251451 seconds)
    (158/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104829225 seconds)
    (159/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052408882 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071156415 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088922831 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073544109 seconds)
    (163/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072640256 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.163497449 seconds)
    (165/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.107504916 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076039346 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076892967 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.121974481 seconds)
    (169/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.097524962 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090094303 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095888064 seconds)
    (172/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.123880377 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065847248 seconds)
    (174/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052402626 seconds)
    (175/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093937502 seconds)
    (176/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06077201 seconds)
    (177/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065228463 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076492308 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051954896 seconds)
    (180/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081188726 seconds)
    (181/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132658228 seconds)
    (182/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099185555 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.07778243 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069443918 seconds)
    (185/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.090086848 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068367716 seconds)
    (187/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099498758 seconds)
    (188/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052221522 seconds)
    (189/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051834052 seconds)
    (190/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.062295172 seconds)
    (191/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050962786 seconds)
    (192/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.095530183 seconds)
    (193/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071125878 seconds)
    (194/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.195880825 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065716805 seconds)
    (196/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051329706 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11953166 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072123038 seconds)
    (199/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094583343 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075405106 seconds)
    (201/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053032132 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.098100688 seconds)
    (203/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06298486 seconds)
    (204/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067398306 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.076214549 seconds)
    (206/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055510801 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067782197 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.146043321 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065253711 seconds)
    (210/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088171177 seconds)
    (211/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064457913 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070880677 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110485648 seconds)
    (214/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05369294 seconds)
    (215/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071955805 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097501782 seconds)
    (217/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.139212292 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095597583 seconds)
    (219/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103064891 seconds)
    (220/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.0523502 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10440383 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120808213 seconds)
    (223/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093050175 seconds)
    (224/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073489408 seconds)
    (225/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052189142 seconds)
    (226/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084899138 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066845959 seconds)
    (228/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051914707 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.110345405 seconds)
    (230/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052518555 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070095544 seconds)
    (232/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051394938 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050361751 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104974426 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.153875046 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05145351 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.199884891 seconds)
    (238/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.074222315 seconds)
    (239/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062816077 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064554271 seconds)
    (241/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052489062 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094960343 seconds)
    (243/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051696963 seconds)
    (244/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065579028 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.14890811 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.16119181 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086279967 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088335828 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135021962 seconds)
    (250/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071430848 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089861573 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072545784 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088324554 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05260197 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06598701 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.12076687 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090276132 seconds)
    (258/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053328974 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091536573 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051727994 seconds)
    (261/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063600629 seconds)
    (262/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.089471981 seconds)
    (263/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053142123 seconds)
    (264/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051830186 seconds)
    (265/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109185899 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072974057 seconds)
    (267/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070174781 seconds)
    (268/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111901205 seconds)
    (269/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053253488 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.112599888 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074772764 seconds)
    (272/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067750984 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.074820875 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074699151 seconds)
    (275/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066904859 seconds)
    (276/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.08545822 seconds)
    (277/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089546955 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.166662355 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066424121 seconds)
    (280/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051259455 seconds)
    (281/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.084777085 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068094656 seconds)
    (283/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067082847 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098080599 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087973782 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087608103 seconds)
    (287/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052432856 seconds)
    (288/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068954225 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086410596 seconds)
    (290/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.110015789 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072987318 seconds)
    (292/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.075586125 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072472406 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.189631977 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167776002 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.076282812 seconds)
    (297/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053898014 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.17005836 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11187116 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.113151552 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067079067 seconds)
    (302/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.11037877 seconds)
    (303/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053120981 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071926925 seconds)
    (305/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072515047 seconds)
    (306/309) benchmarking ("sort", Float32, false)...
    done (took 0.153021077 seconds)
    (307/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067239002 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.090092442 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090239559 seconds)
  done (took 32.958806523 seconds)
done (took 33.995729501 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081934445 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114134819 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075563784 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091884176 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.104028052 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075749237 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.09571988 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078050575 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078703383 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079888441 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104102267 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055214942 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073631037 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.09853007 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07476949 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114785685 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078842693 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095454653 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07556471 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065101809 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.097174053 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066016465 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066831257 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07821774 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079003595 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071317014 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095961482 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073669128 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088495068 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067030641 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069000681 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.095969025 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066244714 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077760642 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095712557 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073810945 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097143992 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077841341 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067434224 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089416693 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074519259 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065644954 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096570445 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074443114 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071126346 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094634607 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073694437 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102165101 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091486845 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09137008 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074980847 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076152534 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100940627 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073047338 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0928247 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075452807 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07046727 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115256957 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073476773 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067710279 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072822505 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072378985 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070285175 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071795107 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071671283 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103685841 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076110976 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095236975 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075661184 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071128331 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089937271 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074215635 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06845846 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065044616 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074892236 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075979923 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063487694 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070350246 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.100092546 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072700263 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065189327 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092593995 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068270505 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071877533 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092310114 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055266427 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069071598 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095806352 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065380977 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096291349 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073139463 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072646843 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090157776 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077761645 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064714504 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094723137 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066683003 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06601031 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091559042 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069958588 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065178005 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091879125 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074936357 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067001142 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096010693 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079556208 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089637027 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073104546 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064699597 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064312393 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078747097 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099635969 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067631161 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068462547 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088836964 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074151013 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065197489 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089545634 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066136327 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065876372 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095140731 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067251118 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068128549 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096808402 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078063006 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088282112 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070585603 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067768047 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.08856451 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072209906 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066151606 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.089584836 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068262872 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061863434 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091300208 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06758914 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072306442 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091531878 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073940604 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066900099 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097477357 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070908336 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094619667 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071756469 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064759199 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.081004341 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07003669 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068090315 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09029717 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067116502 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067424123 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088450754 seconds)
done (took 13.137713633 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068149935 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.168656416 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.121976249 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096682735 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109539718 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067730482 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07642322 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126986819 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091044063 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104177087 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110906735 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086010418 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.137870765 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065302185 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.089726335 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070675776 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067189217 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112735261 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123964237 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087527731 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.134299117 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065590338 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093014365 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088314789 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.114352053 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116773643 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068262224 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069606633 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093303418 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102075338 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110130132 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070261002 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.0657669 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123728867 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116738296 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085163626 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08913266 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084658673 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065961894 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.089938438 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.08857759 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123041312 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103429302 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082530123 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071261887 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068227335 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066120619 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.110172026 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089958138 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.104269315 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110167029 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105989891 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.093420845 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.081523763 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088019956 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086981021 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105029509 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069209289 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066083306 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092431596 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066408732 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069259154 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11144805 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.113272856 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070799871 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080286993 seconds)
  done (took 7.237975567 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084594894 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089510818 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.108103876 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083508716 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064966029 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065621928 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065510369 seconds)
  done (took 1.663890787 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068835892 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087462554 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11269241 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088857431 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108944619 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087762635 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100594048 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067864776 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082699814 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.093043612 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08793745 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125952543 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068195487 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097814434 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091961044 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066240062 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116005889 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066703363 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093738531 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091227526 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092626938 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087997399 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068520596 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091166657 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081222168 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090182197 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11494636 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094834693 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069562018 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070462463 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088941292 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10798882 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10528968 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075159878 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066006089 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106425823 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081840072 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089773461 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083889759 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095852446 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082855855 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067675366 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092618832 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067004556 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071169729 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102781662 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069275899 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067283268 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094964213 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086966335 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09172484 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081339758 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066773051 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.0953704 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069404246 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095792341 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078191 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068403601 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111594656 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069176689 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107667681 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08508852 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080632027 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109160653 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069021488 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.104734808 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081078992 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092665315 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071260037 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07141831 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.107721801 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066684411 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068721181 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.102949403 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069556379 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.115462174 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090607866 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068531816 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102718232 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.0669015 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091901653 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06830111 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088946036 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095852557 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06736797 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094500498 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071433753 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064963232 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.09026111 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07225842 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065201642 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092656869 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07147133 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068098034 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094485571 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083836694 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091596799 seconds)
  done (took 9.409879503 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069704546 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068223549 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093091627 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069383399 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06743441 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092207199 seconds)
  done (took 1.568758816 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095279418 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092970419 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082314689 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071965178 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.129271924 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080687685 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.107520931 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102974935 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086010053 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079019933 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.107221297 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.081884543 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.112833376 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073360339 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105935086 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072935921 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10633807 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076635063 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.102430644 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074821999 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086444469 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072178055 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072904474 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108982883 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071227511 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097368131 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077127277 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103249371 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080415249 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.103287177 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074429844 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070295633 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095534915 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079113655 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107279295 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071163154 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072550411 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070596207 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101511064 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072183211 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.081889764 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099830728 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075715196 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096158396 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07945882 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095231109 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072546616 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100610581 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08256425 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095484059 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073095708 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071772274 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095099002 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072280695 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.094736513 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080860733 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094506708 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083162394 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072980851 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095764693 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070262337 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095056871 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080000158 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094888581 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081342239 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.094882608 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073006607 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073185519 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098848365 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072797858 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095289469 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07035761 seconds)
  done (took 7.353534046 seconds)
done (took 28.327249919 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.667806135 seconds)
  done (took 1.77434253 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.726036453 seconds)
  done (took 1.834667501 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.198387625 seconds)
  done (took 16.310509426 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.593708749 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.766114453 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.844273016 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.157713493 seconds)
  done (took 3.471872054 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.891971127 seconds)
  done (took 2.022268463 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237436585 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224041476 seconds)
  done (took 1.577540244 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.828421234 seconds)
  done (took 1.951304667 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.275916971 seconds)
  done (took 2.391133809 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.318518953 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.17661097 seconds)
  done (took 1.619559983 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.488527486 seconds)
  done (took 1.610755512 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.751842933 seconds)
  done (took 7.878976698 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204507456 seconds)
  done (took 1.340622264 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.265303236 seconds)
  done (took 1.395347775 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.210902313 seconds)
  done (took 4.33824023 seconds)
done (took 50.634876339 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079515359 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081818578 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105923569 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078983152 seconds)
  done (took 1.468190937 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079151055 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071799335 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101341733 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073955771 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100977429 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07319759 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073543533 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102393871 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072907536 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097666748 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073716876 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071692393 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100981251 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073514899 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095483296 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076057154 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099218173 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.0739051 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075829268 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097324507 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07290924 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073963863 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.100956138 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072260621 seconds)
  done (took 3.139035529 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078822468 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073615093 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099928358 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073442102 seconds)
  done (took 1.462491443 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078848541 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091484114 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.1147432 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07734484 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090167844 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112870478 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069819782 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06861306 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096804844 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078432526 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067221382 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094963708 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113803757 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077977217 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078820197 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.091604528 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069539034 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112914076 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07816763 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077025568 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.098016545 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077607634 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091820346 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090418623 seconds)
  done (took 3.236748882 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079169728 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101823866 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103015022 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086753063 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.115930822 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065982201 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.100537147 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089540142 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.14866871 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06558358 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.094382373 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067006678 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072372047 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.090119314 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077749657 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.128971077 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110061412 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068133305 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12191745 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065870234 seconds)
  done (took 2.994376597 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07428166 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069986279 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089283363 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07012007 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077667846 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097663109 seconds)
  done (took 1.621418095 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069613306 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067677156 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091616047 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068120028 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072279801 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091274479 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067219556 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06758204 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091430529 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068771391 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06752701 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.09098621 seconds)
  done (took 2.051701923 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.408981609 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095727049 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092330244 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068179534 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071915886 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092060923 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082148004 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068572166 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089404047 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065429307 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093201654 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070989737 seconds)
  done (took 2.437406536 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259802672 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077691654 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292467487 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163681876 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139404794 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142806539 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13065703 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139957282 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.171886628 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128743153 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222136203 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1953438 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133801081 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164526383 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11554083 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099278083 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21115054 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190447636 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131154619 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219209808 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173893683 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151220777 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174506167 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128585394 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13331261 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15055219 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071892987 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106408868 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226362457 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160975276 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174428806 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109030158 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122669256 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203536593 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228418721 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170284217 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160472733 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084910329 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.153695837 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.161540435 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227431654 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115894278 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194054797 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135613069 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106036385 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169224122 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147016288 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146686548 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132809166 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091109904 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199396814 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210035631 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192743142 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086997225 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138467268 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142494615 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141943065 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129676602 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236853215 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189710182 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154060678 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096894078 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100712796 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205475751 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157477821 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.136404879 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.155583347 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118960748 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161452745 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182006532 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145324007 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170512277 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183639379 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088659782 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145366844 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165119247 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156813894 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19897547 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152038148 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.098734247 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152140845 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131317748 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081942641 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167312658 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075395452 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229146831 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123824953 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107462537 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140346191 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135138992 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136267695 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160980722 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202383323 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129518168 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066933088 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129582943 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.147040516 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177315486 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113680258 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108260032 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168179215 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080073659 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164653583 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101017274 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150555589 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076384145 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150890062 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156112853 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102615094 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151453344 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101805227 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126996874 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161964521 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213429745 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088907911 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109200254 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194106205 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148446885 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13051392 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197479546 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185390983 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125005445 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104515325 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204730531 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236025789 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090037712 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219179139 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134897962 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083570346 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.113273769 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151027587 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138671386 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149113932 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083071248 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.146301599 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222659743 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07525715 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121433371 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160566202 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10530652 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081220903 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102475161 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128786112 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095021722 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127560114 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132803276 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167063886 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150435304 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131488332 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152117589 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126308279 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225037101 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088457789 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098429959 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132218167 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070130194 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.189680634 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184752804 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104819649 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194435842 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.149812022 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132697224 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146269474 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083424903 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192246537 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080155835 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069763399 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198670636 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137037941 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110462705 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176179355 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130187334 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156202024 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147186443 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163571037 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158824426 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.155113695 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132258029 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087326084 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109018286 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182318178 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074417093 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119468124 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081518684 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130490257 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122267546 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084085625 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195393704 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153687333 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100470628 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138177394 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123778102 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17424037 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103199834 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157308108 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.145786442 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119423462 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.181253835 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179947794 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182777413 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102086202 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200296793 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071274235 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073775947 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088182638 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151747122 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082271343 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081939196 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146401268 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200271515 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156191772 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166915463 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138716166 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147791533 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183472706 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094261721 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117181487 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198834427 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147905853 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.127795694 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116703736 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100367172 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169608793 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136103423 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236771653 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141666815 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150742542 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209689575 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099892993 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107597894 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131444931 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164837446 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133225617 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172842956 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098329324 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115498039 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137772102 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076003725 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128758725 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155474495 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118510866 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163409469 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.141854491 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185848387 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078479709 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14448599 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151300754 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150117752 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064490044 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146241491 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218039876 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121398246 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146343235 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181271693 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10672559 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152153516 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233040879 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174817964 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110252988 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111533535 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145415315 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154657972 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172249996 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168892297 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138238191 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161916351 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110285561 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112306973 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113011896 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09831105 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132166331 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.121282139 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.137958551 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.141711702 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095546266 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185865587 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10389751 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137334932 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145296562 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12273365 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09105762 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123778536 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20228004 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147235092 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226518565 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125766499 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.173561676 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191768163 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074682556 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107932128 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078055213 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166482761 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082458006 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160664572 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125799004 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131574841 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151911363 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172537852 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121108876 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069916346 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135371158 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163256488 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138264752 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124330911 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105662771 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219450642 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126441111 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081133034 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141328744 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131370201 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103966636 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230222602 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061727091 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125231369 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100719597 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08347513 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154697026 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207815256 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083724045 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.150310168 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147230016 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138586562 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157253377 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103212369 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126667116 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113541365 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178855679 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183845729 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.0912486 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139935916 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156660298 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212056423 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131932383 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096396786 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228248268 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179992935 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.215984755 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115161514 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142665972 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140943528 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110605875 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196149801 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08385141 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222893131 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109254357 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167870517 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132096165 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116661532 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160584197 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.09922912 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132917849 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176465846 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144921808 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110425981 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077225187 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145238597 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148112057 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134971788 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101894694 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16841689 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098307708 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163096322 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19777387 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107791629 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131933302 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097591475 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107286992 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136352408 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129084937 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089179002 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.145206528 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20398138 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.116007259 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205305053 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171520913 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141141233 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164741767 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127688077 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662608317 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.104336752 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182367657 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147353136 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230271203 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124314852 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119948765 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107334903 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153382919 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200051219 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133631413 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17615139 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187103805 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.145649512 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080994887 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131235205 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130552079 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090025319 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132975555 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141456145 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145328592 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.121944205 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.144433377 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152984392 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081770243 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122959116 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183867647 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143833054 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200676683 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168825682 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111117439 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119341288 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196283095 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106124734 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15234483 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182782107 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134448181 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126484886 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080740823 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131243582 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22657429 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074293905 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218188327 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148665546 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136816091 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139545157 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145267938 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160516739 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136635583 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149883313 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121018158 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.137597546 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114447669 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110114124 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077235322 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133060711 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139559922 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.124431196 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127045559 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.121928497 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204756059 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07362244 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123122809 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105421813 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20208434 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173046709 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.117639263 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082823061 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147907097 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141542045 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.115434842 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174946532 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082424068 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107999816 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083544398 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.103079433 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134429633 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140162652 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13288221 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139260855 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193575369 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110366664 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249453446 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096674549 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103427863 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069038362 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108063411 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122381705 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100164612 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136989564 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127927346 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196899895 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.122739444 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.117913677 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09398732 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.10073545 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083064411 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155283283 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138252227 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147481344 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125223992 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062278551 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13680745 seconds)
  done (took 69.287076228 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158559624 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.108826925 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.122177582 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.175545624 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149893177 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239524236 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.182872033 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.225662351 seconds)
  done (took 2.575672728 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070444109 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.119528704 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099674064 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.108925669 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067790198 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.094714344 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.276518634 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081446298 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.093396566 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089541668 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.106459308 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094517248 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.459498771 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066184742 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09284223 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064573689 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093514345 seconds)
  done (took 3.286869636 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.423889409 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.634157397 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.425968554 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.101254308 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.882005233 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089424008 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.356968567 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.16554659 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072296792 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.437322233 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.750042714 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134815136 seconds)
  done (took 17.684739843 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07598127 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069111284 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109663714 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083734471 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072349109 seconds)
  done (took 1.630508437 seconds)
done (took 113.999610544 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081363501 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.3549438 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054385356 seconds)
  done (took 1.660379066 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084859638 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084258017 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.11133379 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082461146 seconds)
  done (took 1.588157562 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075825903 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076810451 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110507485 seconds)
  done (took 1.486400797 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.282485493 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139904826 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.115414265 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083587125 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07799508 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103411009 seconds)
  done (took 1.486770128 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073754438 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074832433 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098956941 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076522127 seconds)
  done (took 1.541762433 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077869995 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052820451 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054202636 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082308574 seconds)
  done (took 1.490982288 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087334528 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077948296 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105171719 seconds)
  done (took 1.488789979 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106903318 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.111248886 seconds)
  done (took 1.439281555 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083028649 seconds)
  done (took 1.302092389 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099801382 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.13994512 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156325867 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136627388 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165197679 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137465978 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.113045802 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089326533 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.10380137 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087212372 seconds)
  done (took 2.45340126 seconds)
done (took 17.778254711 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079150355 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.387968176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361164983 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090308542 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.695382079 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35561535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004690753 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091438615 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148490987 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093773292 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084866487 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646988911 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.995177244 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319108434 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982247616 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318802544 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67508542 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069572305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067428825 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093743593 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.963011752 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067386202 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094678655 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068743548 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673761007 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37211782 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067255316 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.344342096 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067677207 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094476344 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355788476 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068412412 seconds)
  done (took 16.01345744 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071174911 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.142531921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07513074 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083621944 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097943545 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069335492 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097086284 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070668771 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124029866 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066734565 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112081037 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06905741 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071139938 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096091754 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087339709 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067159692 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067201475 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067477767 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09675604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069367388 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086032892 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095199605 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068478735 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094164795 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06916926 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07860652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095168798 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068158678 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067582803 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097253719 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071004311 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09425747 seconds)
  done (took 3.917709082 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115393424 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151226576 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074007159 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128755084 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111895058 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097117029 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1418662 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119789918 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153920167 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067629537 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111568484 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068543361 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126126209 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070045458 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087018587 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095201492 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.0690611 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094672769 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068831281 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067937784 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113624544 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068257502 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067111386 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067276497 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067218774 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109931411 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068802251 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067696326 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095608557 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070098722 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097521383 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069333794 seconds)
  done (took 4.209899419 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07340942 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075467289 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109195326 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083037655 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06824967 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.099039178 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072632232 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095131013 seconds)
  done (took 1.910255971 seconds)
done (took 27.278328583 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079512765 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069710368 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098655484 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081517087 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071855489 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.104766882 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066733259 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099954806 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073739982 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072792455 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101849352 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068208427 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069853188 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095412028 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07400982 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066838147 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.107449706 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071794855 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.105914525 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079772319 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068811196 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.10075521 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074020687 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.105514104 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079388498 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.105164067 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078953545 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07268284 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.096188711 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070822427 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075697025 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11152429 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068202396 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106094798 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068459229 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067176212 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098438148 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068335866 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.104707673 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077670648 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068931948 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.103607578 seconds)
  done (took 4.755260988 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088182885 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09022293 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111912539 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061928073 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066129629 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.093229122 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08867304 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08649553 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060373294 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087847292 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.082627322 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060672744 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063135646 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053550198 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.087389261 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057501342 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061312866 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.082880525 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059910371 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059493912 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057928492 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.081390417 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060985641 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062334464 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.083146637 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062718452 seconds)
  done (took 3.15142419 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075593352 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083881676 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115847223 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126100542 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132953886 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077119742 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.10698188 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088304291 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112187615 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06866354 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070956527 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121483521 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088424367 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.111131567 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068872742 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085646357 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.109947621 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069706802 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101059216 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091397392 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083903895 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.106186924 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09331691 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108763283 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067383418 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069078566 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070507978 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079813248 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.10127494 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07700983 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070906994 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099823872 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069550788 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105466442 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072456017 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069091219 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.117311397 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077269851 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105503577 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068989905 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070307113 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.096802617 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090324785 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.14136745 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067859095 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073959891 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073930607 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076041153 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097369857 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08655916 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078448266 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096032462 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071272115 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066276035 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066921429 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079759534 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098790962 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072219827 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076229802 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099965405 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081108359 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.097498088 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084636168 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067385981 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102734407 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067603406 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06833039 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094865903 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093082004 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096399142 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110380798 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095884078 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069877583 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076987455 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103338522 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075079705 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067461042 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110938653 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078534308 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098329453 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076800005 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071384387 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098946468 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087794434 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069158901 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067834173 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067725958 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072075707 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068914013 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067549374 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112532015 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067812289 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.0698614 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.113130081 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.0670798 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.096505909 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075492413 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071254109 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095303289 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078922994 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100315748 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069045661 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076479209 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.096274479 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071501172 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104981773 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075204874 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066019331 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.099692766 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074071416 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067903645 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.097057054 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07053837 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068649832 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075607867 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072659668 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.10205771 seconds)
  done (took 11.275108442 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.185848955 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153107978 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.099005617 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.171974845 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076698755 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078468085 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.175471221 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.122752412 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.0679146 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067670356 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.098051053 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114387479 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.1354927 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.15053773 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078484767 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.096529074 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083061563 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.145529338 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.176845845 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142762935 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113097766 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077578237 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.098426569 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069822449 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074747411 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080957115 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089096469 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.107728559 seconds)
  done (took 4.379650887 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082330557 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.126789255 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07536025 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08850225 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.11962536 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067464749 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.098128432 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070423068 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079391651 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.107664376 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067572538 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.101204585 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074012325 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.100607479 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06989325 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074286209 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.103219015 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069076347 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070309472 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.101254792 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077304423 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.107958839 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071990796 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066568244 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102271505 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067223101 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.092436098 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084594342 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.096002577 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09026838 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065893443 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103634049 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080933701 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067239988 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066667887 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066245804 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097433827 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067822318 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068606026 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.095520532 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066768496 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057197311 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.09494812 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080156072 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101543721 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057536827 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071834734 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.101526611 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073370035 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064828549 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099205717 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070559985 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070480381 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103029696 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072724365 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.100079008 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070150529 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066315783 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102787528 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069020837 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064542425 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094277805 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073974016 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065504688 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104545891 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072184245 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092830869 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069124388 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068806267 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101326975 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068341058 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070651657 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09311413 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069847447 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071175725 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.09751318 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069442347 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065758847 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.09618793 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068506833 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055327249 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096226012 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054270323 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070858139 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.094108089 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066298662 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.093455315 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074686266 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078961649 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096869312 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073749185 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095430378 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068445325 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070703958 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088096462 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072011841 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08201145 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112364612 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067146753 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.094004568 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082060789 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098722757 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068350896 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056842056 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102350642 seconds)
  done (took 9.828793767 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094473157 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087804099 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097650166 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083255166 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.118270931 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08827904 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074176586 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.102832038 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06917559 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.10700791 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074441223 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075355674 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09630165 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077156191 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.09364979 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104575819 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070142887 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104264226 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073667001 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100989241 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111213316 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082633128 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.102692062 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069199228 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072185951 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.109086459 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090483384 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107694213 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079628097 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.07521209 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108691507 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090434025 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.102943429 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.073519985 seconds)
  done (took 4.330061567 seconds)
done (took 38.949328131 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.326881701 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.537942558 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.310000687 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.2494869 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.322500346 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.318358479 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.323221874 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.314362572 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.669637275 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.309497476 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.57833124 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.989322634 seconds)
done (took 60.508095265 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.337909743 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.456192918 seconds)
    (2/2) benchmarking "String"...
    done (took 1.586912768 seconds)
  done (took 4.297278497 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.731455564 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.189083766 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.567157475 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.309980419 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.323548982 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.611050097 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.944757521 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.139121568 seconds)
  done (took 28.336724108 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.309469966 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.665850245 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.587172601 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.593187327 seconds)
  done (took 18.409512115 seconds)
done (took 61.365835532 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.311041771 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.384888131 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.314442153 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.293918547 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.415666815 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.342036321 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.54845255 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.532084369 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.31735762 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.295469846 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.308370428 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.318702621 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.317289543 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.638118723 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.319907581 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.311792862 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.395266982 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.756641759 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.677882426 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.310579537 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.322660743 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.325871939 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.311695219 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.307932128 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.350414796 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.30806962 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.308947663 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.326298894 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.306630361 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.31008195 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.384555613 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.784321086 seconds)
  done (took 194.710287748 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.307486149 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.14590604 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.267394362 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.32450574 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.755474591 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.504740535 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.444881252 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.80862665 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.32062505 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.319065731 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.515001456 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.307062486 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.567274008 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.270663878 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.312546515 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.417633892 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.515276816 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.567635159 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.320897835 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.558404526 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.325351648 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.326642625 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.260578559 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.485700659 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.339334254 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.407859371 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.319971289 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.331543507 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.49731194 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.455437026 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.315054749 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.32221279 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.829327534 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.165073804 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.317937532 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.309237449 seconds)
  done (took 152.809528046 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.570079728 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.30434079 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.304755607 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.30540047 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.332384934 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.305780043 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.778930009 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.781657436 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.306583059 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.792423469 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.742325845 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.367093492 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.460278805 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.305502014 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.394904265 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.318345075 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.309000565 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.321253489 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.331320571 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.306441141 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.305701856 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779905093 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.321260841 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.317334722 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.31560963 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.306508512 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.333305066 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.697390355 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.30797468 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332771838 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.612890819 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.348152941 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.306946001 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.542947921 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.936478041 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.306924822 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.410916885 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.308477668 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.333191473 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.306169125 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.567621045 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.307577359 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.307658936 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.3109422 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.827401246 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.307952903 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.780504412 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.30912978 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.134006477 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.307670411 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.307378868 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.306617935 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.531529064 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.633805307 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.308484619 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.308667897 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.312528086 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.310880911 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.310086298 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.335034567 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.501309346 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.403712286 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.309153206 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.312561358 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335407448 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.307826417 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.308157798 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.527709842 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.310849079 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.895680418 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.368981461 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.524392348 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.783481928 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.310569367 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.398768659 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.423725712 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.30935077 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.308209907 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.308606934 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.308510806 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.410997036 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.309895756 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.669222407 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.315536085 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.311078806 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.369412004 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.399757421 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.30985272 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.558723754 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.311935442 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.309866122 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.95273656 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399575314 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.310743133 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.309807977 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.30962731 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.667144921 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.785768788 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.410075574 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.312293993 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.550015796 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.311607897 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.681561786 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.775218558 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.858137709 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.312340904 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.414168663 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.314599279 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.312091046 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.310495381 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.340038381 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.309275411 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.368598186 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.313012929 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.703699305 seconds)
  done (took 355.445381482 seconds)
done (took 705.787693434 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.992489523 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.990854178 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.088771077 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.980997842 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.966630595 seconds)
  done (took 11.273733107 seconds)
done (took 12.527031115 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.489424541 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.490420246 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.36687628 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.489954717 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.33839898 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.506851658 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.470403914 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.333394598 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.408972149 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.386528516 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.409019465 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.363159867 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.33831992 seconds)
  done (took 19.646547437 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.617004008 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.610119123 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.376293381 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.620098876 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.350471144 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.619224077 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.499627672 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.512573053 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.499630977 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.3256682 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.325951256 seconds)
  done (took 17.612862881 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.634339131 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.62650341 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.378282705 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.620638419 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.351887636 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.626080334 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.506269286 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.518293497 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.504449284 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.325215807 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.324556153 seconds)
  done (took 17.672876744 seconds)
done (took 56.186632684 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.320948274 seconds)
  done (took 2.576056962 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.351942421 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.515991545 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.335949944 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.32481353 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.322641377 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.321793337 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.325305597 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.322295715 seconds)
  done (took 12.078236771 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.319457148 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.318399281 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.317536966 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.319551468 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.317759378 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.318171747 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.320352226 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.318521236 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.317751256 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.318373507 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.321726752 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.31854539 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.320470196 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.320784851 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.320653383 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.320916156 seconds)
  done (took 22.366822838 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.320585307 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.318670467 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.318197851 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.318175053 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.310801545 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.311876719 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.313323154 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.311902495 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.31095607 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.311528714 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.313022514 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.308181753 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.30762728 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.307180233 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.307546028 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.308037147 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.308284169 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.308289308 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.31338387 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.30660596 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.307876439 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.306679814 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.307591934 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.307241408 seconds)
  done (took 32.723794822 seconds)
done (took 71.000519832 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.178420844 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.811484759 seconds)
  done (took 9.236163198 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.310371832 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.309633523 seconds)
  done (took 3.868340639 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.308076741 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.307361837 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.30724386 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.307595313 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.306843217 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.307921688 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.304575168 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.304308917 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.303625471 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.304563078 seconds)
  done (took 14.306352422 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.304974749 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.303818056 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.303453334 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.301587377 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.301592692 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.29921085 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.301979067 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.301288462 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.301888949 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.298455524 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.299836489 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.295322765 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.298509463 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.29520012 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.298293 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.295282783 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.29483956 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.297577124 seconds)
  done (took 24.634919109 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.295078542 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.29471368 seconds)
  done (took 3.8220924 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.292983531 seconds)
    (2/7) benchmarking "second"...
    done (took 1.293126702 seconds)
    (3/7) benchmarking "month"...
    done (took 1.293014483 seconds)
    (4/7) benchmarking "year"...
    done (took 1.294206005 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.289384188 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.288400871 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.28938402 seconds)
  done (took 10.273893475 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.292409125 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.468347576 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.545982197 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.993523775 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.289923745 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.29290888 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.251371136 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.293019768 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.295289613 seconds)
  done (took 14.953409208 seconds)
done (took 82.341258279 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.262436541 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.280369642 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.118274241 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.288593249 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.290490802 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.616791162 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.304311067 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.516153007 seconds)
done (took 38.907252436 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.283548418 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.979253182 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.975787946 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.263768319 seconds)
  done (took 11.432282952 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.252461072 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.115538786 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.252926424 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.243358978 seconds)
  done (took 18.075062695 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.846931863 seconds)
    (2/2) benchmarking "read"...
    done (took 1.594486028 seconds)
  done (took 4.650565786 seconds)
done (took 41.657610301 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270803459 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.267824825 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.27035058 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.267631412 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.270500846 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.26882799 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.268745879 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.270827837 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.271407975 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.271319169 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.270776135 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270515252 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267716571 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268039305 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.268626305 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271446638 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.273027366 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.268428915 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269645625 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268873994 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271263987 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.269637432 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.268453099 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.27280335 seconds)
  done (took 31.688318176 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.272201566 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.269980425 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.272661481 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.270945488 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.269189712 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.272070716 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.272463575 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.269074463 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.272619568 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.272405539 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269842278 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.269104959 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.271833048 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.27033492 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271597219 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.269649905 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.272398416 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269172738 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273045535 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.269506769 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.272465633 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270101984 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.270209627 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272733846 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.27084764 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27013119 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.272778716 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.271393557 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272132661 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.270416231 seconds)
  done (took 39.345528061 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.277106672 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.280399351 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.272515073 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.273442776 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.273068544 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.27317633 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.273039839 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.273831952 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.273338103 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.273391315 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.273584605 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.273258212 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.27370327 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.273689457 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.273328574 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.273451686 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.274014664 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.274194989 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.27376847 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.273548657 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.273989451 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.273979633 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.273463416 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.274088631 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.274594666 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.273783898 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.274292295 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.274777325 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.274633963 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.274451117 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.274918957 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.274588941 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.274574532 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.274576764 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.275472821 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.274572511 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.278631998 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.28082109 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.274889169 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.274864817 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.275085779 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.274444619 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.275361772 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.274666656 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.274539119 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.274982215 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.274856889 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.275969208 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.276097046 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.275455442 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.275084255 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.275689589 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.275905622 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.276365774 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.275138488 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.275507511 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.27616976 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.275626008 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.2753441 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.275324478 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.276386657 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.275433107 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.276117812 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.275218817 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.276226817 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.276328697 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.275453748 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.276803409 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.27602381 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.276120123 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.275989896 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.276364558 seconds)
  done (took 93.013848149 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.276646636 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273042493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.274701027 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.273535589 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273355324 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.276276074 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.273242916 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276317639 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273525629 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.276105251 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27675649 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.275242775 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274185084 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278381559 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276644256 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.273327703 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.277483107 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27405485 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.277024585 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278755672 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277343754 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.274224173 seconds)
  done (took 29.27608901 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277968955 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.277226301 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.274308586 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.276309493 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.274586053 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.276917593 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.277641252 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.277089262 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277591263 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2750524 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276021516 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277991164 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.275201917 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275727822 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.275039654 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.275597132 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.278228195 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.276293647 seconds)
  done (took 24.192193949 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.275992726 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.276439731 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.278738314 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.275491971 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.276404278 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.277564092 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275813457 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.278378593 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.277952373 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.275782265 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.278844011 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278437463 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.27835572 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275795768 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278968764 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.27611687 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.278252317 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275743858 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279184205 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276982669 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.276563394 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279233785 seconds)
  done (took 29.318980404 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279142989 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279499706 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.276545449 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.27665875 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.276877632 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.279394769 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.279163836 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.276105331 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.279480548 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.278988648 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276978069 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.279426835 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.276586252 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.278147374 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.277207624 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277096745 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280251212 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27801463 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279923549 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.276494676 seconds)
  done (took 26.781452426 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281358485 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281511115 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282137933 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282272349 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282557517 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.282375251 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28227081 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.282041676 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282694833 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282259633 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.282734351 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282578661 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282917566 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.283021853 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2825352 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282287523 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283855567 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282395315 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282303464 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283224918 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283973434 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28269076 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283304476 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283403869 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.282828478 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282805558 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282919195 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283215229 seconds)
  done (took 37.134772948 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281810717 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282163092 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.27945412 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.279873037 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.279293558 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.279902887 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.279958075 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.27959205 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282101619 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.279962416 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.283802267 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.282379491 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.283406429 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.283068384 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282682045 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.282719451 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282417358 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.281112045 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280678436 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280055273 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.2833843 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282972221 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.283261258 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.280750008 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280836836 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.283778553 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280407485 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280755016 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282094443 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280567202 seconds)
  done (took 39.66650131 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.302028073 seconds)
    (2/2) benchmarking "in"...
    done (took 1.301594602 seconds)
  done (took 3.826106492 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.281534682 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28360779 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.283574262 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.282101523 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.280781865 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.283960345 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.283837179 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281650787 seconds)
  done (took 11.48386279 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.284108609 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.283501478 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.283548701 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.283626115 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.28465539 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.284844214 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.293401031 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.299470002 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.287336546 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.285182413 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.289335004 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.291499593 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.289549007 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285219958 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.2849091 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.287836039 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.284917042 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.284857117 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.285725598 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.284807308 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.285274281 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.288203486 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.288217384 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.282120112 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.286548413 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.297883092 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.291725849 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.284892427 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285351817 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.291230877 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.285952064 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.282491917 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.285256259 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.286603002 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.285045611 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.286207593 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.29799858 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.305778951 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.294959741 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286483321 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.286132691 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.283355885 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.287050873 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.289580842 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.287575864 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.28746075 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.286115231 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.283438246 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.286390165 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.289182629 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.290712382 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.286223172 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.283543832 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.293666987 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.289400437 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.294856024 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.303102335 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.288598114 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.294330198 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.298474209 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.300714818 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.294013531 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.289257722 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.287519187 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.296293608 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.307206207 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296134951 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.301479563 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.283480824 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.286676092 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.296977675 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.301228621 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.29598109 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.287706294 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.288260985 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.287388438 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.28812873 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.286670287 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.297408935 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.307570177 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.288223565 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.287484923 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295988327 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.306261765 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.287430556 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.288634565 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.288119129 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.289217309 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.288759839 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300390299 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.30438133 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.287523179 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.288919167 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.288160023 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.291407645 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.289255356 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.287714099 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.290456614 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.285716305 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.288538002 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.288647005 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291789058 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.296723907 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289822617 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290034653 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.298243203 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.289158063 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.288410697 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.299216124 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.288767306 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.289054199 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.290596604 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.297418958 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.287154952 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.292194109 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.296925337 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.289965316 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.290802965 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.290109967 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.290219806 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.298841405 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.313095081 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.290335115 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.290067674 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.293879708 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.299523418 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.291672978 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.294780388 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.291202921 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.288344734 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.287795043 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.293575673 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.29032977 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.292271815 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.290926053 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.292980937 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.28767312 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.290318299 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.290458775 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.293247318 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.293719271 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.292532219 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.292590453 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.295280448 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.291205139 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.293772191 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.299724714 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.292190227 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.293365411 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.292278266 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.288237519 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.29127335 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.293776372 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.291648013 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.292940724 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.291574926 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.291163343 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.292006892 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291946077 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.291368976 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.292464483 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.292700355 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.294813273 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.292152515 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.298396865 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.290881088 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.289121951 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.291260723 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.291659257 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.292811944 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.29266617 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.29105195 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.293798016 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.298416342 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.293002493 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.29257125 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.296570904 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.292354433 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.293660101 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.292880244 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.295541974 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.299522888 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.292993613 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.302170973 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.293332349 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293030492 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.292516569 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.293905244 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.293071755 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.292557919 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.295298464 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.29864439 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.305374559 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.30208628 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.294546253 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.296517995 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.29444953 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.297052924 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.300042275 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.29336803 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.29359223 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.293151997 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.294609413 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295031607 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.297810749 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.294750597 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.293811758 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.29452828 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.29315337 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.294487085 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.294644798 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.296437518 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.296282238 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.292386026 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.293788 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.295109654 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.294430732 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.291907437 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.293957646 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.294920275 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.294179876 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.29504161 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.305442153 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.292137853 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.295921667 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.29558509 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.296049208 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.294178058 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.294817535 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.29823403 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.296249256 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.304897938 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.312875856 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.296897398 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.303522436 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.312165997 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.295806283 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.300436925 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.294486628 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.292703058 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.298178455 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.302392712 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.295901417 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.296557446 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.295780886 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.297209909 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.29620628 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.304788427 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.294064925 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.295287678 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.29687277 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.299956911 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.293524933 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.298478601 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.298058691 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.297477888 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.299495399 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.297194859 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.295813784 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.299212352 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.296681327 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.297523524 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.297131071 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.299701184 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.302650463 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.304003277 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.298751869 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.300899767 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.298820013 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.301235415 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.298978029 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.298077298 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.297644989 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.311068094 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.305685377 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.307201473 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.302006366 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.296942567 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.305328202 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.299651442 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.302143553 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.29835063 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.299286909 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.298755683 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.297865951 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.296016618 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.299310151 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.298208377 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.299427473 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.299960144 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.301810709 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.298729127 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.298094524 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.298915546 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.299178787 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.298641761 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.299152531 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.298061242 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.303418073 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.300413556 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.298513684 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.299682739 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.307287342 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.314819837 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.300709699 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.29900303 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.299768693 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.299633539 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.300989797 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.298658668 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.302167701 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.305709635 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.301891179 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.309038297 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.301365035 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.310962739 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.298890534 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.302919397 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.306840216 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.29663384 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.299609178 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.300473569 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.299750458 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.309801205 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.316176591 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.300712918 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.303203391 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.300292753 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.30113264 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.300391129 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.301375531 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.301115674 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.300277186 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.311716633 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.321344413 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.303152927 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.303006973 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.297876213 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.301660227 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.300230668 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.300744175 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.307392535 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.301548749 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.302703093 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.299641664 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.302220194 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.300976738 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.300970947 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.300849177 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.299172864 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.300969496 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.310901611 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.318141825 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.305717729 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.301677103 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.313807466 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.30282772 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.31160455 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.319099048 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.302880619 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.302608403 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.301639706 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.305959548 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.304019947 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.304634903 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.301775799 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.304039275 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.30540312 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.303144022 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.305826921 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.302764585 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.303411853 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.303010552 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.311607397 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.322316448 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.304728285 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.305170107 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.299973855 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.303556052 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.305887991 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.303548107 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.302844669 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.30487778 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.311972935 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.309068014 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.303783931 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.302768276 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.303909213 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.303135258 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.303617825 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.303123209 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.304590257 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.303329543 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.306839659 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.304612115 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.309935314 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.303139731 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.305716244 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.305988528 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.304442944 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.315946485 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.304436723 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.304876773 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.304346632 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.303340764 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.304608358 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.304506252 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.304740674 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.305612975 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.304461353 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.304544107 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30986072 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.308839683 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.307566935 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.304296859 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.305911331 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.3059026 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.306587396 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304745153 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.305207943 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.304088921 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.306083505 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.304582044 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.308201261 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.303805164 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.30401199 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.306205623 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.304719128 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.307626582 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.310250839 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.305767418 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.302239321 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.305132428 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.304997067 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.304342406 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.306733646 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.318595162 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.307702348 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.315201042 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.31185352 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.308026168 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.306710066 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.3086123 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.313637627 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.306556947 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.307493918 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.307299998 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.309641176 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.305862516 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.309073104 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.306907095 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.316842601 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.307126999 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.306861827 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.317611432 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.327830915 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.307040416 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.30861439 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.310658153 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.308156059 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.303395844 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.306806003 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.305995046 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.316564222 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.326255913 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.307638151 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.309250492 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.305187717 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.307956585 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.31057233 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.307176992 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.309242695 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.304497138 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.307663397 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.307497905 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.30715298 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.304119264 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.308055332 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.308118708 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.310705155 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.314311217 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.304850161 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312048958 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.309386951 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.309196979 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.309490257 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.308144456 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.306032126 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.305424672 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.308185077 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.308371421 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.31052301 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.311420919 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.31006996 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.309003373 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.307803886 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.308900939 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.31128606 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.316747611 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.314673752 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.305706577 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.308828275 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.309488609 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.311314921 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.308760448 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.30958626 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310076565 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.312034931 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.308243387 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.309367299 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.309040202 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.312176365 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.325614494 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.329335086 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.3105407 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.310805875 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.316248791 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.309451177 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.306325837 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.309390189 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.313810379 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.312546279 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.31678451 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.311492057 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.317878721 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.3259263 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.311320687 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.31218863 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.313163819 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.317225518 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.313916658 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.310574084 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.309867186 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.315554869 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.327079954 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.30985816 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.319917063 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.338709088 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.326856098 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.312681081 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.311367764 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.310072329 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.311166605 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.314539957 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.311350138 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.310764257 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.311249862 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.311080042 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.312461898 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.316179854 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.312736407 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.31192628 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.310903803 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.312256312 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.315561684 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.308961711 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.311635373 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.311854988 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.312166207 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.311574995 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.311755995 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.313240139 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.324976811 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.323134309 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.311515194 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.312195627 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.309224312 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.317195583 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.315719272 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.321675427 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.318267292 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.312405038 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.313085383 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.31428618 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.312577048 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.31049802 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.313495747 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.313271079 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.312063308 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.31036153 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.326749174 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.320983993 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.319874165 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.314894591 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.312977071 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.313077848 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.315492366 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.313764216 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.313667085 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.316576061 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.314135922 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.316135761 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.313494283 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.313497355 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.316383449 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.31920495 seconds)
  done (took 776.840393112 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.311499509 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.310590354 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310607631 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.310238729 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.310929249 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312359709 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311054107 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.310699218 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.310632465 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.31020154 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.310609675 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310699458 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.310775505 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.311859362 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.310979545 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.312021113 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.3115356 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.310798865 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.311216051 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.311071726 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.311804851 seconds)
  done (took 28.784745528 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.313333011 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.311892173 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.310238793 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.313821167 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.311334451 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.314195592 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.311305607 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314319668 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.314519516 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311225056 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.314108669 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314571568 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.311102322 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.311754475 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312124989 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31417785 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.315578375 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311430671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.314758176 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311604894 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.314368646 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.312824058 seconds)
  done (took 30.137142718 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.316751545 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.316575483 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.315856335 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.313521216 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.314981217 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.312568229 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.315452032 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.31474107 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.316165531 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.316862083 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.315118752 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.316822337 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.322189027 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.320123578 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.319952023 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.316582789 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.460112514 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.316719755 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.317276922 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.316969615 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.313444032 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.323653699 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.314469246 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.313890041 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.315672516 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.317491355 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.316293013 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.316734829 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.316560543 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.317992072 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.319867141 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.316089881 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.316189908 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.318011655 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.316794363 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.316967643 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.319497706 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.316555209 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.315087716 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.315981122 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.325645081 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.333935122 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.317445095 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.32491107 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.316728705 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.317312397 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.319712052 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.323507902 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.314772616 seconds)
  done (took 65.961088695 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.317103204 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.317586154 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.314553545 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.317298056 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.317865934 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.317993913 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.317718426 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.31729047 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.315347265 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.315268284 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.317429446 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.31566374 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.315004447 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.317575639 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.318613994 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.315712081 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.315978603 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.315153123 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.316665721 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.31558898 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.316327074 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.317989713 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.318777989 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.315997636 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.318711506 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.316648297 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.316135957 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.318954234 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.316247014 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.315885876 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.318904003 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.318957168 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.320062241 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.318099967 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.3175757 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.318713944 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.319079334 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.316038121 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.318175465 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.316992814 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.318938531 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.319738536 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.320665852 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.319534557 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.316917135 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.317844051 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.317105999 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.317350799 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.317877199 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.319810078 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.320156845 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.31766249 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.321050229 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.317754124 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.320385301 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.320932914 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.31878877 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.31740006 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.319808307 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.318354592 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.317131478 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.320198254 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.317646225 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.320851927 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.322219221 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.317719384 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.319342057 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.32058915 seconds)
  done (took 90.877390894 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.322591048 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.32086336 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.321687197 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.321091271 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.32121423 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.321803583 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.321835078 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.322095506 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.321743834 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.321855488 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.321336296 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.321297797 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.321786522 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.321582216 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.323230308 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.323008094 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.322957325 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.322289694 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.322763374 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322109776 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.323117713 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.322027241 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.322197687 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.32248236 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.322763172 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.322416311 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.322457099 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.322373287 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322488441 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.323299942 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.323308865 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.323564055 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.32320575 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.322597088 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.324493954 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.323078352 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.322855697 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.322941675 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.323902942 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.324654784 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.323037743 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.323476229 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.323811504 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.323637267 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.323462904 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.322837688 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.32387388 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.324359568 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.323481351 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.324049689 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.323704758 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.323934622 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.323421216 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.324679653 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.324615087 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.324614099 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.324551609 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.325086034 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.32361057 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.32415071 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.324265617 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.324544899 seconds)
  done (took 83.287219489 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.324207137 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.32444821 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.321571009 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.321999578 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.324450628 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.322165356 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.323855289 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.324237215 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.324941641 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.32494383 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323409916 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.32155275 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320865484 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324984217 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.321800532 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321989794 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.321815343 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.321403143 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.324514386 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.322978569 seconds)
  done (took 27.724917185 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.322345987 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.326944546 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.322155218 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.322050155 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.325137921 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.322364458 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.324928644 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325084411 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32319696 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324962024 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.324975057 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.325419764 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32198225 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.323283244 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.325515601 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.322298224 seconds)
  done (took 22.445674043 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.323673254 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.325850208 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.325595232 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.325619454 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.323621437 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.322708932 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.326375315 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.323294441 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.320217345 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.323194507 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.322926789 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.323092049 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.323379272 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.324068849 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.321266418 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.323466149 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.320442883 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.32081345 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.32284138 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.323881451 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.32241818 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.321735374 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.323844498 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.323142142 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.32088202 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.320723387 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.320792602 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.321461802 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.321090525 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.322907503 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.321124581 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.322493874 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.32195973 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.32178755 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.324324883 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.321576488 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.32386224 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.324486791 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.323605863 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.323125533 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.324717004 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.321542303 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.324078552 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.323956497 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.322920648 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.324492393 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.322376282 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.322290679 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.322823677 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.323057083 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.325133945 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.325872656 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.324794976 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.325245603 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.324735469 seconds)
  done (took 74.036552746 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.325905601 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.325450132 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.32294819 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.325070018 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.325438635 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.322620658 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.32550788 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.32264253 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322827825 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.325323158 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.322808946 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.325119939 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.32330154 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.32579784 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.324414367 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.325523837 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.322485265 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.323634199 seconds)
  done (took 25.099833188 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.324331087 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.323910031 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.326103794 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.323130125 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.323423725 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.325871096 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.323496635 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.326770184 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32606792 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.324516611 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32368586 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.326734994 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326133489 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.326715549 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.324155883 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322762994 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.327105698 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326417715 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.324173004 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.32438452 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.327416178 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326584149 seconds)
  done (took 30.417945319 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.326889389 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.325907708 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.344677718 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.367752476 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.35387391 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.327621997 seconds)
  done (took 9.310799778 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325708387 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327583297 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.325338589 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328038275 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327989894 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32632678 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325105127 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325097439 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327899833 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325537897 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325098958 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328356552 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328242576 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324865114 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328707955 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327752816 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325282097 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326477831 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327243623 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327722496 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325954277 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328314843 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326536393 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3255976 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32555989 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324956001 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328661515 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325390058 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325205844 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328721536 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328426661 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32635442 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328301328 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326343872 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329240927 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328354494 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326044051 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329058434 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329006976 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326002597 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.328930673 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328891036 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328855721 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327230775 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329098463 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326727498 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326251495 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326391366 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326995068 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329436957 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32952052 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326472753 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329601736 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329868562 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33016678 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329781677 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327543817 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327088483 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329573836 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327337569 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328330815 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330000856 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328311833 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328796138 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329663296 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32718483 seconds)
  done (took 88.881806367 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327998868 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.327240652 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328432562 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328776594 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328593471 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328494812 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32824129 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328019575 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3285344 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329061536 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330635864 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329322858 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328415142 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328028072 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329183935 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327948026 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32886974 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328812233 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329370994 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331748256 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329328563 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329187167 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328480308 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328133603 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329018873 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331340937 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329146322 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328811533 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329675939 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329223495 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329446265 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328722337 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329802589 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.329512189 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329290219 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329976641 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329390674 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328901972 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329032739 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331624716 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329376487 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332189182 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329953016 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32895956 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331105959 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329876268 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330225673 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32959238 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330042299 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330812281 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330704917 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330370635 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331517027 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331348888 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330572554 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329789158 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329870307 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330684292 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329559947 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333473213 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330602279 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330809633 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333887431 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330274071 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330858919 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330928898 seconds)
  done (took 89.031545234 seconds)
done (took 1809.774523168 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.328591902 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.33521979 seconds)
  done (took 13.933909412 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.494757766 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.447640411 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.333136349 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.372698948 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.33378791 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.338582599 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.350737713 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.332039069 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.331042961 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.331696513 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.331281187 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.518656184 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.386024735 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.329976154 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.330237349 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.421336475 seconds)
  done (took 43.257551356 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.368431829 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.333327029 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.449977407 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.346371756 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.365297552 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.520081314 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.382586148 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.334784132 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.492999452 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.376788919 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.785492892 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.36408636 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.332692321 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.374204297 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.348969781 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.518855906 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.571058308 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.789350579 seconds)
  done (took 30.324074223 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.740008568 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.360418104 seconds)
  done (took 9.366844423 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.34199138 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.373139191 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.328346109 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.322326977 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.343768096 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.384769813 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.381187278 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.373512846 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.377581662 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.356682858 seconds)
  done (took 64.852559761 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.345824153 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.327446845 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.327116795 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.324835505 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.318730476 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.334062472 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.32569748 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.320793299 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.601232653 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.444857299 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.345823116 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.333433749 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.32678083 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.328710434 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.324776342 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.361570275 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.460192339 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.324622346 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.324490641 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.332437142 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.3271523 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.422227433 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.367421016 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.325550492 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.443246973 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.610116018 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.331852546 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.333897679 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.455762152 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.325550499 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.326180844 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.328141446 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.329666691 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.877635957 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.766995135 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.334885818 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.349172484 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.334716401 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.325124912 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.438378424 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.328449973 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.333370048 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.327949964 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.739999873 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.477400794 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.433591735 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.507675326 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.330162096 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.330084393 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.385909742 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.329991003 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.330159869 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.356070542 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.089057813 seconds)
  done (took 110.052022695 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.3289958 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.808799418 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490624356 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.338496086 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.82409669 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.764885957 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.320989296 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.581950504 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.362202608 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.783504831 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.602323355 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.664127825 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.321099543 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.32408911 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.324381183 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.322317858 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.575913114 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.615622544 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.322447515 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.328540711 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.373463678 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.816167398 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.548440619 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.513162667 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.36153413 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.758973842 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.549194254 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.662991557 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.327353595 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.322429754 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.602280308 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.331310418 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.326017402 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.324839449 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.591458317 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.650224756 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.635151747 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.326122908 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.352647373 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.327634767 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.354165066 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.759319827 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.645807774 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.562722292 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.685865382 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.777860291 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.325970696 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.323048728 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.330724294 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.529974059 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.568197411 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.813740623 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.553368287 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.336961017 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.589785399 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.323859614 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.364654764 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.790716498 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.657856733 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.660991824 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.329155521 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.325607522 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.324549772 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.852581653 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.32389227 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.644887468 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.662807603 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.324924007 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.648536482 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.649132113 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.658108015 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.786673817 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.366567081 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.351088332 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.366472728 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.826506009 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.610652918 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791361845 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.354927036 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.324993334 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.634839006 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.328637362 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.603118937 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.864468576 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.800741369 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.377792298 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.347240739 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.326512221 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.786526314 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.785108534 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.573071873 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.687999312 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.604553088 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.350743208 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.326306714 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.326395791 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.328765335 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.560997548 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.339428926 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.687161635 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.786163031 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.097712563 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.371816867 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.855390676 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.563611622 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.340113952 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.328551494 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.328546436 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546561887 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.399129011 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.346068279 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.328597422 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.787064752 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.198988902 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.469448042 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.04147961 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.606673486 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.326721757 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.805719793 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.333227846 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.788986418 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.371517285 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.852714095 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.767809994 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.385378723 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.54821393 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.691097527 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.339741382 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.805434277 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.85270143 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.551697676 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.799634776 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.088064287 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.329075279 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.834787026 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.33144069 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.340860905 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.511361633 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.35078697 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.59050193 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.348209796 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.812445688 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.364561649 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.600874624 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.558813209 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.819699321 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.384214789 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.610138715 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.371811029 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.475970333 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.347188905 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.340558525 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.525680221 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.468571255 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.329001314 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.88357577 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.328979045 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490912643 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.858934792 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.366698982 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.613114145 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.329048341 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.334602297 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.637544041 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.368044943 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.982262408 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.332918037 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.604610646 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.320314609 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.778493218 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.330372211 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.854555542 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.552639075 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.347811561 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.333643471 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.131416942 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.329323308 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.497824267 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504167762 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.937047948 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.329393911 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.764101793 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.331202407 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.566491562 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.344051868 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.33188377 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.679455749 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.394266774 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.333507263 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.333421075 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.330285463 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.331093612 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.774342033 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.371051738 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.051162948 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483802903 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.81015171 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.642654711 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.809188435 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.391763545 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.35097046 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.811423947 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.381167986 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.613869143 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.331859523 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.370945176 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.789125747 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.331125105 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.774198047 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.832224702 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.357698718 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.597189334 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.332420178 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.385881685 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.331403577 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.576010944 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.657177664 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.33127421 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.334238704 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.553895406 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.57095503 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.549210032 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.348364015 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.374923092 seconds)
  done (took 848.792308091 seconds)
done (took 1121.849793785 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.334580133 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.333642945 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.321727792 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.338700584 seconds)
  done (took 26.605038918 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.345975015 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.342753129 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.343341181 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.342685263 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.345137369 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.342604881 seconds)
  done (took 9.342122613 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.364868182 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.337053865 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.337314596 seconds)
  done (took 19.320225877 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.555197614 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.539977814 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.694526518 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.387542805 seconds)
  done (took 10.457536123 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.344255689 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.344225671 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.344444901 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.346584408 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.345531712 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.346420059 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.345274201 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.34671472 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.348082479 seconds)
  done (took 13.391575969 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.003826133 seconds)
done (took 85.396302062 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.361686326 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.828074463 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.135081639 seconds)
    (4/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.915754923 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.031599152 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.583095939 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.578933674 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.389560446 seconds)
    (9/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.574684101 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.375985792 seconds)
    (11/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.323328609 seconds)
    (12/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.119693997 seconds)
    (13/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.337637548 seconds)
    (14/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.011603394 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.431397651 seconds)
    (16/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.923652474 seconds)
    (17/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.331076793 seconds)
    (18/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.788958275 seconds)
    (19/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.42078744 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.339968661 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.597847068 seconds)
    (22/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.116328046 seconds)
    (23/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.337709555 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.528543993 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.955496719 seconds)
    (26/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.335513081 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.581944413 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.362919822 seconds)
    (29/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.770979906 seconds)
    (30/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.385636007 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.337556793 seconds)
    (32/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.865645738 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.409750284 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.342219454 seconds)
    (35/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.8246882 seconds)
    (36/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.688874311 seconds)
    (37/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.337230315 seconds)
    (38/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.414161988 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.694941072 seconds)
    (40/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.345481527 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.886401642 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.44874522 seconds)
    (43/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.361847597 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.592201175 seconds)
    (45/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.337813531 seconds)
    (46/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.401774725 seconds)
    (47/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.560382663 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.022704279 seconds)
    (49/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.540453383 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.056213567 seconds)
    (51/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.396053693 seconds)
    (52/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.322511827 seconds)
    (53/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.343295269 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.372782967 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.209784033 seconds)
    (56/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.450233128 seconds)
    (57/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.331565451 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.605493196 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.366667402 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.968682754 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.443595743 seconds)
    (62/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.448433268 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.389953609 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.687700875 seconds)
    (65/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.673648942 seconds)
    (66/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.148667127 seconds)
    (67/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.443017676 seconds)
    (68/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.49733251 seconds)
    (69/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.761591908 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.678605258 seconds)
    (71/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.131412102 seconds)
    (72/309) benchmarking ("sort", Int8, false)...
    done (took 4.374754876 seconds)
    (73/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.410003253 seconds)
    (74/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.342921385 seconds)
    (75/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.689449229 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.824427064 seconds)
    (77/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.34324031 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.127947692 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.342213323 seconds)
    (80/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.368300395 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.501808189 seconds)
    (82/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.368157306 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.126038725 seconds)
    (84/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.818166889 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.705710097 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.215888266 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.327577169 seconds)
    (88/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.678658982 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.415352652 seconds)
    (90/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.340485275 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.387371761 seconds)
    (92/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.34145805 seconds)
    (93/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.581800307 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.139001846 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.344682189 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.141647458 seconds)
    (97/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.354551639 seconds)
    (98/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.327658546 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.664448783 seconds)
    (100/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.629149641 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.342106816 seconds)
    (102/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.496639083 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.341890675 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.618714418 seconds)
    (105/309) benchmarking ("sort", Float64, false)...
    done (took 5.611196706 seconds)
    (106/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.687403935 seconds)
    (107/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.541152301 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.358204717 seconds)
    (109/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.352032915 seconds)
    (110/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.425447524 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.154101731 seconds)
    (112/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.424772462 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.558304139 seconds)
    (114/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.447687647 seconds)
    (115/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.429377262 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.361668928 seconds)
    (117/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.157511699 seconds)
    (118/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.368982076 seconds)
    (119/309) benchmarking ("sort", BigInt, false)...
    done (took 6.344100874 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.356393308 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.35373093 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.881301571 seconds)
    (123/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.370285649 seconds)
    (124/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.500870929 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.349815576 seconds)
    (126/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.898829328 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.329948121 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.079123149 seconds)
    (129/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.428723117 seconds)
    (130/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.407396569 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 1.845405445 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.368893751 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.44308041 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.748145879 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.614279188 seconds)
    (136/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.527896386 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.758782557 seconds)
    (138/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.362135386 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.427932223 seconds)
    (140/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.37056337 seconds)
    (141/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.707380675 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.957692196 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.046956332 seconds)
    (144/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.640791946 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.602170633 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.610227955 seconds)
    (147/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.969435001 seconds)
    (148/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.366582342 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.474281692 seconds)
    (150/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.443179884 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.346289363 seconds)
    (152/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.546007128 seconds)
    (153/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.344838974 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.332172462 seconds)
    (155/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.776428198 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.478002499 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.756053903 seconds)
    (158/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.039642616 seconds)
    (159/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.321029562 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.052001012 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.054236544 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.372051503 seconds)
    (163/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.429788975 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.366400793 seconds)
    (165/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.362215555 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.367975306 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.345083587 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.908170577 seconds)
    (169/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.554024461 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.217011341 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.14159855 seconds)
    (172/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.700304819 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.750957741 seconds)
    (174/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.378385041 seconds)
    (175/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.474104996 seconds)
    (176/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.694985723 seconds)
    (177/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.357788152 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.984718057 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.657671105 seconds)
    (180/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.050090305 seconds)
    (181/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.697818859 seconds)
    (182/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.170331936 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.333910296 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.398796423 seconds)
    (185/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.3571 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.840692496 seconds)
    (187/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.917942268 seconds)
    (188/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.185716269 seconds)
    (189/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.707701792 seconds)
    (190/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.548332626 seconds)
    (191/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.617492685 seconds)
    (192/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.43945412 seconds)
    (193/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.363613521 seconds)
    (194/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.392795873 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.763024977 seconds)
    (196/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.890614117 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.398873434 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.373492731 seconds)
    (199/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.373870589 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.388583888 seconds)
    (201/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.654052275 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.482719666 seconds)
    (203/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.055856179 seconds)
    (204/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.4353006 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.333665409 seconds)
    (206/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.336503916 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.349107119 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.373736133 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.404815555 seconds)
    (210/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.407824513 seconds)
    (211/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.535473218 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.488835759 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.704701821 seconds)
    (214/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.860804574 seconds)
    (215/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.455743524 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.987066699 seconds)
    (217/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.54217542 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.559467907 seconds)
    (219/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.343027591 seconds)
    (220/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.9649401 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.586582201 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.337210189 seconds)
    (223/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.469502531 seconds)
    (224/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.358013652 seconds)
    (225/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.335508464 seconds)
    (226/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.72434686 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.367927125 seconds)
    (228/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.118328043 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.6890605 seconds)
    (230/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.660461833 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.372970483 seconds)
    (232/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.944683134 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.890901273 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.614392797 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.975890241 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.994149545 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.361692774 seconds)
    (238/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.397785993 seconds)
    (239/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.553810748 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.390114256 seconds)
    (241/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.367687857 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.824564716 seconds)
    (243/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.736638038 seconds)
    (244/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.351300268 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.457592158 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.351725167 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.70043956 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.768375755 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.367475072 seconds)
    (250/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.677237025 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.919331405 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.379715508 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.220570536 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.881973143 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.776502599 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.337832082 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.612500889 seconds)
    (258/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.349440135 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.553816353 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.84236475 seconds)
    (261/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.380496145 seconds)
    (262/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.678594574 seconds)
    (263/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.172828094 seconds)
    (264/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.536842269 seconds)
    (265/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.367263163 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.377472888 seconds)
    (267/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.456423655 seconds)
    (268/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.378285567 seconds)
    (269/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.388626637 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.200363174 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.758698959 seconds)
    (272/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.414873184 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.969402788 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.380891325 seconds)
    (275/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.436247697 seconds)
    (276/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.084530151 seconds)
    (277/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.43655168 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.452284182 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.552176646 seconds)
    (280/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.806361358 seconds)
    (281/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.732823214 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.353516862 seconds)
    (283/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.439260215 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.434205488 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.666934113 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.436829312 seconds)
    (287/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.64126967 seconds)
    (288/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.478809474 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.464655652 seconds)
    (290/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.55655054 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.502358257 seconds)
    (292/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.928683951 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.396370886 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.352125319 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.423266267 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.65867579 seconds)
    (297/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.858356384 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.355669465 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.442419398 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.181722128 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.077668511 seconds)
    (302/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.355577815 seconds)
    (303/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.638892068 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.392084171 seconds)
    (305/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.378969008 seconds)
    (306/309) benchmarking ("sort", Float32, false)...
    done (took 5.321806751 seconds)
    (307/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.413497618 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.358055137 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.557085446 seconds)
  done (took 923.962053531 seconds)
done (took 925.244379524 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.387004619 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3804684 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.363548205 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.386543461 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.475793852 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.397569091 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.374776872 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.366648495 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.412103834 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.413938826 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.363728624 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.397281883 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.365925948 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.365172455 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.364404823 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379069706 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.316062079 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.365870389 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.382185734 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.375351176 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.381650411 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.363786471 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.414839306 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.397388205 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.368580124 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.367079301 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.368014521 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.385072102 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.47647239 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.36801207 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.369011698 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.377077041 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.320164321 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.366276679 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.360438225 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.385935804 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.377805419 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.374455366 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.368736534 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.398384957 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.689746005 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.366922091 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.368093531 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.366733701 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.366131538 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.371256383 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.36851546 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.37243688 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379231715 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381119645 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.681001202 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.382015816 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.369954757 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.36708202 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.378498221 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.367060394 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.370638624 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382627757 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.387252139 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382847186 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.319252901 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.373957812 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.368422069 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.384022904 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.376020462 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.718621779 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.364064809 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.371971601 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.692175363 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.373150561 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.719276891 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.376956717 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.370410074 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.382860715 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.400035807 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.330445046 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.365382939 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.367522598 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.376257107 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.367202808 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.377889454 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381198353 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.372949579 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.3691827 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382050494 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.400246376 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.37806148 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.368499892 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.377882977 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.387795571 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.375950414 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.380043272 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.372327534 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.364656806 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.378153685 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.371738489 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.371946671 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.371850298 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.373958521 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.379702422 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.694052789 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386452737 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.365878266 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.365969073 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.369828237 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.383925189 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.692964139 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.37099302 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.39044012 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.417222815 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.370887679 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.326659366 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.374557464 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385979437 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.379352086 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.373789153 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.365482452 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.324825735 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.690568197 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.384479 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.371490376 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.370015184 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386121807 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.37289068 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.367575616 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.337282378 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.374326609 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384879904 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.4918992 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.38155008 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.403074199 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.369637531 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.373866705 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.39876847 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387539234 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.403329462 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.373934431 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38655945 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.387675467 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.367673424 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.381995201 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.381414234 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.371248544 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.377407007 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.366347192 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.403478325 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384537185 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384865396 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.393008962 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.493136867 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.369120567 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.328676737 seconds)
done (took 229.298864653 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.430261782 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.367695477 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.472190563 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.36803305 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.466281545 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.465393193 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.365024939 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.366319343 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.366617621 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.74761499 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.367080076 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.36649194 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.367883205 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.366704623 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.449624062 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.369848272 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.366019661 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.710802257 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.369353407 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.440572589 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.362182623 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.367265276 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.369249323 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.750012083 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.36669337 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.363265455 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.439551685 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.368920252 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.715475443 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.363311438 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.364346643 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.716496465 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.461262329 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.387360775 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.379989603 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.377719102 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.468278142 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.384919357 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.451122882 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.450811496 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.473250255 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.409569408 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.363781507 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.363316754 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.371601855 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.3709751 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.367905978 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.398544272 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.367888996 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.36876488 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.713579168 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.380965738 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.369491155 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.369783869 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.369502029 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.400243528 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.369378101 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.371357764 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.460509616 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.372010932 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.433581154 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.751377624 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.751919397 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.371981065 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.368184798 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.369424204 seconds)
  done (took 150.883005503 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.438949798 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.445507748 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.479017383 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.373371918 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.424644927 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.483522851 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.373342669 seconds)
  done (took 11.325961967 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.379452949 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.372376901 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.421062443 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.421935653 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.372658353 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.523154196 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.373402703 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.385169084 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.370315364 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.425583025 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.374106904 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.37322329 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.379184625 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.364954759 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.421177875 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.385154871 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.488151331 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.374535235 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.373289304 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.531311378 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.379445805 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.37062594 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.425242048 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.384874178 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.374558124 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.380040603 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.958376087 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.373696053 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371049793 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.373619463 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371177645 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.413211208 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374794926 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.367544799 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371900177 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.49120974 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.37310943 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3719429 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.373800868 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.37457996 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.374531248 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.373617319 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.374352352 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.371596217 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.374106233 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.398248685 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.374155758 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.375064304 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.374453535 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.374813991 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.425973897 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375087908 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.372692918 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.372085129 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.430327363 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381781637 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.375687199 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.37262856 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.375642653 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372748135 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.531437637 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.423111426 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.375228856 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.422804767 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37631821 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.375825093 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.37500145 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.3756415 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.4299046 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.375442112 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.424263664 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.373513193 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.535335413 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.400239108 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.37838968 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.379983128 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.378885785 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376286865 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.37114929 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.382500835 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.374310551 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.376439231 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.38302102 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373426444 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373391249 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.483487599 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.485220585 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.374166728 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.38980353 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.384188586 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.374262662 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.430305698 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.377404724 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.373490524 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.429160431 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.493597588 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.429520426 seconds)
  done (took 157.281577734 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.381244653 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.38452833 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.377883739 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.392612537 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.377418834 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.377165838 seconds)
  done (took 9.60286338 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.379795253 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.377445238 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.37770596 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.377191879 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.376519291 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.378019736 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.377520278 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379212601 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.381164768 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.378904558 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.377429826 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.378705289 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.378039385 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.378002103 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.378528004 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.377763607 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.378114849 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.375613264 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.377516449 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378458641 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.48974782 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.378605185 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.378289005 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.379667124 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.382554314 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.377921254 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.386025931 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.378098958 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.378357392 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.387189511 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.38115702 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.379571417 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.379733446 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.384072243 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.382291322 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.380401629 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381219958 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.380159006 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.376243416 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.8065556 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.381463868 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379733808 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.379448246 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.38119336 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.380531605 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.38332902 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.384299413 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.38786977 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.380009233 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.381626385 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.381621157 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.379154216 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.381729443 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.380407897 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.383611263 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384115865 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.383719506 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.380599503 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.379968391 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.381187016 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.380607007 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.380966026 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.381859348 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.38427821 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.377454852 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.382120938 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.381538443 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.384047474 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380337406 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.380334726 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.382427339 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.377772849 seconds)
  done (took 102.234011823 seconds)
done (took 432.63102102 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.881925253 seconds)
  done (took 8.197809053 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.463844772 seconds)
  done (took 7.78014184 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.306204422 seconds)
  done (took 20.628837662 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.465149185 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.478823549 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.378729381 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.379783335 seconds)
  done (took 27.01887821 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.586707112 seconds)
  done (took 7.903103603 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.380078917 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.375780019 seconds)
  done (took 14.072348045 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.410038054 seconds)
  done (took 7.726038833 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.241773979 seconds)
  done (took 8.5651917 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.384642502 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.389703269 seconds)
  done (took 14.099659903 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.359816789 seconds)
  done (took 7.676684904 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.379793611 seconds)
  done (took 8.696874028 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.380099161 seconds)
  done (took 7.696801714 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.449989532 seconds)
  done (took 7.766397888 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.871659298 seconds)
  done (took 9.189547275 seconds)
done (took 158.334296752 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.374167174 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.375878246 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.37732516 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.375052734 seconds)
  done (took 26.819667915 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.416200575 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.414881946 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.416909052 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.425571001 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.417879292 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.413942569 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.407398055 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.406791054 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.426207229 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.418617568 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.416266671 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.417795992 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.414004601 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.409689462 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.418265091 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.418361955 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.427172685 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.416211204 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.409631388 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.418904993 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.383043562 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.426774897 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.419850295 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.38245717 seconds)
  done (took 35.261440475 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.581274639 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.453483496 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.537319882 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.434224594 seconds)
  done (took 7.324638666 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.43467712 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.435863727 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.447092417 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.485918407 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.513207645 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.4449122 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.406391447 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.403895432 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.390727002 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.436241908 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.51230136 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.453289189 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.518650814 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.384132193 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.572993021 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.382794196 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.382993152 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.436104803 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.487443527 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.505690732 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.384418713 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.435115007 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.43846522 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.453074219 seconds)
  done (took 36.066257546 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.382905073 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.391778604 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.389377564 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.383602832 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.383150119 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.384350289 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.390116337 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.383646641 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.403980348 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.384464903 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.38218258 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.383294242 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.382876527 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.384184803 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.383456133 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.396823341 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.39870956 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.383975858 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.38689478 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.389514195 seconds)
  done (took 29.069500837 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.378235808 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.321582842 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.730143898 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.634626421 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.378008928 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.379865539 seconds)
  done (took 29.143397171 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.451217037 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.573245237 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.386746346 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.720288235 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.795323938 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.387105711 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.385061118 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.607392856 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.893652372 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.902398428 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.441305522 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.437032537 seconds)
  done (took 20.301853662 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.391726457 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.382219614 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.389948226 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.398200891 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.437659521 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.389672435 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.392914856 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.379520173 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.439599103 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.442971285 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.390615748 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.439571629 seconds)
  done (took 38.197426824 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468078997 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422963563 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.244063468 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187196885 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.759209496 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592369955 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.199922089 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.842309407 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.383913151 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654541264 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390984487 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472718099 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.636330967 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389678252 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383399406 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.386106894 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60835448 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869872502 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382321623 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.25277918 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407568713 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381278631 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.355321636 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.410119927 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593107689 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.510762368 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.643623914 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381925344 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651055303 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395611848 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391455152 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380999638 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65545987 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029446072 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474097438 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391444836 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.157691705 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.096445331 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.367664021 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.258199868 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.178253077 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38539364 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393755657 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381631975 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.317362273 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390629882 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847085031 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.387748622 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.093627927 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382605787 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393483536 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47939144 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.386616506 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.201904706 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.478613856 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383227397 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.381232897 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390085119 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954277843 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.752979339 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392325693 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.319935201 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.490123165 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.26299921 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018590027 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.484320888 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.387527189 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3874852 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318501464 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.258016754 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402965004 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713221439 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.405230187 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.032596398 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097596763 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.384464639 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.315734926 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931803058 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385498106 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.335060349 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612676984 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384318337 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319934039 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.340035494 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.319083311 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067735751 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393439384 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.735848411 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39390198 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.844562335 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.395032353 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402323128 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408157805 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.608686297 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.269127199 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385647614 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.240059589 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543974987 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407001407 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.842885802 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319341126 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.389704917 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642577694 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.596856032 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385341831 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.379703497 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601507829 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395127485 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.403811572 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.390939664 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.398712333 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.987778701 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395887636 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.761436459 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404749957 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386836963 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103755885 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399213364 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.489541384 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.39538461 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624381564 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.129756513 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387151733 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468673603 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395294855 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386754113 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.361350875 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.903264574 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.386712626 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.388596566 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395785896 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.398962546 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.388536845 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336844795 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.384132687 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400977377 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.390554196 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610617162 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398829407 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663692686 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321740109 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.735367257 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.480296972 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.610635787 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.554196162 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.387664362 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647910273 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395712492 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401696651 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399957609 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405962575 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48616563 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409710056 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.391502279 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646129822 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.392149198 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.391970251 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.369066807 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391726389 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38861436 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.393239336 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.296846416 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988164239 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364890505 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394240051 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.279042664 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.403035102 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453305061 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393747935 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.398741367 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.139931338 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.28440801 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.39408646 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.385092637 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614579013 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399714653 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.279167803 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468813712 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.600067328 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.991277552 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401700539 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.323680185 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.100324793 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.081957859 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389286558 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.324667465 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38949986 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399393221 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400346399 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.617028559 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.994958271 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39117058 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.286826921 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.396439503 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400498906 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.394806075 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390000089 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.107327929 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.779459079 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40520673 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.404196931 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533137312 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.404557312 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.324963174 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.394758458 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395923794 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390535365 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.389773757 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423943876 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.290150159 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878642057 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651476959 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.157353925 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403333349 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.388651496 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.42277763 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.455546089 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.280854524 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416567694 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.407485945 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401915151 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.402248818 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.315638896 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.064245065 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962515753 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127211741 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937763707 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386590603 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.396400954 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393785911 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.857200444 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32738161 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.949355779 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573063306 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.859882276 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337519529 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605405517 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.555087043 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128636327 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404663054 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620421424 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387722321 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.293636056 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424636853 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603667528 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427752014 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.392286493 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.322952182 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.678434285 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660442146 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.230788222 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472400592 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856786478 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294410381 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.414016182 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.392499171 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.695044752 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564168495 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.106080872 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.565136524 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407551082 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398907046 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881934632 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39901058 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.620619641 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035705434 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404472451 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.608666075 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330107948 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.404103822 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.404511577 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.394323238 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.610046532 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.398391949 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.648092224 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404782927 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329192088 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394010197 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952603856 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.249190817 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.400134841 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394065813 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112756544 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397154015 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.669419121 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.398559964 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.086816525 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401377777 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.32943457 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329752801 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.089073859 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399716678 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3710636 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877737055 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.483009876 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.499477103 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420162777 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445454346 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65241263 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.410356952 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.999115667 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623136149 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.267003554 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417744498 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.496061969 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340358003 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.403130698 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396405062 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.63220474 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30472486 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619744656 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.277346776 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.30078543 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.395890887 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607032144 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396137 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.403845348 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6355524 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.107851912 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.397582035 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122720221 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41999165 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.4097043 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.314089761 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.50353826 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404573248 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475875913 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407128037 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.407602086 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.40811186 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567998885 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40583981 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401359733 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.410642962 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49240579 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.807698944 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.105223682 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.401022947 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00642212 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136370874 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.007023231 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408015895 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397652513 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40521747 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332133344 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546558349 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.623487059 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672828916 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527115472 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.545651726 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420300636 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35209931 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423103532 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611729478 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673065739 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.293624531 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407305868 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412302935 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.399493729 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408963177 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.609844196 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886769417 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948505582 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515546413 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.407180635 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.861725476 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677561278 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399086728 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398975529 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.99132068 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.405581019 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.712717484 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.404463812 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402875798 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550043308 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410924148 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051107161 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.40962021 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.555803646 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.173646537 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.334679501 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.659568216 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.836268993 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.413083111 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007459016 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.142635631 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662711024 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468422645 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412646661 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.510991302 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548539404 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.403879934 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401500913 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400497407 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449792671 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.11053454 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.410778087 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013794161 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662590654 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.399396899 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.403915538 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424831262 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.411574799 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625105158 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095637149 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625796421 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411451506 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405692456 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.217176647 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013510631 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412980021 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336352475 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.404855711 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638569625 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637593001 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424230516 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.855748408 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.113241661 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955548008 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.373686349 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424025973 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410111588 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.151784093 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012018541 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.113017624 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89070875 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.961272061 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413955699 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678234851 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.407707298 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404211413 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679219366 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.406163083 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.402005342 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416105141 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.006483587 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14524587 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.40576317 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.341240838 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.34238466 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.743566915 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.117359268 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339686122 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412429466 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.589863413 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402346488 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534945301 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415465304 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.414774373 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403702148 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.16794841 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676450814 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.409069969 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.405747585 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.40121051 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406508321 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428037767 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675247153 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405205361 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.0801271 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.754330566 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.661296687 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.404795543 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.390743466 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.40857473 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404360142 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.391590944 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.604653876 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.633376131 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961811508 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.414905936 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.416945678 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409364018 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.622624762 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616832954 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404945272 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420188427 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405251891 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423174901 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.311130363 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.914279144 seconds)
  done (took 1619.708309548 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.433553379 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.418825066 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.4224315 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.484265933 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.466353588 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.476153446 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.446492336 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.445313312 seconds)
  done (took 52.940659427 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.411476062 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.63846337 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.435774179 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.418790462 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.417537503 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.408124897 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.83642768 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.405529809 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.415796638 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.416019036 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.412007978 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.407185656 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.02916872 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.416230231 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.405959896 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.3996187 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.416075799 seconds)
  done (took 66.643753582 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.416935082 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.851573626 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.493869707 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.426722468 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.278512859 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.422157778 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.974075809 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.478844895 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.406264432 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.629705775 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.056461267 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.422749858 seconds)
  done (took 85.206404799 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.414225333 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.414377954 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.413941536 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.414664338 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.413236166 seconds)
  done (took 8.418690196 seconds)
done (took 2056.419711209 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.863482975 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.10623568 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.046004823 seconds)
  done (took 5.501652709 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.555095866 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.603698425 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.723070189 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.729605691 seconds)
  done (took 7.95964004 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.695067165 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.793955601 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.619251165 seconds)
  done (took 6.455407425 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.77578104 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.417237288 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.480874312 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.406916589 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.408123154 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.407403399 seconds)
  done (took 20.571239889 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.411531147 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.413553574 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.411723284 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.414052399 seconds)
  done (took 6.998639907 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.392899591 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.137984043 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.393442013 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.406074125 seconds)
  done (took 18.677660333 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.157053665 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.170338394 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.153549925 seconds)
  done (took 7.828586748 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.40606898 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.250976327 seconds)
  done (took 10.005176683 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.71691454 seconds)
  done (took 3.065358477 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.542890354 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.673904501 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.511513417 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.358743767 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.529758368 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.075694371 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.970341448 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.573907216 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.352039099 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.476058328 seconds)
  done (took 28.412892228 seconds)
done (took 129.362530676 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.073988853 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.654247208 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.609959021 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.043147745 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.638220296 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.610860242 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.629415269 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.015398218 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.554110249 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.545255215 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.047320008 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.637320643 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.576556119 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.650104741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.575789473 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.651279765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.637570447 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.121181591 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.732685386 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.930804114 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.629603286 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.683647649 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.876267762 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.706926217 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.638206411 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.560347191 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.265035775 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.650898975 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.902924267 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.283261768 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.561616741 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.103094614 seconds)
  done (took 194.147564844 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.408925614 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.40982435 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.409062461 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.408746843 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.423726784 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.410543875 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.410303641 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.435276237 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.417878729 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.416006872 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.408566033 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.409644375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.410288479 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.409377002 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.410865734 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.408916271 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.409189624 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.410170672 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.423597379 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.42522901 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.411338723 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.431830166 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.410407446 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.410618314 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.42542645 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.410980304 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.409602474 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.410316055 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.423413339 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.418094029 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.411157102 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.410647617 seconds)
  done (took 206.612012383 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.411358651 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.410860022 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.410632169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.428230735 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.415242613 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.418723125 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.41118446 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.411475791 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.426441008 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.411085159 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.411139387 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.411570176 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.41182585 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.420424652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.411902377 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.418669003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.411093585 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.414096156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.410687812 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.411568382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.427740902 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.411134664 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.411943125 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.412066096 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.411480702 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.413185668 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.414317339 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.411777555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.412126343 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.411888643 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.427596275 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.420943414 seconds)
  done (took 206.627374187 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.607689074 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.419132771 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.420325626 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.354894349 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.419689895 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.419254695 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.416191942 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.617824799 seconds)
  done (took 15.028834322 seconds)
done (took 623.764422175 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.659993248 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.383438407 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.615340408 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.441096851 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.167148364 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.442691098 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.43992501 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.603539486 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.921365738 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.591250643 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.613896645 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.439546957 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.754840683 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.438987424 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.68564609 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.535131154 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.25901135 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.371778336 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.74606911 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.946872215 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.685736636 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.909715446 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.601690966 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.964247584 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.760414025 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.938245462 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.155089948 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.260091272 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.440157874 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.750087953 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.050628802 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.372924712 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.495350828 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.477110629 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.532692039 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.51511857 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.393288953 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.477035127 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.617784567 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.675734476 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.941866554 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.706569952 seconds)
  done (took 96.135035167 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.409855801 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.410004844 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.409129595 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.410830356 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.412068146 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.410168385 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.410070571 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.409757663 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.411211115 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.409829407 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.409102972 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.411223912 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.409123976 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.409777262 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.409638171 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.409451205 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.410150148 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.411911765 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.409988331 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.410278192 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.410814759 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.409975192 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.410703984 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.410187581 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.411758126 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.411530382 seconds)
  done (took 38.025112322 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.423247459 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.648179491 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.824942339 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.431392298 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.422159229 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.427851331 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.498250739 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.424218928 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.426441327 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.427155801 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.575433514 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.425573516 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455069321 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.854880317 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.428669505 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.424585001 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.423412785 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.424423336 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.656371465 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.432480648 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.51688554 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.42627831 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.499424547 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.433920211 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.443468215 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.425296653 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.428996498 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.942034139 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.426440037 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.576914297 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.184923216 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.498560429 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.914535499 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.838896453 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.186844996 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.427883194 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.424706495 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.581054172 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.427315032 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.424695094 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.49955394 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.426918502 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.836170079 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.047400892 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.445052838 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.425132234 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.965391341 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.581006536 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.660441301 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.435356985 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.857587041 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.430922586 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.427365124 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.427037124 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.659482663 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.433268277 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.425787842 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.995966226 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.448249689 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.500097705 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.427546697 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.427118009 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.663319342 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.42646491 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.652979928 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.428161073 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.434005034 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.426839023 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.838379184 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.430463538 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.062715747 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.441595321 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.423872431 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.57478098 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.651113563 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.992838077 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.4270563 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.66578563 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.923075269 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.497913554 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.426858159 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.932832117 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.50012012 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.428073436 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.425440109 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.424668022 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.423766804 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.467565349 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.495436061 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.994031876 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.057762179 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.012556111 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.517416504 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.436408141 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.42521543 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.995465112 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.444474887 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.425727297 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.829588623 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.064719066 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.446449732 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.435081203 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.056549768 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.447879553 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.503478391 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.433976451 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.844602075 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.429214106 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.467182274 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.425203162 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.431864364 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.428256213 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.500973748 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.430277122 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.425361274 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.037524686 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.600539961 seconds)
  done (took 186.262941438 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.420505241 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.419045797 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.420381847 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.418867385 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.420220788 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.425769792 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.41979122 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.419696094 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.426091059 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.418872095 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.419987169 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.420262797 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.421100071 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.426181528 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.429447634 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.428063773 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.030229474 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.420498315 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.421119652 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.420927922 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.212161862 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.422029635 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.420669441 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.42008994 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.420145942 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.420463367 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.430219764 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.422891817 seconds)
  done (took 154.577548535 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.426669152 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.959930032 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.429582332 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.554416792 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.447649042 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.425472836 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.551120316 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.481875315 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.428560005 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.424754879 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.425035541 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.712891213 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.429735905 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.914904589 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.607184596 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.556680142 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.91481225 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.429190572 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.426066955 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.426039463 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.556137483 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.436228012 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.715466507 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.964746009 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.429066609 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.964967515 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.417117214 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.4297682 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.428271459 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.966326883 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.427936205 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.7179672 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.502562684 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.486899144 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.969376268 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.918443621 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.918343718 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.568430172 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.428612352 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.426391703 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.426753992 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.417484797 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.967330413 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.430573626 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.429150307 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.962175609 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.445892168 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.430214638 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.437833461 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.42768367 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.484973318 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.486757195 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.721328107 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.973415739 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.502755585 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.452393915 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.554435269 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.786656974 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.433036535 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.917125444 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.417758774 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.971705787 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.43209686 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.417446468 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.429285923 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.434614244 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.571440297 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.558043346 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.920335543 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.43153835 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.918971968 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.572447396 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.430492618 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.428977159 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.431765529 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.970130866 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.920969351 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.571668868 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.560583211 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.616891793 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.421818257 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.43016719 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.419314185 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.504225563 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.429600924 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.972880629 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.922509228 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.432171654 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.431941232 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.432466883 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.433365973 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.599687889 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.976664627 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.505177674 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.914965497 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.736276691 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.72269851 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.433036209 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.487625993 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.431337668 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.723523634 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.436632194 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.488862217 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.853838198 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.727535209 seconds)
  done (took 168.574953468 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.665986686 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.568988478 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.524303022 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.542641135 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.944511213 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.01292105 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.497290359 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.552486612 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.541020189 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.674034184 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.074147051 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.525423472 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.614132088 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.508093309 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.112463224 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.50170113 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.524428085 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.572169792 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.542000303 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.447471869 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.998610423 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.71346702 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.580054911 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.321927372 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.524716292 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.162092731 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.172740674 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.936311555 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.599491158 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.531727896 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.942372163 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.54828285 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.134250448 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.049915631 seconds)
  done (took 66.533496874 seconds)
done (took 711.463367558 seconds)
SAVING RESULT...
DONE!
