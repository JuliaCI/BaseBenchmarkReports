cset: moving following pidspec: 16823
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.243982507 seconds)
loading group "string"... done (took 0.466186265 seconds)
loading group "linalg"... done (took 7.610799483 seconds)
loading group "parallel"... done (took 0.17303849 seconds)
loading group "find"... done (took 1.183266381 seconds)
loading group "tuple"... done (took 2.108113049 seconds)
loading group "dates"... done (took 1.339973294 seconds)
loading group "micro"... done (took 0.247155975 seconds)
loading group "io"... done (took 0.657701174 seconds)
loading group "scalar"... done (took 41.542618378 seconds)
loading group "sparse"... done (took 12.767940812 seconds)
loading group "broadcast"... done (took 1.134080183 seconds)
loading group "union"... done (took 14.28326409 seconds)
loading group "simd"... done (took 5.122570573 seconds)
loading group "random"... done (took 9.616184943 seconds)
loading group "problem"... done (took 1.983024659 seconds)
loading group "array"... done (took 22.43772951 seconds)
loading group "misc"... done (took 1.417242021 seconds)
loading group "sort"... done (took 3.57607259 seconds)
loading group "collection"... done (took 19.424622182 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.54368732 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141223667 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148413864 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130174024 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204117228 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143314165 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156464448 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112976786 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.982854942 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.184853381 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154274627 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.51339698 seconds)
done (took 5.152108892 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.225326058 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095849623 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103630727 seconds)
  done (took 0.87675071 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076844641 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14635826 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096309934 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07779836 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095413038 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077594539 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09549961 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078010004 seconds)
  done (took 1.350070029 seconds)
done (took 3.221343597 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.736334322 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276248479 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202355266 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461196693 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196041567 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214911483 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681129923 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.36540154 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252276289 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100309064 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143196311 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391639056 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136123995 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685004482 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089175771 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123124659 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176852221 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.467900497 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082258629 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110195453 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116181823 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141618527 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128516987 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090664413 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185687005 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083952538 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.198086792 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110662924 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081213727 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.291198398 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200392672 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684068388 seconds)
  done (took 10.926832715 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110280588 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134950731 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099742813 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139725046 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135405041 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100920641 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085954647 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095928996 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120976341 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174977675 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116793288 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138381313 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095572165 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082835524 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116562575 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244572677 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12226655 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104841106 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102404 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105361411 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123357242 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114633006 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110620456 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09360317 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169833619 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.225244046 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113362199 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129330296 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098448094 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114046534 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14466079 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144446662 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096567223 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081250965 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174116352 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12642125 seconds)
  done (took 5.186645479 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190249369 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121031368 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166963196 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162882835 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139478386 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159560846 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111815985 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244948022 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.109414901 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164313568 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143415004 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115412508 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080310262 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099372812 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095868323 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.69959502 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122530553 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154967 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114059976 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103294956 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08361163 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365619504 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104989161 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080958866 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101165032 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06728394 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16285197 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101329243 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.158414652 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119980421 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082212316 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135291024 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205897151 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114008043 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134681077 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095330657 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078899747 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178028211 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103700439 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155388802 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077914383 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.100641648 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122750183 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118470892 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134690772 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098358025 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096112576 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204328766 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09663669 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097501659 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.979019706 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.079346244 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182696063 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.106415909 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079575776 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.328189479 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.12019823 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080539587 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097067981 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.281289158 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.184945065 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100555536 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081316139 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098493838 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082379714 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.403705892 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08251281 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.683504679 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.089064233 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10845354 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084043578 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098528231 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105896709 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089265019 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117252367 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081491697 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101828262 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.0801883 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098934817 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084045149 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11152188 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103877504 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081770605 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166389581 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080830963 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116518848 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128490282 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086254496 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097511475 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132970478 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082973186 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098759982 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13414617 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0830791 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096284608 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110473656 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085949452 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14508549 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099066026 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.190825231 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081005703 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130971173 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102115129 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117405816 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116317566 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101530495 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086410832 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097642111 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078400864 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167212836 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081572045 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09970233 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082788192 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113751272 seconds)
  done (took 22.781247442 seconds)
done (took 39.57807909 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.3269905 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105297481 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105866694 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104847207 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102585415 seconds)
  done (took 1.501204339 seconds)
done (took 2.232076581 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.294570656 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.178462878 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097044181 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.172058698 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095536726 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.179498769 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164646762 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114862296 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.224969354 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.078670651 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.168638134 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096302746 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078366114 seconds)
  done (took 2.701670946 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097416659 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117055987 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083873623 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113364234 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077970524 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114030068 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093602682 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120641227 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111575778 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086394479 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095385476 seconds)
  done (took 1.839455824 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096537711 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11601842 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083542332 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112406181 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077613734 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112582291 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094444557 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118493863 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112270695 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08693275 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096213801 seconds)
  done (took 1.83229968 seconds)
done (took 7.094402121 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092567542 seconds)
  done (took 0.813861355 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.926283444 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.89284553 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112130142 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148910374 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298614777 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193054285 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.479698455 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127625906 seconds)
  done (took 11.113847641 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.147294914 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087433893 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.103534277 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088408568 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.103043599 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084958965 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102566305 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099993155 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084289726 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102708885 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087714073 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101912122 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101478435 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087122646 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104390422 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08543151 seconds)
  done (took 2.367094741 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121045699 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117709503 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10691569 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109692523 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087723178 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107197377 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108095871 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09001102 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103933973 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106007557 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092167552 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107362794 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105652978 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081900148 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107986111 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109787261 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087267872 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107485005 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109125836 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091112663 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108784867 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097935677 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087675608 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108127802 seconds)
  done (took 3.300965619 seconds)
done (took 18.322185619 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161740749 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111064724 seconds)
  done (took 1.006366595 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.0974523 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115052522 seconds)
  done (took 0.948762882 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099385569 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097736599 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123519633 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111198703 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082084533 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097721158 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120322062 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081234041 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097405589 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08078928 seconds)
  done (took 1.729430585 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083349912 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110830684 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102443542 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095555768 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10709811 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096417883 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088497256 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099038327 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108818246 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076167925 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101966415 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114668453 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085729465 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116505735 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104245402 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082465579 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101980487 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100083345 seconds)
  done (took 2.515971743 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080789301 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09903201 seconds)
  done (took 0.919819407 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083046256 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09587854 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082985642 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099563793 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095950874 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078910695 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096708076 seconds)
  done (took 1.371995935 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.471623904 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135317252 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.255040661 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086627288 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122489446 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300287679 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097422534 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083898954 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102903803 seconds)
  done (took 2.453842805 seconds)
done (took 11.685069649 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094513148 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119767782 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113989997 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.478045697 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10754348 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097271587 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159858861 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.255515837 seconds)
done (took 2.17048755 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.15146684 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327577244 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113069412 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066846404 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094941539 seconds)
  done (took 1.348556602 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081017563 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102121078 seconds)
  done (took 0.92802932 seconds)
done (took 3.176860958 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081588191 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098620417 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078665848 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099760889 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.07836719 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097277246 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082005114 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098852957 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.11072075 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.097586359 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098204742 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080108284 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095564188 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077613527 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09571007 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077392333 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.0940503 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07753618 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096953638 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079536583 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095763271 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082257153 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096540493 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079563622 seconds)
  done (took 2.934236138 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101378676 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100240238 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104943211 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086783521 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103295326 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087344402 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10393751 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098983225 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087875082 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100955098 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101911789 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085761149 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101271646 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085397157 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100823028 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103068636 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088108519 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099496121 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083828662 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102331444 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104520241 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082588316 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102865887 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104033035 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085369395 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103017865 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084229407 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099227012 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104654496 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08478534 seconds)
  done (took 3.633654838 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085936429 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094988978 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079137742 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103337179 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078269581 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099143212 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078986515 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097561722 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080460473 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096311849 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08094768 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096597613 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079814776 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097876311 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080501478 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101493906 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110844491 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079768184 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097031552 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079873104 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100355164 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079345471 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097497832 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078977835 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096784662 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078661876 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097161679 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078891282 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097515635 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07868341 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100619489 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083049595 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097355452 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086294554 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100903406 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080169875 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101104807 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079094986 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098196814 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097373961 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079297502 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097678036 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079600722 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104355866 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079895269 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099344881 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079726685 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099348954 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.08044344 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100349553 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078974851 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097224668 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081607847 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098360304 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100778407 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079922404 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098166885 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079188273 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097426721 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078301452 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095637303 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077553405 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09846246 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080129941 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113260075 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086688743 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098179868 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081849458 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098387422 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08247257 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098455047 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111512539 seconds)
  done (took 7.272736178 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084595608 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10852749 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081665409 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099464586 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079384488 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098685274 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101278039 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079950916 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099590298 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087339853 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097460863 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081204487 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099253192 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109891791 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080170478 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099977386 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087869682 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096046018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080836207 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101294961 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08141788 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101289168 seconds)
  done (took 2.791683419 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212658085 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108072566 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144737188 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109847968 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085819379 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108185643 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104985913 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088682373 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104170991 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084950128 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102326554 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104817863 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084949424 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102973239 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103620237 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085961402 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105095342 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087068822 seconds)
  done (took 2.687835613 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095221798 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10060217 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104468581 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102206402 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101021137 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084913755 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106424623 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110260204 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084620099 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101290629 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092472737 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103017795 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102934788 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083067683 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102844142 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083197607 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103043202 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082615283 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109890344 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106417392 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106469276 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092134957 seconds)
  done (took 2.919354017 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098830531 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10295873 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120418899 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085353057 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097709697 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080527286 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107825633 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082447915 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109510714 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102320744 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082775022 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099797064 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089670939 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099967801 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105802974 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082934909 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1029622 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082974795 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102763067 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078770011 seconds)
  done (took 2.678003974 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104996011 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102186087 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102154199 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093931074 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102665063 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084512722 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112281379 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103712173 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084522922 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127000675 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102788854 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084659534 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112852403 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108766998 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102530764 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093746359 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110773278 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112077712 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084342679 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102538143 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128342776 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.197531042 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110855712 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102861831 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08488941 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10232458 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102908835 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090832487 seconds)
  done (took 3.717083634 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083272398 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101452469 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080105576 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099278996 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080729417 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099110465 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080751417 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098385209 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08339129 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098989307 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082922727 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10050248 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083614346 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.10127569 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085478104 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100636655 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082961918 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098846455 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081407084 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098138009 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082902759 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102164521 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082929596 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098251173 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080149241 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101158601 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080689197 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098794365 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082753855 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098298634 seconds)
  done (took 3.495507577 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09264665 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108173111 seconds)
  done (took 0.967376681 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080917319 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116683084 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080711751 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105128422 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088044561 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101815303 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110294638 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088665846 seconds)
  done (took 1.538323607 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097628851 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113023949 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084442217 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115708887 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112477937 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097435246 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168772755 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103659591 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089827971 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099643326 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116333358 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082450058 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108201282 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08351625 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107639081 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090993236 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099873832 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089101802 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105420275 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100530031 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084767132 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113581516 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08630199 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099271588 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085066166 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11298709 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11158226 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085026935 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105020826 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111684754 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089728908 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096266382 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085192038 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103584793 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082266108 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111849712 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115113929 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087205167 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11095727 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085694604 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114507108 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097508618 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088867888 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108193041 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094617574 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102988146 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084691164 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097138396 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099764483 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086277255 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097751838 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083781167 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096988497 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091820591 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106367925 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115540733 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082723956 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104431503 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086112376 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103768273 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091574054 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104622387 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086646396 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101577412 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110129479 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088570087 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110342117 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078939742 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096417608 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081751566 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111448841 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126545492 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091388887 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103281901 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085045088 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100707141 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105786397 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085641164 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109557785 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092936249 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102813671 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109337858 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091995098 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102641974 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086122296 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111380814 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100902093 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086471985 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.10001265 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098702744 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101159386 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.10035291 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081564477 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11122482 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087536462 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102260142 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081869935 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109806929 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.08230615 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104337223 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085449949 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103584909 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112004131 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090335051 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109599962 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110627213 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091636962 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103627999 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087302268 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099150734 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086588483 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105556001 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109772718 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078569887 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105491509 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085671095 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103982418 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091423749 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100749982 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084725303 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110936526 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109547759 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083595558 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099429036 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087204769 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102938488 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088808966 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110362776 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102049366 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079955108 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098184084 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088581426 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102495803 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088726507 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108605003 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105827989 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078551244 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101053758 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089388906 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110529942 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102591147 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084902836 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108160682 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085187082 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102856465 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090217902 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105473884 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083241511 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107514811 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104801635 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080011337 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107228294 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087229661 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101555409 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088193184 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107759169 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105054985 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08618603 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101745213 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090474465 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10441958 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083200781 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102902779 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083020351 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11252844 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105333063 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080480331 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100620001 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09299861 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100714486 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084426836 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101885471 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106058345 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084599605 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100659935 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083310031 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102285029 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112588426 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087004895 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101654606 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087276176 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109903123 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082252787 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102622991 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100901045 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083129224 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101955159 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089567283 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106279412 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106564893 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084696055 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096900553 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088043423 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108095977 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081484405 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098074143 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080908746 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103873362 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106915798 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086446249 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101364106 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081106233 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101110818 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104695325 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086019192 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099924449 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080642634 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105583363 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082143671 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107330932 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100935074 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091919246 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103658138 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077600163 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104224081 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098931353 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088242986 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096375633 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080903819 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099176838 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083952246 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09941932 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085006202 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096128256 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089803192 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108703327 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100962339 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082428822 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101497436 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091461274 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102374742 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086443024 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104518996 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105737228 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09537949 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099533494 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085956193 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110346264 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100815247 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07620177 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10676501 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081435853 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099513269 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082309975 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099178931 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0852284 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110389641 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105346611 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077238185 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103710499 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08200192 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.09965347 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07839656 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109825949 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104572095 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08393172 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110218228 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084559815 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103210708 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087758752 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101503777 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102428625 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083776706 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104071457 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083415828 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102906761 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081870757 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102978206 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099728022 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081034485 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103558194 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085072454 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100154163 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088567427 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100580906 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082741946 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104893669 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101694398 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083854787 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101050129 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082928267 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104526241 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084020886 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101761081 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085500593 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09642241 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109368283 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08278092 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109937746 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083367015 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098292731 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087649981 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103309501 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106289524 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084823064 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10206652 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085717893 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101033423 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085581246 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110093916 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098795948 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091356967 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107255028 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083266441 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104287774 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082193197 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102111761 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099906664 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084021778 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102382273 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083238 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100743906 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087364628 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10475039 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083258448 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103594992 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102206659 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083050553 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102275093 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077164885 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100316063 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083320641 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101178564 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090742434 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102128738 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104032361 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08199561 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102778197 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08203107 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098828094 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090965474 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111143955 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102345863 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091056111 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101118024 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084023267 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11050547 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095129071 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081457926 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099747305 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080439925 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109369564 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083827695 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109690731 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082981234 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100498559 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098705792 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083966461 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100220115 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077590236 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099203952 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087003392 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103283623 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082021885 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101608224 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085443189 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104033497 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108670119 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083315408 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102844898 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083435488 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099129416 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081487947 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100288621 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085797253 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102987352 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100097394 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080268065 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101181873 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084700258 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102070124 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083161741 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103366323 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09856027 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101326015 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104899201 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08734509 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096117476 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086426532 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102145359 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083036961 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101412737 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105886591 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086314153 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102752616 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091049084 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101960523 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084730004 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102919201 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081964565 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102583077 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101910914 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083926173 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101053475 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084870658 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109789527 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081630906 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104623237 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102049406 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083450909 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10648012 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084637116 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103993931 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091352918 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105658368 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103470815 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090160329 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10564041 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086724574 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102889999 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084242774 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108024059 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100617111 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09172677 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102652639 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083740275 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10314405 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080937917 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101740299 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081987257 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101150313 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105976173 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084214492 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101158796 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082244067 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100219119 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084694053 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106311945 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109484315 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086522958 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105257712 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078600692 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098734322 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084702897 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099787776 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085027342 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105607067 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10825472 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086301866 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102113028 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083074952 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109123318 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088760446 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106800591 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100475041 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088296478 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102996771 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086098621 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103326051 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083882673 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104818852 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.10817575 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084682167 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101925864 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091230452 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105989506 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084251383 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104825839 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10226683 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083996664 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097653096 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085210305 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104470702 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090314538 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105168097 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084192516 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111402802 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101869479 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083925054 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107173845 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083037507 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109251668 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079156926 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102994378 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103565082 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084453219 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097467735 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083155186 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100483809 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085526214 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101381031 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078624182 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111177238 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109460734 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085516276 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101807664 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082439707 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097645002 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078202869 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101575502 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085213386 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104789052 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110962111 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082766157 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101608143 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079258903 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101955825 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086222278 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106078999 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080206135 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098096094 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08228571 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104871604 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108766322 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082220702 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101953631 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087112602 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105537355 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081693575 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106832486 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099104558 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087652755 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113197401 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085784435 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102993989 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088175915 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110400641 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102927311 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079495867 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102961259 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085863974 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10261298 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084853041 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103586553 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115931591 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08726802 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101609201 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082852895 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105204235 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082613103 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110771584 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103588897 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084928055 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108026773 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085702414 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111964948 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104854258 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089026763 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105348293 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085342222 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101874744 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083382249 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100553433 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081770919 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103907896 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10420967 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087805507 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110596536 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08240244 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112974348 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109802044 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088131818 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098670641 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082847738 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102274161 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079352408 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103886374 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081542727 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101031055 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100068922 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082490576 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102986268 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089930436 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104367084 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084997732 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10188636 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077630946 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104596675 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105236462 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087225306 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099959268 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084310721 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103172199 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089483969 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107224725 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083891949 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105406909 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104852322 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085151318 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098188018 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090429621 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102224419 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087193634 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102804752 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084564137 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104860984 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106027872 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089688396 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104176007 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086363871 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115271984 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105501853 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081388546 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099785223 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090250784 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101187615 seconds)
  done (took 58.093936055 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147571877 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08126303 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098497267 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079571384 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113569385 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099441082 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079382675 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099072635 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080103554 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101733219 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078854175 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098400319 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108961278 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123933866 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092783379 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103882459 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098332609 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081348594 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097992093 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080869429 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108338021 seconds)
  done (took 2.869347753 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107297681 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116672985 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114889517 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118907299 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089894709 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114843807 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113848197 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114843631 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098617801 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110631837 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117475428 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115028505 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090429424 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110006589 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110758482 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09312482 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118060517 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108446493 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11635118 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094026834 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112509282 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114045648 seconds)
  done (took 3.216470881 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085536725 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102095731 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08456409 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097667875 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083278546 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.0976703 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087863008 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100926815 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086922854 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10178216 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082134407 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102102627 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104537787 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078306955 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102448121 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081294606 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152756745 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106936265 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083840442 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104612436 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098058388 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085434523 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098521079 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.07977 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101732685 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087358993 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103959141 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081890864 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102635224 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081906682 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102853763 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080944675 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104703467 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102600423 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082744322 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10140202 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08305722 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102729552 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079543342 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101297831 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084125967 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.09895222 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08552209 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104495348 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081483728 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101193093 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083589972 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103893941 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098504682 seconds)
  done (took 5.448213959 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105217321 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160047365 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085500953 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143028286 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.11996549 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113348128 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088114699 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141665329 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102043559 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082456354 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122828284 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119429484 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103498046 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089521213 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110891388 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102946619 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085717409 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102840417 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108358343 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084200405 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108054642 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090435861 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120368713 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117078952 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107913356 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08289334 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103603907 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10847167 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098301641 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110179236 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.1087318 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090580548 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119933443 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107764511 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103316663 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087049636 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120838987 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104315496 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087521725 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102165019 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086690466 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109927019 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110600317 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121756607 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085437541 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108840932 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084854784 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101597192 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117244648 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087987097 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113247268 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119572273 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108113472 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085566233 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109860148 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119713053 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085191512 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102604712 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087824596 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117663191 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101620212 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088476441 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119359815 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106529146 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113114133 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099203997 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109398116 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108502545 seconds)
  done (took 8.116805672 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096261112 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111510068 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120612438 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120268739 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091910955 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111260949 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111469969 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091704956 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110968367 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116561084 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110818958 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134195433 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086342194 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115178521 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111861148 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092283643 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11077601 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110919358 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091428636 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111195556 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111157345 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120603056 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091569423 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120415366 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141742341 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105735733 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09107397 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11206521 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121872868 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111234773 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123512731 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091473491 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111834795 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120933168 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123452967 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090874093 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103259719 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110951632 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091915711 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111683466 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106052855 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101162913 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111687941 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106188748 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091492932 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110618609 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.1204308 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124280827 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114705796 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096705703 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112349439 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120530576 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111359599 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091220154 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121369452 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145808346 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121781614 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12166234 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112072083 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100344925 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120228335 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129583615 seconds)
  done (took 7.681161014 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109061669 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116542274 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118213666 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100201442 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083171208 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109041195 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082995953 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102433074 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113125978 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094495586 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117457986 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109048394 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111271691 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097503178 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109259115 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112538237 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088770073 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109757684 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114443642 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108114235 seconds)
  done (took 2.938683146 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095963995 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123761406 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085575968 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112968529 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108287759 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092209802 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106966487 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107706761 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086424645 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108132912 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097020282 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116824212 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105555671 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091458908 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117495648 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112075517 seconds)
  done (took 2.496734032 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098153454 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118031515 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12129043 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085054282 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104363425 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081126895 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105467357 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101417838 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081801759 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120268798 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085394255 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109013991 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105011548 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085495731 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101734798 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087885442 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101558929 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083165317 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105561031 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119134671 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095696825 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103855917 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106425408 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087017301 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104819497 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090439586 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10621634 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103049306 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083716636 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105208002 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085233266 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113330454 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101640957 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084568897 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103132746 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08307652 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105453305 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086039047 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108318019 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105302881 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083886903 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104471877 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085112935 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106828186 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080789309 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106042014 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101082472 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091788201 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102882348 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085564267 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105501874 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107327837 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086489482 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116528625 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088431242 seconds)
  done (took 6.250816139 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101744302 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10963252 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080499472 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10337678 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088107963 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107420009 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108540201 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088665805 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107246257 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083268016 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107114547 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089031069 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107149362 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109257025 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087253317 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109212056 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080561102 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10698628 seconds)
  done (took 2.616316254 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093272294 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105212856 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092780143 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105364941 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085106977 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10843266 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08065638 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104801603 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103161511 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086518186 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1045754 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087807576 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103783635 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087819583 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10587559 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084559712 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108311686 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103406534 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085759904 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101092216 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088076676 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103494036 seconds)
  done (took 2.969847424 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.122690696 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.130311783 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096615587 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232943056 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104159523 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131998153 seconds)
  done (took 1.658609381 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110829306 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120428909 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105704315 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107817569 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1148778 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107455104 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087929162 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108062937 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117614787 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101761153 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107674699 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11801983 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117888076 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096797694 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115754356 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114808697 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107578773 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088530702 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10680056 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12933524 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088456296 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118703745 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107185218 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087222995 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108345164 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118549147 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117241016 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122790423 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088310958 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11810945 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114080209 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087497507 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11955032 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123220029 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108884868 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098103364 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107801605 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129237478 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114611503 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097312717 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109649497 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115317026 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098459079 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114178126 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117938243 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108569864 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093893962 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107743397 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108098579 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13516581 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093688045 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117261881 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114909108 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118639585 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118412456 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136518128 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101772895 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117900455 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116167708 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122607856 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117799294 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094676548 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118268016 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122613005 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115409992 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118153466 seconds)
  done (took 8.15613521 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105473645 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127448231 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107919113 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122540507 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096964744 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109063394 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108116067 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087953585 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108974083 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107375184 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153284923 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088998628 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11887659 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117222464 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108535863 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088401195 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108453278 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118246779 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088049683 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134493987 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108489011 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117932537 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118360408 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096921218 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122932843 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115184841 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108053676 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088150609 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108102226 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108002259 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094218335 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108785896 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117463348 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087048436 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119317106 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108927652 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08718256 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11436014 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107850489 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114705533 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097030779 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128574531 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108227175 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108766077 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121889358 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088509492 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108473167 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087215813 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108477344 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107620939 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102556223 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12343684 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122185306 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118812028 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109350071 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088036323 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109144031 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10950323 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089309547 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115673521 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117995499 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108782823 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13625834 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088200079 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108963138 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119077883 seconds)
  done (took 8.038685828 seconds)
done (took 155.932308817 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100758016 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136124842 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096413713 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168720779 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107196416 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118946206 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138361021 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097839228 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107291748 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086992921 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106822767 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087764887 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173294922 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085885272 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10682117 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107686513 seconds)
  done (took 2.673432309 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201212753 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254356871 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102554883 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105800823 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088798701 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11049243 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105675458 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091615728 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110768714 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086240328 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109401661 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08749114 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105930769 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087064414 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110376103 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088401499 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107142091 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088109631 seconds)
  done (took 2.893304456 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115624858 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146673875 seconds)
  done (took 1.121019347 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121721276 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181060602 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319419272 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155673098 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106657504 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127609493 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15731663 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131565183 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197601645 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123131192 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122718793 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097911669 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140792862 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115631285 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094132037 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119209511 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142813725 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093276183 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115746527 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116359381 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116784736 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106063126 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116311515 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094412737 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18020739 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120669339 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085738909 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107245985 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116711724 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095004416 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113703947 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125927081 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098311058 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176141861 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102138334 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177300431 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098647037 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115411179 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115033787 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092679749 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118776609 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118409106 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103944143 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119250519 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085066774 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119219899 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106370555 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086148287 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115629005 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098391755 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116202096 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113751717 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155461826 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118628221 seconds)
  done (took 7.562136779 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.797999917 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156953229 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091638093 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.888517539 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138950626 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104669099 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.780723058 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135804861 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233634784 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.765018153 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134566963 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122429911 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230282038 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238191557 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.992333063 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312474443 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.674852535 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102751615 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152782551 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154023661 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119551482 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138383974 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130822647 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.460700062 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095381747 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112318848 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117975969 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099808174 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159934988 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126706315 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114802826 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179184934 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249257717 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208037333 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11647054 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089869001 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113476528 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171150088 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268667577 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217815931 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181730414 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087251619 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111866515 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121920018 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111308739 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108599834 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164355469 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174380141 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.194811849 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092791516 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122044824 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12089035 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122286716 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166695354 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121852679 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.297309692 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311244771 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112660235 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121620614 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105832266 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264741458 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123371221 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225219298 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117917258 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213234908 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111433558 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781962548 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191413945 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089955046 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119619875 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120454357 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094937476 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122537802 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171059358 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391946477 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124977522 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09336646 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112211051 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206164256 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125285132 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111225981 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163783167 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115867554 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100249859 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125868976 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12306763 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17016794 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233953875 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123658033 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120183587 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094176067 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126420627 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116700493 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213625663 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222920248 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.168814614 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.219024739 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124435552 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163944034 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190568326 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098004101 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194056757 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097957136 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127299661 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123028914 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219374366 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146504628 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101989213 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116821158 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11936913 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149391245 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12700023 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098555275 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191214475 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.484632529 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168969242 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109387875 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128649765 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099693541 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159660919 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118708005 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261227881 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122822056 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172516792 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119638132 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087916641 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121682479 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166779021 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123089692 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12146701 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103024584 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119656209 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23658994 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220214331 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12379522 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222855165 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185782761 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120332813 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174777283 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126863954 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168977895 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125510247 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12350543 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095026987 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792540039 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125096945 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098369469 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117418671 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199870869 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111845146 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10299244 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125810761 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109801156 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758128908 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128288083 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122235467 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10216883 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120291087 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121089076 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096097878 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11647981 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163847112 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232700908 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122010692 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120096304 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103836798 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183389459 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095767092 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126761416 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125611316 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12631959 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101789769 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116233027 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125191498 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171560572 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162786631 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.224671508 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.596885256 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092196087 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126799626 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2310488 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090250302 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289946024 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120368757 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.229409171 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166508325 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120933255 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.307714102 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168319122 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.200034531 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126994961 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175655539 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087454741 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118969462 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164867628 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113061508 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118339189 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162801941 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126446024 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102930001 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.961281226 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11240078 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227450817 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10983069 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.174043214 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095891334 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121694447 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298400957 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113351117 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107572417 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187235352 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093881414 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126560226 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.723786274 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104752055 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122725375 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118955289 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222617274 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165945757 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097543375 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120566695 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122264523 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164197039 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208193378 seconds)
  done (took 44.363248604 seconds)
done (took 59.462623658 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27572706 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213154677 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259083112 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168607022 seconds)
  done (took 1.866641521 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170243333 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148519982 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121562478 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107466808 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149920496 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085746779 seconds)
  done (took 1.663411469 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.355048616 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271178383 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239737198 seconds)
  done (took 1.749301018 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.287661604 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.249510263 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.355869894 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.398229347 seconds)
  done (took 2.295298016 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208880134 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132235786 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111543271 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104037324 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.19716481 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251266933 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14177806 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202702385 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122038537 seconds)
  done (took 2.404266642 seconds)
done (took 10.862793764 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.227899636 seconds)
    (2/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.303997856 seconds)
    (3/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.239125278 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.193343754 seconds)
    (5/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.160022202 seconds)
    (6/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.159486531 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.146700637 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.147297933 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.092162218 seconds)
    (10/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.235430236 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12247774 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116773065 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.125982136 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108787161 seconds)
    (15/286) benchmarking ("sort", Float32, false)...
    done (took 0.171753865 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086831833 seconds)
    (17/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.238297275 seconds)
    (18/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.122184058 seconds)
    (19/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.216980587 seconds)
    (20/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.245271633 seconds)
    (21/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09068572 seconds)
    (22/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.147878528 seconds)
    (23/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.22208914 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095098294 seconds)
    (25/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.223447687 seconds)
    (26/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.166342396 seconds)
    (27/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.120142029 seconds)
    (28/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.094520279 seconds)
    (29/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124515664 seconds)
    (30/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.098408272 seconds)
    (31/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.14226434 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.225547127 seconds)
    (33/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116890959 seconds)
    (34/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093953933 seconds)
    (35/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.155806986 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117387179 seconds)
    (37/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.101953945 seconds)
    (38/286) benchmarking ("sort", BigInt, true)...
    done (took 0.232429162 seconds)
    (39/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.217077479 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.138623407 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086698241 seconds)
    (42/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.143572528 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109206087 seconds)
    (44/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.160566066 seconds)
    (45/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126781438 seconds)
    (46/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067147472 seconds)
    (47/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.173941756 seconds)
    (48/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.139215314 seconds)
    (49/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117333064 seconds)
    (50/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097279083 seconds)
    (51/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.144407857 seconds)
    (52/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.133020086 seconds)
    (53/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.161314802 seconds)
    (54/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.223299189 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116707916 seconds)
    (56/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.197887047 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09466292 seconds)
    (58/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.122521664 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087722813 seconds)
    (60/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137684544 seconds)
    (61/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078893095 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110254406 seconds)
    (63/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101003314 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.135440244 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110541661 seconds)
    (66/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066054778 seconds)
    (67/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120155259 seconds)
    (68/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088685321 seconds)
    (69/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.185390733 seconds)
    (70/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.171679428 seconds)
    (71/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.164019574 seconds)
    (72/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.15695129 seconds)
    (73/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094405987 seconds)
    (74/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.118405846 seconds)
    (75/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.128130184 seconds)
    (76/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.20730895 seconds)
    (77/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116015825 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.08637829 seconds)
    (79/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135911881 seconds)
    (80/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066839422 seconds)
    (81/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137366926 seconds)
    (82/286) benchmarking ("sort", Int8, true)...
    done (took 0.222228222 seconds)
    (83/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066691561 seconds)
    (84/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172068037 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 0.110721393 seconds)
    (86/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094227888 seconds)
    (87/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.178336374 seconds)
    (88/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.182486007 seconds)
    (89/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098731231 seconds)
    (90/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114979817 seconds)
    (91/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106902877 seconds)
    (92/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.113403579 seconds)
    (93/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.124584965 seconds)
    (94/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088984739 seconds)
    (95/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.087331904 seconds)
    (96/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116255884 seconds)
    (97/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067533519 seconds)
    (98/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.151678822 seconds)
    (99/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.220876361 seconds)
    (100/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113477527 seconds)
    (101/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110850115 seconds)
    (102/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.254031299 seconds)
    (103/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.185785181 seconds)
    (104/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068282802 seconds)
    (105/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109356533 seconds)
    (106/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086660774 seconds)
    (107/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.076596943 seconds)
    (108/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090709075 seconds)
    (109/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093940847 seconds)
    (110/286) benchmarking ("sort", Int8, false)...
    done (took 0.187647213 seconds)
    (111/286) benchmarking ("sort", Float32, true)...
    done (took 0.232107428 seconds)
    (112/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162993476 seconds)
    (113/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119916357 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094665449 seconds)
    (115/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116795859 seconds)
    (116/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.112331421 seconds)
    (117/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.193281441 seconds)
    (118/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12501407 seconds)
    (119/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137637599 seconds)
    (120/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.118850212 seconds)
    (121/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.091282008 seconds)
    (122/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.125023939 seconds)
    (123/286) benchmarking ("sort", Float64, true)...
    done (took 0.234810062 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110617153 seconds)
    (125/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.157253041 seconds)
    (126/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.091722725 seconds)
    (127/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.124444754 seconds)
    (128/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.17222449 seconds)
    (129/286) benchmarking ("sort", Bool, false)...
    done (took 0.191905276 seconds)
    (130/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.11853206 seconds)
    (131/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094688205 seconds)
    (132/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.13354246 seconds)
    (133/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085082875 seconds)
    (134/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.144440791 seconds)
    (135/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090793953 seconds)
    (136/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111713589 seconds)
    (137/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.118563122 seconds)
    (138/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.119328315 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116841449 seconds)
    (140/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.161903453 seconds)
    (141/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117538865 seconds)
    (142/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110675674 seconds)
    (143/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113462737 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.116867514 seconds)
    (145/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087763925 seconds)
    (146/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101404445 seconds)
    (147/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088065191 seconds)
    (148/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.090796777 seconds)
    (149/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.09499072 seconds)
    (150/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066456557 seconds)
    (151/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117907478 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.08577229 seconds)
    (153/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.157555439 seconds)
    (154/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.113881575 seconds)
    (155/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076225872 seconds)
    (156/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119515665 seconds)
    (157/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.088524917 seconds)
    (158/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109806317 seconds)
    (159/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095407297 seconds)
    (160/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119308312 seconds)
    (161/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.12876265 seconds)
    (162/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.090778361 seconds)
    (163/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111421411 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.110637944 seconds)
    (165/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.151671013 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.097515932 seconds)
    (167/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118826952 seconds)
    (168/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.16330794 seconds)
    (169/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.092318286 seconds)
    (170/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090840816 seconds)
    (171/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135083343 seconds)
    (172/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.174020585 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087518228 seconds)
    (174/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.120836487 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093672392 seconds)
    (176/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.09035946 seconds)
    (177/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148500457 seconds)
    (178/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.09193355 seconds)
    (179/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094090049 seconds)
    (180/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091497451 seconds)
    (181/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067536721 seconds)
    (182/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090078781 seconds)
    (183/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.09055797 seconds)
    (184/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182317697 seconds)
    (185/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.169148725 seconds)
    (186/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.091695698 seconds)
    (187/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067625015 seconds)
    (188/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.122125403 seconds)
    (189/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.163229726 seconds)
    (190/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.091702946 seconds)
    (191/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094201921 seconds)
    (192/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.108632179 seconds)
    (193/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069054925 seconds)
    (194/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067775591 seconds)
    (195/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.109699078 seconds)
    (196/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.067414482 seconds)
    (197/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120017966 seconds)
    (198/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067609388 seconds)
    (199/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118450727 seconds)
    (200/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078253625 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10912856 seconds)
    (202/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088980555 seconds)
    (203/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.092364597 seconds)
    (204/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.150129217 seconds)
    (205/286) benchmarking ("sort", BigInt, false)...
    done (took 0.222345443 seconds)
    (206/286) benchmarking ("sort", Bool, true)...
    done (took 0.224604 seconds)
    (207/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.144064646 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086927623 seconds)
    (209/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110178141 seconds)
    (210/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.120587703 seconds)
    (211/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.136522974 seconds)
    (212/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.106052947 seconds)
    (213/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094416852 seconds)
    (214/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.076122342 seconds)
    (215/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.32401885 seconds)
    (216/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096326558 seconds)
    (217/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118578698 seconds)
    (218/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.120268737 seconds)
    (219/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.091007004 seconds)
    (220/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.077137895 seconds)
    (221/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109534962 seconds)
    (222/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067325 seconds)
    (223/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.111969477 seconds)
    (224/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067538303 seconds)
    (225/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.184005088 seconds)
    (226/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066668944 seconds)
    (227/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115933086 seconds)
    (228/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096613494 seconds)
    (229/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.09080617 seconds)
    (230/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06703865 seconds)
    (231/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086810818 seconds)
    (232/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108955578 seconds)
    (233/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.162990536 seconds)
    (234/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093284927 seconds)
    (235/286) benchmarking ("sort", Float64, false)...
    done (took 0.1725265 seconds)
    (236/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067277112 seconds)
    (237/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111891717 seconds)
    (238/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.067299446 seconds)
    (239/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.117991595 seconds)
    (240/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.076072308 seconds)
    (241/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124181174 seconds)
    (242/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086853169 seconds)
    (243/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.100269594 seconds)
    (244/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.112073102 seconds)
    (245/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.17467259 seconds)
    (246/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092021864 seconds)
    (247/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.11099723 seconds)
    (248/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086457787 seconds)
    (249/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111895852 seconds)
    (250/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067733198 seconds)
    (251/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.090620196 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086963731 seconds)
    (253/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116452777 seconds)
    (254/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087023535 seconds)
    (255/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090398698 seconds)
    (256/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095482602 seconds)
    (257/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.110695338 seconds)
    (258/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093819384 seconds)
    (259/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.16503074 seconds)
    (260/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066683484 seconds)
    (261/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.092335505 seconds)
    (262/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067562342 seconds)
    (263/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067233892 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.11034576 seconds)
    (265/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068117886 seconds)
    (266/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.092830531 seconds)
    (267/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101079773 seconds)
    (268/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.101919194 seconds)
    (269/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066475967 seconds)
    (270/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068615514 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117689661 seconds)
    (272/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086409665 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.10926166 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095640615 seconds)
    (275/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116788604 seconds)
    (276/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.077418874 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109559144 seconds)
    (278/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067602762 seconds)
    (279/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.173524656 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092988318 seconds)
    (281/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090723829 seconds)
    (282/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.067134515 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093536352 seconds)
    (284/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.13645009 seconds)
    (285/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067451958 seconds)
    (286/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112992789 seconds)
  done (took 36.112038562 seconds)
done (took 37.000482298 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102818814 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148340955 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096250367 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135920579 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123369269 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09157066 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11850126 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098036236 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124132455 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125530593 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09845003 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093325139 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096760957 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12093081 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096818429 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138126457 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123698604 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094355923 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118880474 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086019987 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119268456 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088188893 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111886829 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069891563 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122845135 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093628436 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116969686 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120428191 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086170998 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110597898 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090853253 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117705223 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086813872 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124207034 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093336599 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118975963 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096390519 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120731142 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112648953 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08684126 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11823304 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087223672 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117735392 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095040512 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115864333 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091976653 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118555994 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099224319 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138769999 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1156377 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095682476 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122314667 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096749669 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118221895 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091081334 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119925206 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09226522 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139288154 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120020925 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09241648 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118705878 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094791436 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117095338 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094843043 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119216536 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121530448 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097582607 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116045882 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09732501 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117054983 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086459631 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118688857 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090218461 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110802414 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096365262 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121211127 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085658024 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116311897 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117947833 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091786539 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109800753 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08950219 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112659634 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093748392 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11255091 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069962767 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115015818 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09297807 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.10991763 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096519527 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116737188 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094554424 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112957425 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099004698 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110943583 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092343645 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111664161 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087748407 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11397369 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091279201 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110680904 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090089161 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119646497 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089728454 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117406354 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124000653 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087381102 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117899801 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087993255 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11102682 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102242419 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121437719 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08698117 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116798914 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087254369 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119316785 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086624691 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111315268 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087274368 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111352848 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093222949 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111035552 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113535121 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094479169 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124875295 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086898386 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115301713 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090164196 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111064864 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092927371 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111574802 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087782399 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11363168 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07819517 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114500893 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088056013 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118771722 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090203029 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119464877 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089260454 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120713533 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09277682 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117610258 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092399679 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111303936 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075394659 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116801147 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089970363 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113742375 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087709307 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113987286 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087656032 seconds)
done (took 16.96572868 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090282318 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184695695 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152411078 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142041356 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10781508 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112172914 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12208206 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.11847495 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11383334 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142935544 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111614994 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132111718 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148941941 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087574313 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112974172 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091863725 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113974385 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102418322 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14608284 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132815086 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164512722 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086994857 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146952178 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135807447 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121705046 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115182828 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112589475 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091897885 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115277385 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103423251 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132479426 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115924214 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088752254 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134918773 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105173493 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120591263 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087833206 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119571871 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08823241 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112329006 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141322356 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134077999 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093268185 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118496135 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091768118 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115297707 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089266217 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12134599 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098661704 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117316338 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126498757 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155567185 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091010522 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12262344 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087240304 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123067604 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12163919 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090535338 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112372552 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090811463 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112233859 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091846893 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127068694 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142423136 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091954077 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122659212 seconds)
  done (took 8.634219057 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106788731 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140064569 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106195514 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131155149 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111690696 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088623949 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112860616 seconds)
  done (took 1.746531609 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090803613 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134874728 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111737262 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136767309 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133628188 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112589303 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124150605 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08932935 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131706509 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090022858 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134764973 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151039564 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09073922 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121095717 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138524422 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08881724 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137887084 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088921446 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118176157 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112386218 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116729575 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135717362 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091205185 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114728181 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103224501 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114740602 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162206432 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094711215 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115253628 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092997485 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112698732 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151757162 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103199889 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125500082 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088712362 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130625013 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129177876 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086763344 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126549841 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094765755 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128492876 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089999944 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115011585 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088153179 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118760909 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099339683 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118822642 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089597274 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117642277 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134894941 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090718505 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.145514261 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089395385 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118237538 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090529601 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120275191 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099382727 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114846204 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134081483 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090379585 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132708486 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105667727 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128014344 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130849481 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092061223 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128761959 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103805289 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116750036 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090953871 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118139309 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106205308 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112902393 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.09086785 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125031055 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117285386 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112482199 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137706109 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09121279 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125418287 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089095705 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115991679 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114933504 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11257506 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119333591 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090132617 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118911002 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092461904 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11272643 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088753582 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117509211 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087591554 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116582994 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095372553 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115470918 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092200084 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131295357 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115298456 seconds)
  done (took 11.869756185 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094367444 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115192141 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091953961 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115353965 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090245337 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115478712 seconds)
  done (took 1.583265179 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118676566 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118469097 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10480631 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121666976 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156783836 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104434518 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13069576 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12362857 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10835104 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127090722 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129906209 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106270346 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136549981 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121800558 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104810537 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120607915 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104774112 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126851727 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128167795 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097152311 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137770252 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121369918 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097479945 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132736095 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117974389 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096028551 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125760521 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102852104 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128310993 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124444474 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096804729 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118646569 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096499562 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125650573 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130007548 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096156244 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121513481 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119506249 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100959706 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117798324 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104737658 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122183746 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126785154 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094299839 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124270588 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121775452 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093843835 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126132209 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.131974265 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094589476 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121273569 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095685991 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121297268 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094273578 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12209572 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124567519 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094424879 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130380664 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122464065 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097016823 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118888482 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094431187 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124332971 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118704754 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105816899 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119954091 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122080402 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097229649 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123045886 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096097716 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119426028 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093767382 seconds)
  done (took 9.261091389 seconds)
done (took 34.04371152 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.694872886 seconds)
  done (took 1.651717785 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.829593145 seconds)
  done (took 1.791246542 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.896132304 seconds)
  done (took 17.891162861 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.497017711 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.585755075 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.012092943 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179950363 seconds)
  done (took 3.236471467 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.951691042 seconds)
  done (took 1.935176494 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284947182 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236787662 seconds)
  done (took 1.490585142 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.799140819 seconds)
  done (took 1.777667115 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.363020419 seconds)
  done (took 2.334541318 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329868047 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184638393 seconds)
  done (took 1.489990909 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.549378455 seconds)
  done (took 1.525849686 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.378345563 seconds)
  done (took 11.359097121 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269687079 seconds)
  done (took 1.261675053 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302449895 seconds)
  done (took 1.283192647 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.54323781 seconds)
  done (took 4.527582686 seconds)
done (took 54.529697648 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101298041 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12734049 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102046431 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124770305 seconds)
  done (took 1.430880032 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102912356 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121845547 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101705443 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121688337 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127429608 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097202471 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123730728 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101942428 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120858879 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09690496 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121442998 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120652524 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099441707 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123626458 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094491394 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124774904 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100081482 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122611729 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124422488 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097095957 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119950459 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098211458 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125268069 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094462565 seconds)
  done (took 3.668703688 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101859348 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119135927 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096789705 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118552941 seconds)
  done (took 1.429159985 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10151182 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131575925 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106347311 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125934975 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132481105 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106128859 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117704392 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092684646 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119897291 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099829 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116617535 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140139523 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.10731801 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125297128 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103013712 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114621995 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091808443 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132102561 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125617077 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101879372 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118913605 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100464987 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.1160609 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109156119 seconds)
  done (took 3.723655112 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172731126 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127788121 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139158513 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096761161 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160906959 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141125551 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088523305 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141234432 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088780679 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131834829 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118548078 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133451468 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129833337 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088381504 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114622266 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087434088 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129472225 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128471957 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092002431 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127794955 seconds)
  done (took 3.435743346 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09977306 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117794759 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088555702 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117399291 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099467966 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121572977 seconds)
  done (took 1.638209427 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092564543 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115138512 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090915079 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114941672 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094419173 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115319261 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088969044 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115601486 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089974207 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115278927 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089913696 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114084827 seconds)
  done (took 2.230256353 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.509294642 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.12008124 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121225036 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.08920116 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12506162 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089291052 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130235609 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09247523 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142360792 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089267362 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11642758 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091267475 seconds)
  done (took 2.708751544 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238488266 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126342045 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2861273 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368655346 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156814279 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16612119 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279120081 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161966625 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19864027 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150675965 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232117387 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197163914 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152597564 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192618379 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13916764 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145391504 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189592259 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252915036 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153424808 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211810646 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208261931 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168134732 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180367185 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151735081 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112353611 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194126795 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094836577 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130070578 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209229637 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208183657 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189937739 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161448552 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148237062 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238573043 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250618715 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196203893 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280776866 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135337089 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.142461065 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166786348 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265593555 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139931442 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233473928 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156621303 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104955386 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221834403 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166453287 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176662355 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146313693 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140266478 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199250577 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241626854 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193897387 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139870994 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300251589 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149683278 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157695526 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190588454 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254005039 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226792621 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190870365 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121212614 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189691378 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191783498 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212493765 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.126031347 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.210410322 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148231919 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184363723 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189728831 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167029807 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205925683 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182382088 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139603825 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171165818 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173525313 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173751507 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259134586 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18600941 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122671644 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169563088 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150799012 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104755983 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195987821 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126223923 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216439035 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1446737 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164612796 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209283336 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160345776 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162616144 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221916479 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184657186 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148734244 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084651632 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154155275 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156406347 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176514963 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140365567 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158929273 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158086966 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130884392 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169536848 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097783054 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185159405 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118665976 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17408853 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184927164 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127385895 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161812644 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154377277 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150588683 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178880892 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200565768 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140877526 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132891113 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209482383 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178864978 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.14183458 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177709999 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229062489 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117454236 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149691335 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227560866 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218152942 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140808125 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229425439 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154157349 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109771714 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133251237 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182677706 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156957956 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161938997 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133983364 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184595283 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206181144 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126392913 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139641722 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197339876 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134505804 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131644374 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155970314 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121002361 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.13938653 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14323116 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146863662 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176047205 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180837812 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155725237 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166846762 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150918255 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250730976 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140296797 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150830808 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122029742 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122374154 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193599542 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224800284 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104382377 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233450599 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172997168 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200303184 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198094794 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109166388 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179175414 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132306023 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093637047 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220677083 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168926792 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162796903 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196887189 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223188305 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181068968 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184120324 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165536228 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201971548 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138265904 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184662236 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111316738 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161430594 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158705773 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124216836 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.112060153 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134958393 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150396954 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143424006 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133505445 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199778647 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17101728 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216690288 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159584733 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122925275 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207778582 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102862585 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177696619 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.207102126 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119389925 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.227191775 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193780213 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212986846 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117721425 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228681099 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094001931 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1259766 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142683467 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171364721 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133583416 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108911457 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162888347 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182101696 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207328471 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172177624 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208492395 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202077661 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191282041 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095958054 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169569846 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18389919 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203093655 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.15371508 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143137908 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151936834 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179177361 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155212253 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255927503 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170730244 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177702785 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205877062 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152538383 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132940357 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150884167 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179958373 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154172364 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176222463 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148326078 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139093773 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161404244 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104282765 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160324689 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214455655 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163401657 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188867997 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150164354 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186921308 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128983409 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16285997 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160962261 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166228863 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082033869 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202682095 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20410812 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147605003 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167135383 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189733831 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132452366 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306388886 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23706804 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196640833 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138260007 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155910081 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162358291 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16384326 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171346085 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180726599 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159741682 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189413456 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160300393 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136466148 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111863994 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150377602 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153612482 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134061319 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14958339 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178699777 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138079488 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190423512 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156546613 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160870268 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172997438 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150441923 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116509908 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150641553 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243565844 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184655053 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240249642 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.15085168 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179397871 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206655213 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126754375 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104469403 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134074059 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178817658 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137110467 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191035763 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.214527599 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199525894 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180577504 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206429045 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112082346 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121342952 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158186154 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169072075 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202861495 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148908203 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147284998 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230874387 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110128603 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131966093 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167129021 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292480974 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146823037 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196352715 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108547275 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278699805 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100723185 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132545688 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164201722 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235351828 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109275321 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178413854 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174167922 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16231188 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164672922 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150244799 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191150332 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239229791 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200648976 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209859786 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105662645 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158190732 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175160815 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22025717 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156344549 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111861557 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233928016 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196248019 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195459626 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142798516 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169313808 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169402325 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159056241 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215398724 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108414469 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235925895 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134716295 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192895192 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152855133 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139135595 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177545994 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189883984 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141408545 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187576263 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210646467 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108248396 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134142991 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165992723 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178094351 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153544217 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129011143 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181151862 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127108899 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198240014 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261639405 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133714605 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15543766 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120053223 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13735106 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155036606 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159508 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140785927 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140850446 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228676274 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13547548 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191959585 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22790663 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171327512 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174798629 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145439835 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694187122 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103754347 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223951986 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120126846 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235826717 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152170045 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174222599 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160337599 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169367034 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194619003 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16115617 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231394064 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220196031 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179750842 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133117189 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159027403 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155266063 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144910554 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126713107 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168479558 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16086213 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145515816 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178394559 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190877904 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107418923 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14064816 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199597912 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149493915 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186305602 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180852991 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141305408 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173799174 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216823879 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106163513 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.208149042 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209576845 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143575895 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149171033 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134195562 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149025751 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233894894 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125927085 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187986214 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211316964 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131455863 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196954961 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119964505 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222447886 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159106118 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185616824 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143969078 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15965276 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158239635 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13833343 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103187191 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156768877 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166436268 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150935945 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160186484 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165021142 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195235334 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095633979 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145294466 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311817462 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178804931 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215895504 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137723497 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135481516 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162194239 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122234464 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.204890918 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179532842 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135810796 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107880119 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138487886 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130258837 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135667865 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157879878 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194318867 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165591562 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235478887 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109627889 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278674251 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140871066 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15554755 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089859587 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133003923 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151754481 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146341043 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155725398 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193527919 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264109466 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.151418551 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107026415 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149785471 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125959007 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108762741 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164975873 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165522258 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17759944 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145854475 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109703223 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1559526 seconds)
  done (took 82.712934187 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177969073 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13352189 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148116415 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202701917 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176842245 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270122536 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209767094 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25523143 seconds)
  done (took 2.650503339 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.097183496 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146609891 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15748598 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134292478 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092058588 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119710474 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343654859 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133939297 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116489355 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121189931 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.17487513 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093764248 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.549586154 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091695626 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119850795 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108626853 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091929689 seconds)
  done (took 3.761946115 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.221267998 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.498301126 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.024662634 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194596144 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160306701 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.118600199 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.708021523 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095161352 seconds)
  done (took 12.103826252 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.117432261 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13705118 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123225444 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153769709 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140940637 seconds)
  done (took 1.766657191 seconds)
done (took 124.240107716 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099644251 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127628206 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097984223 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131057769 seconds)
  done (took 1.528586287 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09646424 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070763929 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101220447 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074787513 seconds)
  done (took 1.42596811 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.190172828 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.168761654 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40212058 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071820178 seconds)
  done (took 1.591597317 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117691211 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132767737 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104979199 seconds)
  done (took 1.448445821 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10976176 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130241652 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103025852 seconds)
  done (took 1.435092836 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.1080786 seconds)
  done (took 1.19952387 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.111738613 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137534743 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108668643 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137316764 seconds)
  done (took 1.587377394 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.10012158 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127316531 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109567759 seconds)
  done (took 1.426633275 seconds)
done (took 13.084671023 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.106107493 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.417866524 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384803224 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145317544 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721741188 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38103668 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.039734175 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14680632 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166162175 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094049808 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139525332 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671856893 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.030598845 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373707164 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.98887946 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371839885 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677294059 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121381388 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120227281 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094450494 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.023156194 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0920644 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122515708 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092432371 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705000328 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425358846 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094762235 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.372447134 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093131017 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125956964 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383181775 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122827788 seconds)
  done (took 16.923728246 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097278628 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173766934 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098273428 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137755533 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12360078 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094810945 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126942651 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094566033 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179657696 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122866581 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110660399 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121410626 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125020885 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096048667 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141726456 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092621902 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125673721 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093622835 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121983937 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.1209901 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112146617 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120687111 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094315667 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121726203 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09397265 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135567995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122171888 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093200301 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120660988 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099044061 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127926321 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095312776 seconds)
  done (took 4.829650219 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142270275 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182136818 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128492608 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126449801 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16810827 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124136711 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199191042 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117235626 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182247265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123050282 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139571826 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092877053 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156514129 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121732955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114492477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121486263 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098104901 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122142303 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092346886 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123373833 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140185586 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093249622 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12237202 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09366121 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123699977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108836741 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123681547 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120672468 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09331644 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126311647 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099768908 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123776707 seconds)
  done (took 5.143756561 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099660711 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126180832 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109820819 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138505103 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.0963869 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125836965 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097151223 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124511315 seconds)
  done (took 2.0150959 seconds)
done (took 30.005899719 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114861823 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127063637 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107309765 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13493001 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103605401 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131908438 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091488303 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134312658 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133619915 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102529032 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136994741 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093350427 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12319981 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091851477 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135378837 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098000505 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132593031 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101808472 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134114572 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132324132 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095177747 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133384683 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103463004 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133139096 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104741355 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13383999 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137133869 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099968221 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122574275 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094045225 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124680009 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103808311 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124221322 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10554219 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126999162 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09652723 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123750539 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094181543 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133296246 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132719597 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101319812 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133569624 seconds)
  done (took 6.006768584 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.110420711 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139949937 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105060165 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081557935 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116806666 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080238391 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137413551 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079386401 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110064452 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10764052 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074261094 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10570175 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079063623 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101666052 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077870423 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075514301 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108320214 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076450045 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076365149 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10616311 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079822907 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072427029 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108194863 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079216464 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075211638 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110029054 seconds)
  done (took 3.577759719 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102852016 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134618946 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114359085 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184964114 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161717575 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100436995 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132527742 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.14076706 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109460215 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120399143 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09718143 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150276725 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110421996 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130179875 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092077263 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136932491 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135486969 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094723001 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128602544 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112690159 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138701064 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103034418 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140892692 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133774739 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092237694 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123289626 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097402821 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134861822 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097859663 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131458566 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097026826 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124637018 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122826455 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104861162 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125878342 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093995506 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142259346 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102535833 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.13072076 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092328997 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129275038 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122041705 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114885436 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161980027 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091457054 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129118728 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095849474 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133525699 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121340916 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111165216 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131096774 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091813352 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125627275 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091375521 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121798908 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106648205 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124175131 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094757637 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131185851 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126737571 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105799295 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125057493 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109494282 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121960959 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100522191 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121584805 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092781061 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121146492 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143338271 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094916169 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162282599 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093223585 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124027689 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101783931 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130125052 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128792083 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093927708 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137519656 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102548469 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126021741 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102252602 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126158819 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095814608 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13977031 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123373126 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095823815 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123251876 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100802464 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124155955 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094582251 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136801043 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092625881 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125617576 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110800553 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12220234 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122974597 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.101199103 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127509195 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092348334 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136115599 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098431958 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123355057 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.10287367 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122218797 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124150572 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104005503 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126451782 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092092537 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127018564 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099859921 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123668238 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09447901 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126131718 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094570753 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132670524 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128624542 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098563278 seconds)
  done (took 14.839964155 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230943899 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215360289 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206199298 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.292824453 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13529367 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114877433 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214648213 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156303159 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125084453 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160798979 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17143899 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181565371 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170662061 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183781937 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170132485 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.094370029 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143195831 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134141245 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.246057833 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.25892914 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144939663 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100869313 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161914408 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160344681 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137912159 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132597456 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110477953 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135082609 seconds)
  done (took 5.809624739 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.112139837 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155234916 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098373892 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145260805 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148858436 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093042027 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128038075 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094800794 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135165771 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135555123 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092792385 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129480502 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099705626 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132297023 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123988072 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103902875 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132067081 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095102539 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126042174 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097695942 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134022023 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10169361 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127493338 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121818777 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103255294 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122060816 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087096229 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143178296 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122513323 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116169586 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12190755 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101551368 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136999446 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093984407 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123695709 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095363628 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12564704 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095437826 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126114726 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091785005 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123682946 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07812426 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123231353 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13653568 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100258404 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080417727 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130427987 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12844532 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095438682 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121193604 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096681315 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12661345 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097746209 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13130219 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096155717 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124155491 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097161927 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116318224 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099926184 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125985974 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085024599 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121738594 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098947798 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11797259 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102138029 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129085769 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092231479 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12549506 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097585883 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129795559 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096265602 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130125593 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091110977 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126225215 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095655812 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128661475 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125197023 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092725888 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122527041 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094445078 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075291676 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123620593 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07372952 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127210179 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092792469 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122379179 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095341556 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130735319 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137941201 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095945342 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132162568 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094708871 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123082078 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096822141 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113520752 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097132609 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141858819 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.1420637 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094681983 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122022882 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10920835 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126602858 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093062927 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106771453 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102667501 seconds)
  done (took 12.999761192 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.134704065 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154000178 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125647044 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112377813 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156996014 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158384175 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100980176 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130935607 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09536778 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142965891 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094027 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132064307 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093758609 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137706503 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157346067 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103891897 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125900151 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108304182 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12876866 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169898446 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111548586 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142899083 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110534468 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125174188 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129134382 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110294472 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162233262 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107195019 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136868419 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142244225 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108637924 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161099642 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143400881 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098669176 seconds)
  done (took 5.488645154 seconds)
done (took 49.820045883 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.225263409 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.421801385 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.197862063 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.148836242 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.236037954 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.228756883 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.227972972 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.198757882 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.787159186 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.203979724 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.440039495 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.760818057 seconds)
done (took 60.202177734 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.292257157 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333033292 seconds)
    (2/2) benchmarking "String"...
    done (took 1.46431769 seconds)
  done (took 3.92248565 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.718498868 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.152263008 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.460627389 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.200459398 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.200282545 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.488908275 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.905268672 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.574821972 seconds)
  done (took 28.106346613 seconds)
done (took 42.159929067 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.206111236 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.239047161 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.236807995 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.176360196 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.309943454 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.244806544 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.513344713 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.215988942 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.216330299 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.178763417 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.21762797 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.202377658 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.218169872 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.519580504 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.205032853 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.202657765 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.245178754 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.70294765 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.608774246 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.19751515 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.21351649 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.244546543 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.223299759 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.207313252 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.274656293 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.203947135 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.199711131 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.212035816 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.800362202 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.20346064 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.209355025 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.700856563 seconds)
  done (took 190.673971563 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.201044661 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.20116425 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.290296373 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.247650783 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.63678485 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.401524216 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.342756181 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.721027101 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.220773477 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.207750258 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.456091605 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.204324541 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.534193171 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.174869087 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.233889182 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.269514951 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.505918843 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.524883192 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.242381942 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.355620369 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.20748756 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.447217177 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.362625404 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.409924983 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.23705016 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.242624717 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.205652202 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.218455598 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.395802765 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.435325819 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.26504296 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.251283135 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.825938432 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.056779902 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.206854637 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.219533406 seconds)
  done (took 150.087792744 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.204199973 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.204710198 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20547867 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.239554013 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.206069055 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.786530492 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788377209 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.711668471 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.531564386 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.602024544 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.508759722 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.206221669 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302497886 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.214946425 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.202891452 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.222627261 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.250736097 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202320348 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207570309 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.789042984 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.218545346 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.252954574 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.382668767 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.21681052 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238708374 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.597966247 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201706541 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240588109 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.541187903 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.251169003 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20195682 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.602377717 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.381824397 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320808263 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206736785 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23989371 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.20684098 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.492291153 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207113759 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.206305686 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.206384985 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.207627735 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.208616232 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.90646297 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.208442126 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.791100199 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209096426 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.164538914 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.203153509 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.207951996 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.633591887 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.208690389 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.894821582 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.224809486 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.208470803 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.210283792 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.207224779 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208085782 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.242588524 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.635621003 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.304930228 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.227131009 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.211229042 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241664163 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.208761268 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.277001793 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205951706 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.255984608 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.266217177 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.32999429 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793202643 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210034218 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310077783 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326305713 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.204331908 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.208578978 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209409429 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.208884436 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.321414791 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.205509854 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.620956833 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.380769807 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.222353002 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.613848491 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.310253967 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.209176479 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.61280102 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.209756815 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.210809901 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.960728142 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303917343 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.206864435 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.210237044 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208873391 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.211088124 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.630356411 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.79022869 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.485546982 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.211321194 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.728915841 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.212385815 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.64352022 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.765477116 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.896503155 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.212475072 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325187711 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.384903397 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.225315926 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.210888487 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.596630563 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.208274726 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.27082908 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.20757644 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.611741643 seconds)
  done (took 366.554320196 seconds)
done (took 708.438003987 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.811919374 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.804915172 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.924414608 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.793253198 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.758727881 seconds)
  done (took 10.225807736 seconds)
done (took 11.356327262 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.40505494 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.403567355 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275410526 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.405324856 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244444611 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.423552087 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.381034942 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.232223463 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.316318996 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.297790813 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.316364483 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.269249586 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.246753354 seconds)
  done (took 18.350246605 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.5255459 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.524167011 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274829177 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.531727189 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250146242 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.530612551 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.412401132 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.424974509 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.428472261 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244661078 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2272097 seconds)
  done (took 16.510983874 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.533887586 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.545392249 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278225576 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.544977689 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252250123 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.53739073 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417137905 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.426751103 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427356817 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241885799 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227361008 seconds)
  done (took 16.568213961 seconds)
done (took 52.561037341 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.222742417 seconds)
  done (took 2.357647978 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.255253231 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.420912001 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.239959208 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.229888054 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.22434737 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.227530348 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.230321255 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.225481294 seconds)
  done (took 11.190141231 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.223055867 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.224286873 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.221034074 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.223465784 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.221259072 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.221120645 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.223518901 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.220673569 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.219800824 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.22394764 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.223569855 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.220997713 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.220346186 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.224209533 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.224883294 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.22198575 seconds)
  done (took 20.696414462 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.223403519 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.222047633 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.221377342 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.221214792 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.221409737 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.221367653 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.222803319 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.221610989 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.22233993 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.222028285 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.222965068 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.222176885 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.222184433 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.22156567 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.221980824 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.222690997 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.22159142 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.222240021 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.226412921 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.222368553 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.223184507 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.221293665 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.222773479 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.223002051 seconds)
  done (took 30.476448885 seconds)
done (took 65.853413392 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.855186642 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.976059846 seconds)
  done (took 6.96930509 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.225024477 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.225323681 seconds)
  done (took 3.590519322 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.225729499 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.224681152 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.22559227 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.224841728 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.227351568 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.225048309 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.224812696 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.226651099 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224790972 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.225418443 seconds)
  done (took 13.393650296 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.225124201 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.225818926 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.222821734 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.225572975 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.225884598 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.223763558 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.226556773 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.226113835 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.225166254 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.222835806 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.226869708 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.224383775 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.226808078 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.224051104 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.226970804 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.224208792 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.22493099 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.225565078 seconds)
  done (took 23.193486855 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.228481439 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.228339583 seconds)
  done (took 3.597630952 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.224622666 seconds)
    (2/7) benchmarking "second"...
    done (took 1.225369504 seconds)
    (3/7) benchmarking "month"...
    done (took 1.224357403 seconds)
    (4/7) benchmarking "year"...
    done (took 1.225227849 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.226067358 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.22534191 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.225867272 seconds)
  done (took 9.718859409 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.229249422 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.417200329 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.507416557 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.850920771 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.229544765 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.231552827 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.085693878 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.231551586 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.234330353 seconds)
  done (took 14.159355249 seconds)
done (took 75.758645809 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.275414123 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.23695641 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.541785712 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.223283596 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.23480716 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.520961553 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.227779085 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.346907448 seconds)
done (took 37.747444698 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.232405122 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.212035602 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.005359366 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.203524879 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.297266329 seconds)
  done (took 18.860509421 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.279829446 seconds)
    (2/2) benchmarking "read"...
    done (took 1.562077591 seconds)
  done (took 4.982740503 seconds)
done (took 31.214582035 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227603895 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.22805489 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.225593351 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.229629108 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.226877344 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.22496859 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.226168012 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.227769865 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.224820937 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.22815145 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.227585634 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227803522 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224081669 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225055615 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229881971 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.224325326 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.22556153 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223598842 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.228564203 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.227534636 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224402271 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228514554 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.226465048 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.224988382 seconds)
  done (took 30.578650934 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.22712548 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.225571337 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.22786641 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.227673105 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.224702023 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.229474627 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.227487113 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.223584014 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.227564596 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.226383053 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224922814 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.223919885 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.228451888 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.225460529 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227611556 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.224435125 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.228035354 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224363924 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227774461 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.224755657 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.227581914 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225839748 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.224587896 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227076871 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.226188178 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223780732 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.226172964 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.225053842 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22737098 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.225607926 seconds)
  done (took 37.927171147 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.232972892 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.236686735 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.226897903 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.227516805 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.22767023 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.226858242 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.227797173 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.226083606 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.227753859 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.226582947 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.226819105 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.227038476 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.227681421 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.227401651 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.227859307 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.227589843 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.228600166 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.227907954 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.228101113 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.228541046 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.228987098 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.228601803 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.228786103 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.22914418 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.229336684 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.228351396 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.228835516 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.229147324 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.229190224 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.229570974 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.229118287 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.229243947 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.229274103 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.22840926 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.229020785 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.229396862 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.23480124 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.237817587 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.229073914 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.230822878 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.231618739 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.231471609 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.230221026 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.230810335 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.229928438 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.230679072 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.23036289 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.23043665 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.231601725 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.230977657 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.230589737 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.230914632 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.230873658 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.229945701 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.231951549 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.231178817 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.229838169 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.230260921 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.231282311 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.232006464 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.231119161 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.231422779 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.231351634 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.231618146 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.233432508 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.232030058 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.232593447 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.233179408 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.231840507 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.231728547 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.23260866 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.232456232 seconds)
  done (took 89.705806962 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.231741086 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.227871265 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.228259908 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228651882 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229959456 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.230443298 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.228617401 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233503663 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229600029 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.232002735 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231054493 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.229626871 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230886415 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.232624937 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232564341 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.22825755 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.231733371 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231192445 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.232095589 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.233763852 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233706742 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.229849677 seconds)
  done (took 28.224036776 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232279116 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235627773 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.228465872 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232810579 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232199829 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.234762663 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.234065389 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235306808 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234757631 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230477241 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230921865 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234026562 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230034163 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230763985 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230640239 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233973094 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234132112 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232769128 seconds)
  done (took 23.33381923 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.230628141 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.232399089 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.234077462 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.230158134 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.230710753 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23440227 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232268833 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.233786498 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.234834699 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.230246866 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.233454695 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236008052 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.234024228 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231584262 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234638946 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232870712 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.233055366 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233145011 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235142469 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232333178 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232571291 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235500635 seconds)
  done (took 28.275460163 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234621171 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.235235879 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234380201 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.232862709 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.232683216 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.235116801 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.235385246 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.232895808 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.236205444 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.234796866 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233317762 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.235851919 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.235871865 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.233565829 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.232661101 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234584615 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.236205071 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.234240402 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236207101 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.232928534 seconds)
  done (took 25.838864155 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236975126 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23678043 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.238900286 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236691295 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236295514 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.235810724 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236070172 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.236199873 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237692857 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.237541383 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.238788204 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238675407 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237175636 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239142319 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237746278 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237527835 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237880628 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237950789 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.241999538 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23934062 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.239333214 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23808971 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238827555 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.239852715 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.237425224 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237995088 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236990122 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.236608705 seconds)
  done (took 35.81128696 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239174702 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237941654 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.235827989 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.235861904 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.235420456 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.236300004 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.236967259 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.235446532 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.238048208 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234774104 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.239978987 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.238971514 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239114913 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.238245649 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.242028864 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.237976071 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239287192 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.236810203 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235864011 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234440454 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.238658024 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23785008 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.239900796 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235824688 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235116813 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.240071012 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236994536 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235708456 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238831577 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235441469 seconds)
  done (took 38.274534344 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.25596311 seconds)
    (2/2) benchmarking "in"...
    done (took 1.256454173 seconds)
  done (took 3.66269719 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.235018148 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239030659 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.238351747 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236443608 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.237254556 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238946934 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.239170994 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235578077 seconds)
  done (took 11.050061626 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.238558405 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.23826726 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23818273 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.240015299 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.238204927 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23602907 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244710798 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.259757546 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.237892598 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.239187555 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.245094372 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.247733287 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.239951129 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238283842 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.2385368 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239755849 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.239054399 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.239153124 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.237045551 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.239765162 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239493808 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240248835 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241308161 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.236422125 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.2410987 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.250638235 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.26123147 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.241153698 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239463482 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.241869673 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240127314 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.237719646 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.239580365 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.240527163 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.239553105 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.241776953 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24990306 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25913892 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.244175162 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259207821 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241464226 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.237691038 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.241523814 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.242230904 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240891587 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.241967086 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.240832662 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.238042721 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.24032097 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.243957845 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.247735089 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240899229 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.238308746 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244596292 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.242889482 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246380908 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.260914157 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.243895769 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.252021111 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.250874697 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.271500261 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.264451996 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242534664 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.242315608 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252201722 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.267195339 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249557791 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.260211897 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.242930575 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.241887291 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.247316988 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272367065 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.266977879 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.243339071 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241372675 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.242724679 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245550038 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242140009 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249617588 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.264206833 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.24288193 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24704818 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25080041 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267039345 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.243778956 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.241223562 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.242426234 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.242090724 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.241718892 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252733151 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.262323258 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.24168679 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.244186336 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.242104093 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.242691357 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.242393817 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.240128057 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242495845 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.23915094 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.244113473 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243491403 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244098559 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.253784768 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242483074 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241740375 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.247889002 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.261265254 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243492129 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250183272 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.243875786 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243427806 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.242711968 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.250053303 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.241426217 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24517437 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.253276562 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.247537926 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.242849044 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.242901666 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.244267367 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252535585 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.270840074 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.24308386 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.2445734 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.24914584 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.255934302 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240936795 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.243964293 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.241577188 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.241082716 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.240454459 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.243082156 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.243919907 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.24364842 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242261083 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244240481 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.240849297 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.24397098 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.242518565 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.242914227 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.24116854 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.2423694 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.2435398 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.245426447 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.24504179 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.245194874 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.250305065 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.261817833 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.245582752 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.243388548 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.242323416 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243827234 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.24452852 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.245236506 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.244304559 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243835533 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.244298648 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.243936427 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243378042 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.246434663 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24586274 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245533558 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248670421 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.245703109 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.247352477 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.244509394 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.241833104 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.244375589 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.245124596 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.243791028 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.245362102 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.243921374 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.247139829 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.254118495 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.244144997 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.244708768 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.247854225 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245461905 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244460475 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245284375 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247004762 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.255131435 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.246591915 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.251535979 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.262774375 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244957188 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.245038992 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.245592387 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.245973694 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245966238 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.248115366 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.25524504 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258501931 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268778153 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.246056015 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.251739921 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.246691895 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.252152151 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.250416578 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.246321544 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.248986686 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245888213 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248006272 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24809159 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.249407322 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.247283553 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.246785832 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.248896744 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.248284352 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.247670119 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246671767 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.248985918 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247721768 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.245004808 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247025674 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246935522 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.245085666 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.245384244 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.246163231 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.246317747 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.247847945 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.249001208 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.25346063 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.246184183 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249848914 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250718998 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.247779408 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.246632005 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.250749121 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249093686 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.248096045 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255640337 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.268087574 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.24979245 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254373285 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.266451917 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.247732251 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.250636159 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.251117101 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.245766877 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.250234468 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.256127453 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.24785003 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.247646424 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.250214987 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246264604 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247278599 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.252367007 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.262562011 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.244643742 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.248054136 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.247514988 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.247777597 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.248103896 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.249021151 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.247285302 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248877891 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246867337 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.247820662 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247782615 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.248718959 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.245974087 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.246157267 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247770532 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.254738759 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.250528458 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.245564715 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.247944163 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.247405643 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.250664549 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.248209431 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.248249687 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.245716767 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259491772 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.270248949 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253381237 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.264905978 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.246851392 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253330481 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.265225907 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.249200649 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245656275 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247828508 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.247153918 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.247982216 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.244332725 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24786236 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.248224499 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248016268 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.247168411 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.252415199 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.248986049 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.247504197 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.247798625 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.247224869 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.249000341 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.249386287 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.247965777 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.251734574 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249407688 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.24558907 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.248258314 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256344356 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266962576 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.244530362 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.24950445 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.247822005 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.248379447 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.250612565 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.248414448 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.249993128 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.257824931 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.252147532 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.257370003 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.248269861 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258503974 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.249722301 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.247180429 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.254176056 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.247600228 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.248676475 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.248982128 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.249468458 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256696613 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.267362427 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.249583421 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.25371051 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249624579 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.25095946 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.250115448 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.249725377 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250052551 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.250219291 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25899569 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.267349368 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.25312783 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249814862 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.24784172 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.249706617 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.249838892 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.248668765 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253519437 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.250206027 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.251264379 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.249020741 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.249733375 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.2505115 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.249622542 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.252058323 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.248433239 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.252342566 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260456613 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.27069778 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25572326 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.251581266 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.259716746 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267080946 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258247076 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.271435208 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.25321124 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.254000415 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.253507211 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.25085265 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.253533604 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.25432282 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.251977517 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.252672182 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.257228914 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.25340139 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.252466557 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.250648345 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.251357903 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.252612447 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263556617 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276791141 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.253094915 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260924388 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.250879088 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.255867156 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.25793892 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.250034638 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.250079506 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.255434411 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264237578 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261705266 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.251934956 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.253547148 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254393439 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25299116 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.250037662 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.251281845 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.251654213 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.249667498 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.251219673 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.25139987 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249862946 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.247702747 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.252261896 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252753083 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.246749058 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.257964511 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.266840829 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.250125547 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253887394 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.249769632 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.251283428 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.246787094 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.249970018 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248033469 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250803009 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.249402037 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256788177 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.257661434 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.252727029 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.248422941 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.247754365 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.249601921 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.249640747 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253503925 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.248282512 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248399296 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.250036369 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.251913671 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.247507874 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.250664424 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.24773316 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.253187698 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251767404 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254381968 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.258079218 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248455825 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.247794546 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.248987741 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257301763 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.24999141 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.248657609 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.255691389 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268837074 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.26325042 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.262720251 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.257475008 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.253825381 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255911051 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.259198452 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.253773177 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.252113891 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.251890178 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.253444761 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.250563971 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.255101569 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25380423 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.258362323 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.267537362 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.253644977 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262310468 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.270042602 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250531246 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.257766471 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.25931154 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.251707097 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.250347404 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.253402694 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.251378819 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256409794 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.272939917 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251226546 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25416432 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.252702274 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.252809589 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257889908 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252633236 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.256353945 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.247610712 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.255982516 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253976989 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250279265 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.250702768 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.25555595 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.253836488 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.255993838 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.259486427 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.253518153 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25727824 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.252029898 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.253737225 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252674316 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252223193 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.256316397 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.251711396 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.253396232 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254384216 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.254336454 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.255454323 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.251701057 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.255395661 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.255382711 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254941585 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257767809 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.265171151 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.267657673 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.254391166 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.254706314 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.250660356 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.258685708 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255813696 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.254673951 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25502409 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.255930476 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.253826349 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257899822 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.255045835 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.262339455 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273292175 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.273715354 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255562824 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.257324046 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259230198 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.256107018 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.257375844 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.259569781 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.261142455 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.260537788 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.26429887 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.256644295 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259940061 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274332061 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.257552567 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.259873434 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.260427816 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.259508263 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.258192957 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255597053 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.256394721 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.258405573 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.273279984 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254623042 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267063194 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284262672 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.274512139 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.259325102 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.258528722 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25223821 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.259677281 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.259797078 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.257104063 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.261457434 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259012721 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.261349028 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.256483092 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264292535 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.259992821 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.264530959 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.262750583 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.259065695 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.260877208 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.254268297 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.258760777 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.258411233 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.260056725 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.258698954 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.256636544 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.260431536 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270085016 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.282758722 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.258476343 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.261642838 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.25365594 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.26349707 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.264244736 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268882958 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.268516497 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.260334697 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.261115368 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.261777774 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261907955 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.259346193 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.261031923 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.258579965 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261124842 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.258787487 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.269957608 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286608244 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.259069773 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.262742788 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260313784 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.2620767 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260588826 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262885787 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259032174 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.262789087 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.264172792 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268929805 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.263350051 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.262044357 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.265349395 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.272071601 seconds)
  done (took 747.224024242 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.260452088 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257048952 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258066484 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.259712718 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255828027 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262631694 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260646334 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.259490855 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.257803779 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.260627329 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.26463923 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263070045 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.261833356 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.259834583 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262926144 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.261793853 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264832598 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.263216538 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262655414 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263555853 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.261203632 seconds)
  done (took 27.655737119 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.264334872 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.259122229 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261691245 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269050543 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26465669 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.268449707 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.263761525 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263686876 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.263886058 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26033699 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.267164924 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266087201 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.264400082 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.266347011 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265063788 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267196531 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.266911313 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26180445 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.267311439 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25960218 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265408138 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.261561386 seconds)
  done (took 28.994011044 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.268097605 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.260899354 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.262400286 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.263507483 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.266584588 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.266646331 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.267687987 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.268393738 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.270256348 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.266676689 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.267776814 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.266182028 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.275423054 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.27186944 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.270872765 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.269195076 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.409442706 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.262740318 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.262622721 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.266306235 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.265784132 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.271913204 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.279446563 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.263970893 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.264571803 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.264140914 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.268017078 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.268862963 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.264372405 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.264515076 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.275324852 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.263401637 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.266585158 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.268605588 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.26593678 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.26870143 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.273740597 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.270967565 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.262063297 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.265200458 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.275876364 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.292665552 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.268074711 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.276566021 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.289371587 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.274805754 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.270737823 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.277622672 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.269346146 seconds)
  done (took 63.515436561 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.270307374 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.27243187 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.270891463 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.271934314 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.273003244 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.274948281 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.270481794 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.273155465 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.26734073 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.270599559 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.273784711 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.269693893 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27185518 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.270746123 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.274219086 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.269773603 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.27055686 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270256769 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.265235738 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268763907 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.268044128 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.270498712 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.271998453 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.273559288 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273974834 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.271255747 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27024928 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.271928835 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.273412901 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.269276496 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.274011047 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.272282836 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.27586149 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.270426957 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.268532766 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.273640207 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.271930958 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.274101117 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.271813971 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.269565777 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.277544725 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.275813504 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.276608342 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.275087497 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.273730977 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.273144864 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.272662291 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.275052108 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.271107784 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.276848086 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.275797362 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.273541935 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275669751 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.271777965 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275209216 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.272656983 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.273761062 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.272706502 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.276713691 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.274534611 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.273479015 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.27327228 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.273174674 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.273631912 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.274420406 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.274866719 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.273123248 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.278443718 seconds)
  done (took 87.723614141 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273759489 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.271043343 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270853573 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273734763 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274778169 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.274966368 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276639353 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.272935203 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.270777081 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.273525506 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274932351 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274002814 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.276918469 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.27814703 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277667422 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274880926 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274786907 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273819105 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278356377 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27414211 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.275176514 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.273167623 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.279871894 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275992876 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273870664 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.27832839 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275005743 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.273029619 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278564216 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277886726 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278246664 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.276232773 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277457943 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.274013723 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.275151638 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.276187793 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275069559 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275872614 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.272638726 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.276487761 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276688221 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27586505 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276098877 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.274754995 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.275959159 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.274948547 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274563647 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.275873411 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276665383 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279529084 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.278164204 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277727785 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278692251 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277278704 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276123924 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.276108709 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278257163 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276357477 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274992924 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.276968415 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277576572 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.280443622 seconds)
  done (took 80.287136365 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277154566 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.278603222 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.276540613 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.276445839 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279283822 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.277445721 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.279930769 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.279398919 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278224789 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.278738084 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281532856 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277668135 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278607136 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282070552 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.279464633 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276943683 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277291588 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277541976 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282216667 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.275570295 seconds)
  done (took 26.761520921 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.280123464 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283424504 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.279124464 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27943115 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.280420947 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.280015222 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.284081171 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282364057 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276701246 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281077773 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282704798 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282084187 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278859569 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280655083 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.282620602 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281695378 seconds)
  done (took 21.686339143 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.280900005 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.283272501 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.283019998 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.279663486 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.280446482 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.28155171 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.286182581 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.278681505 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.281477525 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.284623644 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.28069004 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.283778768 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.283054726 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.284050527 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.281363851 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.285827387 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.282181768 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.282884341 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.283488325 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.285081624 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.282876536 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.281905088 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.286860468 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.285260173 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.283091398 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.284186947 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.281607792 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.282961017 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.283752989 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.283092815 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.283088366 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.281606838 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.282986866 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.284351652 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.285150055 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.283590473 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.285800527 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.285402336 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.286363277 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.286928392 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.28551861 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.283772726 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.287042809 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.284408849 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.284283882 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.287235994 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.284801154 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.285234198 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.284943357 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.285900512 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.286931819 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.286661546 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.286383849 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.289147963 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.287094193 seconds)
  done (took 71.81640042 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28729417 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28815116 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.283968254 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.287595114 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287991284 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.284425333 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.289703554 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.288332225 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285124704 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.289747785 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286305961 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286411744 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285815164 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29042649 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286978592 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287739947 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.285045657 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.283149811 seconds)
  done (took 24.358687951 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282915487 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282210399 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.288269315 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.28510522 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.28653811 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290192017 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284910984 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.286579187 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289641009 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.286342943 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284028675 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.288650959 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289102664 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.288213544 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286441024 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284979257 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.288463431 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287631147 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.28892034 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2874936 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.289381674 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.290903139 seconds)
  done (took 29.514270208 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.287772722 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.288505073 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.287490351 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.304192305 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.305833486 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.31075979 seconds)
  done (took 8.981698342 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295579303 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289934383 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285182866 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290599421 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290734059 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285343964 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288038487 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288581669 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290553685 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28837527 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289602663 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289724806 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287779854 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289489634 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290918028 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288589593 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289665308 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282416377 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28960431 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289289022 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287389513 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292288726 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288346764 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289682219 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289325027 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289249158 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291438209 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286368674 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289408278 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290209825 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292876726 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289027444 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291167925 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287077487 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290414086 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290954913 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287075547 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290919787 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292122418 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289912654 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291482761 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294525546 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291514155 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287169937 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289419611 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289562714 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2877227 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286771146 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29074328 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28893915 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292088545 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289082474 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290850581 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289638244 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289311897 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292352922 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291661114 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290410802 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291433704 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292103804 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288930452 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291661316 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291036275 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29165128 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29383732 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286608842 seconds)
  done (took 86.349275189 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291410568 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287219942 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289597245 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288160218 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286627443 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291383471 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289249862 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289711267 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289370756 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29214053 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293407965 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289874978 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293007065 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291044568 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294972386 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290774985 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292541263 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291398875 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28855378 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296235532 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291868972 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290954701 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289407356 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28733137 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293908145 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29300206 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293624838 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292107002 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294152077 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292674669 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289841846 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290809118 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29007468 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294832808 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289455967 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293610948 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292565424 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289982167 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294116728 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293061211 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294444328 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293706574 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29391068 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293162498 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292499104 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293908779 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294782658 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294488125 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294529807 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295759479 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295081783 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294220963 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29686553 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296357883 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295768813 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296396844 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295379588 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295414192 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296546593 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296087077 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294808533 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291171227 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293541493 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296316654 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296819356 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295431206 seconds)
  done (took 86.525865788 seconds)
done (took 1745.215124418 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.451898043 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.412259009 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.293813546 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.292086772 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.288900499 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.301693487 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.292215395 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.28741473 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.29267753 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.295079134 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.29272099 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.484002424 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.291748543 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.291051674 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.290353031 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.393278596 seconds)
  done (took 42.457620881 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.321119009 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.302113283 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.408630926 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.31878232 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.325159104 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.476737298 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.354075778 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.304668975 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.465446045 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.341821417 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.787018818 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.316137839 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.303579688 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.362685851 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.314064165 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.480185294 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.543275953 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.798653595 seconds)
  done (took 29.731049451 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.729310844 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.302474374 seconds)
  done (took 9.239874079 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.323818261 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.305025654 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.297242001 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.296883725 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.28998634 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.293253315 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.296481023 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.298897424 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.74068444 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.421314923 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.303531785 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.309794338 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.315995561 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.298469755 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.298559086 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.339010844 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.466979058 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.297638949 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.293880824 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.306213884 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.300035894 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.392386048 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.341317564 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.300845199 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.415922166 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.742559751 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.303076084 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.30696052 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.448070681 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.30219005 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.297807776 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.299537873 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.301765254 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.903420741 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.836793441 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.312674694 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.337501763 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.31087979 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.299620904 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.445262836 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.302291271 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.30601049 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.29638507 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.820045353 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.42593569 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.420073692 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.466794189 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.32061101 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.301703276 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.360293595 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.303524277 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.300923182 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.329199548 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.059300212 seconds)
  done (took 109.22785179 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.300534658 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.682534135 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.461021774 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.308027693 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.038631688 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.931388833 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.304258207 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.567743165 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.333926391 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.292290044 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.631404808 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.793339017 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.306734009 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.295962004 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.833699592 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.313690363 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.294060628 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.065332813 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.306900198 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.297799602 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.779189134 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299405364 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.314307057 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.599901392 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.330183679 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.742052407 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.622893631 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.726332191 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.308813703 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.288899474 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.750545509 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.310598535 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.342784489 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.294151442 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.556308609 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.641227774 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.626150298 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.311616069 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.308175327 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.297758695 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.311945406 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.7320771 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.636337177 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.308752259 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.294658096 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.731719832 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.311079318 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.303508156 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.299478168 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50215044 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.158456184 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.300451262 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.640894592 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.295200079 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.585308347 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.398796376 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.320811884 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.767446399 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309901535 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.350698936 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.325857551 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.297525467 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.29723351 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.29685793 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.298258755 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.634466077 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.69591924 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.296628722 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.627244173 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.762403647 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316012328 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.809641518 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.169840401 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.303501537 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.35648956 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.295209863 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.908978338 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.770218772 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.311012083 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.296268281 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.613903873 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.315588827 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.615078563 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.318513227 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.295136697 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.803954118 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.303264753 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.333032018 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.294648849 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.32072068 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.043532857 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304696336 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.578098108 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.366346081 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.297538161 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.295455749 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.30499449 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.29806872 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.313795029 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.306618527 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.813330829 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.319293882 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.267977301 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.319710714 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302793454 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.302374613 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.29860199 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.301457113 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524205155 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.719746535 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.32178155 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.300117165 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.29774285 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.303769967 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.606791976 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.30300906 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.593443345 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.316254876 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298293639 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.306040163 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.958445971 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.339244857 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297678746 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.324100127 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.198306957 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.513130273 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.322934018 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.315357657 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.301587995 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.315117632 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.534380321 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322163253 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.384196752 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.306174279 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001220686 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.354961683 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.337338121 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.818183107 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.314079475 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.240630248 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.324245135 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.303807307 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.584546507 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.567628551 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.566018085 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.301616931 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.319901403 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.978910865 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.365878473 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.444904434 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.323530302 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.322428434 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50008763 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.466121025 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303746419 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.92643694 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.30138172 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.519565478 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.308661114 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.603956744 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.789444175 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.323254395 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.306959983 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.002652149 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.991265858 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.923365195 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.308663389 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.624874215 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.253689121 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.78610873 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.304930447 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.312380513 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.873102383 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.311464297 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.311114159 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.304745146 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.306558883 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.367516824 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.47760998 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.480043128 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.303469726 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.740752578 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.373693163 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303956343 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.315168426 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.307300587 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.652519721 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.363389318 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.309313426 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.335541498 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.306012687 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.313235417 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.763790217 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.203859717 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.309904126 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.456685648 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.93150271 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.321699483 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.305094122 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.845577035 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.53759487 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.799443898 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.362235668 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.606532282 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.32386205 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.342201604 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.942224145 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.335984126 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.762452201 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.321659863 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.308277246 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902132189 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.32355685 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.372419871 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.306237709 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.309057897 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.838049942 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.324139649 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.311601869 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.545067834 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.328500551 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.572897596 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.310353389 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.335722355 seconds)
  done (took 1103.175413838 seconds)
done (took 1295.032622781 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.309912083 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.30478729 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.292612548 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314089063 seconds)
  done (took 26.44235741 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.322704324 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.317122044 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.319158346 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.314799088 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.320607203 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.315082773 seconds)
  done (took 9.13312991 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.343904761 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.308844298 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.312368801 seconds)
  done (took 19.189983175 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.517393598 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.573901528 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.643154641 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.422738249 seconds)
  done (took 10.381720755 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.320589634 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.318489568 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.315695615 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.318422873 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.320865415 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.323188413 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.320439174 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.318285337 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.322325555 seconds)
  done (took 13.102149607 seconds)
done (took 79.466453426 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.332612658 seconds)
    (2/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.294123516 seconds)
    (3/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.546839818 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.177185383 seconds)
    (5/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.312251234 seconds)
    (6/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.661799518 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.946432068 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.714900659 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.570542183 seconds)
    (10/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.327939827 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.355847214 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.337441197 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.891839557 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.957026649 seconds)
    (15/286) benchmarking ("sort", Float32, false)...
    done (took 5.319761614 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.945749179 seconds)
    (17/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.290673001 seconds)
    (18/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.400024942 seconds)
    (19/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.293882188 seconds)
    (20/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.326107336 seconds)
    (21/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.375219319 seconds)
    (22/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.738714062 seconds)
    (23/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.785824273 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.151675397 seconds)
    (25/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.304581078 seconds)
    (26/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.329116904 seconds)
    (27/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.768744092 seconds)
    (28/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.391363892 seconds)
    (29/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.4900925 seconds)
    (30/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.317568276 seconds)
    (31/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.2394359 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 6.311933667 seconds)
    (33/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.397065648 seconds)
    (34/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.397542346 seconds)
    (35/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.095417885 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.420312491 seconds)
    (37/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.423957955 seconds)
    (38/286) benchmarking ("sort", BigInt, true)...
    done (took 6.312929512 seconds)
    (39/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.295980018 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.331084094 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.326644442 seconds)
    (42/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.320528137 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.232832527 seconds)
    (44/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.320200895 seconds)
    (45/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.017167004 seconds)
    (46/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.831943981 seconds)
    (47/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.669339117 seconds)
    (48/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.619829116 seconds)
    (49/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.342425349 seconds)
    (50/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.315505856 seconds)
    (51/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.348796913 seconds)
    (52/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.325511071 seconds)
    (53/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.296565537 seconds)
    (54/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.312126424 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.424547745 seconds)
    (56/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.320994528 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.57826898 seconds)
    (58/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.400964785 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.312739759 seconds)
    (60/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.341544649 seconds)
    (61/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.296558963 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.832508166 seconds)
    (63/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.458366685 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.722365898 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.391714274 seconds)
    (66/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.528772505 seconds)
    (67/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.328633372 seconds)
    (68/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.445319592 seconds)
    (69/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.41828521 seconds)
    (70/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.337845571 seconds)
    (71/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.586721321 seconds)
    (72/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.103849539 seconds)
    (73/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.342843038 seconds)
    (74/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.3257087 seconds)
    (75/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.672774941 seconds)
    (76/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.298711946 seconds)
    (77/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.668943926 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.664027124 seconds)
    (79/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.640129036 seconds)
    (80/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.300733744 seconds)
    (81/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.780831716 seconds)
    (82/286) benchmarking ("sort", Int8, true)...
    done (took 6.318859374 seconds)
    (83/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.317390211 seconds)
    (84/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.51436319 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 5.521004528 seconds)
    (86/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.329099061 seconds)
    (87/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.297354967 seconds)
    (88/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.284344158 seconds)
    (89/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.35953673 seconds)
    (90/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.062237834 seconds)
    (91/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.680047761 seconds)
    (92/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.321204692 seconds)
    (93/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.50374891 seconds)
    (94/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.402355724 seconds)
    (95/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.134962783 seconds)
    (96/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.441949824 seconds)
    (97/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.295426921 seconds)
    (98/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.793043054 seconds)
    (99/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.796483521 seconds)
    (100/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.415939394 seconds)
    (101/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.3166462 seconds)
    (102/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.865097473 seconds)
    (103/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.295464165 seconds)
    (104/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.864569996 seconds)
    (105/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.071771197 seconds)
    (106/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.673409405 seconds)
    (107/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.564663205 seconds)
    (108/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.819514878 seconds)
    (109/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.398042834 seconds)
    (110/286) benchmarking ("sort", Int8, false)...
    done (took 4.327640742 seconds)
    (111/286) benchmarking ("sort", Float32, true)...
    done (took 6.317567512 seconds)
    (112/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.316849082 seconds)
    (113/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.428597378 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.533479913 seconds)
    (115/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.343344565 seconds)
    (116/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.757295793 seconds)
    (117/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.340336924 seconds)
    (118/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.702548369 seconds)
    (119/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.317687868 seconds)
    (120/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.149723416 seconds)
    (121/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.33225842 seconds)
    (122/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.422890703 seconds)
    (123/286) benchmarking ("sort", Float64, true)...
    done (took 6.335269288 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.316056569 seconds)
    (125/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.323808145 seconds)
    (126/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.344327177 seconds)
    (127/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.319754368 seconds)
    (128/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.277208158 seconds)
    (129/286) benchmarking ("sort", Bool, false)...
    done (took 1.852843814 seconds)
    (130/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.359371559 seconds)
    (131/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.334585101 seconds)
    (132/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.598439135 seconds)
    (133/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.085762545 seconds)
    (134/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.926146923 seconds)
    (135/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.451035273 seconds)
    (136/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.444773309 seconds)
    (137/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.52876163 seconds)
    (138/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.338431026 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.068930478 seconds)
    (140/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.78258203 seconds)
    (141/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.585139366 seconds)
    (142/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.327723325 seconds)
    (143/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.323594915 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.53955683 seconds)
    (145/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.097716386 seconds)
    (146/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.310693107 seconds)
    (147/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.374849698 seconds)
    (148/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.505331429 seconds)
    (149/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.469109329 seconds)
    (150/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.531526559 seconds)
    (151/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.365162773 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.568810439 seconds)
    (153/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.545225724 seconds)
    (154/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.342638213 seconds)
    (155/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.741597033 seconds)
    (156/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.350419991 seconds)
    (157/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.324672736 seconds)
    (158/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.080839883 seconds)
    (159/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.35110536 seconds)
    (160/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.350862821 seconds)
    (161/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.069074503 seconds)
    (162/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.312731961 seconds)
    (163/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.342655973 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.676747731 seconds)
    (165/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.521328099 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.265614516 seconds)
    (167/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.347292551 seconds)
    (168/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.420869045 seconds)
    (169/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.304400092 seconds)
    (170/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.405159737 seconds)
    (171/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.341251464 seconds)
    (172/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.305470649 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.206800324 seconds)
    (174/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.410877173 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.065341813 seconds)
    (176/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.147763532 seconds)
    (177/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.521596476 seconds)
    (178/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.305875181 seconds)
    (179/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.366539901 seconds)
    (180/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.305749003 seconds)
    (181/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.306502169 seconds)
    (182/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.40408625 seconds)
    (183/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.306227318 seconds)
    (184/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.415038175 seconds)
    (185/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.863583663 seconds)
    (186/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.319349045 seconds)
    (187/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.885954488 seconds)
    (188/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.328001811 seconds)
    (189/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.308485739 seconds)
    (190/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.307143729 seconds)
    (191/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.368277487 seconds)
    (192/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.442362768 seconds)
    (193/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.321794005 seconds)
    (194/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.029158886 seconds)
    (195/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.434576781 seconds)
    (196/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.506977415 seconds)
    (197/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.383745809 seconds)
    (198/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.125903692 seconds)
    (199/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.353216082 seconds)
    (200/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.763199078 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.93082915 seconds)
    (202/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.356788716 seconds)
    (203/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.313784212 seconds)
    (204/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.694933539 seconds)
    (205/286) benchmarking ("sort", BigInt, false)...
    done (took 6.321068843 seconds)
    (206/286) benchmarking ("sort", Bool, true)...
    done (took 5.449247739 seconds)
    (207/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.951525504 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.738733976 seconds)
    (209/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.400394925 seconds)
    (210/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.386423721 seconds)
    (211/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.424880482 seconds)
    (212/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.827830762 seconds)
    (213/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.338700757 seconds)
    (214/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.709362451 seconds)
    (215/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.309355575 seconds)
    (216/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.959078647 seconds)
    (217/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.532099788 seconds)
    (218/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.916909828 seconds)
    (219/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.309421026 seconds)
    (220/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.592641781 seconds)
    (221/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.334858802 seconds)
    (222/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.310399013 seconds)
    (223/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.484786543 seconds)
    (224/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.311364227 seconds)
    (225/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.149098111 seconds)
    (226/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.119900435 seconds)
    (227/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.367213498 seconds)
    (228/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.352801932 seconds)
    (229/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.313664711 seconds)
    (230/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.728813495 seconds)
    (231/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.341318854 seconds)
    (232/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.371661584 seconds)
    (233/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.307718553 seconds)
    (234/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.35752265 seconds)
    (235/286) benchmarking ("sort", Float64, false)...
    done (took 5.626998251 seconds)
    (236/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.305320323 seconds)
    (237/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.4367894 seconds)
    (238/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.690535092 seconds)
    (239/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.369038808 seconds)
    (240/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.682404324 seconds)
    (241/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.037106745 seconds)
    (242/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.147884956 seconds)
    (243/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.598006693 seconds)
    (244/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.172978065 seconds)
    (245/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.325659525 seconds)
    (246/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.353152385 seconds)
    (247/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.328745278 seconds)
    (248/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.540607411 seconds)
    (249/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.443665042 seconds)
    (250/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.314006442 seconds)
    (251/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.923224825 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.232794577 seconds)
    (253/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.351103205 seconds)
    (254/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.77097283 seconds)
    (255/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.801237387 seconds)
    (256/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.719105312 seconds)
    (257/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.332281166 seconds)
    (258/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.360410979 seconds)
    (259/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.367038439 seconds)
    (260/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.053623342 seconds)
    (261/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.32790722 seconds)
    (262/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.567498813 seconds)
    (263/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.695767794 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.971981146 seconds)
    (265/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.30553278 seconds)
    (266/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.324032943 seconds)
    (267/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.549786964 seconds)
    (268/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.094609775 seconds)
    (269/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.70849164 seconds)
    (270/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.306706892 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.414959158 seconds)
    (272/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.413036303 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.449773028 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.167301562 seconds)
    (275/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.411757829 seconds)
    (276/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.604864692 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.225502623 seconds)
    (278/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.404227635 seconds)
    (279/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.338796816 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.372973882 seconds)
    (281/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.312941235 seconds)
    (282/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.107701924 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.370503107 seconds)
    (284/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.173009484 seconds)
    (285/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.17062413 seconds)
    (286/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.391168935 seconds)
  done (took 933.254411068 seconds)
done (took 934.476356381 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.365091749 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360234221 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.33911422 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.36088694 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.453931732 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.365318764 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.351374761 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.344660692 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.390657322 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.391863672 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.341165441 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.364304299 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.340754729 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.340779085 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.339237006 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356335236 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.389492284 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.342243885 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.35596659 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.349318959 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.35955006 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.339604361 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.390919144 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.364681119 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.343078952 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.344602063 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.343917337 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.358530376 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.45242177 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.343761532 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.343165397 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.355612037 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.390264937 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.34306989 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.337278268 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.36034942 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.351450314 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.351609077 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.348109324 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.372443898 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.786817166 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.359626038 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.343744322 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.341783188 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.344129832 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.349958048 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.343513629 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.351999998 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355505958 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35882584 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.79187294 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.374338954 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.345598375 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.344417565 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.351611468 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.343201298 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.345492113 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360833888 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.364387129 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363207435 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.383095151 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.351458651 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.349106249 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.360584172 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.350595241 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.830678086 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.356360087 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.34901914 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.791205172 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.367871823 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.83770175 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.370447189 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.348517532 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.358255819 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.37885541 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.392773972 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.343112895 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.346050267 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.354167078 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.345245572 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.356587391 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360875756 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.351914435 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.34738009 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361990709 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.371049335 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.358151464 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.34764198 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.357318853 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.36760191 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.35347383 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.358071725 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.352095728 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.343598619 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.358422287 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.350960455 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.350431221 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.349525706 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.353791749 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.35686135 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.792539805 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382298374 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.343317742 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.345490089 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.345156409 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.36241166 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.794173294 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.364353397 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.369749756 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.393388984 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.350154829 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.387437061 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.355235317 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367916288 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.358414068 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.352395912 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.345168617 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.384929531 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.809177591 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.380576738 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.35039005 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.34698446 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364078013 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.349392125 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.346718705 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.400244371 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.35218558 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364082372 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.468719445 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.359973865 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.381420733 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.34608884 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.350489067 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.377716163 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366161858 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.38161898 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.353375504 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367841535 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.366100622 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.344130329 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.359102199 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.358132646 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.350671986 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.355372342 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.342674154 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.37753939 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363449654 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363737803 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.374032487 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.473633466 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.350653234 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.391350974 seconds)
done (took 227.658185358 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.41109158 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.348234632 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.432931461 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.34961441 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.445327227 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.445785938 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.342140569 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.343940385 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.344160523 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.726328716 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.345483028 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.345019854 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.339320385 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.344731124 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.428206456 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.346792204 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.346695686 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.690021392 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.347351985 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.417871077 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.346601097 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.34577876 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.348988528 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.726810107 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.347149591 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.346839966 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.419607434 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.350104508 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.690533618 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.342007002 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.340550422 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.69076157 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.437532163 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.366528927 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.358403205 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.355135243 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.44900308 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.366779448 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.428138854 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.428477607 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.43157867 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.38785643 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.346805076 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.341878061 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.35080979 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.348216156 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.347042722 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.377266023 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.347292611 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.346160505 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.691812632 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358939331 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.356568249 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.347199721 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.347402465 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.368828246 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.347111204 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.350972507 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.438291939 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.35285355 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.410928573 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.733164298 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.73188919 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.353733551 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.345362152 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.349282083 seconds)
  done (took 149.388102452 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.419139238 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.421481866 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.462844019 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.366393109 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.401156878 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.466538188 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.363207506 seconds)
  done (took 11.155031088 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.356675767 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.354287992 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.398897333 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.402384297 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.354517799 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.527566022 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352915 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.361513225 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.36181935 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.40180681 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352734416 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.351378578 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.351913038 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.350619824 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.409266824 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.36155946 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.464583239 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.35126395 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.352366046 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.508144675 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3535629 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.359985907 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.402551384 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.363717015 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.35328496 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.358952904 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.168785715 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350885354 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350177859 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.352973587 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349020275 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.429443279 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.354760424 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.348925443 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349866431 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.470117605 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.355290628 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.353040334 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.354086336 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.350729058 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.356764161 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.353374495 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.355279633 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.35099 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.355202211 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.37556419 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.353386425 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.354842872 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.355103542 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.355854287 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.403300268 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354266898 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.351914829 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.350852213 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.407136045 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358414914 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.357793262 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.350259329 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.356569484 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34976379 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.51231643 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.405621108 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.354558948 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.39977103 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357163092 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.355342412 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.354456074 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.354084902 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.407586284 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.353815715 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.402242658 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.352490722 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.539226834 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.376246301 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355774289 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.356763789 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.358375467 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356572121 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.352035626 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.359418068 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.352268088 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.355545308 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.359230964 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353402659 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35216133 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.519901341 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.462024502 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.353112018 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.370360806 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.361886484 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.353592522 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.411010634 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.35626855 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.353335563 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.407526762 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.469822198 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.407906327 seconds)
  done (took 155.585466635 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.359097311 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.36257298 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.355912528 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.37114973 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.356136993 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.354131879 seconds)
  done (took 9.418717795 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.358486762 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.359975284 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.356316133 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.356570503 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.355394672 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.355928243 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.355173364 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358159713 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.361818981 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.358163324 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.358961218 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.354438889 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.359549052 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.357481593 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.35428993 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.358742621 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.357454427 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.35485612 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.359368299 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358742516 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.460076807 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.356646705 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357663101 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.356886448 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.362076148 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.35863139 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.369860757 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.359397863 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.357979235 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.364135229 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.378814894 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.356326075 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.360361559 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.369589458 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.362269369 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.357671584 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362774337 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.359675288 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.35632972 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.359247937 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.359061583 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355023555 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.357185366 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.360509753 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.36119109 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.364382767 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.361964739 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.363781217 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.358952508 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.358596446 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.360894322 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.357033716 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.361148954 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.359696604 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.3594024 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37887525 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.363365966 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.361219263 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.356452858 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.361881354 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.363474961 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.362500259 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.356650778 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.364492734 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.356611527 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.358220917 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.358401947 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.366466939 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355866212 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.355918167 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.359458232 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.359130077 seconds)
  done (took 100.277810281 seconds)
done (took 427.073439149 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.758758729 seconds)
  done (took 8.023165001 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.467063409 seconds)
  done (took 7.736442499 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.804792429 seconds)
  done (took 22.081946514 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.360624752 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.457414784 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.388134296 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.356263434 seconds)
  done (took 26.826999158 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.681983417 seconds)
  done (took 7.948779136 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.362953066 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.352628422 seconds)
  done (took 13.984212172 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.975036282 seconds)
  done (took 8.242360912 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.447793837 seconds)
  done (took 7.72292719 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.383664732 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.375661864 seconds)
  done (took 14.04068971 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.336862773 seconds)
  done (took 7.603266995 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.533533686 seconds)
  done (took 12.802490864 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.366615354 seconds)
  done (took 7.637249429 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.357999053 seconds)
  done (took 7.626841105 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.332029767 seconds)
  done (took 9.596525003 seconds)
done (took 163.136254434 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.356029953 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.355156868 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.352005088 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.35185362 seconds)
  done (took 26.681556136 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.397666548 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.394746534 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.396460858 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.404914539 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.400492589 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.397721491 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.385361578 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.390578889 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.40638919 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.401125642 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.40097829 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.399026795 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.397047742 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.384257145 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.399822593 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.399023383 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.407247416 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.400455941 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.38864205 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.400646713 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.364354869 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.408973618 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.394592364 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.364643238 seconds)
  done (took 34.750258166 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.887681544 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.436081107 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.51233128 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.413171637 seconds)
  done (took 7.517770598 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.414905214 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.416086796 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.432476757 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.468701161 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.50004476 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.426393456 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.389625459 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.384626991 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.372705416 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.417164432 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.493132047 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.429924855 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.509325613 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.366274419 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.548004943 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.362259139 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.359521109 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.416678655 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.467230133 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.481265965 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.367397167 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.418769707 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.420681206 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.436140778 seconds)
  done (took 35.569642976 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.369218466 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.382144647 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.361960783 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.363067277 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.375713243 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.363877308 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.365310079 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.365952065 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.364849816 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.371133429 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.362656434 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.376562102 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.367234185 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.364416176 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.373162845 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.369221779 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.372789942 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.36191257 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.366560868 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.371027016 seconds)
  done (took 28.639006789 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.357521049 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.21193325 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.71420622 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.611366879 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.359819462 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.35978784 seconds)
  done (took 27.886526426 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.435161567 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.596217818 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.371466862 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.723672736 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.816157207 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.381718859 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.365242567 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.61126718 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.932852352 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.920493262 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.424001796 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.434603417 seconds)
  done (took 20.281142013 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.369818877 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.364743636 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.370038818 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.382059551 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.420716781 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.38645077 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.373300894 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.359948599 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.424660354 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.442152608 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.384677087 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.422520819 seconds)
  done (took 37.974989606 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450537009 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404235361 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.321619157 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369563382 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.08624815 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574459704 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.436074008 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.120872473 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.391116708 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64005691 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380172628 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466151879 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.620720048 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362027561 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370480686 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.341262035 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609640338 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852990548 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370201806 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.389030676 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390511785 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374294591 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.40678896 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603151807 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597292395 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.344935907 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.628963048 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.144365037 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652182184 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.383919767 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375907768 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368433639 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638507541 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025271279 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480955324 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.579989068 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389957397 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.900407917 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.358691206 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.31094029 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380731468 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372633321 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37517377 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369369208 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.29860788 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371852937 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111694936 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.397299516 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.079299883 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369126368 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624778722 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47149421 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.370913409 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.931679892 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37752903 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.395144565 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.370925234 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46393818 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957866431 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.819519985 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384223801 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.305511385 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366664349 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.413680547 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003738568 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.391860213 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.376603836 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37408344 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305242186 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.417578531 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388389338 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515439786 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.394056428 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.016072487 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079303719 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.396065451 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.307666999 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923770286 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377159466 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.309071114 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601873669 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.146632991 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306377444 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.315595844 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.307324524 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072650425 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385409307 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.755835099 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400107046 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.125178146 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.60771067 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414854027 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394984619 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593935404 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.24874772 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370548608 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.369187957 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503818852 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390839516 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.106992744 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326056627 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.375253983 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626176368 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.58393296 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374830671 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.347342405 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884866434 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401101827 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.396223404 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380371274 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.590539676 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.976155291 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40113516 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.826585261 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389240109 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.14873326 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110916122 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381777887 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.3782777 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.387557004 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62558599 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.121505611 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.54081978 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43859317 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379626064 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376868406 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.412727294 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.227492129 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.529635079 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.572218381 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399045042 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.406235798 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.377288482 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316198124 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.367019842 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384141083 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.155118664 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598350473 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375078781 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671761701 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307993767 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522664422 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.381356259 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.596633352 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.594182145 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.397904388 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634278078 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377372995 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393091567 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389672195 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392910323 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476237335 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396458404 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.384117119 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.636515337 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.378722835 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.378692643 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.44723299 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.15929841 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381499081 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.379614091 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385073793 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971872204 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376740687 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378985512 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260102198 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.390631517 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445153364 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378842458 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59270109 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.221269949 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40242445 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.387495794 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.381768985 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6029732 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38626427 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.341536003 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461730591 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.865744883 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982376349 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407116393 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.311035618 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.083009947 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.078662384 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37376539 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.576487408 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376259128 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591627897 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41492774 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376807961 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.988029801 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396720603 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.347460324 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.389485872 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389656582 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.385813215 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378085933 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.18100946 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.87228191 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40369937 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.396788838 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519449317 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.394624229 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.310699376 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.894391518 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378551791 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379948775 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.154798277 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415082208 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.342208627 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271459225 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661798798 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397177564 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644463615 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.539531846 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.41985855 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.381411411 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382625024 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418064988 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.395507325 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38872614 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.390401023 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.406935851 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.825439368 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945466433 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119824598 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954857707 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.744334861 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.414560425 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.270446119 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.120381459 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335965227 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.039927646 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574813739 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142332682 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351121897 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87460234 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.626664249 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167712463 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6450057 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615181479 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.720726833 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.408233593 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65141995 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600940852 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417189261 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.397829277 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.316756468 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.89764076 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967752522 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403090614 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483587221 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127508195 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40285044 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.164874073 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.43414335 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.101709116 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801706182 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.952799224 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.771103784 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382026432 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400892703 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27683918 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409969934 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.911264921 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003803905 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400980244 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.895608381 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342969711 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600942468 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.41988604 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.383443576 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.704321134 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.3898061 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.647759807 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646858465 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328340958 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389980399 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927261924 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.260833555 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.389347126 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383341455 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129331215 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391732064 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678134296 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.400825646 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.181140345 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407783852 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.31845145 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316755795 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.078512722 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396452536 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359830688 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884301547 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.393802295 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415368262 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395400702 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232614297 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.641656861 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.398741663 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.978740717 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630830752 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392671943 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415754122 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.387216096 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391065176 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.371476513 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.26356062 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623531715 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447788535 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.615856121 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.358432477 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.733910186 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.410447332 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602081331 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.28625386 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400757481 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639194607 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.120835425 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.41060551 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114751653 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432130657 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392332029 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404089291 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387216967 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427342739 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47881866 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603384828 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.420014365 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.400463451 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799142813 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416930876 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39595317 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.401115878 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482200325 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.88237724 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.182544871 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.165301867 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982701996 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149691273 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.003606797 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676759476 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396601299 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391125565 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323539262 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53655735 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916025516 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661578665 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519355926 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.399394099 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416146838 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396577671 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409832336 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603876005 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661098188 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.261437086 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399358994 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.056832761 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.28744465 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401359452 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.59930523 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894073837 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979494873 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.779644596 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40339812 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.144388787 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683609911 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.478490523 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388119271 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979005989 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.393544838 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.11766877 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.400433735 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392724897 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547210106 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652289891 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065640037 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.424872229 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.55190058 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.164443082 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.470613655 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.653090554 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.869189361 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618373695 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010718024 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.126344114 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659297359 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459464592 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608678969 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.521335419 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540181716 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.390558846 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.276504979 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390499409 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239602275 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.101459315 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.400963877 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981154625 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677287445 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.395011717 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.397305395 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420899353 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.402443761 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614379153 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107282483 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623079911 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402020982 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396514803 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.961729375 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984983057 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677737737 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335462485 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.397365272 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638234956 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652978277 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417742994 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.848411013 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.106638307 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95424553 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.374353994 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411226075 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396684433 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11226271 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992274464 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.216314703 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905642866 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.059659033 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396668151 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676235039 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.397033057 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40641009 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677673994 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.399153952 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.39764821 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621258426 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.014120967 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193525153 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.407396499 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.53788896 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.335998337 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.623625504 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471272977 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354085508 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39425156 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.811276159 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.425834498 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528676973 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406146625 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.400336891 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401930809 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.13941757 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667492544 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.401712641 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.394825018 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.383779796 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402956622 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512375606 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995238111 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424608141 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.06735067 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.750253301 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.654537854 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.396861461 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.380746164 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.397433766 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397642379 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.114207671 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.367025401 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405841465 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974897112 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.403325672 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.410849872 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400391629 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.612944283 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607473077 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391172024 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623224464 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428491883 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417463152 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.298432896 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.167942611 seconds)
  done (took 1663.098573291 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.42485422 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.447802026 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.424732814 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.478620225 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.459954154 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.509471787 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.413879166 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.408535583 seconds)
  done (took 52.875845013 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.397152373 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.553314594 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.433629718 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.399036557 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.415050585 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.403395361 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.866007041 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.427235914 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.402433025 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.406367252 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.413493759 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.413734129 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.060866439 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.407384778 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.401384976 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.392943601 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.412495589 seconds)
  done (took 66.514504992 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.631713389 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.456296841 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.364494459 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.476617525 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.424958476 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.402279008 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.408581496 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.412825749 seconds)
  done (took 58.88605523 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.415810499 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.415076111 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.419490005 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.416955747 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.418653491 seconds)
  done (took 8.393861219 seconds)
done (took 2070.335879776 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.403948774 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.407584122 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.406537433 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.405799741 seconds)
  done (took 6.931285021 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.381767716 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.101972113 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.389858072 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.397287184 seconds)
  done (took 18.577133629 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.411147466 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.416516485 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.102302572 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.031058044 seconds)
  done (took 5.439021604 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.150934433 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.163741592 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.147733136 seconds)
  done (took 7.769074358 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.405126461 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.405428015 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.408734652 seconds)
  done (took 20.53025206 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.697489598 seconds)
  done (took 3.008358081 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.550874301 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.597062339 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.720026042 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.740602618 seconds)
  done (took 7.921913829 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.787048052 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.797234161 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.591113499 seconds)
  done (took 6.483026375 seconds)
done (took 90.792458061 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.228737868 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.406983368 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.606952765 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.191858642 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.631727486 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.606249273 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.610851958 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.163918041 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.705375934 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.69257427 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.198575606 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.631799631 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.561511115 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.405908299 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.564310867 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.402253019 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.637193247 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.274263984 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.879758115 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.076674398 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.606427719 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.836699809 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.026696553 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.969559308 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.632915288 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.557924561 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.430389287 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.406473306 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.05727576 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.569880311 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.562436383 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.260194933 seconds)
  done (took 191.706828257 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.414554812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.40295972 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.402592516 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.402007669 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.424691381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.405907019 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.406330895 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.422006651 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.403272471 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.403315499 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.403923811 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.404492106 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.405491547 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.400176786 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.402007863 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.403591037 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.403043824 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.423534922 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.400361049 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.417873761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.402533436 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.420077804 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.403022216 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.408946065 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.413352595 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.402577668 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.41537725 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.404201121 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.424425755 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.410629253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.411126116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.41381199 seconds)
  done (took 206.39452752 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.402209825 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.418825652 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.404716684 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.405197652 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.415319222 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.4046266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.406795572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.40266408 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.437414797 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.411799089 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.404163072 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.400283111 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.406620879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.401700058 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.424555842 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.404477221 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.422314067 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.422650955 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.411127032 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.402846515 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.407273788 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.404579158 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.407817137 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.414549334 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.417999371 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.406586975 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.417675067 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.417133918 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.404788336 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.406427594 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.40818014 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.405590503 seconds)
  done (took 206.441377054 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.605260732 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.41512026 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.414968364 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.365723625 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.41235929 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.41359876 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.409271727 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.609739636 seconds)
  done (took 14.962492578 seconds)
done (took 620.809295609 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.727015845 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.446452336 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.618187485 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.436727269 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.185464353 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.446723666 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.435674411 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.610554326 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.361481412 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.621696093 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.709866317 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.447919216 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.844501211 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.429401414 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.692107699 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.53558304 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.297534842 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.416763685 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.759878054 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.953244397 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.694401119 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.877796265 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.622633829 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.335448114 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.851043979 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.877339543 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.130806972 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.283745139 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.452474837 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.75851203 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.055117382 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.394512252 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.495870709 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.498432976 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.558182735 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.537371054 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.358257544 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.491264692 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.642354081 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.673805182 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.988732938 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.160864295 seconds)
  done (took 95.029787205 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.400063116 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.400735947 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.397724309 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.400484314 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.398131649 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.398656289 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.400822378 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.400538016 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.399448156 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.397001363 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.397249843 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.402650414 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.401910438 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.400490264 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.399685812 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.400001834 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.398734222 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.399870605 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.400663447 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.397918587 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.402541084 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.399168198 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.396603332 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.400201153 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.403514515 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.401502443 seconds)
  done (took 37.717874692 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.419610087 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.670871595 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.84098022 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.424149581 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.41925148 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.42532121 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.499423016 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.426488749 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.422818771 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.419867596 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.588954122 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.42545425 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.454395242 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.866153408 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.430472492 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.422252807 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.414095691 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.419157882 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.678416 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.432465605 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.51994119 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.424750594 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.49776414 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.431385068 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.438191267 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.423010719 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.424297075 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.97719625 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.446175934 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.590323166 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.223283901 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.5038473 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.932358376 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.854957392 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.209064338 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.43105868 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.424894801 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.593379177 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.420608145 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.42150642 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.500918796 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.424331628 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.840390801 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.081801264 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.437676363 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.420967452 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.998511897 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.610129784 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.667649503 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.432514067 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.868071034 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.431372424 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.422612875 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.425101288 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.666748744 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.427717314 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.425188299 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.979061685 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.446518864 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.503926928 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.422433023 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.424151888 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.68478278 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.430206725 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.676379633 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.428076673 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.425845401 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.442224725 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.842716 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.426741634 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.100735626 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.441525316 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.42521604 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.593631799 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.670698056 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.030697775 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.444713476 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.693082784 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.947755251 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.51534338 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.427738681 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.971509513 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.521725396 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.43065554 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.427420544 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.425973114 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.427413521 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.471034852 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.499496619 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.049604625 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.115299235 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.014446506 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.521479852 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.438117109 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.422718765 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.985559128 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.44576126 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.422792311 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.837448408 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.09986072 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.443926731 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.434810871 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.096122847 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.443269877 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.508364619 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.431629298 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.856601682 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.426426647 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.470456163 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.426026567 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.435301184 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.446718192 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.508202799 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.429384705 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.430904661 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.073011452 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.619621029 seconds)
  done (took 187.129470877 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.420112591 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.41680638 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.423832515 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.435091445 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.418310233 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.428825881 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.421407847 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.420426237 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.425380341 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.421793804 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.42111407 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.420878495 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.424566292 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.421188157 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.429217581 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.428528735 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.035071288 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.417772069 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.430798953 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.419791839 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.219858407 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.427186642 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.435809315 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.420415674 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.423284011 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.422935132 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.427020767 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.422888358 seconds)
  done (took 154.610221913 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.429063944 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.995157072 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.444590476 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.562855475 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.448837415 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.427015319 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.56167126 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.484915131 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.453589637 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.428355754 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.431739742 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.735258435 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.428645976 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.946341821 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.620380338 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.578014838 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.95110843 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.445551646 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.428651289 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.428620172 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.564834009 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.431008538 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.733233965 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.990939039 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.445931639 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.99295983 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.412951785 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.428633134 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.429255174 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.997593025 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.442641168 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.735853853 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.508862273 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.489489123 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.019610844 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.961043896 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.955758787 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.578105953 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.437570705 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.429084225 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.426805712 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.411065381 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.998642336 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.445465186 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.433607961 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.987771229 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.446804762 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.434000921 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.437246132 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.429370092 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.490916146 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.511017895 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.768089848 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.003126483 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.522904066 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.445827016 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.566227983 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.819492939 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.432659505 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.962187122 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.419556523 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.017807941 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.449136002 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.413224214 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.433473768 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.439812911 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.584202115 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.566538585 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.962853549 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.451537521 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.962286144 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.603448805 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.428686131 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.427762291 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.435807067 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.020011479 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.982184368 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.601931464 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.566832359 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.628893041 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.424221583 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.434368593 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.418648974 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.510199986 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.433691805 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.020508116 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.979669134 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.447684076 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.437428755 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.434561701 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.435767975 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.609037068 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.042486415 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.534078142 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.939367361 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.76386051 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.754199189 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.440525799 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.495298817 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.450300967 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.751691025 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.438707201 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.49183734 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.885338874 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.751826091 seconds)
  done (took 170.240375447 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.687648987 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.665905154 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.531452832 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.596124189 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.053844343 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.015087219 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.735511151 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.579858293 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.548731865 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.697674456 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.618150902 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.529244826 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.653835731 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.511800336 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.180194841 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.522271382 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.547089126 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.583605926 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.590125849 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.463437075 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.125667287 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.730023435 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.631317571 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.327349694 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.530823412 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.232986081 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.002321511 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.994411993 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.616059068 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.771719955 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.980722312 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.566516981 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.421347495 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.160253535 seconds)
  done (took 68.738803256 seconds)
done (took 714.777521995 seconds)
SAVING RESULT...
DONE!
