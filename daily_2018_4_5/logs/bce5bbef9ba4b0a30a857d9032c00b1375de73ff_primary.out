cset: moving following pidspec: 30084
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.101109312 seconds)
loading group "string"... done (took 0.525127592 seconds)
loading group "linalg"... done (took 9.413841093 seconds)
loading group "parallel"... done (took 0.173071993 seconds)
loading group "find"... done (took 5.706824752 seconds)
loading group "tuple"... done (took 2.080840617 seconds)
loading group "dates"... done (took 1.415877829 seconds)
loading group "micro"... done (took 0.196051574 seconds)
loading group "io"... done (took 0.531085443 seconds)
loading group "scalar"... done (took 58.589664732 seconds)
loading group "sparse"... done (took 13.846459916 seconds)
loading group "broadcast"... done (took 1.296616932 seconds)
loading group "union"... done (took 10.584140744 seconds)
loading group "simd"... done (took 3.541525931 seconds)
loading group "random"... done (took 13.193414392 seconds)
loading group "problem"... done (took 2.241755663 seconds)
loading group "array"... done (took 24.401911014 seconds)
loading group "misc"... done (took 1.169112045 seconds)
loading group "sort"... done (took 3.709549011 seconds)
loading group "collection"... done (took 21.964824934 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.695013961 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146452415 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.192782405 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.204278875 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.279495672 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164670856 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157167381 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.170465199 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.582152966 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.213176647 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136610849 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421711444 seconds)
done (took 6.144434292 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.267982912 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.248470846 seconds)
    (2/2) benchmarking "String"...
    done (took 0.188060103 seconds)
  done (took 1.156672817 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075840421 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159087204 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107965822 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093585191 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093353404 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108784607 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093900789 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109004425 seconds)
  done (took 1.491630464 seconds)
done (took 3.721572275 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.517220815 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.873599966 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.501681388 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.182395022 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.317261649 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306097605 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265981047 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.2202476 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091335983 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085099001 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176100139 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.421147743 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.38491198 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.945379842 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069684083 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092246253 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.155211343 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.772632922 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078706185 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108795741 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.529857541 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.214026906 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113842731 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105534711 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184299891 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133905249 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.14022168 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.106430604 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.658061691 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.130655972 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.217123029 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082735993 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.138801658 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165742513 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.212311672 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110016995 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669806772 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198410726 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097861645 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101487276 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675366405 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.115936469 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.206993178 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106158675 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068955974 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.162726097 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117022927 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078719204 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093457264 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102432033 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.158793053 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.450664276 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106410671 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.191188642 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091829199 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.692077996 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097331402 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.27426104 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125374468 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093334213 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090226113 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087213467 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158214219 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092475367 seconds)
  done (took 20.079242654 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.169891742 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.186306062 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07629712 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15673791 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120732207 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097322455 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083526053 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077875923 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125790995 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176217814 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139044549 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.192003187 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075472968 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088337856 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.17135502 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.228069296 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.125423962 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103378968 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089003077 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10668154 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121926474 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09545151 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107646792 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090668554 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170725647 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205243885 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110651315 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121860293 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089010476 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095054353 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141991164 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143470089 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091615769 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088251251 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17120535 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121905871 seconds)
  done (took 5.299607477 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.243701443 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104829419 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.25022612 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.197766184 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150837461 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.114987101 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17933617 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.30002016 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.231066079 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.186257348 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178703854 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124607057 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096031374 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07801759 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.077932239 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.0956579 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.32366231 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.191919132 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.171824901 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.185256764 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097573335 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098270881 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362892755 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100446123 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084871804 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.110599352 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064054205 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.228167763 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094330236 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.066595238 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082571353 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.121171083 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113458756 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211860831 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122897794 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119626009 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11316731 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.178408495 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.085458412 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.224281336 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099998499 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096455955 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.115809701 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133450392 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113555256 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.105911246 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.108911699 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219916269 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085926675 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129251297 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.024151485 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196057792 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.159037362 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083100332 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288760598 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.12777842 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100390717 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099889644 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.091965606 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.799612433 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113491371 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080429843 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095207616 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096335804 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078219118 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.469158496 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106789964 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.312473771 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084251027 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.15596099 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095918343 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.118658422 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087763703 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10059798 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.109666602 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085980203 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096178487 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085812572 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077721681 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105525377 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113545408 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100023493 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079684566 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145470264 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096108773 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.123356082 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108776683 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.105671779 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085368082 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126760474 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081436486 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.088381925 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.099175144 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.169018229 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.115944416 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112188049 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116007352 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142429373 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087903218 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.258629267 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097727512 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12270811 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098123801 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112246125 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115672642 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081043444 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08390326 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094482973 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080276 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146693136 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.100185013 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080763763 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087440051 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108118226 seconds)
  done (took 28.530942886 seconds)
done (took 54.632536995 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.431314933 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083172783 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081230174 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102591689 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081632138 seconds)
  done (took 1.584775205 seconds)
done (took 2.363774656 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.312881484 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198581953 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103130143 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188283883 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085873697 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.194785607 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.180892249 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099977169 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.203409998 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084422781 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.19024535 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087310623 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10396209 seconds)
  done (took 2.839328904 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104240898 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106755231 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102427039 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120782845 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08429406 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100357814 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118018086 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107877961 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099753487 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111479265 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085432519 seconds)
  done (took 1.919063752 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101867208 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1022043 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091615165 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116923028 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084393997 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096800873 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114951287 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105385872 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096308289 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110432079 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084459828 seconds)
  done (took 1.885209613 seconds)
done (took 7.420914923 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.228683042 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.928372737 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.191551669 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.244597624 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.374327659 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.274919305 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.609047183 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.204302214 seconds)
  done (took 15.970298816 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.206929936 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.113555466 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091152956 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089048253 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.108699464 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096347987 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089464394 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.109006969 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094517092 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096442483 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090697102 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.111104389 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091079427 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090429513 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.109136501 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095790232 seconds)
  done (took 2.527213877 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143915575 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122764523 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.115217748 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097520309 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093249357 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.115853413 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100251778 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.096037167 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.110951775 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094849288 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.10056869 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.1119668 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096194236 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092661229 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.1133532 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117328949 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091737664 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.113358866 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116211865 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.096689079 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.116120392 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09519726 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.110971035 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098878402 seconds)
  done (took 3.428466175 seconds)
done (took 22.707465793 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149414976 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100913943 seconds)
  done (took 1.036514815 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.169428262 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.182896104 seconds)
  done (took 1.14138626 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112294856 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08881368 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135412986 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101881676 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090806262 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106593965 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115494287 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106380838 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.089123937 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.089648591 seconds)
  done (took 1.832923137 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095909176 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094611834 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119768822 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.171749235 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116788851 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092296271 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0940074 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112693826 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095160455 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.088382149 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.113477872 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.226499947 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094159037 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125470505 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094768718 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.093523007 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11673874 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094546768 seconds)
  done (took 2.834155031 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091114146 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091049396 seconds)
  done (took 0.976830103 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094580733 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089998322 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090919255 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109518423 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.088714601 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088588079 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106359028 seconds)
  done (took 1.462364979 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.525761396 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.24261261 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.368777868 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073399097 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124189421 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.333102466 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.105153762 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072268057 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092001968 seconds)
  done (took 2.765556511 seconds)
done (took 12.841141388 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091377257 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.248126349 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.632930064 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111493649 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.08990765 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.160427147 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.315327673 seconds)
done (took 2.453853985 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350803238 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.166841031 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084506071 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091111212 seconds)
  done (took 1.489497009 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081706023 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098149829 seconds)
  done (took 0.981442193 seconds)
done (took 3.276034919 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089160078 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.120238149 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.106849672 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087474392 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.088493938 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087401852 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.107220951 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087858622 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086663642 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.086591786 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.106296347 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.088432541 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087514577 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103071961 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087575804 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088071084 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.087056165 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103908215 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087681983 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086468151 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104243132 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08749116 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088868202 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087178772 seconds)
  done (took 3.078750229 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111501274 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.089522413 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109192512 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092463659 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093381111 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108871669 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092295814 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.089814145 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110652005 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090948144 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09210517 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.091172858 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10673744 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092552441 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090158781 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111597782 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094163954 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089046873 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107288688 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.092573706 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091189349 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10666929 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09327425 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092013507 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110420407 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093562093 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089739713 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107188141 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093423297 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092758757 seconds)
  done (took 3.730490492 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.100122003 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086216298 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087147757 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114184745 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086283972 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089120722 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103521552 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090842057 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089886822 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087569275 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107349184 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087921386 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088300159 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107741686 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090081643 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091441324 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096894636 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.106726737 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088936697 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088667069 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109783321 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088368706 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088697729 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087621605 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106271839 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085783646 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088355879 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10682863 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090459974 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088868977 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091553894 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.108828296 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089212647 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099348919 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109279865 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.08905607 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094146325 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.102375777 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090544559 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085897822 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085611852 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107058811 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088659826 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094315633 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106910791 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.088991487 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088104339 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090053498 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.107347583 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.090791705 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085926579 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.106927137 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092505825 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090248092 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09046734 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.103392336 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090117771 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085768645 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.10920718 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089091074 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085466638 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084275679 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111231407 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0904036 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102456241 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.112606725 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088789417 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090825942 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.107906791 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095753439 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090373257 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116120022 seconds)
  done (took 7.666511846 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114155431 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096523519 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108702916 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090970225 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09030214 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088347538 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111728138 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08981242 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089138264 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11265677 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090536055 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090066588 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108112314 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090687417 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090263257 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092800475 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112808569 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089824662 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088459701 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107076999 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090980793 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092321332 seconds)
  done (took 2.946304068 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.237019438 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095716535 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137434397 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120549519 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107601971 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122326163 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095053475 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095664846 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11106041 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100355916 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097900004 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113123069 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107755137 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097959474 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116210668 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100474713 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111754243 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100385888 seconds)
  done (took 2.882962771 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105639943 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090877893 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.152396011 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092267632 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090730427 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.109758166 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097526407 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108836408 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110428941 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.0922016 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098067644 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109501319 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093344846 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090771616 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090675873 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109630664 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09142458 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090213236 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115482842 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096791595 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095977306 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11736977 seconds)
  done (took 3.066390922 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107542253 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092314509 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127130247 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094855606 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089665513 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089206488 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.11433667 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091313397 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.098788771 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.10981366 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09180629 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089828233 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123303051 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091711095 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096138655 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110144006 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09337703 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090519827 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10852372 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091023904 seconds)
  done (took 2.819829843 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.198281294 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125349397 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106285222 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114806777 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126014845 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106691613 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134357823 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106853397 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10647478 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135165057 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108661472 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106950653 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133299149 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114155707 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124355827 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114286767 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11396723 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133738501 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106886058 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124835959 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119398324 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10610048 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134105742 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108074028 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105506619 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126323598 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106411779 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129184058 seconds)
  done (took 4.195702496 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092787746 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089206675 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089803739 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107284246 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091016093 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089245843 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088774048 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.107933937 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090708492 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089512013 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107705577 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090635064 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088858399 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090311193 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108276299 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089736438 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089625273 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107850068 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090329792 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08968483 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089274657 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107890189 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091925725 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0899125 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088591775 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108192644 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09014312 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089184476 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108438968 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090519937 seconds)
  done (took 3.661725452 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106935681 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100599014 seconds)
  done (took 1.031503341 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099389346 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105215755 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088645771 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109359331 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096968184 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090452614 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117927227 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096387331 seconds)
  done (took 1.630409475 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.169481949 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.191793999 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095512321 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.121308603 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.172443397 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.18449579 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129229575 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.114834631 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090183325 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082306265 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.184605016 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082211231 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112299613 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089171638 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09090798 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117049363 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.092402895 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.098069397 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.116288777 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.093449213 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095647678 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114021314 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093488853 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100523363 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104537541 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094345626 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093217013 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.120184627 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088084823 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092479575 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.109607571 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093318564 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.093310333 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.113545474 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092872078 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.191182396 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098642767 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088204295 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110974696 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097343882 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123257305 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.090015984 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.112991782 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090936915 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111698421 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095749422 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.095471914 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091323616 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.103027438 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087854949 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091272327 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106319533 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091369198 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091363972 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10958789 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09842248 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.093465407 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105481728 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088526072 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087220842 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108560357 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089427807 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093627496 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.092897166 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111265882 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091686696 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089492482 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092422027 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093930801 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.091522646 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108753699 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106507384 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09135438 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.114547852 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096404667 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.091488135 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107815888 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097477 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089775771 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110394791 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.095453214 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119262948 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112215755 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08788492 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086190089 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.116594226 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094272755 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.093371249 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084341935 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120587088 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.093696282 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.091124575 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.103232723 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090583789 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086158483 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.113571135 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085797865 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091425828 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.11012367 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097084518 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097053908 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088247179 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113343623 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097955732 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097227187 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109777584 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.158536425 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108096358 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087970381 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09407452 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114962867 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086416819 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090991298 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.109245777 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091314872 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086664337 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.095781231 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111129582 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094786203 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.094067095 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111838488 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093383951 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.092038603 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.110319763 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088969973 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.094917273 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11758544 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093494195 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.092970511 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.110746095 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093855403 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092282792 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.094485413 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109289882 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096986527 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088151278 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.109552168 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093184948 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097103875 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111875851 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088871227 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090700515 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.11061637 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09222656 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.093643773 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.112252153 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089241123 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084052299 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111302764 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088713099 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094073737 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118826407 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088374401 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.093793963 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086706027 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120460019 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089420544 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096647096 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113688604 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.097851364 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097222486 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104552988 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089575014 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.093927627 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111953108 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089853338 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.092842155 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.090966697 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.117225888 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086358063 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.094487885 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.103054779 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090060317 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.096142849 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.111624579 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095644253 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088147126 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.157216093 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105970592 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096687513 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110835106 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093262404 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.095997719 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091148429 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.11560045 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099600755 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.096629719 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.108718333 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092161081 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097102951 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10730553 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096170078 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090559301 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111458784 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085364395 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094083936 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084508945 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.116657793 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094968448 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096547063 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.116111207 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094953932 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090996784 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.130896789 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089488179 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.095865799 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102916681 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098661118 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102767633 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.117559765 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100095484 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094686864 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08966449 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.113914367 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101318422 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094262498 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112443365 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09367206 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086242794 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.105241881 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10089666 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09532087 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.107907782 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094410405 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097708923 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11410997 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.092398919 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085349815 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096679768 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116316269 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088622911 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093081636 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.109022527 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092558366 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099355056 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106496143 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090988865 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093849377 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.115942442 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.0934811 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092975618 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.115044991 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099318875 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.095514843 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094622813 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110592543 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102106225 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090999746 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.111794182 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091371857 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095284975 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.10727604 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096513016 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09366348 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108821445 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089852238 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096696261 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098068021 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.118190764 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092705011 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096616236 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.121057313 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100103307 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090838795 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.118382246 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090529673 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086343427 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109251444 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088145133 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09432874 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088709589 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.117740652 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.09244159 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090658768 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.116635835 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097247602 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091133545 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.118752512 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104248752 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086682866 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.107541272 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092033355 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093345002 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109232215 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090726006 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094413546 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113355703 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098689847 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095522693 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.107919572 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095238021 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099370298 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089086755 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.119965441 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099672278 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.09792716 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.109446422 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098846344 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089572162 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117203541 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088183772 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091763304 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111119409 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095315637 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089790248 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111810774 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08979288 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086714261 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.109219528 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101226327 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091301351 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.0966958 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112954118 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09226637 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089487688 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108922368 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099873093 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091514812 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.119422065 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09523907 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086251464 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106723424 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100759983 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092841091 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098516118 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110690595 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097190345 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099853648 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.116969238 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095534945 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102814385 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121769784 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100175041 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098695678 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106336153 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092956482 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097250136 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.113769191 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097550838 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095588843 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086587718 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11634609 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099755659 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094325143 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112674912 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088486448 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093577788 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.118646258 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098357099 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097081506 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.094985444 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115560192 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090123007 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097308133 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.118893436 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094994832 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098725428 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113245236 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099279656 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090559225 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.118662143 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096237105 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087408739 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086066647 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112892035 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10070465 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086534364 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.1181571 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098098604 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090266464 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112078092 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100521738 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089237053 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116130579 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099329734 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09154067 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121874874 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096228503 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091800312 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.097516317 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.118797778 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08831306 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091194816 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112756104 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101159203 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091300338 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.118977158 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095253348 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098851982 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097286652 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.120543246 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.09891987 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098057932 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107548056 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10133369 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096828314 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.116095643 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091729423 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091201376 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.107758044 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094776949 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099995432 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111254336 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104126853 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100154461 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.09179864 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112717322 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100134479 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092029482 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120775962 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092325853 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095056493 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.107545418 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097413796 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092801285 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.120126242 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092412416 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087837508 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118753838 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100668496 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098116909 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09574342 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.121945895 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088352224 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087483416 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.118418036 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.09212406 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103456165 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117076028 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093617077 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091611931 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.11627296 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.0968117 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101351955 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088239273 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111452011 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095136052 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095414855 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.112985715 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088983999 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097044496 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112921542 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096849255 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093068984 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109735627 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094891056 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100176636 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112187783 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092425177 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091476494 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101007093 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113923689 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090468869 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088364183 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120793414 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097337066 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101276064 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.11254143 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095561727 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.09099706 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.117635281 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101699802 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091808171 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114349526 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093750964 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099090487 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118021491 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089515999 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.092668528 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123900608 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099953921 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095978077 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096409778 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.114416457 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102631068 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099615912 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.117202493 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089991241 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089091203 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.11425456 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08958915 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.0962171 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1196591 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094054231 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090707237 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098061393 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120186458 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097622093 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096507927 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109482065 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102462082 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091952044 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11623134 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090263781 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088055653 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095956656 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120438744 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094566636 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093664367 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.117141887 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09859886 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08895416 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111487838 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099731224 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098229279 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.120748578 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09509088 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092352658 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099486292 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126850925 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096615754 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092983407 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123259475 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102151001 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094513988 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115814932 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099572642 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100589134 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.117705875 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102431579 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092064515 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.114260758 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102645934 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102025206 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12310046 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094789032 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088315286 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.118096716 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094164493 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089182817 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097211224 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123786539 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102487322 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0938466 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112081919 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105140121 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09919396 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115925802 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09273056 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092633225 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.120243183 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093756378 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098842981 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113348229 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102686562 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101159736 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099716002 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.125368004 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089437566 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09958754 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118224167 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103107718 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095914202 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.109204045 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091249512 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097417502 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.122700684 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103273925 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098607052 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098094209 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120556922 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097204614 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094328231 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.11393869 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102401696 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100499974 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.116600324 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09848201 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.0940247 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116109133 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098652375 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101517484 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101367244 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116932716 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106869764 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101443713 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.114571916 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093464015 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095742149 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.119080954 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097452678 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099500286 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112711803 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091643146 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101369182 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101944794 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116431557 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102888487 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101994763 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115224711 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098842276 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102604701 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.121896045 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098217267 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096091961 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.119071615 seconds)
  done (took 61.514689416 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146628975 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102810707 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118508048 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098216132 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114223436 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11992627 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097920439 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098758608 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119291518 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107422974 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096851786 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11633813 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113101115 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117889845 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135751178 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106605297 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118295856 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099997169 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096987169 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098863905 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132542779 seconds)
  done (took 3.231670144 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11633712 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109466812 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129109902 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112202827 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103395775 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129574223 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109259103 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12803648 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111913621 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104671138 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.13247064 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107779252 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125734947 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107517813 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106649075 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125504773 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112762002 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103802951 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.129237892 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108601825 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106049742 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.129483919 seconds)
  done (took 3.425095463 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.128604838 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101195086 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095417048 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120017739 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100955412 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097234977 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121181476 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099118039 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107158075 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092326085 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110581803 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095463058 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096574895 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118926924 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092539318 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097705052 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126037841 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102724637 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102419507 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096614664 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109762913 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098755883 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098523414 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108527362 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.342396138 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101791553 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097547632 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122372358 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089364902 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100205337 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118984655 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09223916 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088014094 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.087090055 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.111942243 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100327052 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.09963154 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.11848233 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.09903954 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089291425 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.118992741 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.101154634 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088536422 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.09720583 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.118813665 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093011569 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100253591 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.118604498 seconds)
  done (took 6.093846211 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126209164 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162393318 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101981889 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.13524929 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13349166 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107158433 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099401063 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136443372 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099156255 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122934937 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113327945 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.109335781 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125348922 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10439765 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101970237 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124278965 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103333072 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100154091 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126630668 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101393906 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.103887647 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124029903 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110049808 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.128676489 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105662133 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100905708 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119830014 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.104835461 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109042079 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126461317 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105269095 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104137574 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132235572 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10139634 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099284434 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123647132 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112215022 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101370272 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123365547 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100560335 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.101227959 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125621047 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102481718 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.111634898 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123273819 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102777142 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10040624 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.121313058 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111211684 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.101188109 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130615992 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112520344 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125435261 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102463724 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10372556 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.132441829 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102886881 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.099905105 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.124172319 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111094531 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100131022 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125483342 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.112686039 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10163714 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.127897673 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111708205 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.12516073 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105469467 seconds)
  done (took 8.74597675 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132917652 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10502571 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135910356 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11446275 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105560166 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126878901 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106044291 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104656427 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127218856 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111705037 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126448755 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.22892093 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12566851 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111048605 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105103154 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129345911 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106247278 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126924243 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106496596 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106410123 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126328405 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115801989 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105444131 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134396338 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117231952 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101968687 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127395927 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10678423 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13384803 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107213646 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1175926 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.12642805 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106522352 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113520156 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.140043843 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105069483 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.120753253 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107929732 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106083028 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12668543 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105486023 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114596969 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127078023 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102768145 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105001517 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127085833 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116063433 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116707497 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.13359171 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111147122 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.127574497 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114468716 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106288095 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.127989256 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114244037 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140271604 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1161339 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114088035 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127067489 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114048932 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133632336 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122608095 seconds)
  done (took 8.299885693 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100568206 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100025235 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099446258 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120699656 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100779546 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098838333 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097298352 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121391572 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099597472 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099092641 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119605067 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099756219 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099791995 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09906315 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121826192 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099670141 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098121388 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119870644 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10089903 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098955402 seconds)
  done (took 2.989954623 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109099876 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11583866 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.12098337 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107309927 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101409481 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126763746 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102820056 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101981267 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10036078 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123754304 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109934076 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108892138 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.125012398 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105899105 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130153382 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107415042 seconds)
  done (took 2.69192256 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120175379 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11620399 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.212591912 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103268507 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125654338 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109985085 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101177212 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126207052 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10122202 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106686783 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128677861 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105939195 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102077049 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101304699 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.125148817 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103929954 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099630497 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128266538 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102712161 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.218392603 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105510757 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102270452 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.12666135 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104208623 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102587195 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.127519442 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108233917 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100226469 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127454788 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104901941 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10342553 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.127591351 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101320179 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104793295 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.122804678 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.10418274 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.100979032 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100349082 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.12553117 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101747529 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103288846 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124734502 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102585229 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103730898 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121730427 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103463764 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.1003643 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.127143037 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103646869 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10295169 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100005062 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129647229 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105540402 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108156917 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130667215 seconds)
  done (took 7.206375916 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112436972 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101754082 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133122853 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101454001 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10183992 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102088944 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125076229 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105274525 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101743148 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121429385 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103910833 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10280056 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123493278 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104134939 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103072329 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102252128 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.122470072 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103137005 seconds)
  done (took 2.869765281 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107031835 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101035828 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103962177 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123660227 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102175073 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100447522 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122499334 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101501176 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099416747 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100572362 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124803271 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101191501 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099351541 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123276109 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101775851 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100055542 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122387611 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102089455 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10152356 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099712643 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123278438 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101001703 seconds)
  done (took 3.265574396 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.1135435 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.21458176 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107619872 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.222621758 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097739294 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.12022269 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.108459627 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098278216 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.138158059 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099587006 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096488973 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.119238303 seconds)
  done (took 2.439884341 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130483996 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137843012 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125145514 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105067613 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110665353 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129543811 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105856792 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105762634 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137212142 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117588341 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126668779 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115340367 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112313196 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136273118 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11040144 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131345943 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106869636 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107466597 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12436232 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124469976 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106172454 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136224213 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106809315 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105636255 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129180895 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114944768 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135329093 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120080786 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106218901 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136643851 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110974489 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106160847 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13784042 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117339625 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124667748 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115271146 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106093141 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142707018 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110806702 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135525803 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103615216 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110383102 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135452727 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112312362 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113624449 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12874607 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11221648 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128342649 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108410707 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127017853 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134248717 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113330982 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133201111 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115000167 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113772913 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150304508 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115906432 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135681523 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111647223 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138913585 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114688008 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110253052 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136188204 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117815779 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13225159 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116252349 seconds)
  done (took 8.878863104 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142014863 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10290913 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128629339 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117628162 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113863432 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131127828 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105875284 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128317938 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108275138 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104514491 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171306817 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108332784 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113504086 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137870802 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107863056 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128506805 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108983436 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115366992 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125717673 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129055915 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106372035 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138189287 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115649962 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136514522 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117144224 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131777436 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108896568 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107184667 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12772519 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108688171 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112047339 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130039156 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114868296 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103349812 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136309722 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107800779 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107204779 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135061322 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107752323 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132639021 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116172055 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120986362 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129389643 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108505264 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139664829 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108388312 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107427044 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127991406 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108730279 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103410314 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14078763 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119794981 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140313064 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117055747 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107488498 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129486075 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107851248 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107385923 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129291912 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112786788 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115109064 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130144221 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128368691 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129337691 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108176172 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115188777 seconds)
  done (took 8.837359269 seconds)
done (took 168.0046774 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.177438107 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.216974564 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.196176934 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.155358928 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092343742 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.15099862 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.126469848 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.199398357 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093065942 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093121523 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092271029 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.119631842 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.160526864 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.092472821 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.116696919 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.096440549 seconds)
  done (took 3.088535024 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.191335072 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.33197373 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108237673 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119832022 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098888621 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096456699 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120155457 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099961546 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096486964 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12965157 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099639698 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09349724 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126357298 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094913402 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09781637 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119209391 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106552246 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097732183 seconds)
  done (took 3.145304907 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118383271 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142906176 seconds)
  done (took 1.18027595 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128654024 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.214322367 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278524759 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168498939 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119278743 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139577882 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147058785 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133718516 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.186241965 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13434909 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112233099 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095583223 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146221286 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105105997 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114251639 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120700969 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125617939 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134911474 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113670783 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099339479 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143238047 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102285769 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103068665 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.134965791 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.176692352 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131758062 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103435066 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100946274 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122403772 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112272857 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104310614 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13867632 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111781559 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179498674 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.1015987 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175476928 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105637343 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121888086 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112751088 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097940153 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125339006 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102580836 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111578979 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119680495 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102398859 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104218738 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125765737 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104040051 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.126409302 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108337743 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105485482 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127859428 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.148772707 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129355405 seconds)
  done (took 7.860038607 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.860368237 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137960319 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097689765 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.995324147 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146895164 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113109181 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.85771414 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145110826 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250366688 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.876153573 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114011734 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107804368 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261055164 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25530649 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.288462158 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357599372 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.717522223 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113748569 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128652819 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162419178 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106619922 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145053429 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120707462 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.514011302 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099796892 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097825138 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129628026 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108669082 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176635202 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099811286 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102551105 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195873333 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291416545 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209933902 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099161509 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121121085 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099756697 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184031984 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272594534 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218488015 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171636975 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11930509 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098783641 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106305341 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141828589 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09592542 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178475461 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188039543 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.165192841 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125234762 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109898627 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10929666 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129448289 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174863106 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.0981397 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357758542 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.36548768 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.12078231 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109863253 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113048588 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265143612 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12350234 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236735795 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126132316 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214144739 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121425206 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835733803 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160904415 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.12200019 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104012123 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105306467 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128764793 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10608652 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.187674833 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.475592773 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133328775 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104188488 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099138267 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229778783 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.121636445 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100104808 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179505218 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099983544 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108062771 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134692771 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108918638 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188417559 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268364415 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111423345 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108372822 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127914833 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112783757 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099119745 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.237567591 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226901641 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174766814 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229447776 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107357907 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179754141 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18257047 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105210426 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188614442 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107348515 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133674425 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107877922 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222794433 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155331948 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102446805 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10563603 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132409459 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.135641122 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102810843 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131900211 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.183654168 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.531002544 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184000708 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095887071 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128599418 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108713454 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179914138 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107581175 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261942283 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131940867 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162762062 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131015893 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098241217 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107687095 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178928188 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129533091 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109846466 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106834632 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132387743 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.25543569 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217717411 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13399013 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250712317 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174993239 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12973992 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188120818 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110015011 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185621273 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110197042 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106128432 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123837272 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823517548 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113732537 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130802579 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107326193 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181637979 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122699949 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101851784 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099520495 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120203272 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814972736 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106766092 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097586059 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124919017 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106617723 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106943334 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131156414 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106931903 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177310315 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244075695 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108652897 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129868759 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100752901 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.177281207 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.100752008 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099739392 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124432541 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102316314 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108960985 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12844789 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103668503 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189338912 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.150562751 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.251267951 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.653817678 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101486494 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100623415 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240026281 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124831052 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327853906 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108368487 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232495494 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182444998 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096146615 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.382763058 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.160632996 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20730051 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103116658 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190036862 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097247211 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131547315 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.153278032 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123439261 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10764014 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176622 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11299833 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131723696 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.276516397 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100789533 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25238927 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097974656 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188062327 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100875312 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106087861 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.348982656 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101559741 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115810043 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.176989755 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10411669 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125456722 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.648277545 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102366852 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111523646 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128378471 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23215716 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.181111401 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109267768 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109218455 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133416838 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.176793112 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206096567 seconds)
  done (took 47.43976033 seconds)
done (took 63.630710925 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267585002 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.175482574 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.281125226 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178004756 seconds)
  done (took 1.919866772 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.270142023 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.158635734 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.2540289 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.095640173 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.265046007 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095142039 seconds)
  done (took 2.083292061 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17534169 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167882601 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145935793 seconds)
  done (took 1.440188435 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197067249 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.215405878 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.324346191 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.230597918 seconds)
  done (took 2.002708401 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.294720293 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115171105 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12323578 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.237550506 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.252484616 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.208528358 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.121808458 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176649916 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127196374 seconds)
  done (took 2.650792851 seconds)
done (took 11.046833506 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.301604713 seconds)
    (2/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.233723721 seconds)
    (3/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.41348235 seconds)
    (4/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.212026178 seconds)
    (5/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.304931308 seconds)
    (6/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.18159277 seconds)
    (7/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.208622878 seconds)
    (8/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.134956986 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.250128021 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.136951701 seconds)
    (11/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.324198214 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.240725458 seconds)
    (13/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.329434921 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.10879618 seconds)
    (15/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.1366798 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.243247453 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.240207085 seconds)
    (18/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.379688523 seconds)
    (19/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.304801946 seconds)
    (20/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.17747716 seconds)
    (21/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.106853881 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.144639209 seconds)
    (23/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.078708333 seconds)
    (24/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.271024277 seconds)
    (25/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.192117863 seconds)
    (26/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.129808955 seconds)
    (27/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.10185774 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127526146 seconds)
    (29/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.106353091 seconds)
    (30/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.22289568 seconds)
    (31/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.143547905 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.147170261 seconds)
    (33/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.175866889 seconds)
    (34/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.130842221 seconds)
    (35/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.137978956 seconds)
    (36/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109449171 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.119595752 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.127749517 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111465509 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100120865 seconds)
    (41/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.12309707 seconds)
    (42/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.181154757 seconds)
    (43/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108241407 seconds)
    (44/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.133242501 seconds)
    (45/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.239313865 seconds)
    (46/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.103741642 seconds)
    (47/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.169407872 seconds)
    (48/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.17510206 seconds)
    (49/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.212882757 seconds)
    (50/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105246083 seconds)
    (51/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.08379195 seconds)
    (52/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.128933672 seconds)
    (53/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.15255077 seconds)
    (54/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.205020334 seconds)
    (55/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.268594221 seconds)
    (56/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.196568841 seconds)
    (57/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.104131372 seconds)
    (58/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.128107174 seconds)
    (59/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.231892507 seconds)
    (60/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.260136776 seconds)
    (61/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.173150979 seconds)
    (62/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.18256219 seconds)
    (63/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.214769425 seconds)
    (64/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.135389294 seconds)
    (65/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.078255067 seconds)
    (66/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.129955251 seconds)
    (67/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.109061602 seconds)
    (68/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.170150218 seconds)
    (69/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.108636981 seconds)
    (70/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.126207755 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121206144 seconds)
    (72/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.189434593 seconds)
    (73/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.104429969 seconds)
    (74/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.171049532 seconds)
    (75/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.082402771 seconds)
    (76/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.08332231 seconds)
    (77/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.136486599 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119909205 seconds)
    (79/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.080002782 seconds)
    (80/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.077893701 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.129600179 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.126976219 seconds)
    (83/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.10629675 seconds)
    (84/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.189631683 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.099849704 seconds)
    (86/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.137754478 seconds)
    (87/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107057322 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098188052 seconds)
    (89/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.108664497 seconds)
    (90/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.172997343 seconds)
    (91/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.085195113 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109863405 seconds)
    (93/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.128899941 seconds)
    (94/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.193753736 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.087873228 seconds)
    (96/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.083113339 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.148349691 seconds)
    (98/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083963869 seconds)
    (99/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.13608995 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.124397483 seconds)
    (101/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.085515381 seconds)
    (102/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.144390921 seconds)
    (103/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.213106297 seconds)
    (104/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.108715107 seconds)
    (105/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.106747573 seconds)
    (106/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.186963468 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120823179 seconds)
    (108/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10493743 seconds)
    (109/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.158811462 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098212395 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.101383106 seconds)
    (112/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083605223 seconds)
    (113/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.156763388 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102485119 seconds)
    (115/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.141572203 seconds)
    (116/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.219115316 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.10732362 seconds)
    (118/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.0792684 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.125952469 seconds)
    (120/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078000337 seconds)
    (121/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077929733 seconds)
    (122/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080738755 seconds)
    (123/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.078382607 seconds)
    (124/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.190948655 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.101012133 seconds)
    (126/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080315925 seconds)
    (127/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.145483022 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122812189 seconds)
    (129/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.085000616 seconds)
    (130/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.108280554 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.127074032 seconds)
    (132/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11061002 seconds)
    (133/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077393809 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.085590402 seconds)
    (135/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.16510011 seconds)
    (136/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108361866 seconds)
    (137/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.078661647 seconds)
    (138/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.215909827 seconds)
    (139/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077361523 seconds)
    (140/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.081836638 seconds)
    (141/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.07834336 seconds)
    (142/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.133496624 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.10287678 seconds)
    (144/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.139079066 seconds)
    (145/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.08400407 seconds)
    (146/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.132956067 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103072961 seconds)
    (148/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.08632413 seconds)
    (149/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.079397647 seconds)
    (150/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.109526403 seconds)
    (151/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080001255 seconds)
    (152/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099402937 seconds)
    (153/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077897871 seconds)
    (154/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.127384831 seconds)
    (155/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.086563455 seconds)
    (156/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.084016959 seconds)
    (157/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.088673563 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.125817587 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109884532 seconds)
    (160/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.084834936 seconds)
    (161/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.083961861 seconds)
    (162/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.078428386 seconds)
    (163/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.109548412 seconds)
    (164/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.081925644 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124352041 seconds)
    (166/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084794531 seconds)
    (167/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.109867234 seconds)
    (168/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081199322 seconds)
    (169/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082278113 seconds)
    (170/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.081304084 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102454823 seconds)
    (172/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.106457046 seconds)
    (173/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.08633908 seconds)
    (174/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09971487 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.099878735 seconds)
    (176/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.141247214 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.099613377 seconds)
    (178/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079255593 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.146656745 seconds)
    (180/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.10446662 seconds)
    (181/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100105338 seconds)
    (182/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077974658 seconds)
    (183/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.102892308 seconds)
    (184/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083209066 seconds)
    (185/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.128767597 seconds)
    (186/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.111114685 seconds)
    (187/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.106238369 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.105189944 seconds)
    (189/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109026058 seconds)
    (190/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.084983943 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.127279721 seconds)
    (192/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103480411 seconds)
  done (took 27.146679558 seconds)
done (took 28.102533057 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.264230448 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104288453 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108949347 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.134178655 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.208130005 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.143130677 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.126680878 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.109653643 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.145542687 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.111162236 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.099405717 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.146698111 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.110032114 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.230754305 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113376938 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.101476287 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.127761518 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.121807463 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.12393402 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.150749775 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.208799227 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129406627 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119695187 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100479623 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235181408 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102154537 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.134470806 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110046501 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121697605 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.135160996 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110628882 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100500191 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.150924282 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.126643325 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100590184 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.134584557 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101588941 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086153913 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109719165 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.134505953 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123335152 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110108925 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.135017918 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103415316 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111763069 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.134067573 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102009646 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.113271802 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.124171174 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112570146 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10295603 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.149691642 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110056066 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099911678 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.098985892 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.127958548 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.121146768 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101463611 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.148322802 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102249454 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102254866 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125749478 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112661831 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10141939 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.134178146 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103364949 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111164005 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11087999 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.135720879 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10384501 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10133528 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.134506657 seconds)
done (took 10.037782591 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10673022 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145790857 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.23388875 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.237261294 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129511895 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.143100521 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115033672 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124842734 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.140662762 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120213504 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137568547 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158215601 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.242692648 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.117907084 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116709987 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.139609394 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113015649 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109341716 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.238546567 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124792946 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151884282 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.11794144 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.153728604 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117866817 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105474967 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.164084464 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.109287257 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113247332 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129390643 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11485967 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.124985222 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129734594 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108966809 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124878131 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.147355792 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116014424 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.140869466 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113787753 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106041358 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.104848862 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140100807 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.121139481 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.129778183 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119041662 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.113262487 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.143802122 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.113423221 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11872508 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.131627438 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114216722 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107038582 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.153994834 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119037239 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122178883 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.141553541 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118290701 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119372264 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.141948486 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109456556 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119171925 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.12970879 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.10677666 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107623809 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151000722 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110063837 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119535813 seconds)
  done (took 9.698259463 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125774981 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135183167 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140163984 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117313239 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110703252 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124609194 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099979144 seconds)
  done (took 1.856349464 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101701656 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.244586548 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218896841 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.244834625 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.242250892 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.255786907 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124544113 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100434357 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.162472018 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.111203991 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.246946693 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.275077023 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110949329 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143033005 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.222049944 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127784623 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.248941796 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.103689118 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115051966 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.248018561 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118154747 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.158356902 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.114460581 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101997667 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.242138047 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102543736 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.292447107 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146223514 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110818802 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115075628 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14203475 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.179646432 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.243310912 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.141460104 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11010745 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.245950132 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.215563282 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.142274193 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.258596861 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106483626 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.242808413 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115502884 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117916176 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.143823609 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117364071 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.234843514 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120248343 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11837008 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.143473653 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.252834827 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.113739955 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.244660754 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113455129 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115739886 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.13953884 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117037681 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123799838 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.14440864 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.252924228 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119048036 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.246920088 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.219283976 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.246899031 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.249634296 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126170227 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.248929877 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.234562078 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114791559 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.136489343 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117730056 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.249274862 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114915576 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112777968 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.239382803 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145268572 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.226558118 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.250894125 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112233113 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.143346946 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.105859917 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114925369 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.148643344 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.214338364 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142566105 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113878038 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120573096 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142612056 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115506612 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.107874885 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.151305267 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115245399 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.139137548 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122097808 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115296985 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144794855 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.25416336 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112536666 seconds)
  done (took 17.050915283 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104727241 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.10335033 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106951507 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128418534 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103194844 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103292486 seconds)
  done (took 1.67648006 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.138398511 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117895058 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151172379 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11945797 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.164440181 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.25272374 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.260961145 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109551901 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.163022381 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127471919 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.254794516 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257068428 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.255734627 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120239645 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.260292806 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11895018 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.262998944 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114874983 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151648757 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11498574 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114699468 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.147551968 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114792183 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.24693952 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117026828 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118018395 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.158570452 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125540837 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.123572917 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.138349072 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120188934 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.141266913 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110216651 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109862863 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.258156007 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109118593 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140436792 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120611802 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117840003 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144875033 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.259602427 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113906828 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122919083 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.144640664 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111380863 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109925263 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146483567 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111539351 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.262181908 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118858406 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.145648901 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.118344977 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116468683 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.146090244 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110119939 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112084543 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.145322953 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.23554955 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.1474398 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.108710689 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116596244 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.144561584 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111404434 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119874076 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144654608 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119165504 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.133561423 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120618929 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114750726 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.145629764 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121012712 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11794511 seconds)
  done (took 11.717789741 seconds)
done (took 42.991509114 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.657896449 seconds)
  done (took 2.679740588 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.93767452 seconds)
  done (took 1.961963166 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.069598055 seconds)
  done (took 19.123259395 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.433417215 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.466095728 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.110607998 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.146934321 seconds)
  done (took 3.174362005 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.821975465 seconds)
  done (took 1.870964522 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295157596 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259638445 seconds)
  done (took 1.583044962 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.726736036 seconds)
  done (took 1.768716603 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.540782251 seconds)
  done (took 2.575973011 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.281381188 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.238863469 seconds)
  done (took 1.563425929 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.644007041 seconds)
  done (took 1.683938922 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.203209374 seconds)
  done (took 21.246696439 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.253904228 seconds)
  done (took 1.298959603 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.284715826 seconds)
  done (took 1.332434933 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.564706661 seconds)
  done (took 4.607190918 seconds)
done (took 67.511014918 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.112851795 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.11605758 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115477505 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139015247 seconds)
  done (took 1.516435441 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.121722415 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117780596 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.144017883 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117343506 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122504813 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115064531 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141925815 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118917201 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115884032 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143821921 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116383066 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115083975 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144256997 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116639871 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114081663 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144061405 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.119792518 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115972375 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143707852 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118495205 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116848231 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144351953 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121566103 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118514287 seconds)
  done (took 4.05255826 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.111882738 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.1071208 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108315519 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131625713 seconds)
  done (took 1.507612821 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124489982 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129422409 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152018963 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124512621 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128018988 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152455658 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11707317 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113679203 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140231976 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124909284 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131817211 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.153896211 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129078268 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116858117 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.151881402 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111713345 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115542928 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153449522 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123090654 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12489812 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.141566765 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122204559 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122564683 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151264538 seconds)
  done (took 4.20024525 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.188709659 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128657204 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.172037289 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159284837 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.174602835 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115768025 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.142792204 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148747304 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122362849 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117260913 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.144955503 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159879625 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147468854 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118048263 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117437912 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.147806181 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128283123 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121946917 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.189933937 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12274059 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.148995404 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.12806196 seconds)
  done (took 4.192233163 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120523715 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108249249 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103339782 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.134847152 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118343424 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.11065337 seconds)
  done (took 1.750027536 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107326127 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101997282 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101733611 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127488795 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.104865802 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101524882 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.10120767 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.129916543 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102723477 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100666336 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128247366 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101420407 seconds)
  done (took 2.362473763 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.326457891 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107271469 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.132501991 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111417216 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111038791 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104993355 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.143924437 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.10539328 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.263588168 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102207265 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.131816658 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.191238695 seconds)
  done (took 2.886776749 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202106878 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144749775 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253995479 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.677968575 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161355184 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18770268 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280654075 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188324547 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206305679 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135238107 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213584348 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157315028 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17944064 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182006077 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16479216 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.15619298 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191845126 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231090557 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13949171 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236737953 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154051893 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199428138 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185217612 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17563539 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137029452 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186323224 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115802452 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151941922 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165445511 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190761979 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200387372 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149553712 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139562221 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217140117 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257878043 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203768405 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266246078 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132180981 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.19937619 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189464363 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256670533 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166074056 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217122446 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149910978 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12631915 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210388942 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177552162 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.181649121 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131051161 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170686384 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21052539 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177385016 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200950358 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134176611 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.326397191 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157666094 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141504111 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25854401 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212413733 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200612845 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205046532 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120286429 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201593569 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21575603 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211246016 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167378343 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188730939 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124833555 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161923286 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.229123332 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208107209 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156708923 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.235756093 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157338815 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169919962 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195182516 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15361392 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230619044 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195248504 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.11850172 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148441711 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161916078 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125130066 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.214549685 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120654247 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24213777 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12984606 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.339956918 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208014485 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153020808 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187477891 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159068696 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188663642 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145973605 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.128184558 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141714618 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.186359386 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15626454 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126236203 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18131163 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136984704 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.152731656 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150420991 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.148963512 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167092768 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131713078 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191441201 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193184344 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130807865 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202880605 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14604097 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.18515239 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168578976 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219267519 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12786933 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159769811 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216758086 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193900978 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135277113 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200160922 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222784755 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148328158 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160423327 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163904781 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219857952 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141831523 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225724991 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136273887 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162686423 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.139199972 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19763507 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158075779 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.179873526 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126116979 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.190826718 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217237387 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126618576 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138072297 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208149215 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131970505 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151851288 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136132015 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134977746 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.168056452 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146505741 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.164724938 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151919886 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192557518 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162739689 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184436204 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131972178 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199590335 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128825739 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.194883948 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147058053 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.143378739 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.173135433 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224235923 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12682567 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207028682 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159530899 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210821991 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198023694 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128021335 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210965244 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126484188 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118727848 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188637418 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19335881 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16102401 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.213658464 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204359302 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163241029 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.189605295 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147639923 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195830854 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.210742219 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15509649 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.168335722 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169514825 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198441105 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119003982 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121210636 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.153413474 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134349454 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127639458 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16299112 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206250774 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163633704 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202128997 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163401793 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164647827 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215751738 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124354234 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158192577 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.200432685 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136991007 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214579405 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21605258 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176274732 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167776108 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16151755 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.14680894 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12436388 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13092743 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188283632 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134257154 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161985331 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138865925 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217647119 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169975465 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174444206 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217157939 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163639961 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225871962 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.1187907 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.186497671 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166444734 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194202647 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182575236 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156698763 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.159869027 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217476157 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139789857 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218786405 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192272596 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17670652 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222871842 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.161630404 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156437302 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146464757 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186912622 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13595215 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189127856 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144763785 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127699294 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179585393 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135249021 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166456679 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216036668 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142195786 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204660234 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156566043 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198656925 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122048497 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169710191 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170524928 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171827733 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104491991 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196079597 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191955732 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1772473 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154331978 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200291547 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127773897 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.34018731 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184025273 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204487511 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132804344 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16506989 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168396586 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188699462 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189356274 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182718211 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166618811 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204376088 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19800685 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140712209 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157157073 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147742263 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177406889 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.14042703 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.17823192 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160461895 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.167499509 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185926132 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163860071 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166328736 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202675208 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.142538813 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.175880442 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138292168 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251758417 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165239569 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200210293 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.189670858 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164305161 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210990551 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122638973 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124115127 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.1583258 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182587831 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156778086 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175263249 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191267322 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208615646 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172116488 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18720801 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138049782 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.153815416 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164433189 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175546597 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209324432 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134445681 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134975226 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216707461 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126238801 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158114116 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15714161 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314895759 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144535211 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201044553 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105025001 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.308719884 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127225619 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158485774 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159781295 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197507018 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130786321 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18296856 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195695388 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137918598 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189048958 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132286663 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207871125 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211624338 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165900597 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202649472 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.171807473 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160697552 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188233951 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173753985 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171795805 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145446021 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185846016 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193741912 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.207076791 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129279387 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194298633 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166563772 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197786942 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173174493 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16748035 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17952858 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155169684 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164519327 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165436478 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123172673 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188108119 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.163670583 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156476326 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176335917 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196264649 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128792121 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154039642 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146556205 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191986555 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1390733 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128514131 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21401872 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.156057353 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180698216 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237561185 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127130241 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193608527 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144542694 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128587672 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167129902 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141826821 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15795114 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172119513 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206349081 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130444197 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203855614 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165244568 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194017771 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157757447 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170466777 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.324831692 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.154804278 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189747797 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176542988 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195604419 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178314161 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172436163 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19587696 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148545861 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19317267 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146251972 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.247715291 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162956169 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.19241292 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129797873 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170372812 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136375315 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.158509412 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151362312 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195308579 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14083954 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134049996 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.194481595 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142433794 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.175012465 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139880773 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228721854 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14893766 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214528056 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216188004 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13557842 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200820897 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173088532 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156337191 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.16318783 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200306724 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141094504 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179792774 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132401449 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134838089 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237999141 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.152060483 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159982366 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199742331 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167288589 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198110957 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132818313 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203246795 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138756204 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20333397 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126048475 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150462475 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197164524 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132220899 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.154210788 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168991731 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188054665 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.161862228 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168547807 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173895161 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221407811 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122397921 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.625498399 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312218599 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188605535 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19358133 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.165438566 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133962538 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144325462 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187413226 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.189773799 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170074079 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128143313 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155237496 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141194121 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.183054981 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140972308 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194740051 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181918859 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188595097 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183785914 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.161664196 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.24936055 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169041282 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170536603 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.144423243 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12764858 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138464128 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160984803 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140423736 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206966118 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241925949 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160227901 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.174133841 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13437976 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126306717 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157257449 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161450603 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178824359 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165879274 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174456841 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103337012 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139183348 seconds)
  done (took 86.51302526 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158886566 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149081276 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166953765 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220439212 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193924071 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287699357 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226609119 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242964807 seconds)
  done (took 2.787235396 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117769205 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15555707 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139843101 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141102794 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108334728 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.484519406 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.155561645 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.117734966 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.15783872 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148951589 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133653874 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.568912148 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.113876107 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142198249 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119714694 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132095466 seconds)
  done (took 4.069668129 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.648655822 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.530886088 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.886831914 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.275545463 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.259695283 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.202885458 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.760875831 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.19936822 seconds)
  done (took 11.900753554 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.16316526 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.156969268 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.450845613 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.308672437 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.180862215 seconds)
  done (took 2.40918025 seconds)
done (took 131.186546622 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123661083 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120533499 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119890846 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150584243 seconds)
  done (took 1.653517359 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.196280759 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089199142 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09223539 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117217627 seconds)
  done (took 1.643038243 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.465001499 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090200089 seconds)
  done (took 1.727343145 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149540557 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133072516 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.161491123 seconds)
  done (took 1.6049265 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.134695796 seconds)
  done (took 1.281260296 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.123009291 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127536742 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.270188185 seconds)
  done (took 1.67149428 seconds)
done (took 10.737756769 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117633646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.926389777 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431259642 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131308245 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709527601 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.423429047 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.4181085 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173522442 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172265196 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134856699 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129732395 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.689689747 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.424557821 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.875321333 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.38760457 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.904133341 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69247482 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109528472 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.142506793 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110361271 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.398007345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.13499102 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110371158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109942591 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.71598027 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418067053 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108198985 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.913361984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108014858 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111939176 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.423242247 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108981648 seconds)
  done (took 20.906937576 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116453099 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.164361556 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143473591 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109819708 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110962062 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137548156 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120189932 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120331546 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20076602 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108467696 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.156789802 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108377366 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11407333 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.135918114 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.133806991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108517095 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.137946008 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112177145 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117300892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.136903815 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131066087 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108044031 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11017022 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.13987259 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108176973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155522932 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110366553 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12034458 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.133666043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11382566 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114033305 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108975145 seconds)
  done (took 5.205972484 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155713746 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174775755 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145287639 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144586835 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.183124566 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111616153 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221758293 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148457427 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20135674 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110233288 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130082896 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136123304 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150305522 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109220548 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.161812589 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110092041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111541229 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138907392 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11720595 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111327302 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158519019 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108903968 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11123256 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139458747 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110233118 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130908421 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.13728343 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122455906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107363823 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140603215 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114863998 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109138284 seconds)
  done (took 5.525167624 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126645735 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123200582 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.129886904 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160785322 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119095807 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121106581 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.152351436 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119630402 seconds)
  done (took 2.211864139 seconds)
done (took 35.003215986 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.140343666 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128852211 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128895046 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.152649899 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.257638163 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.11760304 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126784422 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.11460987 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.152835978 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129591299 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108007866 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.1459952 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.129996541 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118262186 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.257150175 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12307239 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.262646039 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.261003804 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.117039491 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123445975 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.149585068 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.233745913 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.151326128 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.116873048 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.253191699 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111928414 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.253359837 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.11992441 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.119280867 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.141160309 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.233301776 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.152285731 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119045974 seconds)
  done (took 6.396009383 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.242583666 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.149223878 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.1196515 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117510788 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118704181 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146696559 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.277674829 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.117530622 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.116351405 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.115759238 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.146836584 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229787284 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.155578975 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.114079838 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120268651 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.109256664 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.281508367 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.15030192 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.111627026 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.092946408 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.112418813 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.146947903 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.262578748 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.144590553 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.118794423 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.117283526 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.150895433 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.124065498 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.120337468 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.118989541 seconds)
  done (took 5.62247807 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125045995 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131034893 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134935794 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.215497108 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146492336 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159969664 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138677753 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131929164 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.170136135 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112989106 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126697732 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177002247 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128935259 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121561915 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145088758 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130341884 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13347699 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14203756 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12075458 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129153986 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160276715 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130069869 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13551608 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.148042962 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111483231 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120386366 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150749034 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126786281 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119648443 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.154430516 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115416239 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115711483 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.114552342 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.177143325 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113161482 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154641329 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.13927585 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124452639 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.152923517 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.146518727 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11497855 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.142952639 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.13842481 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166058294 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.141437724 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125618814 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122399799 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.124977483 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.143113421 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129964077 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.182423647 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.112839177 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13327591 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.137808563 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111966148 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120682713 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.112296969 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.144245065 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129066194 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114596139 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.166198808 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119320382 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123179714 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.141801248 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125265265 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111661331 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.110452289 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.145333034 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.137727932 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.119045444 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.178385013 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112328422 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122488189 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.153757933 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123394449 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.123573843 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.140404365 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125877839 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122081822 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.146016083 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125964738 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115480352 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.114565723 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.158744855 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132567541 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.154712875 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124403425 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124092031 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.115454179 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.143815505 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129604583 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112520226 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.147197198 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126159355 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111906554 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.144380519 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125339125 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12307788 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.137704817 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139470457 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115147431 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111701917 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.167182058 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116088263 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.116809513 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.152600697 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155841848 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112281868 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.153420614 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.12513922 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112606571 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.149272977 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116466417 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11114255 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.159259539 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129784936 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119499469 seconds)
  done (took 16.841601796 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.361176431 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.345444596 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.18704394 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.432685443 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125531906 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.276388868 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.342079517 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.345882848 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110985285 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.177063774 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172893538 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.314313297 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145214208 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.141335117 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.346583355 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.404660419 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.1749537 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.14772765 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180370032 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126403669 seconds)
  done (took 6.045774017 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133074226 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146357814 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164303585 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.139953863 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121963347 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158437628 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113037495 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133361672 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.154747307 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122640347 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114763543 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.156106725 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126313423 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127916306 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.156319666 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.144921044 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.11989027 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146588646 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134777046 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116825232 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130787045 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.13907236 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120899 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163259963 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132015042 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123147455 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140012952 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118109548 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118396413 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.149389665 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119229323 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131306248 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.148193529 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104812469 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124713326 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125764302 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.147424725 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116147027 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116615557 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.143557828 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128998517 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125468748 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119290133 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.128311664 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13218765 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109505843 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.125307062 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.154019098 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106673868 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130931877 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.154324107 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126700825 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.120009013 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.163394531 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119665317 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128283297 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.153326484 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12711965 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.11738139 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.139197458 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112659128 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116026026 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.12015494 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.156494037 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12461853 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.131333779 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.158690991 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113094848 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116987782 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.145256349 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116113255 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.126636196 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.161503724 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.121546883 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.118766053 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.15420908 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121128501 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093845415 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124045043 seconds)
  done (took 11.590249745 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138298411 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123404425 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130370435 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.177422036 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126266937 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117989404 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.15347571 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13278718 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126598867 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.161942518 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127601708 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12582568 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164061298 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124370742 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12200674 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158480612 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127685484 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.149277744 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160222547 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141642789 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.15555219 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119016178 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125839155 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12370696 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17163306 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124529589 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139350742 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.159100809 seconds)
  done (took 5.111620175 seconds)
done (took 52.772283379 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.326336637 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.522745492 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.296618876 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.295085314 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.332450164 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.298967306 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.298226979 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.302142479 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.627197502 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.270303813 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.295159874 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.309665825 seconds)
done (took 29.370240846 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.38164499 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.824725139 seconds)
    (2/2) benchmarking "String"...
    done (took 1.582428105 seconds)
  done (took 4.592752893 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.285690405 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.284449229 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.536705058 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.285233738 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.30284845 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.288255778 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.290732609 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.290945231 seconds)
  done (took 16.465043352 seconds)
done (took 26.913843262 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.329699305 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.477208617 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.521223301 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.277574248 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.298592267 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.300053064 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.289315407 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.308485792 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.287151734 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.27627734 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.696560769 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.543665433 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.300897515 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.657032903 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.274985109 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.286979819 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.303429476 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.507354012 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.288657217 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.319873721 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.265883623 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.276821624 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.294510933 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.2877093 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.292460722 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.302657007 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.293708251 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.287033928 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.477152145 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.3046242 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.316073674 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.287228722 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.290296314 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.288630495 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.285040565 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.28883114 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.479780988 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.292376587 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.270411818 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.309722593 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.481244294 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.294277124 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.288782608 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.287350357 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.268578332 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.320176809 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.280293439 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.396772473 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.304270239 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.294330345 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.360115605 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.647069248 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.2859777 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.299170649 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.296121052 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.511000769 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.299572905 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.33282504 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.30854071 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.295572117 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.284619568 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.298015536 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.306785032 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.291954683 seconds)
  done (took 148.958459141 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.285675372 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.289019079 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.287930196 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.303940956 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.289493645 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.289022014 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.285051668 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.284797192 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.287874748 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.318066165 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.288486412 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.285883278 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.287918016 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.236817267 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.297000269 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.303466915 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.289512953 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.286261194 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.312322056 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.286077106 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.312129128 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.288514247 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.28460151 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.285731653 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.325371461 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.361147615 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.304139984 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.309005707 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.29675432 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.285943436 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.32029321 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.291191677 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.870607165 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.13703975 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.289955943 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.290631903 seconds)
  done (took 83.235066543 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.286533052 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.285415591 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.285306781 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.318119536 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.284954031 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.28409408 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.827868696 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.246819087 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.497188336 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.829757342 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.566100477 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.493991642 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.287776688 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37301702 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.299617873 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.286752197 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.301822929 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.311607071 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.285842462 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.287329625 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.825234627 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.302444132 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.363059786 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.45579772 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.29985936 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317250588 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.67694953 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.284455602 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31664519 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.612729571 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.332494562 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.286854407 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.583953093 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.564369168 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.39609565 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.287896245 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317335695 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.28609284 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.287167305 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.564094291 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.287734373 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.285726061 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.289838485 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.876898111 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.287507281 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.828090381 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.291502035 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.19622343 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.287461843 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.28559565 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.24369357 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.877815113 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.286545949 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.286105483 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.288643325 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.287273578 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.287273726 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.287967737 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.317515592 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.274991973 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.380933102 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.28723522 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.290851972 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318911756 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.288084822 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.396973001 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.288867008 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.281611895 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.344760982 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.39959468 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.822631925 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.288253201 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.377891586 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.401932616 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.287281273 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.286789736 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.286131595 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.286309757 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.395805131 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.286839902 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.93830944 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.456491719 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.303375911 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.532153466 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.384206542 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.286540348 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.568898786 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.289185383 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.286089816 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.94398442 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.37994235 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.28773374 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.286413559 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.288224859 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.287392711 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.937940748 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.817822464 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.479166591 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.290294558 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.884484171 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.288864567 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.110859593 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.8012993 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.883385748 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.289658534 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.394002211 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.454850183 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.301739235 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.286308721 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.492695422 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.290946294 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.344872478 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.2855791 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.687747942 seconds)
  done (took 381.383012868 seconds)
done (took 614.766207462 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.15251665 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.097591151 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.242114131 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.112927623 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.09428092 seconds)
  done (took 11.883607329 seconds)
done (took 13.070799991 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.468134653 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.473038439 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.347256965 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.476206301 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.323585047 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.486128458 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.454290176 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.306400123 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.394686045 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.363974724 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.400692559 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.337264765 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.318840178 seconds)
  done (took 19.334168215 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.560954418 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.298298448 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.352750513 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.53890311 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.332907501 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.559651722 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.589981653 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.29790575 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.444742761 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.335168085 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.306809064 seconds)
  done (took 18.803584467 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.565825313 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.298337167 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.356408234 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.560253406 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.335949078 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.556957863 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.591203901 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.297195577 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.44736341 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.310464475 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.30785017 seconds)
  done (took 18.811580801 seconds)
done (took 58.136753853 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.32177042 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.381740817 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.322530579 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.306805474 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.303888261 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.303645729 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.308345923 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.30391258 seconds)
  done (took 11.736621809 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.304717718 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.302375058 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.303074114 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.305157272 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.302089525 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.302839881 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.303598204 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.302762664 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.303539521 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.302812392 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.302740038 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.302058062 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.302737827 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.302221475 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.302993939 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.304277955 seconds)
  done (took 22.035446731 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.305244382 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.30316169 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.304097478 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.302839931 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.303381534 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.303156033 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.304886041 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.302745992 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.304098006 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.304681111 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.303753973 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.303433768 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.304172457 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.303730914 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.304645732 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.306382233 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.303391221 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.304518478 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.308030649 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.304042341 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.303943427 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.302926018 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.304412589 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.305442647 seconds)
  done (took 32.485912266 seconds)
done (took 67.444256192 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.286998635 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.293201699 seconds)
  done (took 5.766047181 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.364150803 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.361824915 seconds)
  done (took 3.912007187 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.303893485 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.301598028 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.304421376 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.303551014 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.305788628 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.304038475 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.30436735 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.304916461 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.304219474 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.303955765 seconds)
  done (took 14.225461898 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.304462097 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.304768143 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.303927394 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.306063735 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.304442695 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.304112007 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.304795981 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.304581822 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.305113614 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.30277489 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.305253167 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.305392568 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.304040934 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.303964437 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.303660762 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.30548885 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.303765431 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.302829083 seconds)
  done (took 24.66420689 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.317689058 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.321738398 seconds)
  done (took 3.824915332 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.431049948 seconds)
    (2/7) benchmarking "second"...
    done (took 1.344876137 seconds)
    (3/7) benchmarking "month"...
    done (took 1.407094555 seconds)
    (4/7) benchmarking "year"...
    done (took 1.399157009 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.347733148 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.326413124 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.345314438 seconds)
  done (took 10.786770777 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.291407104 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.583968 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.758098471 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.451345435 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.285780773 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.303476002 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.268485897 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.307648154 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.304735351 seconds)
  done (took 14.740218984 seconds)
done (took 79.106809634 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.298041135 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.331888087 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.311263714 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.307639673 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.66435104 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.32445624 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.293748231 seconds)
done (took 16.72003151 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.271739437 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.273086234 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.278221025 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.291948566 seconds)
  done (took 10.302039666 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.280091881 seconds)
    (2/2) benchmarking "read"...
    done (took 1.62090463 seconds)
  done (took 5.088659761 seconds)
done (took 16.579070962 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306546451 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.304532466 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.305281707 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.305606149 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.305833969 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.305819103 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.304735809 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.307247671 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.304316486 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.304289576 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.304289831 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.304926045 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305517332 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304801328 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304314057 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305383619 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.304527 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305479802 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.304907601 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.306166206 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305303123 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305729784 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.306087479 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.304970444 seconds)
  done (took 32.513836382 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.307095575 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.307043515 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.306221882 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.306594312 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.306726756 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.307202 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.305492649 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.304187643 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.30588277 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.30538609 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307183093 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.30600479 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.305407554 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.306004834 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307034207 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.304610976 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.306076268 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306911518 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306059771 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.30667474 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.307683337 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30587958 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.306746921 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306833689 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.307422859 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.306709602 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.307818585 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.306426111 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.307341076 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.307256333 seconds)
  done (took 40.381681865 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.309491225 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.30785174 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.306318724 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.30883974 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.307294328 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.308896465 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.307774371 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.30816603 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.308089441 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.305105899 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.308054261 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.307410813 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.307981302 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.307665382 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.307249315 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.308401447 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.309359822 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.308129283 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.307670413 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.30938816 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.308340678 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.308637698 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.308340958 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.307138514 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.307480359 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.308675711 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.307420258 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.30751455 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.309138221 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.308108558 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.308224053 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.307469106 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.311049147 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.309809284 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.309321663 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.310144493 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.311661022 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.307578348 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.308764509 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.307351063 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.309513338 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.310718083 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.310965013 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.308614401 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.310999078 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.309173891 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.307964131 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.309976704 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.30939705 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.308554407 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.31007774 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.308418919 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.312003028 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.30852734 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.31100223 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.309272135 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.310555033 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.309756021 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.310696109 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.311047127 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.309188676 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.310627137 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.311043638 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.311814161 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.310956402 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.310880958 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.311714345 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.311168607 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.309759322 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.310484631 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.310224868 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.311014567 seconds)
  done (took 95.448260177 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.311268389 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.311155695 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.311157929 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.311484036 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313585037 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.312113754 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.309487528 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309262612 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311063476 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.310792546 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310524334 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311759889 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313233328 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.31098135 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312548941 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.310401875 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.311497532 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311917182 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.311130094 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.312698956 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311522164 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.313287355 seconds)
  done (took 30.044400256 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312542127 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.313377062 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.311888753 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.311808745 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.314481829 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.312087509 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.313959282 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.314217744 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312705236 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.312265592 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312603312 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311803083 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.3146249 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313059607 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311709208 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.313657905 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312783291 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.315168826 seconds)
  done (took 24.827538018 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.312639461 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.312555984 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.313737869 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.313997534 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.312934228 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.314614012 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.314205402 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.316597197 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.315003588 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.312698464 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.314273984 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31276714 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.315591551 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.315161321 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31415226 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.317129879 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.314928383 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31515732 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314168487 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.313973539 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.314077145 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313704692 seconds)
  done (took 30.107905568 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.315104601 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.314463735 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.31362715 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.31499074 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.314607347 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.315066372 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.316442414 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.314214326 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.317548747 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.315871594 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.316333353 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.315676928 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.320509759 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.313688046 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.315807833 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315867152 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.316276279 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.3175314 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315253184 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.316679503 seconds)
  done (took 27.509201882 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.316436884 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.315815757 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.315448858 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318328514 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.31472955 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.316727782 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.316145534 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.316927461 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.316404852 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.316367322 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.31610075 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.316351785 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31824369 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.317171441 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316861479 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317499473 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.315551596 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.317416181 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.316840488 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317120285 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.317416705 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.318867373 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.316610024 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.316550783 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.317255446 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.317826886 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.318676905 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.318868939 seconds)
  done (took 38.070395664 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.318162187 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.316577306 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.317686715 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.317840063 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.317334884 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.31804655 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.318184496 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.318350927 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.318173085 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.318958847 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.317910468 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.317811177 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.318946263 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.320747809 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.3190527 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.319871599 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317772827 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.31833282 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317460214 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320450896 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.319668264 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319597898 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.31853958 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.318041345 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317317506 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.319869579 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.318711298 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.320003423 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.319251931 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.319674581 seconds)
  done (took 40.757088049 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.336933218 seconds)
    (2/2) benchmarking "in"...
    done (took 1.338594956 seconds)
  done (took 3.873997416 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.320815913 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321021672 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.319934393 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.320589608 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.320859687 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.320199097 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.321984763 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.319183086 seconds)
  done (took 11.76476832 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.312614015 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.323817026 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.320593192 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.320622153 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.321570123 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.313040603 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.320510159 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.325015244 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.312385626 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.314830666 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.315042812 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.314770613 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.316302678 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.316435734 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.316865484 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.317647241 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.326027384 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.323010277 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.321317507 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.325084974 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.321624091 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.317621047 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.320535199 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.326712073 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.315090584 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.323367411 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.3225859 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.328524905 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316402753 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.321431246 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.319805776 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.324846356 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.322853273 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.31952167 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.32139554 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.321190383 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.323106367 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.318973457 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.326361049 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.318006719 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.314162327 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.311613949 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.306351021 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.309384268 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.308625921 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.316766681 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.31319278 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.304079556 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.295384234 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.298321548 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.3074607 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.296451897 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.306103992 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.300119037 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.301565293 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.306525716 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.309342398 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.295135749 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.296665938 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.303934575 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.310579517 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.30428387 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.299367677 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.305515066 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29912205 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.301108565 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.306473984 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.309567631 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.303018967 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.303236922 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.301885508 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.31241827 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.306882199 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.310364443 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.30453837 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.303403547 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.29731909 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.306393535 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.304640478 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.304585393 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.309427702 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.303929608 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.299715348 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.300669066 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.29785165 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.30678015 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.303606343 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.303559495 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.295391582 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.30514184 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.311393101 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.303018842 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.295956968 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.299212133 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.299872224 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.307102851 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.295711881 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.299119593 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.305900149 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.305144114 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.306666215 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297218235 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.301599585 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.311026421 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.303737791 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.305779144 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.310975669 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.298596146 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.30812106 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.311505755 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.305093142 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.298138631 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.300756161 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.308164096 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.298550025 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.301540972 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.308752983 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.301854971 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.309545482 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.304774648 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.301097525 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.308954661 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.311636795 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.30653865 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.300340114 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.308909749 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.306092849 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.301704668 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.312035065 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.305079353 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.305956532 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.302763482 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.310373468 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.300353935 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.310211475 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.299757852 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.30984454 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.305839493 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.307369423 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.301308733 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.306800227 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.303432637 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.306311545 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.310024426 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.31470493 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.30314511 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.314254574 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.306868672 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.304965067 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.307459524 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.312436007 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.308427267 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.301489097 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.312482129 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.301094893 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.308921731 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.301904357 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.311330508 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.308693623 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.308345267 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.309183711 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.301376489 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.303129777 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.310418669 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.307951972 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.307768716 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.311898316 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.309643314 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.307922655 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.301424929 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.310552095 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.3003073 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.30301011 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.311076095 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.3088419 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.309932929 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.306917872 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.314637185 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.308516961 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.308941154 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.301514143 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.30570994 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.313766586 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.311400011 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.316368594 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.308310101 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.309599593 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.30232552 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.304871818 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.312557845 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.30304563 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.313591121 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.315763281 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.31727001 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.305422645 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.311525282 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.301774937 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.311741545 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.309436956 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.317372541 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.309129716 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.31122476 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.302681897 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.314392056 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.303678582 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.313395345 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.302299457 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.312306181 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.311880357 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.310072481 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.310929617 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.304464492 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.307281389 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.314320346 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.311847636 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.312390009 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.304020018 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.313941062 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.302809658 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.30572944 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.315548529 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.311001934 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.314089384 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.317648262 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.309996475 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.314628435 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.312402008 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.304739126 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.315554798 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.310471372 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.311859868 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.31614478 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.315310107 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.308755806 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.317099411 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.313097502 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.305927491 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.315499751 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.31374934 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.305894347 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.299086538 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.309939498 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.307219045 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.30600869 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.306568135 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.297234774 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.304300883 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.303216411 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.309719692 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.293665602 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.303423709 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.295341961 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.302511201 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.294967875 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.296212782 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.295643016 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.298664011 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.303477894 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.295956787 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289108237 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.300800581 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.293420945 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.292122764 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.285850309 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.294555942 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.295176144 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.292760535 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.290237775 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.290922037 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.291637553 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.280875017 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.29055698 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.282295196 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29776014 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.305312112 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291673774 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.294809898 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.288884529 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285753491 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.287428042 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.279543008 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279486802 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281734624 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.281068314 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.280360259 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.284522738 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276256923 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.285004635 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280445004 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.283390775 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.282900701 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.282512822 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.274049863 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.281771313 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.279290216 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.279236296 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.270621666 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.279203181 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.275770993 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280805768 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.278580386 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.273943177 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.285099405 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.283299135 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.276363905 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.27525851 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.275995365 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.273356317 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.276640433 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.283533112 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.272812274 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.283562098 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.272494383 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.27688123 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.275037962 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.283797697 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.291234974 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.273500391 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.283067699 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.279647549 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.273274818 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.274620122 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.283465247 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283730114 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.292212183 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.273972978 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.282265004 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280077834 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.281332189 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.280658881 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.28108111 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27765671 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.276571433 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283250743 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.281824153 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.272508415 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279762537 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.286780213 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.280715908 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.275925348 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.26725509 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277119401 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.285870165 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.269796877 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.273334285 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.270784141 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.278807045 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.273309138 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.273425938 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.272789585 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.273981196 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274906375 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.277674548 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275292936 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.275262351 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.274750688 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281856671 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275655794 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.282136323 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.266917118 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.276500111 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.272018658 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.266967466 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.268196167 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.26669697 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.273733844 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.265106099 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.275676626 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.270495773 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.269995832 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.274175264 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.27809264 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.265301344 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270879281 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279405567 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.265824883 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.274899702 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.271513662 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.265693435 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.275977984 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.27372463 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.264738215 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.268107847 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268914782 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276889148 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.266383079 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.277288358 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26756018 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275872769 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.274354915 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.274520061 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.274270709 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.273652709 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.26679081 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.276102803 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27304699 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.283403584 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.269731669 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273974652 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.269384018 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.278205266 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.285182375 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.270103544 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280068979 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.275027269 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.267938661 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.271966892 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.279118837 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269398063 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.277403125 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.267033559 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270194545 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.270415003 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.27482702 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.276984841 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.279331735 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.267780587 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.269443841 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278545248 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.276958936 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277796736 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.272429121 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.282334195 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.268904636 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.26883813 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.276903556 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.269694757 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280193096 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269015212 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.27210957 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272474443 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.279796708 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.27671804 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27547245 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.269004174 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.270935705 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.282595635 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279615938 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.273381497 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.272736892 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.279447318 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.269855902 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272378273 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.274419573 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.270721016 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.273471983 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.280185791 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.270162003 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.271953372 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.271372359 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278583404 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.280723591 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.280510428 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.270761312 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.28372994 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.285994079 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.28375873 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.270495525 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.273040523 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.273589277 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.279173549 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.278545563 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.271249168 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286361543 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.283183958 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27990623 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275776438 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.279706421 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.270948757 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279852093 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278922885 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.272832431 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.284808937 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.274926193 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284506743 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277780441 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.278963101 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.270354029 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.273096214 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.274160318 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.273840763 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.279918391 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277218993 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.282753858 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.275976691 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28436186 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280264231 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.279546919 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.278905888 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.271821216 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28035733 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.272851955 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.280096496 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.282591061 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.274140098 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.282237749 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280470175 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27417875 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277321304 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.282319121 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.281019691 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.274407006 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.27744688 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.287045527 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286084498 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.276760045 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270756072 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.275163937 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.278880811 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277226978 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.278672604 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.270584326 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280703121 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.284988387 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267441992 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.269602512 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27634781 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.282434453 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.273476713 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.273195159 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.266363906 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.267888907 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.273794313 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.269635212 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274046923 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276734527 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.266079148 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.274130164 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.263841574 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.264630691 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.272026738 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279509763 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.268454762 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.265294094 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.276836973 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283670424 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267370868 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281902704 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.276796703 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.270587849 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.274838514 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263043237 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.273179507 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.266552588 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275200922 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.270352302 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270799548 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.271283148 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.262697833 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272026603 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.277607998 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.279112122 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.271366336 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.264643119 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.267151154 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.27198982 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.270480453 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.273003663 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.273108535 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.271274301 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.271427029 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.265822948 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281278509 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.283905626 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.278602054 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.270475419 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.271891225 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.272191783 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.275763605 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269213703 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.27718476 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.2727889 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.270965178 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.268876243 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281369196 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.273092835 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.265101031 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.266652881 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26740772 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.276433829 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.278964536 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290951044 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.275666167 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.276131716 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274125245 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.273923693 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267102685 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277942997 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272885576 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.267927478 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.268602561 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27434017 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.274298893 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.274780418 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.266392463 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.278363394 seconds)
  done (took 770.278736315 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274036384 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273097421 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273512704 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27308726 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273439987 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274137856 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273590081 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.27255993 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.272908278 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274107539 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.273526289 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274398322 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274458983 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275786832 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274790992 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.275762773 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27423292 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274925967 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27535405 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27558792 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.273849965 seconds)
  done (took 27.918399431 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.274645707 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.275071933 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273827173 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.277080099 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275247877 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.275061087 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.274931442 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274177164 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275347509 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276577987 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.275188686 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275939172 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.275722427 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.274789377 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276146208 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274921644 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.27536638 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276048788 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.275413567 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.277126779 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276732688 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.275249148 seconds)
  done (took 29.223683822 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.275937606 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.275096454 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.270005395 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.278846234 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.275826091 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.276289504 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.276897961 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.277088649 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.276009483 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.269833314 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.270833286 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.270537041 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.272753801 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.28111296 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.272463297 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.2815177 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.277273116 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.277752927 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.277599397 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.27705693 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.280689097 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.288163643 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.279205933 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.267552446 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.279969116 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.278352563 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.278236626 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.27789057 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.269282636 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.279915187 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.27919921 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.272353147 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.280175055 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.279443081 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.272074438 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.281682914 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.278483866 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.278597383 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.278917907 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.276382509 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.286884899 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.277394686 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.281867722 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.289895713 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.279146964 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.271252655 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.282010802 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.279863663 seconds)
  done (took 62.480017356 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.279563675 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.27925647 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.278403298 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.280066525 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.278194398 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.277594874 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.279089123 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.279902709 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.278256654 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.280032814 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.279382331 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.279633349 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.279396097 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.280758938 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.279298771 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279057572 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281378992 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280097318 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.280803573 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.279431143 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.280570175 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.279009701 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.281384775 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.281886402 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.280968517 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280710545 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.279604825 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.280850777 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.279815825 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.280331669 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.282563277 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.28106463 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.281472149 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.281036434 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281170227 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.279650533 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.281661244 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.280709898 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281403236 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.281354325 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.282226628 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281262709 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.281172954 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.281459644 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280358884 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.281395323 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281937814 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.280880435 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.281176197 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.281914057 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.281569392 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.282660458 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.282968252 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.28160032 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.282186263 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.283399479 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.282910307 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.28313876 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.283780832 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.283083064 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.282610809 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283550966 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.282061283 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.283146241 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.283954755 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284124977 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.284099073 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283299935 seconds)
  done (took 88.282450379 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284063765 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.283994447 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283590734 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284166595 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283343207 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.284551489 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28421938 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.282893083 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.284490697 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285331548 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283907909 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.285353006 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.28418468 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285247138 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283761663 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285292503 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.285225601 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286926968 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286404829 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28556035 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.28648296 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284728493 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.285357734 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.284618505 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28511929 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.284556679 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285529369 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.28631198 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285589121 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.285931822 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.285730395 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.286269659 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.287059129 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286000045 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.285370311 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.28643806 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286261945 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28848776 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.286599298 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28767389 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.286101292 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28670095 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287490261 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.287239673 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286268131 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286620429 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288042251 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.287238076 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287890723 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.286969247 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.287279111 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28680449 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287072061 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288026687 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288054521 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.287303679 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288659717 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287725543 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288189607 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.287365721 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287717735 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.287700047 seconds)
  done (took 80.906211393 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287976586 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.288330266 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.28841765 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.288367849 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.287549321 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.289676816 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288815249 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.287668965 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.289078323 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.288887211 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28882694 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288764181 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289735488 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290080282 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288310826 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288040003 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289788961 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288703882 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288674383 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.288257269 seconds)
  done (took 26.947035142 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.289399994 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.290708131 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.289975664 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291139245 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.290334341 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.290056696 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.290131795 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290776603 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291516423 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290963094 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291604475 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292125353 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290655308 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290194934 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.290851752 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291278273 seconds)
  done (took 21.825266191 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.291856039 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.292153719 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.290571928 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.291670134 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.291967046 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.29119426 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.291514254 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.291290439 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.291910568 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.291449878 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.292021292 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.292406072 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.292404012 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.292615626 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.29313022 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.29242872 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.291827442 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.293931876 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.292152649 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.293111556 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.292501531 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.292289669 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.294064384 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.293160442 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.29373667 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.291919008 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.292712176 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.292659793 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.292742461 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.294407933 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.293989107 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.294420828 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.292975085 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.293590539 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.293566549 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.292975929 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.29335423 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.293482321 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.293809956 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.292790939 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.2942792 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.293155655 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.292719852 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.293854363 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.293273792 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.294899734 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.293846638 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.294914901 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.293943142 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.295425658 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.293418211 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.294208241 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.296503124 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.295258094 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.295474893 seconds)
  done (took 72.299228029 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294688593 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294798593 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.294775104 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.295079761 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295951264 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.295202798 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.295237742 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297304095 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295962639 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.295650292 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295426898 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295901681 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295070619 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296111374 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295964139 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295124317 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.29633786 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297530277 seconds)
  done (took 24.50185278 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.296492096 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298515441 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.295837242 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.295549734 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.29651386 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296111024 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296971758 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.297152239 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297454149 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.297336546 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296374311 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.297125434 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29765856 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.297933127 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.297507024 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297619555 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.297730855 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297237679 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.298264432 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.298622165 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297191088 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298252023 seconds)
  done (took 29.72055454 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.287874792 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.288478494 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.288789154 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.300525718 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.295825108 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.287856852 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.288483621 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.288269583 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.303616861 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.313126211 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.308064728 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.294762934 seconds)
  done (took 16.727668822 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299318127 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299404411 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297879568 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298162405 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298419431 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29858109 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299151293 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298561835 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297988495 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299514387 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299872979 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298405754 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298360272 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298958758 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300311848 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298370048 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299916129 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297786387 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299531699 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300628389 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299573969 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299827096 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298988555 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298616491 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299162711 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299782591 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301750248 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300703428 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300243663 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299440132 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301022527 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301128542 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300994241 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301465817 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30123274 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301909833 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300012505 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300668617 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300535329 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301628727 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300526146 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301422132 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301732746 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3014424 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301418186 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301552022 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300429452 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301282464 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300752814 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301759687 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301660943 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30035607 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301861283 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30226771 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300822289 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302679447 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302022303 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30203702 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301121586 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302830682 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302386955 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302980043 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303513906 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302299628 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303144837 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302414326 seconds)
  done (took 87.019502305 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301750852 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30217426 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30093067 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30261452 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302976277 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307998086 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302388084 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303548649 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302900858 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303891733 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302477869 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303016186 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302337636 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302523577 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302817906 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302571272 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301500965 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30274881 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30212341 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303983425 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302886297 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303115042 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304076931 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303491123 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304336608 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303859746 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304712294 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303782838 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303862171 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303842036 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303252901 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303069286 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304527006 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303896493 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304605468 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304872429 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304540801 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30402471 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305089719 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304604126 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304919489 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304656192 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305360122 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305020327 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306767339 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305514107 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30600836 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303964836 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304702373 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306103341 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304790581 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304828717 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306195456 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305276472 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304461943 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305668499 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305372617 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304748596 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304970148 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305803346 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305732738 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307986273 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305604778 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30706433 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306838388 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3065339 seconds)
  done (took 87.271677766 seconds)
done (took 1801.889548806 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.462714182 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.422102871 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.294924472 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.30320043 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.295632934 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.296653317 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.309035571 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.297291243 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.29748716 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.29624912 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.295787617 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.485490501 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.332289967 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.298295772 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.296546653 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.396276382 seconds)
  done (took 26.571055054 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.319097374 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.31352068 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.415380747 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.311910595 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.336543719 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.486096676 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.370323969 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.314544075 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.470904921 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.334775237 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.304187148 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.333374796 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.313002641 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.303925791 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.330490719 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.488329322 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.556897899 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.309445739 seconds)
  done (took 28.803416147 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.725925129 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.310770179 seconds)
  done (took 5.236498368 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.332022055 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.313721714 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.314825076 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.312354273 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.310526747 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.304122218 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.314047905 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.316253406 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.308885196 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.4289694 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.316122348 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.327239463 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.314192449 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.315429417 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.32459812 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.358363537 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.476802404 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.32400009 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.321873284 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.320856068 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.313889758 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.405494992 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.353907277 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.325969839 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.430845455 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.310911532 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.321202037 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.323324631 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.427223948 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.325918299 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.31448117 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.315679718 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.316222739 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.222712668 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.839768832 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.308138906 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.337268185 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.323030268 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.324602763 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.464405123 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.317962695 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.322902566 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.307668807 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.838204071 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.417502397 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.428713756 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.312771913 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.316504441 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.316565555 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.376749722 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.317094157 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.318391118 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.37299446 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.101985723 seconds)
  done (took 84.229820646 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.365993768 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.309882605 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493100491 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.330080274 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.312619994 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.308291407 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.309837454 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.574043689 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.330494379 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.311033396 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.613792371 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.912678047 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.316367361 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.374863302 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.351572959 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.365025351 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.309349703 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.30957581 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.309725884 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.311812031 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864880967 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31128233 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.312818899 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.3885613 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.351218506 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.830775241 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.309896142 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.314205707 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.330644418 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.31091677 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.88288374 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.315269732 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.362729751 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.315089504 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.589096586 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.682808962 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.643159029 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.318612494 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.340034053 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.314832607 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.335989525 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.821040877 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.663715698 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.312000477 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.312397158 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.820315126 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.311070974 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.311916468 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.311553793 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.579361277 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.31086053 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.310978307 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.311725365 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.312375948 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.312200915 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.370100205 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.370284556 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.835087064 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313359107 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.3133224 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.360778773 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.315186683 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.320122838 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.313484044 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.312860694 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.670164636 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.560949143 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.321832599 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.665157056 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.876523568 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.314199926 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.964504085 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.313669556 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.328830627 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.347665458 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313313387 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.327770691 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.830313983 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.344205621 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.313632105 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.644930142 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.318985536 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.6114727 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.329210415 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.31411017 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884968451 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.320624545 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.363318633 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.316295988 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.32304359 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.314110372 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.318260643 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.59831346 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.366942934 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.314988138 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.313598914 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.364802432 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.315082793 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.331741033 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.32431468 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.949131002 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.319992475 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.315234095 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.335206905 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.316623966 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.315934904 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.319506157 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.315341822 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.598952646 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.316785048 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.32635096 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.317429115 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.316428335 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.317502698 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.399462587 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.317162507 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.609871838 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.319916986 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.316273891 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.318161802 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.320644769 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.331990891 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31719209 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.332665936 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.318225817 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.6215422 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.333241262 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.332218224 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.317163115 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.317068439 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.329006838 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.323402858 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.370531851 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.31954191 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.101998101 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.36169762 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.364461565 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.317223402 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.331696558 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.3180215 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.322125472 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.32040375 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.61792902 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.607815797 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.555028462 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.323135668 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.318417195 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.120166068 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.355795544 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.500768856 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.338272812 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.319356821 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.602375417 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.545598835 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.319609916 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.319621888 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.322770779 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.598855152 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.327109276 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.64247229 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.915072134 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.32446746 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.319581443 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.107026907 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.134797564 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.325176932 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.320411168 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.612048041 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.339138487 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.318670953 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.320957901 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.32140709 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.320524077 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.325099125 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.331234396 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.322215337 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.32116299 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.661980452 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.515320599 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.33662902 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.323227972 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.840514258 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.344707861 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320920153 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.325377404 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.321479337 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.322129731 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.374952786 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.32373058 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.348408781 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.32224062 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.326160205 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.863903808 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.321785801 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.326260529 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.514693033 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045605249 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.325579544 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.321406978 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.32211746 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.381014418 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.872208593 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.360863864 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.615220311 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.335153669 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.362727726 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.321643054 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.338979132 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.873921097 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325253843 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.32264609 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.047055815 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.326034512 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.762735732 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.320636784 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.322872952 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.984843015 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.327261062 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.327959332 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.327722312 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.323294977 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.64292248 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.325317182 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.36916844 seconds)
  done (took 495.031416959 seconds)
done (took 641.061197531 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.322883157 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.323177308 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.327868454 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.327924965 seconds)
  done (took 10.519615354 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.341598192 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.331268138 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.338874697 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.330027493 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.345420506 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.329737073 seconds)
  done (took 9.234893018 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.324390961 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.323265475 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.327370277 seconds)
  done (took 8.192748958 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.52492694 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.345483854 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.665778345 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.340760098 seconds)
  done (took 9.09508224 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.339847961 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.340225586 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.340607151 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.341641348 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.341765252 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.3431345 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.342881176 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.341324461 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.342940949 seconds)
  done (took 13.292091641 seconds)
done (took 51.552122414 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.499243413 seconds)
    (2/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.306753284 seconds)
    (3/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.435703044 seconds)
    (4/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.439158434 seconds)
    (5/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.538308391 seconds)
    (6/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.308834583 seconds)
    (7/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.40703367 seconds)
    (8/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.404927041 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.47614346 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.398989114 seconds)
    (11/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.328862025 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.35200609 seconds)
    (13/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.44338784 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.365361182 seconds)
    (15/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.3070306 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.569793292 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.456044399 seconds)
    (18/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.565683803 seconds)
    (19/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.603282513 seconds)
    (20/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.311544831 seconds)
    (21/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.370063257 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.427244613 seconds)
    (23/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.305244487 seconds)
    (24/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.359497477 seconds)
    (25/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.307424224 seconds)
    (26/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.443409381 seconds)
    (27/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.732517135 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.415876046 seconds)
    (29/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.306508346 seconds)
    (30/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.676197182 seconds)
    (31/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.447736894 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.41335758 seconds)
    (33/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.466497084 seconds)
    (34/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.497563263 seconds)
    (35/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.483318918 seconds)
    (36/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.356324639 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.469500357 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.569988684 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.401432912 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.42202267 seconds)
    (41/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.433166824 seconds)
    (42/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.578617731 seconds)
    (43/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.369732012 seconds)
    (44/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.434398201 seconds)
    (45/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.509537852 seconds)
    (46/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.601513301 seconds)
    (47/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.311874272 seconds)
    (48/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.571590638 seconds)
    (49/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.413141036 seconds)
    (50/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.441334302 seconds)
    (51/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.671012294 seconds)
    (52/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.394130065 seconds)
    (53/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.537550704 seconds)
    (54/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.310513792 seconds)
    (55/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.336771219 seconds)
    (56/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.319091315 seconds)
    (57/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.312033408 seconds)
    (58/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.417246405 seconds)
    (59/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.423428604 seconds)
    (60/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.608794863 seconds)
    (61/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.572337971 seconds)
    (62/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.675573002 seconds)
    (63/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.67648067 seconds)
    (64/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.604662035 seconds)
    (65/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.411891037 seconds)
    (66/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.479061659 seconds)
    (67/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.607451581 seconds)
    (68/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.313291427 seconds)
    (69/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.40731011 seconds)
    (70/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.504732671 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.423784721 seconds)
    (72/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.360591291 seconds)
    (73/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.482087758 seconds)
    (74/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.309677725 seconds)
    (75/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.54276121 seconds)
    (76/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.315679423 seconds)
    (77/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.403511035 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.422612211 seconds)
    (79/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.469845843 seconds)
    (80/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.357085994 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.43708167 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.417545903 seconds)
    (83/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.368298118 seconds)
    (84/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.308977253 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.495335165 seconds)
    (86/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.333990431 seconds)
    (87/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.387208068 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.444803569 seconds)
    (89/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.365268611 seconds)
    (90/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.391806372 seconds)
    (91/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.312202083 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.430061332 seconds)
    (93/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.512833831 seconds)
    (94/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.485212241 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.312446829 seconds)
    (96/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.44733337 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.413696557 seconds)
    (98/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.677153291 seconds)
    (99/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.541070727 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.494986704 seconds)
    (101/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.572048386 seconds)
    (102/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.54392027 seconds)
    (103/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.572366733 seconds)
    (104/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.364346822 seconds)
    (105/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.362164051 seconds)
    (106/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.646823165 seconds)
    (107/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.371257016 seconds)
    (108/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.425855307 seconds)
    (109/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.630308146 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.44647569 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.437112138 seconds)
    (112/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.544280201 seconds)
    (113/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.508784777 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.434468892 seconds)
    (115/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.332291495 seconds)
    (116/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.824922718 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.379286697 seconds)
    (118/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.363688189 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.361667991 seconds)
    (120/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.318378661 seconds)
    (121/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.462652533 seconds)
    (122/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.510132575 seconds)
    (123/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.312855532 seconds)
    (124/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.312668419 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.447980191 seconds)
    (126/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.429736606 seconds)
    (127/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.468286424 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.428555452 seconds)
    (129/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.57557515 seconds)
    (130/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.377003993 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.580096932 seconds)
    (132/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.404673966 seconds)
    (133/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.312753912 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.347093281 seconds)
    (135/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.399139149 seconds)
    (136/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.368098261 seconds)
    (137/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.43117763 seconds)
    (138/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.482136063 seconds)
    (139/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.313992105 seconds)
    (140/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.332925466 seconds)
    (141/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.527004971 seconds)
    (142/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.374041426 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.46453195 seconds)
    (144/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.408049854 seconds)
    (145/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.49076473 seconds)
    (146/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.375105885 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.487220564 seconds)
    (148/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.315621214 seconds)
    (149/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.324054453 seconds)
    (150/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.324646005 seconds)
    (151/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.43218946 seconds)
    (152/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.396858188 seconds)
    (153/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.339241247 seconds)
    (154/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.361339009 seconds)
    (155/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.826468675 seconds)
    (156/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.545610201 seconds)
    (157/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.317929551 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.457302469 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.378447657 seconds)
    (160/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.499585533 seconds)
    (161/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.503621849 seconds)
    (162/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.413402896 seconds)
    (163/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.64692096 seconds)
    (164/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.446762846 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.449354642 seconds)
    (166/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.492680158 seconds)
    (167/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.351321847 seconds)
    (168/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.612583923 seconds)
    (169/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.539218853 seconds)
    (170/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.425915639 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.338762918 seconds)
    (172/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.633596064 seconds)
    (173/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.338381058 seconds)
    (174/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.521413917 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.457787655 seconds)
    (176/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.368055296 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.422273858 seconds)
    (178/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.31630227 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.538560689 seconds)
    (180/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.354959374 seconds)
    (181/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.41188999 seconds)
    (182/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.316030766 seconds)
    (183/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.328920462 seconds)
    (184/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.434072336 seconds)
    (185/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.412975067 seconds)
    (186/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.42609456 seconds)
    (187/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.447534882 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.369944434 seconds)
    (189/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.374557867 seconds)
    (190/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.318600646 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.51152245 seconds)
    (192/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.367309884 seconds)
  done (took 325.80995761 seconds)
done (took 327.028991941 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369600783 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.443740967 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.346359692 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.3467605 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347191239 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.349053032 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.374514431 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.348900479 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.361318043 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.362671256 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.346653294 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.360639332 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.362920808 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.35748102 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.38145189 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.347924026 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.347701572 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.357514142 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.362234401 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.364550727 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349486956 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349798094 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.374740354 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.350058912 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356405239 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35568518 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.354267679 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.348372471 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.356683745 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.364473616 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.348076761 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.355455154 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.365051437 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.361919944 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350666973 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.36079151 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349081109 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.448039485 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.370924456 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.360181276 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.358389194 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.365544418 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.355994731 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.353596635 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.361112903 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.377135978 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357778886 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.36428022 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.349575074 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.340863237 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375792989 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.362404264 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.358977272 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.341695794 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.346170432 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.370389558 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.360175674 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369553293 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.358138274 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.352039468 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.384541065 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370712357 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.362783255 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359769997 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.359539379 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.365487826 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.361386446 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.367558445 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.358855287 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35392427 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353525138 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.358906902 seconds)
done (took 107.23872415 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.473480448 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.34646783 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.50919655 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.359638059 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.519075821 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.479985405 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.35939735 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.359487665 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.35963195 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.158054614 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.360439438 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.359930601 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.34947921 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.359489839 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.475695825 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.359547809 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.35941887 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.057037908 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.36137748 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.488565314 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.346673525 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.361413121 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.359565399 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.160804092 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.34784534 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.344611947 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.488994348 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.361046917 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.060673085 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.343912526 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.348799892 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.060420798 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.489102666 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.379465091 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.371192155 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.369979213 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.521185506 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.365043261 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.476101688 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.478107333 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.509779822 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.398826579 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.346462674 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.352085696 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.3638068 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.361611269 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.3632652 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.390243543 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.350582085 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.361108736 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.059475621 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.371171539 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.371395951 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.363120147 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.36142833 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.382897784 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.36325754 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.363014927 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.490515028 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.363051904 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.477522182 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.165325885 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.162778351 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.363162251 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.34954863 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.364010964 seconds)
  done (took 109.895979549 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.424244797 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.429851256 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.463229601 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.355432658 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.403866359 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.464711379 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.358157958 seconds)
  done (took 11.137604719 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.361127582 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.363635191 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.402124294 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.403075935 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.362120428 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.529846354 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363478862 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.366216513 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.362948588 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.406033471 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.363881623 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364837223 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.373637476 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.354106189 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.402912853 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.36812762 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.47445946 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.358555182 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.364741866 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.508255208 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.364942899 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.374209086 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.408792168 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.368130647 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.365070441 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.363675841 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.139587469 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365215093 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.366293779 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.365952824 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366714893 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.425196734 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.364574957 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.356456757 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36612891 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.470077949 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.36708183 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365880604 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.366583903 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.358724506 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.364632256 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.36496839 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.364756562 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.364204306 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.366428987 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.380825309 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.366459064 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.365289513 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.365509082 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.366080306 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.407913304 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.367577829 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.365565967 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.366916086 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.410155559 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.374626487 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.366439898 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.366426268 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.367043175 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36707126 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.512160129 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.406088731 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.366432481 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.406248478 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.367305713 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.367279627 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.3681908 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.367670793 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.447734739 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.367069268 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.405544187 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.366355128 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.542000655 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.38330806 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368421125 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.362811804 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.36100813 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.368034024 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.357954062 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.365214655 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.368833244 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.361946034 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.366477526 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369029399 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368910159 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.519828494 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.467603396 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.367883092 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.376001338 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.366946526 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.370410371 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.412098299 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.369689061 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.369907451 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.411905094 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.478888556 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.413081222 seconds)
  done (took 140.43137594 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.373586309 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.372423008 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.365409948 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.388008006 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.362407715 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.361166254 seconds)
  done (took 9.467518573 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.364092315 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.373422239 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.370309409 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.369213823 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.371589852 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.370317387 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.371362321 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36249644 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.37445147 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.371453066 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.37139434 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.372246314 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.372045554 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.371009504 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.372118731 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.370930157 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.371302837 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.371130497 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.372207657 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373257637 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.361329127 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.371680081 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373991711 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.364900021 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.377229415 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.37093523 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.389058769 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.373269277 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.373683056 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.369718547 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.375563798 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.373009689 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.36644952 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.369096292 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.374876759 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.365990272 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37634989 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.372183838 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.371530529 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.372594063 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.372896255 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373323672 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.374260564 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.373687951 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.367249985 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.36954528 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.377559698 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.388582442 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.373819975 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.373944736 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.374501805 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.372745596 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.374066709 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.375154546 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.366647262 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368712524 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.377733979 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.373973428 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.375763088 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.366595978 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.377538106 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.374293529 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.367680103 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.378249892 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.376670317 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.375496407 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.366914653 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.376583497 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374989576 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.375967021 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.374534254 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.374506152 seconds)
  done (took 101.070009005 seconds)
done (took 373.237135387 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.746005131 seconds)
  done (took 3.995080271 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.359203056 seconds)
  done (took 3.609594751 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.354067115 seconds)
  done (took 22.606052581 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.384121071 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.390019865 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.381022358 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.365313211 seconds)
  done (took 10.769375983 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.633789636 seconds)
  done (took 3.883602258 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.381969744 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.370780496 seconds)
  done (took 6.004502181 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.562556256 seconds)
  done (took 3.812780488 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.59472718 seconds)
  done (took 3.846110967 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.372718635 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.392698439 seconds)
  done (took 6.02517268 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.341436689 seconds)
  done (took 3.592841448 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.426860495 seconds)
  done (took 21.679876961 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.392096042 seconds)
  done (took 3.64531956 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.399970317 seconds)
  done (took 3.651356774 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.86489168 seconds)
  done (took 6.116199072 seconds)
done (took 104.486723482 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.362674115 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.369521836 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.365537267 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.36410955 seconds)
  done (took 10.71386289 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.443505671 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.442440837 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.452061223 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.437227241 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.439086087 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.44465377 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.405802392 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.405591092 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.434575494 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.429978313 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.44887619 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.433904598 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.447012244 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.404403206 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.431478815 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.449006495 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.437222571 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.451476433 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.406340088 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.438003574 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.381917898 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.438421979 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.43264267 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.380461364 seconds)
  done (took 35.56922376 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.890301059 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.443343105 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.525079185 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.423358436 seconds)
  done (took 7.5345418 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.485751441 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.485238276 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.505009625 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.548657834 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.586869492 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.499592328 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.40617933 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.403078963 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.389887561 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.486291526 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.563774843 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.48621296 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.700820164 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.381741541 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.698815873 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.382434951 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.381256843 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.486190841 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.5352922 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.564197956 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.381021939 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.484320352 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.489649958 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.48595066 seconds)
  done (took 37.072445313 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.391504549 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.39812083 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.383302107 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.397380375 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.383011216 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.383707839 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.386217305 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.391232874 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.382818738 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.382237965 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.384370699 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.397737259 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.383348218 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.384808615 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.390456799 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.385195613 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.386173546 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.390705913 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.393442851 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.385762569 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.386095588 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.391283889 seconds)
  done (took 31.794023416 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.368441064 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.366809145 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.718864733 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.623776039 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.36943746 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.369282065 seconds)
  done (took 14.072337627 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.441764175 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.582149025 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.377255076 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.717070554 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.801729367 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.378095596 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.377162565 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.613652292 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.904345862 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.89988574 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.436124954 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.445668975 seconds)
  done (took 20.232234616 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.375766885 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.373873869 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.380586253 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.388198445 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.42884773 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.381956115 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.383669655 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.368934313 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.433422373 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.432926015 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.385183303 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.429579239 seconds)
  done (took 22.02123242 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46194532 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38201591 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398574306 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379220413 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384413471 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380472872 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.462677289 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.098472259 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.390394579 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658229681 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391860902 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467518125 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628847489 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383975436 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386614003 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.351400716 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62901098 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860687858 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382630039 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381670988 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43464826 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388093973 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393096946 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.588745581 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388021559 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381579201 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.644908042 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381501499 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6581255 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634761539 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.635950605 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389933755 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659119815 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02935423 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493065346 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.583123444 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383401231 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399977845 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.371340489 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.41472853 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395953424 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389017364 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.632902571 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390219636 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383397339 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385110316 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11029324 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.395371435 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.382671498 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385432666 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632413109 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47171759 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.389889124 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383443213 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385882136 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388487435 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.391667981 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510433417 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022310493 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384359749 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391340951 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.389723377 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378076169 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389214478 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024835817 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.392739664 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.390827428 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390627387 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384670121 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385890557 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41130295 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385138432 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.405000896 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385422179 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136925593 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405902449 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393117348 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932227707 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392803933 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.391353749 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612305932 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387224959 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387551374 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.385108792 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386936182 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120467115 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400416818 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.356657569 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43159694 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.103658663 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.593877183 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412229404 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419549314 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610720724 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.356734861 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390055305 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.394575161 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394443403 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408408642 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.111467844 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39318028 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.3937086 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636720352 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.599778752 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389138866 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.358857611 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862202963 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397304708 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.413303514 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388247277 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.61032016 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.001365099 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649522012 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394703081 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442455175 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388642225 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184364923 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39808837 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.401810519 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399358427 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669557202 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.212145322 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394420111 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464838244 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390937993 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390760708 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389184723 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395113187 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389691361 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.569898009 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407819044 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.644207819 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.396255654 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391168357 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.391036388 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395727385 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.41219004 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612501483 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394335139 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670038822 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389440223 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391251409 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391573837 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.608935532 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.402156661 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.398624825 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.732974847 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402751603 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405734052 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645036596 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42966219 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504681636 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425302512 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.404598958 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.643683004 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.398291124 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.399066462 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392972229 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397247047 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398028519 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.401533119 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38549876 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017071661 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376610963 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397984714 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392772275 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.409899766 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467346059 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40172687 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595039432 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.39766509 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397942967 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.400924223 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.392236002 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618712899 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642995419 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.413163889 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572976569 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.862961035 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004209722 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413492188 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.392868137 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.392467931 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.392967311 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394188177 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393662826 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396845355 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59681368 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655243248 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394218999 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.009047062 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402564993 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394102979 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.407270847 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644749124 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.409312923 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396217237 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.394484937 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414113755 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422013533 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649710926 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621422327 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.41060693 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397325399 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.959088331 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403238367 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397022092 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396686417 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422597872 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395724116 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271184348 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.738833779 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385603064 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647811413 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416208984 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.418356323 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.396057576 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396869307 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401705894 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.418513624 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420597814 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.600488404 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404258203 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403625565 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035460667 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171701494 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961725101 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41017891 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.404624726 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403453936 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.123080987 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402848618 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399127523 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642650771 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123405907 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401486305 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871384898 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.402374088 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148033562 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654924301 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632126754 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407574746 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.403447268 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656257367 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616790519 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426668536 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401176994 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400824264 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.368828806 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947382541 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402803388 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583865703 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125424213 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403671464 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406614235 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.458647787 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.416892028 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796788419 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403929093 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400235567 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401678277 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413438779 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275974371 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407327611 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399003601 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0508766 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404235064 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.878682207 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404774378 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.603827106 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.65482509 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.632466195 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.407677232 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.407818294 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.647523908 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651025048 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406237137 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401138802 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966913297 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.257787824 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.407379808 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402720461 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191733108 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411576412 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683864165 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.417937691 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.404305168 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410279665 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401843197 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402655029 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.400978148 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408526948 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376839721 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878014913 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.394828878 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396831836 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416828262 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405652603 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64948722 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.417532651 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.015486079 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634110801 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417308763 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434231535 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.407318084 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409482045 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.376883975 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403107895 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.4032256 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418421813 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.629824984 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.404336804 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.375277093 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.476423312 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618803904 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404073949 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414812078 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624525888 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.409365642 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.427380434 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202435681 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441165575 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415165124 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411504473 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394635003 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458327459 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478598489 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609234995 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.66253006 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.663277653 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802190716 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421153376 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41358693 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.419592472 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485416513 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412112936 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.41493088 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.409662836 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016391879 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18720476 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.034127428 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664930756 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410979689 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415750228 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406242963 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648796264 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404836342 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683759574 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405487838 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.40081063 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42844198 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413743575 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412713253 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623259452 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681500971 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40592682 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416557715 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411023351 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.406739653 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665991641 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.625945042 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889929268 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93979146 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40773777 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405738642 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.141008388 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688235314 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407058838 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406840919 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406806705 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.415408443 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.426919417 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.421692105 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406540251 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63727663 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659768941 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091013946 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.664633411 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.589386754 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.336524562 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407944006 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.675611373 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239962908 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614054457 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034713955 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.129375158 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665088667 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482462616 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614992497 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.412888053 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646509162 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.407100691 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414093188 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410329284 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408512673 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.408965108 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.660385422 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036203483 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668641304 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.415208652 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.410211648 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444475866 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.615026993 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.637163392 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170495606 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.635089915 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668190115 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422277994 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40957035 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035026549 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671521482 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415777623 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.416393044 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62659995 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416235571 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448963107 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.284399885 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.409520158 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959448641 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.62459554 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433062755 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418054741 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.135744188 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039061642 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.427685722 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898919676 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413631603 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410950225 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69305644 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.419844862 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413486876 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698004998 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.41772246 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.412579378 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624302337 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.031918446 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175340966 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.419870769 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413746266 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.420691054 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413263169 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40505185 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417096708 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41428394 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.809056593 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417298786 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414286555 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428175521 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.414679318 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421422403 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.418461996 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413310067 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.423256067 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.389415394 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.403260729 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422869102 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544325593 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976249691 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419281612 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.031890082 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.747938915 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.662347337 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417186728 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.388178288 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.42109877 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416912785 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415536017 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415449926 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40816305 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95014007 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.42734362 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.676217583 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.427233047 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.626264178 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626516996 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416608797 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629300803 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427853709 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439950688 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.38489095 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415859389 seconds)
  done (took 993.742287698 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.431375587 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.427105668 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.427340719 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.407888503 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.439377727 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.430332186 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.433780893 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.487901081 seconds)
  done (took 20.773901037 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.416806146 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.419401491 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.41752829 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.420278855 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.414269934 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.894937207 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.414208851 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.416340097 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.431162298 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.417325304 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.416536161 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.03898709 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.422236887 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.415913075 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.414783583 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.421317083 seconds)
  done (took 33.083816631 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.161519304 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.445456043 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.032526213 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.460774028 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.410425648 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.415199031 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.573197005 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.40910342 seconds)
  done (took 26.200205326 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.423119761 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.421666076 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.422348656 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.423160863 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.423982668 seconds)
  done (took 8.403930372 seconds)
done (took 1262.467301263 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.425275455 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.425672433 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.425411393 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.425894479 seconds)
  done (took 6.99396025 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.388457452 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.389150804 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.389726832 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.405773268 seconds)
  done (took 9.863931778 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.090786656 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.936265472 seconds)
  done (took 5.319135598 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.954319704 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.947798758 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.943928668 seconds)
  done (took 7.137205824 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.692616764 seconds)
  done (took 2.986963248 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.380663648 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.417318033 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.421620226 seconds)
  done (took 8.512830741 seconds)
done (took 42.106954561 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.41059829 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.186632654 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.56699745 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.408961621 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.616113098 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.565228792 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.661120515 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416006208 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.410836055 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.418550307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41118549 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.58669542 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.650112502 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.166714225 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.646836174 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.171658867 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.572780227 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.414449878 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.411739167 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.411654256 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.663149736 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.411282326 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.422603021 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.4118524 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.577739389 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.556176353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.418565811 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.175088667 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.411885664 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.411159691 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.561678133 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.415156848 seconds)
  done (took 83.834895198 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.412784448 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.438836172 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.426494854 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.412298942 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.414229859 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.426217973 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.414248525 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.413334972 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.417243888 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.412828253 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.415627211 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.42872878 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.416476023 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.4143409 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.430383489 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.414221729 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.412734884 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.413303734 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.413952168 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.431823663 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.415591136 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.41753118 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.422957864 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.417957033 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.427869333 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.4141597 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.434280673 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.413377936 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.414252885 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.421078284 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.412828471 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.430922111 seconds)
  done (took 78.718981024 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.41476013 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.415652287 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.413161863 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.428709214 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.415694982 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.420362432 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.416694444 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.43094448 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.422737912 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.419620043 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.427180271 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.41509401 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.415051441 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.414892167 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.419503488 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.41602861 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.414070791 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.418472875 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.431205635 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.423368082 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.415539725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.430372673 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.415664297 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.418503683 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.419298751 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.433088787 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.431128916 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.418693848 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.415186027 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.415204684 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.421696786 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.434346763 seconds)
  done (took 78.75938622 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.658591664 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.43130244 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.432470029 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.425187503 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.435694622 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.43124024 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.426032889 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.663403445 seconds)
  done (took 15.201320348 seconds)
done (took 257.807367798 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.426788118 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.912862462 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.458204152 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.425703742 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.44195724 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.453438436 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.629234429 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.45829129 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.619251984 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.433689063 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.442224805 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.428007893 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.240739746 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.564353847 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.231569089 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.352888194 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.30075301 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.420423994 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.982650307 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.650899705 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.45650117 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.418797375 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.239869959 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.312893201 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.408280738 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.488484697 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.491968033 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.5855515 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.548193387 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.487115338 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.911441636 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.440175837 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.432909654 seconds)
  done (took 65.396359782 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.425106133 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.434836438 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.43575356 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.435792925 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.4354671 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.434914325 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.426355538 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.435285413 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.435673865 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.435990462 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.435952044 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.437235749 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.436507272 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.433961405 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.436524353 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.408914327 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.42566945 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.434296854 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.426741765 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.408502214 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.436420912 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.437677517 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.437175535 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.436501908 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.435820314 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.436485052 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.436553145 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.436967761 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.437420098 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.435655866 seconds)
  done (took 44.28793466 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.437352029 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.999081725 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.15909256 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.439726739 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.429202417 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.432056115 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.715216614 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.443826024 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.432234234 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.431862064 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.900283294 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.44727212 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.461508843 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.168026889 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.436687532 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.440128962 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.439625774 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.429771618 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.011436602 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.444713729 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.714794547 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.444130196 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.716417242 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.445238656 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.433471111 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.431773085 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.434787522 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.229294337 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.456215417 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.904116943 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.20701732 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.712296206 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.171372045 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.214099377 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.208306864 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.445813243 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.440090479 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.910914153 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.438175776 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.433883064 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.713411034 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.436975709 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.172040676 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.127513123 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.452800601 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.441845945 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.26110435 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.912380266 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.676095586 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.442770451 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.206280851 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.440272165 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.443300735 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.432848133 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.671450782 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.438297592 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.433239269 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.289468755 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.441728374 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.716302673 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.447183006 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.430778844 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.015870712 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.437226356 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.006207255 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.438298075 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.441725655 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.435762331 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.177460714 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.442010786 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.138963 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.454879651 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.443866608 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.906951182 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.014369649 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.314390994 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.44018945 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.015427001 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.19953204 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.737507552 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.441771161 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.210097289 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.741419691 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.442385941 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.446818966 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.445070944 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.44233966 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.50505112 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.713354274 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.058822403 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.135842639 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.29431454 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.725866029 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.447550385 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.435574067 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.294325194 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.449444627 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.443666516 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.172547206 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.146995972 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.456588067 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.4435122 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.125710752 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.458674619 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.722678801 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.445721365 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.217258932 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.442239838 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.507975774 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.445452682 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.442529883 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.439203529 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.72289677 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.444676882 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.446536499 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.121298448 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.941505394 seconds)
  done (took 199.705213939 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.44612008 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.430355997 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.438683128 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.430361356 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.430888508 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.436905075 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.431423634 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.43189511 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.435618627 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.429739097 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.430273627 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.439539345 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.437340216 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.431153944 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.431708646 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.449448309 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.432664765 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.436852505 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.4482691 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.430545441 seconds)
  done (took 46.020304206 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.44764333 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.999194652 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.965171072 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.451105528 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.448127309 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.438760291 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.492528574 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.448058985 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.447926645 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.736387826 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.613450996 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.453470742 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.447662889 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.449461744 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.961938147 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.427116358 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.737241063 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.004719721 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.453966703 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.999850606 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.426177164 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.448218464 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.437674072 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.000581094 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.753240086 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.726190781 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.500689228 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.002056363 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.454198575 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.447188285 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.000649029 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.45514168 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.439765697 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.987218353 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.454724834 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.46171791 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.448420929 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.49760516 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.497684421 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.741526432 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.011834534 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.738082032 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.46710569 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.607284396 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.452043587 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.422056459 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.013856181 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.458018104 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.422229059 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.452642738 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.456814596 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.974070079 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.446726882 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.976994581 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.455357676 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.450485253 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.004040077 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.978718016 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.971665087 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.616076891 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.444985589 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.72445616 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.454942563 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.012301683 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.456592429 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.452336321 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.451339152 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.612494842 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.008412893 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.732438414 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.748597969 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.748329722 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.456596535 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.509057748 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.453578007 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.743671464 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.513261256 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.838361303 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.745593485 seconds)
  done (took 130.402770921 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.718696407 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.555571097 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.82306216 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.024769968 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.949572579 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.581953359 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.555845019 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.683622554 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.467778426 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.558316198 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.093579405 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.542333855 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.189202537 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.508240214 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.552037201 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.563539389 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.846758696 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.390178532 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.064107976 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.068580723 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.454238521 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.54981842 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.963468318 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.645344716 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.438396409 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.022295731 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.382158221 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.969248765 seconds)
  done (took 54.47991343 seconds)
done (took 541.591487112 seconds)
SAVING RESULT...
DONE!
