cset: moving following pidspec: 27751
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.404682234 seconds)
loading group "string"... done (took 0.503628357 seconds)
loading group "linalg"... done (took 8.742905464 seconds)
loading group "parallel"... done (took 0.172996021 seconds)
loading group "find"... done (took 1.222359062 seconds)
loading group "tuple"... done (took 1.854819912 seconds)
loading group "dates"... done (took 1.331676167 seconds)
loading group "micro"... done (took 0.191090688 seconds)
loading group "io"... done (took 0.500868959 seconds)
loading group "scalar"... done (took 50.402896404 seconds)
loading group "sparse"... done (took 13.756053034 seconds)
loading group "broadcast"... done (took 1.288869591 seconds)
loading group "union"... done (took 9.150349031 seconds)
loading group "simd"... done (took 3.040585049 seconds)
loading group "random"... done (took 11.37548024 seconds)
loading group "problem"... done (took 2.222793105 seconds)
loading group "array"... done (took 24.878306416 seconds)
loading group "misc"... done (took 1.106150273 seconds)
loading group "sort"... done (took 3.741434294 seconds)
loading group "collection"... done (took 19.259122548 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.599518966 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127225232 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.204822228 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.339772311 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.233148682 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166163968 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143202441 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.242383757 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.635900877 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202733241 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139642914 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.500140971 seconds)
done (took 6.344282048 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.255019239 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.239340336 seconds)
    (2/2) benchmarking "String"...
    done (took 0.162935388 seconds)
  done (took 1.161135863 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077167789 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157459068 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108443299 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094996444 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092474587 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111087583 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092844168 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.11143449 seconds)
  done (took 1.532003129 seconds)
done (took 3.783864598 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.500001162 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.86453013 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.501976748 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.142158334 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.309896686 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.294869804 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.271190283 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.197935664 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.09211251 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088814763 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173299161 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.390753548 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.384969967 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.939415928 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092285845 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095032618 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.131189446 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.75459665 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080962024 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.123283727 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.485065018 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.184901113 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.100552011 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.121946691 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186943401 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134831587 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160215717 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104588063 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.665345818 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134489062 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.178760942 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099244034 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158073694 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.187672339 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195351739 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111102204 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679931668 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201244662 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.087927691 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100898686 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667028048 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118749433 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.184176715 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104441467 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089576208 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.178964906 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.09128927 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078840946 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.111724912 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086835711 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16657609 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.455174719 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108304161 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171967038 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09418054 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.682441139 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097875168 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275477924 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126317766 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093284269 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091561035 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088557701 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156801888 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09410389 seconds)
  done (took 19.920149812 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.146321324 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.166603886 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078792447 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156324817 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123553654 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080328166 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102959906 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07915673 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126257374 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179149717 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138833142 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152348601 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092907141 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091421353 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128025435 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248170592 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108096181 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122902394 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09117938 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090565825 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140992348 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098041769 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108753317 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092847911 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172098159 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206767951 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111589066 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124483043 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09115486 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09548561 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143829776 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144251585 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092975172 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089385547 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187357277 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107855376 seconds)
  done (took 5.286501344 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.118939139 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.217009262 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103303033 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.204326715 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.17895223 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.128916964 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.171088037 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.142555685 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.270347815 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.239965021 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178828145 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114349698 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.122758099 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080493857 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08128431 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09725577 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.455354469 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148597006 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.163782469 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.12701191 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104784111 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081832537 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.38166075 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084324499 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095974665 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08346724 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062812551 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.192317413 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082403735 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.241908601 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.088992412 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.1044847 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084244201 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130729035 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.136272165 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.139237012 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12578788 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081566732 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096658022 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221541314 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089309985 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07848325 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.13273397 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118083173 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131699602 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08123933 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.102411259 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221218866 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081792987 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100321322 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.074847457 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197442897 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.124841521 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078134598 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291626235 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119326473 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081665123 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079676626 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.810693993 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.111571415 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081393916 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097588736 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083213804 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084224212 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.0971231 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.430574235 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083647032 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.230427508 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084510932 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155837602 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081221085 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099447939 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087114564 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086715925 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119269249 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080826238 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.0801329 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078831045 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097978654 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082594844 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.127892595 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087360522 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080499612 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162534967 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099556348 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100193508 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126147322 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083311016 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09509022 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113911192 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100772337 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082325511 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080758564 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.17027668 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080682857 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.12963158 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082255165 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144806607 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083673968 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.251262527 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083057013 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122367772 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102510694 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127142029 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101239461 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080890578 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102492741 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079455519 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081191239 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161840016 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083120886 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080112459 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080475822 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111450059 seconds)
  done (took 27.973343031 seconds)
done (took 53.939162893 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.434900067 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080567746 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079816824 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100017228 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080382821 seconds)
  done (took 1.609381595 seconds)
done (took 2.417164973 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.320069516 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190880635 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103275307 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187920494 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085785296 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195564408 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182472315 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094659304 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205224159 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083882968 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185286493 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084645245 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105466445 seconds)
  done (took 2.858772214 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10302223 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10834243 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100750032 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119991406 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083652703 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099694361 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1179973 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110029726 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10027379 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111383133 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083807362 seconds)
  done (took 1.943370556 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09854748 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10402865 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097404224 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116875362 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083436329 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096436661 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114945948 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107632176 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097586891 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112148317 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084109505 seconds)
  done (took 1.926099877 seconds)
done (took 7.532377519 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.086563148 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.410713716 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.168919112 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.211915509 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.348361382 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.237637607 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.569290408 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.15323712 seconds)
  done (took 14.143859414 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.169222927 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.110728524 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092273313 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095257922 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092688325 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.110658349 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092696619 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090869662 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.111234042 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093154409 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09392328 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.112565211 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091883715 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095022416 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.112031378 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094610891 seconds)
  done (took 2.529336548 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143883057 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142405941 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099041784 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099706184 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.113881797 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101318918 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101671762 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.116708651 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095646559 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094387122 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.119180382 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099285652 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097525736 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.111288503 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099284511 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117273126 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.111747994 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099304522 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116809832 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117756202 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101139801 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095545894 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.116655506 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10099828 seconds)
  done (took 3.50913103 seconds)
done (took 20.994042221 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148317781 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102854916 seconds)
  done (took 1.064924227 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.140993575 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.157152386 seconds)
  done (took 1.116147625 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112987619 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090341911 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139261583 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102910219 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090269103 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10925516 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116356036 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108946601 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091951616 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092277764 seconds)
  done (took 1.87413164 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096396204 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095136565 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121913122 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.134900126 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118460551 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093547608 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095639017 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.092535549 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.115712889 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090807212 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095609287 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.1261316 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096470137 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126944975 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09553793 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095679374 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.119522145 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095626765 seconds)
  done (took 2.730103136 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091644111 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092472746 seconds)
  done (took 1.005378638 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094754561 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089941646 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092856563 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111266285 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091861609 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089891159 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108925016 seconds)
  done (took 1.501088324 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.48775847 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.261685291 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.355217118 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109496039 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.147654526 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.352154012 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.147511681 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.222484131 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103040643 seconds)
  done (took 3.043319831 seconds)
done (took 13.155196309 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092476907 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.2226697 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.626033542 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113892883 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089685452 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163141664 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.286459976 seconds)
done (took 2.422668934 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339169575 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.142035689 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083241295 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091204009 seconds)
  done (took 1.47838822 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083353777 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099846657 seconds)
  done (took 1.012532428 seconds)
done (took 3.320986336 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091315248 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089489435 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.088380194 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.106685336 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.122002375 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.088040043 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109305495 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090248131 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089531523 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.108441005 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.090870495 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089800675 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088212616 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108456937 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089334814 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089668423 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.105815746 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089708539 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088919677 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087674406 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106169058 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089259948 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088531613 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.105215841 seconds)
  done (took 3.164593807 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107207765 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090892522 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111874338 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094057436 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093954073 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111526072 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095940459 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090184147 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110962243 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092570132 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093434541 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109837291 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092867306 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093407358 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090641664 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111821906 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093077746 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091058905 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109871014 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093633839 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092536202 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10899758 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094138825 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092359997 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.11219848 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093119337 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.0908679 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109099626 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093881841 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092546425 seconds)
  done (took 3.78790355 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099985455 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086406338 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089187852 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116194719 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087158945 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090523096 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104655508 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088731417 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091033686 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08918042 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109716931 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090088769 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087745553 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.11008959 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091789068 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09236617 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116511303 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.089106772 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086522228 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09075155 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111246015 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087275049 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090061107 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.1077297 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090251832 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086277984 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089347162 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108517702 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090837453 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089418542 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110388673 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093308744 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089943836 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.116213521 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093669146 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089074129 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095370987 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.105880708 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091303143 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087644038 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.104961292 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090470258 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08661356 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.112666136 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091152205 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09054321 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087470102 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.109794451 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090930009 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092311278 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.104836314 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.088509835 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092564153 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090736868 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110713538 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086966681 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089397855 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.105718855 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091619206 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089040507 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085812086 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.105078763 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095222272 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090467674 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123168413 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09790111 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086984418 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.10983551 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091179747 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094175076 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.110136101 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101387555 seconds)
  done (took 7.764465805 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102673875 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098526266 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091122886 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.110040486 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090789658 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089582532 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113809846 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09215543 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090611075 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115357864 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091570223 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092270076 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109437577 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093523429 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090822345 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092058902 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.1143257 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090379934 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091665818 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109901874 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092929923 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.0948899 seconds)
  done (took 2.999216756 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.236302696 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097469889 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138635562 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121884481 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108008166 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120891658 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094624667 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095399945 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111914216 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100317543 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098945509 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11336768 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107962977 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117294244 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101508912 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099503312 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113027326 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10253991 seconds)
  done (took 2.921000454 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104934052 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09529744 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129932343 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092982066 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092871977 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091442992 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117893056 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113178821 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110212464 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093496294 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098526806 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113829825 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094306591 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093128416 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092130167 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111518852 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093361248 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092364897 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117366227 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099305508 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098483531 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118761378 seconds)
  done (took 3.108256966 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106441882 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092896564 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127508107 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096423778 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092126948 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110016968 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.098481995 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093618332 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.116128086 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093003186 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093787512 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091343447 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125282657 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093225313 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097212399 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111497794 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093516851 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092294815 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111681348 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093117169 seconds)
  done (took 2.873665719 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.171262215 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125176241 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107922104 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115090034 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126195851 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108168079 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115146466 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128290942 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107738293 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138708472 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109158038 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107572314 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135610042 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113440381 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12608201 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11692384 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115776399 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135485353 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108071932 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124470046 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120140729 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107369083 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133477581 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107608095 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125445074 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109464214 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107704506 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130615522 seconds)
  done (took 4.224321112 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092304957 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091549379 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089392688 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108446045 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091345393 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090382943 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089993196 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.11019525 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091033702 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09088942 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110743382 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091916889 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090773317 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090410265 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111020942 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092117619 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090684145 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109581182 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091773524 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091403821 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089992339 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110187741 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091842906 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090763134 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109491262 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091965 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091176674 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090131801 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110875598 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091963789 seconds)
  done (took 3.730774496 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10542585 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101560952 seconds)
  done (took 1.057062275 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099698738 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106101195 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090110477 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110882538 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099090722 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091438463 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119447694 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099479329 seconds)
  done (took 1.668233466 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.141654114 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.163983548 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097127782 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10260835 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.162935612 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.1521495 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133009169 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096165126 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109523685 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085774061 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.155935716 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085031512 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092583919 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088708444 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.112798102 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098945888 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.110385688 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101618149 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098259023 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09314178 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116398206 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098134607 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112421754 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10556727 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087329722 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095357366 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114902653 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103441751 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1072502 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094760619 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090373779 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091593964 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.11533852 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097463039 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.09245342 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.161654816 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099196614 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107942459 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094526485 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095619283 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.144748536 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093533468 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093043441 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109864219 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096164299 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0955551 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.115783242 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093034857 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084897376 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.10619189 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093711263 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088461867 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091414895 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112124357 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093269162 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116663102 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096080601 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088872896 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088585119 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107786859 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091927056 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087832549 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115485241 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095481311 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091843035 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.111980907 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092237288 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.091782018 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.115354352 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094457213 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091256106 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127591492 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094950701 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.097645149 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117287557 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094005237 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089432097 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116500498 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092134427 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092750336 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.116395768 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12305063 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093520408 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108309795 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08952137 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100188088 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113439576 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096228877 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085453411 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120916093 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095572674 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093481401 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.104862752 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092244166 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089008187 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.095060706 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.105835091 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093384599 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092718082 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.115856957 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097783514 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091243056 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113637693 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098929694 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097695747 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110130135 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.137616718 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10946339 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089437195 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095445962 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097160429 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.107137521 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092560778 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090475629 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108986645 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089000206 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097085605 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111751542 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094784497 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.095402028 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114045995 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094661857 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094263317 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.109763689 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090518243 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096021434 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119034017 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.0947171 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094854003 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.112056432 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09420262 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093734956 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095636301 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109443971 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098841153 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090475748 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.112244494 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094286529 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096985172 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11222628 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088674518 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091417464 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112458083 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093219507 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.094717684 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.112416273 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090025685 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085715547 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113047718 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089678669 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09414716 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119205532 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.0912153 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095328345 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10801927 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103068917 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.0907764 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096725215 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115246572 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099260066 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097491042 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104978854 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091322885 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095610644 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114084537 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.09022058 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09497578 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.111642133 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100317869 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086580073 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.114956531 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087254391 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091794996 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098527883 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.115447384 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096480496 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088945505 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150909917 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103885204 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09781003 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111540447 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092869353 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.096346961 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.114578134 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097177961 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097893193 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.116851006 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091124612 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091769934 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11686052 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089691529 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095463279 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110394763 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096589671 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085734453 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113878419 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087368458 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09790717 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093966988 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.11717352 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.098677716 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094041526 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112432112 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102474392 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088991934 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.116753418 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08781894 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09789896 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.123151494 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100711469 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098691494 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114181123 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091886556 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094460129 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121092119 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095828311 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.09402713 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094118616 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106964294 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087524768 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.098891211 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.116551522 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090957963 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093724565 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114971358 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097124791 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090985739 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.105987282 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098859406 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09701101 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.109510335 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09581839 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090406505 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111906266 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101994078 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08796016 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109965233 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096944728 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.09840217 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.114528948 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094525166 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097531918 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099610399 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.118515297 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096620571 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093084035 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123039904 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092836946 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094115996 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.110148394 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099297596 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088183317 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.11386977 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.096026524 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092543574 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.109199341 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098901439 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099397084 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.119157196 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095086281 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097901376 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099529942 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.119633125 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092913058 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099146649 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.110865701 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089428627 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089669913 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.107320062 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096643515 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090789228 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.116934917 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093550727 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092712175 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.116136412 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097690323 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092000967 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.117515503 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106579387 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087979513 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.106617759 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102266003 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094385197 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109674969 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092601358 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096043125 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114707102 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099362705 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097618046 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.110520819 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096047135 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100453663 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091118958 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.121134227 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100276641 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100320747 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.110831004 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100631413 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091027189 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118025892 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089694554 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094612425 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112963469 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095777193 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.09182257 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.112412062 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091705166 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088027825 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.110266323 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10181632 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093880276 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.118737976 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104832565 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093178155 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091268573 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111552466 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100478053 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092823666 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.121774533 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09586817 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087993543 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.107935706 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100689247 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094442198 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.120174078 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.092332549 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098148582 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120736756 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101398679 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095703768 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103149432 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123376868 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101747484 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099210675 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.109068754 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.093498889 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098953028 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.116009307 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098202146 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096141389 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.110897435 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098008893 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099978962 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.116242458 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094194138 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088044237 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.114388714 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102064918 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097815949 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098833755 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.116376204 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096353289 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089231239 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11901805 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100925602 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094831239 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120744613 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095859 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.09849398 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.110726296 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10194533 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095762034 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.108828726 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089900658 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092625651 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100492163 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.110826372 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101121747 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099329821 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.111803496 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093851278 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099251737 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.111796484 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099127775 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099907969 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.113256708 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105922527 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096657869 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.112064688 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102489578 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100880339 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088083537 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.113760611 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094618318 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100931404 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114697184 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100188014 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094710452 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.12126665 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098478813 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100068937 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.120217899 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101043891 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088781714 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.121961308 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.100433435 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097225399 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092343988 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114347526 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090555329 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093723145 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.122163281 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093065038 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103166834 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.123442579 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093547684 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092832959 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.120953964 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095001955 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101206456 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.112929313 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098214951 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089356517 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117573244 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.095981309 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100788231 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.111661304 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091549179 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101148924 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.098692376 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120154146 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.098339724 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101567276 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.110475423 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089404356 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097431684 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.113537445 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105435253 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098345343 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113859263 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095449952 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096824505 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.116087459 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102346328 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089959142 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.112060107 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097976655 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096705183 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.11338708 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091874455 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099290863 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093230248 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11687487 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094309475 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089704547 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.115741809 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102390719 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094539065 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.111858981 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094447661 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10128322 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.115453425 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093445407 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089382697 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121099814 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.099081637 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101940813 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.112415458 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09677005 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093045983 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.116518588 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103159638 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093598893 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115010016 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.095776812 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100555095 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119951953 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.093488855 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093302804 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124358288 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101938873 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097357506 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097623632 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.115509393 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10371059 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101399125 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.119219815 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090231411 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090036362 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.115544003 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.09168555 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098495192 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120885059 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096186734 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093644007 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119204953 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101744563 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098466832 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098137551 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.112024718 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103387914 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092292161 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.119251888 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090432892 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089214247 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.117715895 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104458679 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094912113 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.11529195 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099094213 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099202271 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090269998 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.113962907 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.100342742 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099784256 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.122316042 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096522997 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094294251 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.118246504 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106008445 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096548713 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.115297077 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104412018 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.100876014 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117062389 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096335631 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099631419 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.122299726 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099463614 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102205781 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.113701019 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095748865 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102419085 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.122222381 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106879628 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095054112 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.109908206 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101305993 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093753887 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090297366 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.121161019 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103632595 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101784222 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.117235843 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093647481 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104195127 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122573249 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097534616 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092923413 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.114804222 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101220509 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092950916 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.120905875 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.094005788 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103994403 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.123765947 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103490143 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105249771 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.110890312 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103328425 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098272149 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.12324605 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098917632 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.092103383 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.09039958 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.120781755 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103577634 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101961575 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.120301301 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101519333 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101152028 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.117409667 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098412442 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094405534 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.122230694 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103796033 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098831534 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09768514 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.116493548 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098296851 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097896151 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.12393766 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104649486 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097403441 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.127517319 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103672743 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.096201764 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.115393899 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098131986 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09871776 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.116435541 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101411887 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093185518 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.109609205 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103521732 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103707668 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095197837 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124469097 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104474722 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094743041 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119961025 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104361973 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101503579 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.118743636 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097536499 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.09927782 seconds)
  done (took 62.139610952 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145605541 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104539847 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119361971 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100148331 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115317406 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12106152 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099779096 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099917599 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122246192 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109012943 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098050822 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118942285 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114851317 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1376017 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117832272 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107275032 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118798144 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101053575 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09936256 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11994116 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115251383 seconds)
  done (took 3.291234788 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116171798 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111719559 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131650817 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11310611 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104424891 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130336842 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110080533 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131406958 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114072074 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10731219 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134269898 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109296459 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127458502 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108010696 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107736214 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127744263 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113847984 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125892208 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112658403 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110542792 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127779415 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111431105 seconds)
  done (took 3.49200726 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130406247 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102340282 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09611995 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120585541 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103012869 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099136811 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12168457 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099816653 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106631848 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.114683537 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092029069 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094650601 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096705186 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119940126 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095099316 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.09890092 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126958847 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102807593 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103087441 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118622012 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092039332 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099882455 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099286366 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.11160234 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104643567 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102867423 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.120598813 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102907535 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090598735 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101831952 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120137442 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09286053 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089883374 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.11130322 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.09090611 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10274018 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.121687501 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.10057154 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099968083 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089669384 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120872306 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103098113 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090566888 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.120338581 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100583739 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093270339 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102212558 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.120444074 seconds)
  done (took 5.948044182 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127930345 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164879214 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103258705 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136830712 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135396184 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107741855 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.125223735 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137599104 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100916784 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.125176126 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114490137 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.13425097 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106163941 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107151574 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.127155022 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104914422 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105193825 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.122603518 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10911798 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103284073 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.129166914 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106084638 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11214941 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133827379 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.344658026 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102295725 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125554469 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10804491 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.131937388 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110346266 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106296703 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128390801 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.114062578 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102806462 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123660079 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104374186 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113039772 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.125387641 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104372996 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100855701 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.125455968 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107131258 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104237966 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135350815 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104375229 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.12632604 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104844334 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101171116 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.13209553 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105746497 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108726288 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134254221 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105974788 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103590917 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127043321 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.113514836 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102759796 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.124352076 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10538249 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.130713267 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102862212 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108166009 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.133631397 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105296756 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108331336 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133905962 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104700871 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103704996 seconds)
  done (took 9.157038118 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133490387 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106163527 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135745338 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114815455 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105496306 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128054757 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105455298 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.126474014 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108620765 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111731493 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127966235 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.197464341 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.1244008 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110691746 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104514236 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127458587 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106661716 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105510796 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127661622 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10747869 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.127591946 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114822336 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105495493 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135913377 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117599498 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102769235 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127770943 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105861704 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134484702 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108367675 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117098503 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127547789 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10828911 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134773841 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.118522997 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105965904 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122640881 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107706807 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106107276 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127779082 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105633931 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114631592 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127927495 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104122754 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105794255 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129038794 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115516861 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138929423 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113047819 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112920232 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.129380009 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114694022 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127400038 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109437685 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11429019 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143344111 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114713229 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137000317 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107865773 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113526397 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136914946 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120639676 seconds)
  done (took 8.33021593 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101865526 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0999462 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098956727 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121481424 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101235142 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100675638 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09995681 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122010789 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101053718 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099977507 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121694851 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100512135 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100660188 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100267955 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122539448 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100311691 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099272214 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120843284 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101846926 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101096094 seconds)
  done (took 3.040905864 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110195928 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11756029 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124082547 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108674931 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103768906 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12891247 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102904981 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102927924 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10165856 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126102755 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110294067 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130726114 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104319248 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107935411 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131028288 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110272072 seconds)
  done (took 2.745781901 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120989841 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11852009 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.18885261 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104099814 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124211832 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110036849 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10205103 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126275268 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102513216 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107996609 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105371208 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.128749088 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102756515 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103074655 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124134437 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106197444 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100413155 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127576087 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103788595 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.187921113 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107672303 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104102097 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124857785 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107781904 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103483115 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128876533 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109300664 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10274621 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124886242 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105432529 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104294935 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131764192 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102899908 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.10824975 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103052047 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.126662973 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103035475 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103253659 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127211135 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103556099 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10346062 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.12588132 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104572953 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104037174 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.122502735 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104138916 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101144916 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128704796 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10450541 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103927496 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.124044171 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111274834 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106956724 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.131197912 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109930472 seconds)
  done (took 7.242158418 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114194637 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103751587 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133976092 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102248578 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10399633 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102390881 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126082199 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105164878 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103415635 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123211654 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105858984 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105055457 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124907472 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105325374 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103926714 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124369193 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102269371 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104264478 seconds)
  done (took 2.92593115 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108335856 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103086544 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105892851 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12492037 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103462855 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102087853 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123377291 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102195381 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101679207 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123971574 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103161925 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102844331 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100327995 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124635574 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103071975 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102043703 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124629557 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102652463 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102492306 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121780879 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103458368 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102255138 seconds)
  done (took 3.324603233 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113990831 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.183689816 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10976258 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.192167236 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100302861 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097132932 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.131312837 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100511925 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114389267 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.121424167 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09875726 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.098062055 seconds)
  done (took 2.395133824 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130836185 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138109195 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125694353 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104873904 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112199812 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128389163 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107891142 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106951307 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136638052 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119399023 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130495289 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116213004 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11396714 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137563869 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111549627 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132108765 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108161525 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107315466 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125786745 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122672683 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106203218 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135894873 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106709728 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127818552 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109516131 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116070313 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135684797 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11890335 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127621767 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115650159 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111951367 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128029726 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11582516 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137736758 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105857214 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114782874 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128390598 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124038218 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112281175 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137431479 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103662045 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133378124 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117199428 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112650562 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137109367 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107668978 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133346861 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109413216 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10774538 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148622933 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113024401 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136204909 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113528678 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114425934 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135856587 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127670969 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141289318 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116289751 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134013833 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119060334 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116124062 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135243927 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115699516 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139974627 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113312609 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115465203 seconds)
  done (took 8.969846953 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144678441 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105248426 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129768457 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121651192 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136770854 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109447738 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11118267 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130758362 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109273871 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105214817 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17335631 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110220086 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136369971 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116190671 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107428222 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130778782 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10921949 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114861527 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126888693 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128484222 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129591897 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116936931 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115124527 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1383562 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119028838 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134163783 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108241476 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107963637 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131489495 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10894883 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133018771 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109707794 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116592013 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125747464 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117229666 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108746016 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130811839 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113703771 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107608625 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135961592 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116294134 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143839771 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108983139 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107956727 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143453951 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109165153 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129031729 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106338768 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109840888 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127075283 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120811858 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119054293 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142008254 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115634053 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130379321 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109757353 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108945577 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130620359 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109506409 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111703723 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13868263 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110100901 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151405288 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110660784 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109087607 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138806616 seconds)
  done (took 8.968123488 seconds)
done (took 170.098972739 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.148369889 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.187916935 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144858978 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179092304 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09530829 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.129563002 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.149272543 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147477491 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093206075 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.11732421 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095048673 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096554713 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.184083228 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095479705 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09397966 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118679644 seconds)
  done (took 3.0118819 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193240229 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.307242524 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10886189 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121764437 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102273285 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099146554 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119976145 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102003095 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099187209 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129113338 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100409358 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096126757 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128346129 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096368261 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099587338 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119716377 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107922727 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100018378 seconds)
  done (took 3.173008305 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119821849 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144902684 seconds)
  done (took 1.212191421 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130292167 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.21184712 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.282082145 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169198873 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121024242 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140572165 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149618951 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135532054 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188098158 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136582067 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112009111 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09728076 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148026323 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104566131 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.137790977 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100110503 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127727341 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.137060423 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114392009 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101473525 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145252425 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104594958 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104317174 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136715089 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178166309 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13515215 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103560019 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.125257697 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.103234612 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113888009 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.12813216 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118866331 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110910904 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178864921 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.12486036 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154611422 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.129411398 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101757695 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113344317 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.123804623 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.105329456 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103288309 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136461592 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099190618 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102025057 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.130345253 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103856104 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.124205114 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.110031779 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.10855866 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.129501131 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106223263 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.175529115 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107169404 seconds)
  done (took 7.967935322 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.856607892 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.146436436 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100555528 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.990703964 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150517806 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114481619 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.855216978 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145998222 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25415371 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.881131531 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115955332 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.135194393 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235802746 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256056321 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.281149365 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356333727 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.717728549 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113942946 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128584207 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164516793 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109038322 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14837105 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120145792 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.521458282 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100108615 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123242429 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108990519 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112442962 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177659957 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.122947886 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106462635 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196256628 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.268839742 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206264239 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124593191 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100051491 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09969098 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185289346 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270107172 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215876749 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.196020127 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098313908 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120973979 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111047987 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119192644 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119924645 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157558936 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190836197 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191431412 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1038592 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.137065314 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110646215 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131378788 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.155528989 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121579255 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35784533 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.36130853 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100033489 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133509 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116051301 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264000351 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124741712 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231799093 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128494037 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211458953 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.124493329 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.838107753 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162202573 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123561388 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107717588 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128315318 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107461985 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108679621 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191166841 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.500975681 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115670469 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104653694 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123909455 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23029587 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102803032 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100799637 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182330986 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100763188 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132563217 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115519327 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134630217 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167311763 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.270609389 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135483428 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110960424 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107099533 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137616844 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101673784 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23457388 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224867591 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17463303 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207895353 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132732268 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181873185 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16187929 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13125077 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187932815 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110391516 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117260714 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132040256 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219926886 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156623483 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104022429 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106683019 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132700603 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137222817 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126046793 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.112569754 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189739706 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554707452 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.162091822 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.120773735 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107314415 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111323326 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179930689 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108228928 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25872133 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134911785 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184545527 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109713481 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098368679 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.13169421 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.157251559 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134217541 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109270191 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131422035 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111072168 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.280950973 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219459658 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114227797 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248263806 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19924401 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10842393 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193523356 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131303438 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165744982 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134121165 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110050535 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102265717 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.831615178 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138344375 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109390343 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129668854 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186469981 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122869048 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105379053 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102089143 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099575182 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808372292 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128776035 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100771882 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103373231 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131850641 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110179899 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131863056 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108821985 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178616465 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242585193 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114874144 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131480894 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102828107 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179086842 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103609608 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102419213 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125707577 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103885274 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111044972 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.13025301 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105815833 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191147364 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175071183 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227194034 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.633681695 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102772095 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101919173 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.261560315 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102983285 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322324016 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108296371 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.254499878 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162254004 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123399953 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360136208 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186913567 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186157616 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128108732 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.169309103 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12332531 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111338621 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180782781 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102224408 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131629322 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.154368303 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139795352 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116838484 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.272817641 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.125282952 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226831257 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.123136591 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.166185664 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125708832 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110659267 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322478144 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.125531373 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120728105 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179609403 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106551579 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124654861 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.652199242 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.127146836 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113253666 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131144939 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232901311 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183441358 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111343477 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111255074 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.139285348 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178385124 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207575879 seconds)
  done (took 47.896285267 seconds)
done (took 64.202944364 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.296797578 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.257441146 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.303005116 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.211602194 seconds)
  done (took 2.111510961 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.257962576 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163912778 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.231215099 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098277924 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.24033249 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09834834 seconds)
  done (took 2.060079064 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.487999685 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.368570272 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.305041351 seconds)
  done (took 2.13552247 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.254402535 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.239804408 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331595426 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.411028623 seconds)
  done (took 2.326101357 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.264289556 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.126055242 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124682657 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.207765433 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.229914772 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211601848 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12943133 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.179068608 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129446516 seconds)
  done (took 2.624609691 seconds)
done (took 12.230606692 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.260358152 seconds)
    (2/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.316449994 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.19346984 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.158146651 seconds)
    (5/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.345102532 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.225791853 seconds)
    (7/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.197280968 seconds)
    (8/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.214293875 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.114176794 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.222527737 seconds)
    (11/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.237437209 seconds)
    (12/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.217568471 seconds)
    (13/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.30252553 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.137980451 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.101896548 seconds)
    (16/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.195382601 seconds)
    (17/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.191540427 seconds)
    (18/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.078620207 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.190699801 seconds)
    (20/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.253037209 seconds)
    (21/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.230148074 seconds)
    (22/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.22431766 seconds)
    (23/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.227793469 seconds)
    (24/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.129320938 seconds)
    (25/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111324802 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.152606211 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.104191479 seconds)
    (28/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110724738 seconds)
    (29/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.21828805 seconds)
    (30/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.172396284 seconds)
    (31/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109447001 seconds)
    (32/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.296397038 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.229056084 seconds)
    (34/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.218422538 seconds)
    (35/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.215050966 seconds)
    (36/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.230427077 seconds)
    (37/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.214171045 seconds)
    (38/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.155209537 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.126936531 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124885029 seconds)
    (41/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.156493012 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.127529826 seconds)
    (43/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109976549 seconds)
    (44/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117687904 seconds)
    (45/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.197866473 seconds)
    (46/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110583776 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110498528 seconds)
    (48/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.165054437 seconds)
    (49/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.169433126 seconds)
    (50/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.231672701 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.130382635 seconds)
    (52/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.141479195 seconds)
    (53/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.102029591 seconds)
    (54/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.166624759 seconds)
    (55/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.074922435 seconds)
    (56/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.19590794 seconds)
    (57/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.079069633 seconds)
    (58/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.164295666 seconds)
    (59/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.139340586 seconds)
    (60/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.100925319 seconds)
    (61/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.169505994 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103684033 seconds)
    (63/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.100473586 seconds)
    (64/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.172715197 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.101654521 seconds)
    (66/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.125130562 seconds)
    (67/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108022357 seconds)
    (68/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.190917475 seconds)
    (69/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.102016045 seconds)
    (70/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.142918426 seconds)
    (71/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116121 seconds)
    (72/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.131037658 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.125971831 seconds)
    (74/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.162126337 seconds)
    (75/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.110520756 seconds)
    (76/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.10427881 seconds)
    (77/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.106421232 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.126235235 seconds)
    (79/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.140723659 seconds)
    (80/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.166041742 seconds)
    (81/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.166576385 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10402386 seconds)
    (83/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077654821 seconds)
    (84/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.08236652 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.146047936 seconds)
    (86/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.188612054 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.105305964 seconds)
    (88/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.102197971 seconds)
    (89/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.174533182 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105256302 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.149444079 seconds)
    (92/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110971193 seconds)
    (93/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.138871373 seconds)
    (94/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.125232404 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101523155 seconds)
    (96/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110263544 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.133724624 seconds)
    (98/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104680802 seconds)
    (99/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077614035 seconds)
    (100/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.085408902 seconds)
    (101/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.075305932 seconds)
    (102/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.136869093 seconds)
    (103/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111832391 seconds)
    (104/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.21450164 seconds)
    (105/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079167672 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128179001 seconds)
    (107/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.109333031 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.159043964 seconds)
    (109/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079246194 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.102170864 seconds)
    (111/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.07534904 seconds)
    (112/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.133836323 seconds)
    (113/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.076582246 seconds)
    (114/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.103500291 seconds)
    (115/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.075506311 seconds)
    (116/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.111363302 seconds)
    (117/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07803726 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110133713 seconds)
    (119/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.194545393 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105135758 seconds)
    (121/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.140335024 seconds)
    (122/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075526601 seconds)
    (123/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.102691104 seconds)
    (124/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.07677111 seconds)
    (125/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.078959894 seconds)
    (126/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109188803 seconds)
    (127/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.124442301 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.07998755 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104204737 seconds)
    (130/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110107252 seconds)
    (131/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.099314202 seconds)
    (132/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.077373332 seconds)
    (133/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.1056358 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123499329 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148758448 seconds)
    (136/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.172383859 seconds)
    (137/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.078199345 seconds)
    (138/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.076418144 seconds)
    (139/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103631807 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11324928 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101787963 seconds)
    (142/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.076280981 seconds)
    (143/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.102182744 seconds)
    (144/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.0844541 seconds)
    (145/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.076443289 seconds)
    (146/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.077240693 seconds)
    (147/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.075725526 seconds)
    (148/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.164986298 seconds)
    (149/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.07917318 seconds)
    (150/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.134458893 seconds)
    (151/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.075295885 seconds)
    (152/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.075808297 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.128425107 seconds)
    (154/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.128262872 seconds)
    (155/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.212211872 seconds)
    (156/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.076311212 seconds)
    (157/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.079175071 seconds)
    (158/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.170376143 seconds)
    (159/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.11128238 seconds)
    (160/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.186470604 seconds)
    (161/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.137488543 seconds)
    (162/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07875671 seconds)
    (163/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.076777955 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10106085 seconds)
    (165/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075452365 seconds)
    (166/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.1038307 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110295887 seconds)
    (168/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132662234 seconds)
    (169/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075489522 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.14991497 seconds)
    (171/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077955742 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102650123 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.124243405 seconds)
    (174/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.077067741 seconds)
    (175/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.084548521 seconds)
    (176/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.083353571 seconds)
    (177/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.077270875 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.12826074 seconds)
    (179/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.113947815 seconds)
    (180/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.083962839 seconds)
    (181/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.078232043 seconds)
    (182/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.0756535 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.146418147 seconds)
    (184/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.076782602 seconds)
    (185/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077953824 seconds)
    (186/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.07566005 seconds)
    (187/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.075701826 seconds)
    (188/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.13371689 seconds)
    (189/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.083842586 seconds)
    (190/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.112666758 seconds)
    (191/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.125080474 seconds)
    (192/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.077872787 seconds)
  done (took 26.451480984 seconds)
done (took 27.436037486 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.210536153 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129283364 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.11188566 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110778162 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.20072656 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11708801 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.150599995 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113861011 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121016345 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134529388 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10280479 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123728826 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133780045 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.179962828 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113195315 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.129204735 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102693848 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.12119606 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.15150587 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127270319 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.202537285 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104825093 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.12032648 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128427699 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.175990784 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12992387 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111167546 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111583612 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.149715259 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11305521 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110716479 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.127961193 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.12710534 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.126136424 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126599945 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112455309 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102398795 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084785038 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.137016361 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113157605 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123396746 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.137874516 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112375099 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103906337 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.137386941 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112613433 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103370819 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138821151 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102573284 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112100461 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12980531 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128183386 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110513476 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.12491342 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103451654 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103879936 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.146479836 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104243228 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124652983 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102539178 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.12910468 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103535706 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113945197 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128814612 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113475562 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102779798 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.137029332 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114164515 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111651327 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129792081 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104505933 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112138292 seconds)
done (took 9.992427751 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109202567 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148397123 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.200180864 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.211449061 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131470456 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142333987 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117438855 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125433385 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.1404897 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12249291 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138730407 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158540255 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.182042591 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.144364618 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116755211 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114324853 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.139077702 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111612149 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.209153567 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127666034 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152031816 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119849136 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128052326 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144516841 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108057273 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.13771719 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.135772318 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115641397 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105948778 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.140789415 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127500626 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.106123483 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133713703 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125577781 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.146849707 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118967616 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117132545 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.138864435 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109017086 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107926147 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.13981164 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122980315 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107437641 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.143890383 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11589414 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122090556 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.139253044 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120827806 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108036587 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.139680651 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110364173 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131300881 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.144260067 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123301743 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118922664 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.144553785 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120010308 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119319508 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.13618204 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120370778 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106978857 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.132739129 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109294054 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152714718 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111378553 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120073986 seconds)
  done (took 9.695391824 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126567476 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136179301 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142359845 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119407484 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112076791 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127121185 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101543769 seconds)
  done (took 1.899566199 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103545689 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186065449 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.2109917 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209851583 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.179996649 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.22016901 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150004315 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103301628 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136538362 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.138480067 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184649486 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.23893862 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112411686 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.14450388 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.187224041 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.128610064 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.187849706 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.128362316 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11800512 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212628802 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11898871 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.158292159 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117217683 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102471266 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.20672931 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104578904 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.262567067 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121526397 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138582968 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116712684 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116558368 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.208041019 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.20852827 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.11897004 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110094955 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210134444 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.2051843 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118565874 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.220949402 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108267862 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.207944744 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117472746 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117093193 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.144596345 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120262512 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.196796295 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122797953 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118661831 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.142398376 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.189518759 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.1406001 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183229844 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.139862816 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118360508 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113524089 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.144947937 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12609301 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117360777 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.21638128 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119521106 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.211964921 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.212444389 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.181957227 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.211703787 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127278235 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212075521 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.202915228 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115676914 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110819252 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.145513703 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18615829 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.142996413 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.118825472 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.200512779 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120648052 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.213872643 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.186022027 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140810045 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116832519 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.10616103 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.142563046 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104777728 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.201985469 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117880943 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114702164 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147536881 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116274471 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11673036 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.136543077 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125948445 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.141774334 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11703503 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121445802 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.141475594 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120819709 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.216250816 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114322125 seconds)
  done (took 15.853882366 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106639774 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105501843 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10903065 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130569544 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105508417 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106085116 seconds)
  done (took 1.715978651 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143462039 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117760103 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153196334 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120239745 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187438506 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.191913817 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.220329692 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112651878 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159442017 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128198774 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.217260623 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.192488153 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.219141547 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119830292 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.222618261 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118876707 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.222873102 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116667885 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.154212273 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115811969 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117280785 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.148770819 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11613588 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.209933259 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120088463 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146197479 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.113713386 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126433814 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.152586803 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114125213 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120811267 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.145329061 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.112874186 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111961648 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.222619576 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109889143 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141561428 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121285985 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119703975 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146218916 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.219682717 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117937816 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124925916 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.146957051 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11434737 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111806968 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.147632949 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11300252 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.222754276 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121347124 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120763178 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.145721928 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119932275 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121653867 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.138209155 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113172215 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.146627004 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.199187537 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.147256387 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113349019 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118941855 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.146790603 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114138029 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122736967 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.146186672 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.1222178 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111394069 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.145031949 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11694199 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119329521 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.14738733 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119656412 seconds)
  done (took 11.341915833 seconds)
done (took 41.538496213 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.555936683 seconds)
  done (took 2.603251723 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.915446558 seconds)
  done (took 1.965679806 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.611362126 seconds)
  done (took 19.694900204 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.525195127 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.598479747 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.029310993 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153327958 seconds)
  done (took 3.357134062 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.071449766 seconds)
  done (took 2.139847102 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.314028257 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.266363829 seconds)
  done (took 1.638576323 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.743421808 seconds)
  done (took 1.81250888 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.509266118 seconds)
  done (took 2.566662591 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.353649989 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179162186 seconds)
  done (took 1.600545368 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.603638975 seconds)
  done (took 1.674125669 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.601031798 seconds)
  done (took 21.672068944 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249889436 seconds)
  done (took 1.324322178 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286633964 seconds)
  done (took 1.361941019 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.736258988 seconds)
  done (took 4.81281833 seconds)
done (took 69.284766818 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115434983 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118033968 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116904789 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140650889 seconds)
  done (took 1.556769865 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124130941 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119011866 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.166666709 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.11958732 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124304387 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117550858 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.146741196 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120054542 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117189491 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146342568 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11867146 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117089799 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146699623 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118573372 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115621177 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147791856 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.1231763 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118650303 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145636165 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119243182 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118928139 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.14537837 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122554027 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120728251 seconds)
  done (took 4.159253497 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11502284 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.1106935 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110545995 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134580907 seconds)
  done (took 1.551296512 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128060497 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129930619 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15304454 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127276794 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129570575 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155470847 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117966873 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114785451 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144652001 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127319506 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134031854 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15757603 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129656294 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119801771 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157195027 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115045967 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118491748 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156512938 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124475843 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.152599354 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.1206971 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124670228 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.148619642 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128616687 seconds)
  done (took 4.291930734 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.192460294 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129787775 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.174794724 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161739739 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177226275 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117866365 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.144289255 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151021428 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124314117 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.145346126 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.121588031 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.1615448 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150899155 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.12104448 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116932666 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.14951969 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130861579 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122370057 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.191054256 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12202276 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.1502467 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130871071 seconds)
  done (took 4.270842958 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121225277 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111008527 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.130333394 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109816772 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120300508 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137743544 seconds)
  done (took 1.817872502 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108420652 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104674351 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103118379 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128725646 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107194363 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102954695 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.128209539 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.104697795 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103689945 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102485035 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131053355 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103465256 seconds)
  done (took 2.409214384 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.335781724 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.1095257 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.136394497 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111869706 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114421034 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106756843 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147458576 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108575681 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.274696292 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104075236 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.146053793 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.200027981 seconds)
  done (took 2.98270041 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200687189 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146541454 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31486522 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369132661 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160253158 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186680003 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266684593 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190642492 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201862814 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138541842 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212016064 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159610596 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180224121 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186040177 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166476137 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159484926 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194866639 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203762194 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169189645 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239861985 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155681049 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202626745 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215887563 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149601104 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137825826 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187513123 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118945443 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154353117 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164335533 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18982872 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195466565 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149950557 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138343648 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215726577 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250207358 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195789501 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272204439 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133544677 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.191170452 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191684996 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258831515 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167968218 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185989501 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179105609 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128685541 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216679776 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151051492 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.208357954 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132419133 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171811057 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20390144 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177236221 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201128126 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135292784 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311672569 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133524541 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168482523 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164738172 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213270777 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227128833 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176998281 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.151257098 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203674253 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190753105 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238969224 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139418072 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188527583 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123367415 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193082645 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2314117 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177836253 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188407109 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.228264242 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130729188 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19736076 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169452298 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181529845 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228901166 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170495039 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.145608033 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151565474 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131769909 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153184244 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.185974478 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147412883 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214575958 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158574063 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.340728079 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181795106 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182807441 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157415485 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185955664 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159431103 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177059507 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.100389078 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168366712 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.162404204 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182194415 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129013371 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180448712 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140342592 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125989482 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177712528 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121718239 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192438778 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132604415 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18659787 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16719247 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.156414478 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177975688 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173226726 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.160294694 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192864882 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19050135 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158332198 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131324573 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243150035 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193355633 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136294553 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19954919 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196423471 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175052647 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133713865 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189284935 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193358715 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171286948 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222810556 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138068828 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133412006 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.163514228 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168273183 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184807179 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152726483 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155317739 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16259788 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217542491 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124916975 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16764224 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177703145 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159613854 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123779079 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162180736 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134754 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140861345 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.175357517 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138828545 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1795819 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163431617 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19330298 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153770557 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161708353 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168158749 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159388903 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.167831935 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176167311 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119701506 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200333548 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194966808 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157134666 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179167557 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189531713 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210600068 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171299746 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157480508 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181835781 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154501572 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121430268 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187056776 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168268149 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188003309 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.187588292 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210142993 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.192006356 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160632264 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176574083 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163467651 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.211259633 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182084965 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.143949568 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197842426 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166498419 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.147300864 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123664673 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127502263 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162293065 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130927216 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134639795 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201090483 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188811078 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181938956 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195502958 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135542235 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219246119 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123452665 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186651305 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.200043416 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138507473 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214652331 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1895381 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204002864 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140151423 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186246394 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121931157 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154109803 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13519566 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159777257 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166019299 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134335839 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167722224 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190945937 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197314626 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145898966 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222286716 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192803694 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228822108 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121390189 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.157800881 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198693858 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191401555 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184077071 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133369174 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.185922025 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190225208 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168894102 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216398448 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167812965 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203466727 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193144209 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.192302706 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129802552 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175042295 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161892471 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16564774 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163661129 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173874378 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132303367 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178025272 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138407134 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13829703 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20773011 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169235548 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176893217 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.186959097 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169137344 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153863779 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140054361 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201714105 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144843894 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104009035 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195378064 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221236269 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14748849 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183367898 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17288834 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157504022 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.317251651 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215865977 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17148019 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166329588 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137138967 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198054383 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160944498 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187954539 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210792311 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14162448 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231719874 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169695049 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.171109871 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130762082 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174082201 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150446991 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134044828 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.177840299 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.187899324 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14503705 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209074405 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136665371 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195389025 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17512718 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.171006584 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.151198416 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137244032 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252951727 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194803356 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171087748 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.193639376 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165702231 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21094909 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123806494 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156873021 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132218676 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213016668 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129881907 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205003533 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.176362934 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215340593 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202382643 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161796614 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170439698 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127809457 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193708306 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148229354 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21642411 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135392042 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.168524897 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186760351 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.15612801 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129903609 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189435104 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271914125 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176142498 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170690242 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.133844263 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268201384 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15687264 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132563899 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189911995 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16827305 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.160399141 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18308033 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173143858 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16813474 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162274304 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163802078 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2072617 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186233102 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192195626 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197465467 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.144865697 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186106032 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158912642 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20119213 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145122749 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.174131089 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158136384 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220250508 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.180835006 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.159431922 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168071432 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194600434 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168836452 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198694367 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137374998 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212545539 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126968548 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190219526 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140290158 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123843664 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185456858 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.200969802 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130708533 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20581783 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167338003 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160670415 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127708848 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170981042 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166061419 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164259583 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.13066817 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207461437 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129877366 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206286049 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204578856 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155762148 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167210632 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172098318 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131474002 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135951663 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171100476 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13113551 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172872488 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207658521 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130092313 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205010041 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190511578 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162148565 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18316031 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143299815 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.362258828 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128280179 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188995403 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178824612 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223819469 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149640583 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202996915 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168121259 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176558233 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160599348 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176186234 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219021173 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191111298 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166288786 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159782799 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144080321 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136799517 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.16351512 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15042254 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195462792 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140425527 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.165363607 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.164947061 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173722287 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.147103769 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139825946 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228664525 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179075334 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182632181 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215669808 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136136406 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204077301 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198605664 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129132958 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.190360559 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171082353 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170160966 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15110418 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13360141 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.166667495 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208753184 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.156064889 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157466179 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20120207 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168094193 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199925529 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134001042 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205617146 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140365463 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2036834 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127451981 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.181467708 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170952158 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162447191 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129388244 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196239817 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157715592 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.19071614 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142179427 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175570554 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226759213 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122786691 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161462495 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268852657 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18903473 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191408731 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.165048709 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137474102 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172931149 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156513622 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.190743304 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169404851 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159478297 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129873528 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.142665753 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.185103616 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.145319138 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19721941 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169596543 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187225878 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211805978 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133727331 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252439952 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17116419 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16914383 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.144019162 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128914516 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138578349 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162882597 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140107621 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212323321 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244006088 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162699501 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.174705252 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134442779 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126010856 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159736097 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165062021 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178062211 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167238542 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174850539 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103683614 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138023276 seconds)
  done (took 85.933728 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162640118 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153762418 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168580894 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224613414 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195043393 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289783124 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229850021 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24491241 seconds)
  done (took 2.839363277 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120379646 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159945333 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140817675 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146035853 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.11017436 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.444844021 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.13039331 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.148770082 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159689373 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152306682 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136476589 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.531919234 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116271928 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143907564 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121497815 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136209993 seconds)
  done (took 4.065184194 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.152709324 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.551108556 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.534355615 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.301266191 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.252928519 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.202974688 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.7668836 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.190412551 seconds)
  done (took 13.123328844 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.146698488 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137642214 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.360185186 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.258025459 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.149127881 seconds)
  done (took 2.232255376 seconds)
done (took 132.299344955 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124764667 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122787216 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122845699 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154221331 seconds)
  done (took 1.689964944 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.175348444 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090768997 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093144683 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117934225 seconds)
  done (took 1.655712134 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.433903677 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089978187 seconds)
  done (took 1.726914524 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.14802278 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138915548 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166442124 seconds)
  done (took 1.639651894 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.133883795 seconds)
  done (took 1.310385512 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.123296329 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.116084145 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.237647338 seconds)
  done (took 1.659376523 seconds)
done (took 10.866289947 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119365896 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.923796708 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433080523 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132458037 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710074773 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428012552 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.424048463 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175577488 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174137548 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138800105 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133439939 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.689363989 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.432588069 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.874862366 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.392805688 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.90817435 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694513105 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111239619 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146576202 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112614954 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.401742935 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139448723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111743837 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110265081 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.719909646 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.41872759 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109961411 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.914656049 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110548468 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11329416 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428015733 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110316826 seconds)
  done (took 21.013086986 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118618697 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.166657538 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147020918 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113466562 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114048717 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139476745 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123004716 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121260687 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203763724 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109419661 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162049744 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110202816 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114285735 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139808649 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135234361 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111118115 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141988467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113135995 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117644933 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141014624 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133174394 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109077888 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141684192 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113790681 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109955419 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160495274 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111352268 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122106572 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140513028 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114540924 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114899147 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140300145 seconds)
  done (took 5.346670245 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.158858395 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17486266 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149291906 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148859941 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.189499946 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113108059 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225138274 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149709342 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204281513 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112197934 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132462668 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140421756 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151720692 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111322618 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166247954 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111103003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114562914 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143360389 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120020481 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112733923 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164043713 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111003425 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139241943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115884661 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112030924 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161289657 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113201983 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122846886 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139423819 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115875715 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115870261 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1396794 seconds)
  done (took 5.663166291 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126048256 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125796497 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132284138 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162722673 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120207381 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122812887 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153676638 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121027788 seconds)
  done (took 2.247369907 seconds)
done (took 35.452105873 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133952006 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.12823707 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128966029 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.152972807 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.187166007 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.146382813 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126450384 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114768855 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.152226333 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13027637 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110359911 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115856837 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.158603841 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120569788 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.22205289 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123753267 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.22392551 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.188960735 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.14687662 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126751286 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118165092 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.224717139 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.12027378 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.14730588 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.191623797 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113561714 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.214787312 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119303503 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.149963875 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113403634 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.222634363 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123410235 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116599564 seconds)
  done (took 6.091059219 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.208149929 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.120654604 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.151310353 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120199626 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.12010991 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149291427 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.209180274 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.14879778 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.12027674 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118930214 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117926261 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.222903394 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123611628 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.146714438 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122908896 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108899873 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.24080806 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121360876 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110600371 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.122408471 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.117504665 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119006178 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.254094797 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.116315965 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.118718957 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.15036563 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123797145 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.124554073 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.15262008 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122071353 seconds)
  done (took 5.50075107 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126659243 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132557238 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.166039042 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185277342 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148480086 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162015131 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13931263 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132585257 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171171266 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113376705 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127379468 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179486866 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129333263 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122424299 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.147650749 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131875456 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133770427 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144266532 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122751989 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130197262 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.164179637 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131116977 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135811446 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151651235 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112626842 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119338762 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.153271703 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.12784954 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120786559 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.157432422 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115666392 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116459767 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.144869994 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.149368119 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11418661 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.156116521 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138525231 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125065324 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.158775002 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145622741 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116401775 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.14490374 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138632573 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165286048 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.146147227 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127900884 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12411223 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.158792228 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112428535 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131290099 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.18562871 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113048869 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133307642 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.143143009 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11321449 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121696498 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.144665129 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118049262 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128159858 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.145837471 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138521663 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120915155 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153342961 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116685581 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124417738 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112172004 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.143361733 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119630688 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.13846426 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.151230554 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149544547 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112929823 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.156217111 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127337282 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123760691 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.155723946 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113583537 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123615478 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.15350016 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12139946 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125613556 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.145441748 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118596591 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130461148 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.161928002 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129192664 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125567981 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.155384885 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118363751 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115745878 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12924191 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.144784742 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119835985 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126118732 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.144315316 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117980827 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126297866 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.156328498 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112655943 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138504025 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.148159886 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.115301607 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138542751 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.146408241 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120504349 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123247211 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.183764471 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114678032 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124797186 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.156423781 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115757449 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121499799 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116735516 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.146286188 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132007665 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128678874 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.152624855 seconds)
  done (took 17.087518124 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.318143575 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.273843635 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.212194729 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.309247566 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127018084 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.241451256 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.302557868 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.30503354 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114024014 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183039347 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.165823061 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.27537143 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14644973 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.144052244 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.306675245 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.358391722 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17546908 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151735002 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.182878169 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127827929 seconds)
  done (took 5.628883575 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.13386263 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148540419 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167473585 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142492053 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123689452 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161358115 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114638956 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136152538 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157149603 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124479519 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117064092 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160552548 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127283887 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130161229 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.161388144 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.146225604 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120391212 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151050771 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136427388 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119296706 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132967268 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14091114 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121889665 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167684787 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134184122 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.154216566 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.115034684 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120383667 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120761141 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.154722615 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120232524 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133128491 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.15193765 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104491882 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125934771 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.159292706 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.122326716 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118098016 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118503903 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149697607 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129604019 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127298367 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.153652175 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098226177 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131968668 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108658202 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.161275817 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127127952 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105600926 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.164668908 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127595751 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129285776 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.151876425 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.138437446 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121243675 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.161356501 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126958344 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128831055 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.149579477 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114930669 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11284937 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.148457741 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.124948798 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129102406 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125548945 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.165866692 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129657559 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.143167307 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12252153 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118203162 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118089877 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.16000769 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134632113 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.153273469 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.123356283 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126911439 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122487597 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.124584996 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.125806057 seconds)
  done (took 11.840205492 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140289343 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122791579 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132339765 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.18058242 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126623383 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120214601 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155943477 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13427602 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127541792 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162009296 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128406665 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127469596 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166784173 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125769067 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.1224617 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161410072 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127493831 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.15080312 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163915867 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144998314 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.157397263 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121719843 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.12645422 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125610367 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174630851 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126313018 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.171700827 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.129510579 seconds)
  done (took 5.184141887 seconds)
done (took 52.523572067 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.347149394 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.557995589 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.321278488 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.32017845 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.336624196 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.332264302 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.345621526 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.321556059 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.844596525 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.294345866 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.318649948 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.319093651 seconds)
done (took 29.878583785 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.315392042 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.871968239 seconds)
    (2/2) benchmarking "String"...
    done (took 1.601997709 seconds)
  done (took 4.682655571 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.309471274 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.308740077 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.56690603 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.307793966 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.31255891 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.328546446 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.316086545 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.314398953 seconds)
  done (took 16.66397031 seconds)
done (took 27.180337246 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.369133495 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.49472068 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.533219397 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.309265269 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.310610044 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.31058103 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.31038875 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.341873756 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.312854967 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.314294107 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.729765895 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.564386033 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.315095693 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.694230265 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.312024399 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.317032434 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.338202903 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.54747241 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.311114974 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.346822124 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.291208268 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.292196116 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.331100247 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.315554381 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.319772839 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.318676918 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.349666125 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.322679813 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.505888012 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.326965762 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.352012082 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.313457166 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.351391462 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.32207893 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.320920602 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.325746447 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.504612624 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.323840242 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.299091893 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.338190924 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.505201421 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.330092273 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.314395205 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.313980426 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.31670109 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.373556783 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.299759173 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.451746311 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.332266982 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.315989831 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.325371433 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.681602016 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.323022482 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.324391184 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.315725518 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.543235249 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.335726988 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.380339868 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.340429807 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.324859234 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.316789419 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.325847231 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.351609215 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.3139834 seconds)
  done (took 150.877225054 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.314265966 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.31739724 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.317581662 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.340323691 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.314356801 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.317797274 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.313178593 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.313987415 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.317658027 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.34381473 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.312895181 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.319970537 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.318970984 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.311001761 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.325296264 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.328947088 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.31587169 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.315449987 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.34391529 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.314472798 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.340719332 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.314535091 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.320258289 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.319082981 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.360703873 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.391341132 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.319256119 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.323048217 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.328693999 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.315105905 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.315970596 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.365465622 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.957248052 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.188273749 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.327709824 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.348813785 seconds)
  done (took 84.467532959 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.315279842 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.316649027 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.316097077 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.316538501 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.3502067 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.316521318 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.917132447 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.913986235 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.299071822 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.427746917 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.755408845 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.589315046 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.318917324 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.408133213 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.329641445 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.317777916 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.333022084 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.344388472 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.317067972 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.317817406 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.918862722 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.332942638 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.332392725 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.502413029 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.33534889 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.35315416 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.711465321 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.318906003 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.351462741 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.770092421 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.655911912 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.36947385 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.317415514 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.695306574 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.321677082 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.431447689 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.32027237 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.351907559 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.317182335 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.603718741 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.318840832 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.320330711 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.320569668 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.987694665 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.320866392 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.919596549 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.32232436 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.289670669 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.318201676 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.318603124 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.30838235 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.069783565 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.32272765 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.319451929 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.322927642 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.32011003 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.319356729 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.355038724 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.337181534 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.4172637 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.321060523 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.32284125 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.353901645 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.321528672 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.319874968 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.538657636 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.3246977 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.312392078 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.382136761 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.420835435 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.922305076 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.325243007 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.417299999 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.440267203 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.319543138 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.320029389 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.320036352 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.320883707 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.432207262 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.320943486 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.019346526 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.501574013 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.337894238 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.765874592 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.422041669 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.322015467 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.69044284 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.325974479 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.321132814 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.059383881 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.320639569 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.418352451 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.321095136 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.322795185 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.321263476 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.026789999 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.917302177 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.586779635 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.325011778 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.968493776 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.326582758 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.199397201 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.910597335 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.007246395 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.326312075 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.436554365 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.504158535 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.341555997 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.323775415 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.768491413 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.325810892 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.38115156 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.323888199 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.726785907 seconds)
  done (took 387.534307219 seconds)
done (took 624.087834212 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.213909788 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.167843764 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.316633913 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.180787969 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.159956239 seconds)
  done (took 12.259537858 seconds)
done (took 13.479795279 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.52193732 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.521056418 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.38788593 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.524678909 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.356361163 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.539895361 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.507173391 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.341524482 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.435938256 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.410532096 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43667078 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.377368799 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.357904763 seconds)
  done (took 19.940985439 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.623550469 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.339099143 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.39275263 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.601005739 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.372331415 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.631541362 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.670149105 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.340114345 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.495673531 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.348485328 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.347150574 seconds)
  done (took 19.384580542 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.627697883 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.3414877 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.39778466 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.652005029 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.374571671 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.631042648 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.668774351 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.340776192 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.478298948 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.349258575 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.348119836 seconds)
  done (took 19.432188215 seconds)
done (took 59.977360966 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.365499974 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.424928042 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.363852891 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.346732106 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.340541272 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.341018106 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.345364338 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.340840065 seconds)
  done (took 12.091256614 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.342200994 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.341022835 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.34076032 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.341398776 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.34192667 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.340382382 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.342720829 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.341337958 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.341140293 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.342477819 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.341525827 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.342045023 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.34067789 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.342655631 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.342357044 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.340893487 seconds)
  done (took 22.690694644 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.344482042 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.341908322 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.341746607 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.341438668 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.341613196 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.343384364 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.344777371 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.3430549 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.342348017 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.343117851 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.341473874 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.342557809 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.342992125 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.34119984 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.341649622 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.343375762 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.343108357 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.343755559 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.347243423 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.342677128 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.343160752 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.34249885 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.342913727 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.343752796 seconds)
  done (took 33.455668338 seconds)
done (took 69.460221957 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.327843699 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.353115312 seconds)
  done (took 5.90652602 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.403059913 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.401110873 seconds)
  done (took 4.03010713 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.345040428 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.343372746 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.343685154 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.345225944 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.342905557 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.346172429 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.344857813 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.344798749 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.345031859 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.343991525 seconds)
  done (took 14.671762669 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.344465395 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.344198858 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.344605457 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.34573501 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.345748038 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.344666912 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.345439129 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.34616646 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.345130653 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.346443916 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.347288152 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.345560734 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.346794693 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.344193162 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.345348187 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.344370958 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.345070922 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.344659652 seconds)
  done (took 25.442356252 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.358277777 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.36415994 seconds)
  done (took 3.949328997 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.47454565 seconds)
    (2/7) benchmarking "second"...
    done (took 1.385905859 seconds)
    (3/7) benchmarking "month"...
    done (took 1.449167649 seconds)
    (4/7) benchmarking "year"...
    done (took 1.442471313 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.386844569 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.36573692 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.387511276 seconds)
  done (took 11.120098435 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.347708028 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.548539216 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.682797524 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.918530021 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.347407147 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.350359715 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.250502413 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.350497187 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.351191822 seconds)
  done (took 15.375940326 seconds)
done (took 81.720348439 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.331577009 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.41235819 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.352145128 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.351011518 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.685278445 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.364250919 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.338047232 seconds)
done (took 17.062188673 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.323879693 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.324111931 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.318529739 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.352602612 seconds)
  done (took 10.548243054 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.347363621 seconds)
    (2/2) benchmarking "read"...
    done (took 1.659993984 seconds)
  done (took 5.235444512 seconds)
done (took 17.012655115 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348566519 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.349218744 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.349114098 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.349009991 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.349398994 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.34876194 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.348162643 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.347586243 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.348570363 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.34952738 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.349060872 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347062134 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.34700977 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347383246 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350738684 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.348719869 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.350319543 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349221364 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.349398969 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.348548245 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350975855 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.349275194 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.349123669 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.34741987 seconds)
  done (took 33.601760104 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.349259013 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.3488577 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.351081346 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.348438767 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.350741518 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.350192108 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.350978219 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.348330214 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.349116759 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.349575121 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.349713926 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.351295453 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.350835844 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.349313964 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350096557 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.351445001 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.348887066 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349410793 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350785325 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.348501131 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.350236585 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348554917 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.350106677 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.35047699 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.35041998 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.350514304 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.352205869 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.350538287 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.349338672 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.350982937 seconds)
  done (took 41.731149461 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.35047173 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.351567647 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.350959485 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.351508699 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.350296345 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.352167133 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.350188647 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.350036249 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.351574943 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.349373628 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.350124216 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.351856718 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.351912609 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.350929454 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.34851018 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.351186626 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.350762383 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.351057983 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.349634182 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.34978608 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.351487263 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.351291566 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.350850674 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.350391857 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.351421929 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.352056903 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.351278122 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.349090357 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.352803596 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.352196207 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.351000603 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.351792333 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.351182821 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.351467547 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.349194937 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.351937359 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.351899695 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.351654513 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.351941594 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.352594616 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.35164388 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.354209846 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.35156435 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.353796429 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.351105081 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.351698078 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.351329524 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.352257523 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.35123799 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.352014243 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.352689163 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.352409396 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.350553564 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.350940766 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.351641206 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.352009521 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.351158368 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.35157958 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.351730457 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.350007026 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.35091369 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.353204032 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.351737709 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.352427261 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.351697357 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.354102287 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.352112876 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.352603023 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.353794115 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.352731256 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.352844787 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.354174626 seconds)
  done (took 98.54274966 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.34933329 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.350078687 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.349506 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.349880319 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348229902 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.35090542 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.349783377 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351275874 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346977692 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.349612866 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348688677 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.348540293 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349632452 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.35026302 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.350433389 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.34898064 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.34888814 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.349913902 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.348976251 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.34978064 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.349230406 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.35313438 seconds)
  done (took 30.928330467 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.349048234 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.3488435 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.350597391 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.34974194 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.35040448 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.349474805 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.349886728 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.348343482 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34766704 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348341971 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346919093 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347426801 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.34869647 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349669007 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346787896 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.349170759 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.347699648 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.349277396 seconds)
  done (took 25.507888813 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.348043199 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.348052402 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.348662325 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.347335367 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.347862775 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.348327811 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.346938506 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.348291881 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.347714982 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.348892098 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.347403712 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347101349 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.345998255 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346712433 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347244931 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.347173183 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.34564524 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348413627 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.347438455 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.346377519 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.347817034 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.347436005 seconds)
  done (took 30.872843436 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.346728086 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.348621138 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.347946815 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.346669142 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.346422083 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.348808303 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.344810885 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.347065454 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.348604987 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.348073843 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.346764452 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.347161799 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.349367894 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.347019598 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.345996152 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346849017 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.348302507 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.346976154 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.346993048 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.347324218 seconds)
  done (took 28.174689999 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.348105808 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.348705543 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.34778517 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349827462 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.34852362 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.349370389 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.348792347 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.347356992 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.349783572 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.35014071 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.350337464 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.349164077 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.347707597 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.351366236 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.349344763 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.350037408 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.350818549 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.349947633 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.350768635 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.350119748 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.351584162 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.351851131 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.351169936 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.352170402 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.349654926 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.350991179 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.350602013 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.351846168 seconds)
  done (took 39.02832601 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.35073345 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.350155146 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.349285961 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.351799016 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.351164816 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.349321488 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.353132642 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.350181127 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.356972817 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.350897939 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.350919545 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.351522806 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.349783052 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.349901609 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.351431256 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.350701235 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35199732 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.351104061 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352697264 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352488668 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.351136775 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350707125 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.351948902 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.351049203 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352390466 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.351885583 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.351723762 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.351942906 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354002316 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.350131818 seconds)
  done (took 41.774909028 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.371766752 seconds)
    (2/2) benchmarking "in"...
    done (took 1.369906135 seconds)
  done (took 3.973314274 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.35272256 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.352903134 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.351900014 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.351800695 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.351675838 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.353047627 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.354446521 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.35149393 seconds)
  done (took 12.05360356 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.345148961 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.352982232 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.351067781 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.352515316 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.353449408 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.343027924 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.353175793 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.358254796 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.345338633 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.347196443 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.347046759 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.347520767 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.350103644 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.348798732 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.34704519 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.349166705 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.357377574 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.353921507 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.355861717 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.354398379 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.353101776 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.348677729 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.351223893 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.358916515 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.34572948 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.353648636 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.355128254 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.359091644 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.34834258 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.353313095 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.349997702 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.356846399 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.354704065 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.357645054 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.355255737 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.356295507 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.356194981 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.354685886 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.357315844 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.359998955 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.354811636 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.354105573 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.352538591 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.353302518 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.354138436 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.361189586 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.357174546 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.356230249 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.349353054 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.350948037 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.357918876 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.349379342 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.357961168 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.354245276 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.354382223 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.358483437 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.362385447 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.351277839 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.353428364 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.357392222 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.363125746 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.359224834 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.356324227 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.360874432 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.354577135 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.35694156 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.36180256 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.36421472 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.35784791 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.357729684 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.358337604 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.366317416 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.362683156 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.36287813 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.357572477 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.357660694 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.350634358 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.361360638 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.359353744 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.363268605 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.364391852 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.35897903 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.353673019 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.355986605 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.355508935 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.361716515 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.358387834 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.355757059 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.349695458 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.362037809 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.366022201 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.357135002 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.350050002 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.356225696 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.354930204 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.359871642 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.349109476 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.352881622 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.359827986 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.356613752 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.357979306 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.349779036 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.356400526 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.363966841 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.357412208 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.359103021 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.364159174 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.350910002 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.361021131 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.365073696 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.357097305 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.351886248 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.355812831 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.361707724 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.35188727 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.356056586 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.364932797 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.3556559 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.361840049 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.358920559 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.353798998 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.363670473 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.363098737 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.359610489 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.352890176 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.362289558 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.358181713 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.357431468 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.36563014 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.359333839 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.360644691 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.355060177 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.363816653 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.352191298 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.361576271 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.353589648 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.363071416 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.358845579 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.35964253 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.355580599 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.358743218 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.356137537 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.357569936 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.360814183 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.363938798 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.357219487 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.364795334 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.360382047 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.358687398 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.360497451 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.364923672 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.359973447 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.354566135 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.363121808 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.352124989 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.359775642 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.35243888 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.362415105 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.359766901 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.36063272 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.362625138 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.350703642 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.355859492 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.361518228 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.35894768 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.36051635 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.363992569 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.361558621 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.360298857 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.352544762 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.359482587 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.351669412 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.35547061 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.364000985 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.360359666 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.361493199 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.358117245 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.366518507 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.359523074 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.360114035 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.354960473 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.358770757 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.36494094 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.361176438 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.368891177 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.36191763 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.36065304 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.353644394 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.35395703 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.362395968 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.353273995 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.362261017 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.365042075 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.365327488 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.356186953 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.364184499 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.353547213 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.361527384 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.359564156 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.368082969 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.360024509 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.361663479 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.354247796 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.363528465 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.355020083 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.362176557 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.353267753 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.364020161 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.360536858 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.359501856 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.359473053 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.354816964 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.358815777 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.364244145 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.361638745 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.359894578 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.354535109 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.363162217 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.352846468 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.356796652 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.363914641 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.362072943 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.36418393 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.367985899 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.358363211 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.365785697 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.361807807 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.356751346 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.36442064 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.358893084 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.362297202 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.366238161 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.363852954 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.358757142 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.369118417 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.365279565 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.355632639 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.362057224 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.370338379 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.36222063 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.356314925 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.366375279 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.364379928 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.362381843 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.361626333 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.355118483 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.366360791 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.366075293 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.373665111 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.356259606 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.366557902 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.357057644 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.366787417 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.360658569 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.365330203 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.364140974 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.364503603 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.370823163 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.365115395 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.357791964 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.367870742 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.364215631 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.362953992 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.359216964 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.366783602 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.365032109 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.365431834 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.36239344 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.361793178 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.365143392 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.35863724 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.365796281 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.357594529 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.372748251 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.378773061 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.36756553 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.370707654 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.368922514 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.367917272 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.3682615 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.35912939 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.361360361 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.362994426 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.359764837 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.36138665 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.368508827 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.359334789 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.367005367 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.363463658 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.368364524 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.366309282 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.364947129 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.358562163 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.368034616 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.365804018 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.366644896 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.357948374 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.367951798 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.361695017 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.370429588 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.366536818 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.360914724 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.372043436 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.371973405 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.363430558 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.363417797 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.361810746 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.359046453 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.3627116 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.373302873 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.359578261 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.369656693 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.361360544 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.365100539 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.362394666 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.368925771 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.378452447 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.359552823 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.371335215 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.367984932 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.35852287 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.361260064 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.369670556 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.371430967 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.378496836 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.360427108 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.369377651 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.369167734 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.366069085 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.367224376 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.367065341 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.367901119 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.36851105 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.371939318 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.371997128 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.363935381 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.371132738 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.375718527 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.366207747 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.367422529 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.360997801 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.369501091 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.377387524 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.363932547 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.367129076 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.363851234 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.369143743 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.367436839 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.367984249 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.368876676 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.369353484 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.37060508 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.372847856 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.371112936 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.367472078 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.370866968 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.379236668 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.37142466 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.381433339 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.362313327 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.374623224 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.367944925 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.364213691 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.363672025 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.365718923 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.372462542 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.360150968 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.372155577 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.368009171 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.363851539 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.368436193 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.375259408 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.362437227 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.367638537 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.375967104 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.360283828 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.37114114 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.368159318 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.361795526 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.371338559 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.371190059 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.362007526 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.363970822 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.364601684 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372753861 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.36286113 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.373768761 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.365660564 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.373703626 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.370781554 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.369474169 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.371466586 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.368815815 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.362611875 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.372739556 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.370540807 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.379852347 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.366400905 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.369880642 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.364150714 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.375953721 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.381428206 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.36584616 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.37521906 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.370198017 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.362848451 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.367461462 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.373756966 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.363471349 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.374072691 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.363386877 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.363798349 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.36436743 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.372576631 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.372961531 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.371935755 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.364000234 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.364761455 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.372699568 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.368953304 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.369252468 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.36627322 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.376869551 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.365803128 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.364059863 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.372516259 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.363877044 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.37592149 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.363803029 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.366805575 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.366826497 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.374718702 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.37266441 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.371047297 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.36242922 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.367240836 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.375610621 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.374874117 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.367540211 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.366492457 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.372871616 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.365214337 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.366517419 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.366604149 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.365727025 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.368205826 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.374696893 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.364445293 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.367171691 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.364966516 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.37281436 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.377153068 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.375498964 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.365844121 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.378396692 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.380451828 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.379031387 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.364154612 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.366894275 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.364830123 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.374425757 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.372466168 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.364176235 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.379285996 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.379292828 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.375367805 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.370458788 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.373609129 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.36387918 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.37512821 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.372844969 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.36851027 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.380153046 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.367766802 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.378820263 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.370748727 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.371148723 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.364967081 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.36776131 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.368844505 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.36715485 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.373374668 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.372622523 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.375107807 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.370363299 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.377207854 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.371293697 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.373584613 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.373037794 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.366756972 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.37493541 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.363686373 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.374941415 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.376234683 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.365937668 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.37448027 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.374453054 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.366346148 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.369266057 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.37486373 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.373090124 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.366565725 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.369720161 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.375312112 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.38394958 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.374645538 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.367040073 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.369293054 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.375777635 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.372851497 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.371258461 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.368797111 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.381588083 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.384420445 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.368871381 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.370340414 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.376992465 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.38336324 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.373487843 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.372439086 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.369408663 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.370559308 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.376717384 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.373928297 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.378193259 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.380592906 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.36925117 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.375274142 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.368240443 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.369508856 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.375850994 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.385578956 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.373505105 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.368847012 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.380914794 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.384409631 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.372426237 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.386911969 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.381760845 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.374950485 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.378402625 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.369348612 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.377245522 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.371893648 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.377286385 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.374805144 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.373574004 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.375529404 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.365363426 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.374796572 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.380502046 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.381429524 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.372682382 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.366025015 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.370561323 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.377556818 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.3737336 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.374222897 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.374296621 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.373283019 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.37491572 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.367987836 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.386381109 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.388225757 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.380757723 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.37370905 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.373149426 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.373178972 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.379043128 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.372597175 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.377774251 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.375677622 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.373798863 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.372281131 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.382380887 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.3781924 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.369187759 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.370638267 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.368912038 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.377871216 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.380946689 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.391323166 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.378154422 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.379199801 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.377071557 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.3741608 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.369259815 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.377918149 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.377180266 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.369706616 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.371182265 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.378276595 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.375193018 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.376161383 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.368809795 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.379407777 seconds)
  done (took 814.898963956 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.375943775 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.376398808 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.374978049 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.374524526 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.375776661 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.374808156 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.372630889 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.375171567 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.375529426 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.377528627 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.37441385 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.374149948 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.376700904 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.374839485 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.37254841 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.376100923 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.375753585 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.373983452 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.374288293 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.37424919 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.375273504 seconds)
  done (took 30.124640468 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.375956239 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.377567616 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.374635025 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.373857799 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.375483254 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.376072355 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.376620043 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.375521053 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.375062321 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.375464745 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.375734021 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.375860535 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.375813328 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.37592383 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.37576907 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.374771523 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.375822072 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.376288071 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.376889328 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.377539324 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.375357864 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.374721018 seconds)
  done (took 31.515448088 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.378137924 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.376956684 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.370657621 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.378697503 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.377368659 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.377122702 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.376951616 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.378118309 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.377581541 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.367746657 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.370467505 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.372289783 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.371495013 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.380667712 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.374479875 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.382213931 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.377031659 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.377310253 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.378205398 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.378413735 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.381968522 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.389573515 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.378313891 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.372332604 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.380818906 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.379397322 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.379137612 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.378599753 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.370513075 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.380565983 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.377551273 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.371799942 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.381729178 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.380971761 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.37294114 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.381804459 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.378072611 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.378400357 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.379022138 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.375863408 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.389295778 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.381058547 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.382837563 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.391658541 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.379001268 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.373699685 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.382929643 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.379329787 seconds)
  done (took 67.40263229 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.380310359 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.379451698 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.381489629 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.379894949 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.382802298 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.379679961 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.380063767 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.380976438 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.379934832 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.380030748 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.380149723 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.382635689 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.38067946 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.380533388 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.382074644 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.382918281 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.379361465 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.380296056 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.37958537 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.378834376 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.380695025 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.381599557 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.381279166 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.3803825 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.380987998 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.380532812 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.381035321 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.38079826 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.381052804 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.382261773 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.381265408 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.381528715 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.382217293 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.382263937 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.381314325 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.381616291 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.382033791 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.380609308 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.381222037 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.380678223 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.382948807 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.382053136 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.382258843 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.382672417 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.381421111 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.382334445 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.381794865 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.381691892 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.38247971 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.383240763 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.383291614 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.383161836 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.383281022 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.3833621 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.382130868 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.382637617 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.383627671 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.381843578 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.383801634 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.38289411 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.383354692 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.383870955 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.384291526 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.383765158 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.385090625 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.384608833 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.384279165 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.384141582 seconds)
  done (took 95.218280924 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.384583 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.387517638 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.386147059 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.385615838 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.386264418 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.385844592 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.385326255 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.386547734 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.385995904 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.38656119 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.385922666 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.386754866 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.385506528 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.384376739 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.38530777 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.386822772 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.385551836 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.385945155 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.385659845 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.387943506 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.386198805 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.386223448 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.38642479 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.386660134 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.386253277 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.386087855 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.385650599 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.385396729 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.386188111 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.387240368 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.386075499 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.38641155 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.385901423 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.386596925 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.386366522 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.385296949 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.386950038 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.38713367 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.387061308 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.386731771 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.386731479 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.387257211 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.38756296 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.388842927 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.387437706 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.386655795 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.389167742 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.388078638 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.387600906 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.38693426 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.388964207 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.387615451 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.388520132 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.386847285 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.388617906 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.390103471 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.389211367 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.389827494 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.388497512 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.389150722 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.390992531 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.388740108 seconds)
  done (took 87.248762091 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.386172711 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.390131823 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.389416022 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.391943715 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.389103462 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.38974064 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.388898751 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.389402181 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.390393521 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.389166299 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.391054905 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.388337126 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.389678979 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.39072711 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.388965425 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.390281648 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.390282738 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.388703658 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.390270781 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.390402747 seconds)
  done (took 29.050692701 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.391071162 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.389941843 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.387388361 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.391909099 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.390478074 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.389178685 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.39136715 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.390122944 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.388686625 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.391801801 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.390186209 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.393246006 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391071089 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.390595067 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.391083007 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.390945595 seconds)
  done (took 23.509501911 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.391351506 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.39120414 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.391241336 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.392198097 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.391304239 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.391565343 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.391709941 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.391356342 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.390591126 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.392072912 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.391608333 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.391169911 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.391940865 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.392491293 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.391386075 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.393405464 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.391570745 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.392918647 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.391507084 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.39346999 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.394101 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.39302825 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.392938852 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.39188479 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.390862443 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.393095683 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.39398553 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.392884762 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.392545042 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.393338662 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.391957891 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.393877017 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.393524482 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.393421395 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.394777213 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.393411708 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.392674824 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.393438601 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.393268727 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.393069072 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.393932081 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.394190352 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.395458444 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.394720941 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.391889612 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.393974491 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.392901777 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.395039148 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.395127061 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.395260099 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.394690829 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.393960968 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.395329839 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.396105735 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.394415123 seconds)
  done (took 77.876922556 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.395683504 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.395795904 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.393792125 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.395933463 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.394191218 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.390304364 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.39449605 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.397034995 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.395591908 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.394533744 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.394205356 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.396819498 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.398376316 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.396238271 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.39508538 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.395076055 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.397792804 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.395696884 seconds)
  done (took 26.380583602 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.395944671 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.394666431 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.396734185 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.394964092 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.396314587 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.395558343 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.39589136 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.395535843 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397147748 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.39744446 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394944862 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.397458626 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.39655818 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.396029695 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.395796374 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.39791949 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.397096019 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.397310996 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.395443598 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.39631461 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.397277291 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.39609384 seconds)
  done (took 31.983097489 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.386451634 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.38770761 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.38788408 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.401183713 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.39561018 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.389787887 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.388315493 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.387320821 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.403383457 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.412900453 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.406326008 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.396428005 seconds)
  done (took 18.009920954 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39959079 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398700578 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.397133598 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398238025 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399384305 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398010339 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398387649 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399169781 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399742149 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39913857 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397832849 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398473096 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397695039 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397790588 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400138622 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39831423 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400084426 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396818716 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397659735 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398872481 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398715072 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40058028 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399986539 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398761119 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39632604 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400304265 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399659742 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399679615 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399955332 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39930439 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400669381 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400003129 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399373829 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398715944 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4014575 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401034678 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399678113 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400490842 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402250054 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400754443 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.402446037 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399665912 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401695807 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403676165 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399601012 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400914013 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400911621 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401262836 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39986307 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401732961 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401980501 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401753262 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401939166 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401057287 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401703395 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39958109 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403625687 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400112727 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400356186 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401096806 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402105426 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40121104 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401338212 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402275069 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40251985 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402202242 seconds)
  done (took 93.674720107 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402807151 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.401757762 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401760671 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403745273 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403125606 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401229228 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403071979 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402935882 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402104166 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403002945 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402274253 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402748297 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402374695 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402757255 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402857593 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403861879 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402099702 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405183241 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40481616 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404475498 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404468418 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405739386 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400083994 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404517284 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404006163 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404679097 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404009627 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406004668 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403254705 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404193876 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403234187 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403556741 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404451982 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.404933736 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403513754 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40464754 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406001668 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405717202 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40326439 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404664804 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407108766 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.4057713 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404375515 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404737928 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405124853 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404875332 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404303015 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401072576 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.4053927 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402109414 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40456432 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407440761 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407761748 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408167136 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404242483 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405882585 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403994323 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406496547 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403867834 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40395689 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407533291 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406785764 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404152828 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405579993 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403860181 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405821022 seconds)
  done (took 93.95035058 seconds)
done (took 1908.264264337 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.56128092 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.518892978 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.393401308 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.416471768 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.399045676 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.400227095 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.409572285 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.400042126 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.396973905 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.397955225 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.399164447 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.589167907 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.433653241 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.39829327 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.400549857 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.493625008 seconds)
  done (took 28.283334775 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.425352291 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.406277059 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.514080023 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.400303132 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.425620735 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.588435163 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.45979495 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.401714381 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.56632663 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.424285757 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.402731369 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.423926747 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.402352972 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.398055594 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.42404796 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.587640499 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.660287251 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.405240881 seconds)
  done (took 30.59125702 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.831981413 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.396569504 seconds)
  done (took 5.504766877 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.423094244 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.40483265 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.403682468 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.402292454 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.40786055 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.39515341 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.403407832 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.411945119 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.399425748 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.529332061 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.404625517 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.414900838 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.403100244 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.404140612 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.412216428 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.447105298 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.56736262 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.413599407 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.411312832 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.408936538 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.402679595 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.496352978 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.448730979 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.415122411 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.524320428 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.403483989 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.409679409 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.409584397 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.520355662 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.413967859 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.404960826 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.404815469 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.407593737 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.356271697 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.945833507 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.411545341 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.430380368 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.413403391 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.412389719 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.55414056 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.406919053 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.41123155 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.39787647 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.940961678 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.514069255 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.521108013 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.403830736 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.41964532 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.406848453 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.467087235 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.409357768 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.406286856 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.461787628 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.202446176 seconds)
  done (took 89.309595183 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.44642615 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.402838461 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.580687757 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.416550958 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.407600842 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.398100373 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.399331848 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.670544209 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.423524365 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.400907589 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.708190233 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.020142906 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.404735515 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.466234241 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.435670559 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.456534323 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.413531522 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.401578781 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.401053793 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.402589883 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.96589162 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.405766958 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.399925244 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.494019131 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.438931791 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.925616701 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.398617955 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.399481238 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.402125856 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.401442745 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.979035493 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.40935069 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.446696965 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.400554702 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.683927405 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.777032695 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.740362425 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.405666997 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.438931237 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.406636213 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.42708699 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.916560747 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.760080701 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.413428434 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.401624791 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.914994404 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.400215843 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.407884623 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.40115884 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.669784902 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.400194539 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.404241765 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.401762368 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.403192269 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.401281256 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.469578097 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.463007793 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.927638784 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.401755887 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.400386317 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.411236237 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.403670021 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.40102614 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.406120409 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.404134342 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.762030921 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.658623448 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.405430178 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.761757701 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.970388247 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.4016122 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063975722 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.413448485 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.424390935 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.448667259 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.403102923 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.403511233 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.926200067 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.410839091 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.405749605 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.740489564 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.403838723 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.704506806 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.419963359 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.40245126 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.988020186 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.418446939 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.4429894 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.402712973 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.401959751 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.418192247 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.407292404 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.689576022 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.451699301 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.404254871 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.401788849 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.435881878 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.403385788 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.421051837 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.412315434 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.046289042 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.409123019 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.407064841 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.423729421 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.403516053 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.405200805 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.405624468 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.404252737 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.69084183 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.404149842 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.411779795 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.403884847 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.40476682 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.416292495 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.498622222 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.415002666 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.701878093 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.406018725 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.404158172 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.409743629 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.416367741 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.418174379 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.404730526 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.410213817 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.405790738 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.704525536 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.422079239 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.419937278 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.407673125 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.404006419 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.41666877 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.405547334 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.462134102 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.407057515 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.251041222 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.409863617 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.420980193 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.404781608 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.408296233 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.407062324 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.432932997 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.407112114 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.706462296 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.693468491 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.656222437 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.406071669 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.406430369 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.233935924 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.413951584 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.588221898 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.422224932 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.406951004 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.684637845 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.637809468 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.409241348 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.406453318 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.411701361 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.687092041 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.407235652 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.737403377 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.01126976 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.406222268 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.413754712 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.24813129 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.217864851 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.411520641 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.407824626 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.701376281 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.425062423 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.407954382 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.406688013 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.408931481 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.409001829 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.412143414 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.409362083 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.406824841 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.409014203 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.69618809 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.601717847 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.422949437 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.418774951 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.929811167 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.43006189 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.408996451 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.416688464 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.41226088 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.409312612 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.472562416 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.413886727 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.41500888 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.407694596 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.41472906 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.954442745 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.410673502 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.427529896 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.603633486 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.165799385 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.409267132 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.410381883 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.409066365 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.464624719 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.958887804 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.449581827 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.703991557 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.41556602 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.450322769 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.408546382 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.416811686 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.960334597 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.415617788 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.428230305 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.136631354 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.410438721 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.889876353 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.410191097 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.410610008 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.064027543 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.410110918 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.411940918 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.422635589 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.413399273 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.742350464 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.411226063 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.42061378 seconds)
  done (took 515.143544549 seconds)
done (took 670.106706351 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.41015453 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.415742993 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.395742144 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.41352027 seconds)
  done (took 10.924924304 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.426300015 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.414646217 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.425107268 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.415210461 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.425788302 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.41444093 seconds)
  done (took 9.809606085 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.40895114 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.413482179 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.414006263 seconds)
  done (took 8.526825707 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.627095326 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.431757014 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.756861227 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.414951466 seconds)
  done (took 9.519934691 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.425885039 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.42537816 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.427246429 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.425033686 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.428647808 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.428749304 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.426294285 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.426254141 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.429344808 seconds)
  done (took 14.130836308 seconds)
done (took 54.202703305 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.503405129 seconds)
    (2/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.619074182 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.52985944 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.563355409 seconds)
    (5/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.301266136 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.482884548 seconds)
    (7/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.52632953 seconds)
    (8/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.237243123 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.447780099 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.648719916 seconds)
    (11/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.393020287 seconds)
    (12/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.47756492 seconds)
    (13/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.528481621 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.411781291 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.566953471 seconds)
    (16/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.53056098 seconds)
    (17/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.239992728 seconds)
    (18/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.448302829 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.564467741 seconds)
    (20/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.39641533 seconds)
    (21/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.396633888 seconds)
    (22/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.395226696 seconds)
    (23/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.577011601 seconds)
    (24/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.485589025 seconds)
    (25/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.492649642 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.493239431 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.51344678 seconds)
    (28/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.452694662 seconds)
    (29/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.401254424 seconds)
    (30/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.532012809 seconds)
    (31/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.447605264 seconds)
    (32/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.405527508 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.225174672 seconds)
    (34/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.599421278 seconds)
    (35/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.414147607 seconds)
    (36/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.18558135 seconds)
    (37/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.408106872 seconds)
    (38/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.398716958 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.662558814 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.499026306 seconds)
    (41/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.394470711 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.564524357 seconds)
    (43/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.446800354 seconds)
    (44/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.417002102 seconds)
    (45/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.410520616 seconds)
    (46/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.448905358 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.486608701 seconds)
    (48/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.528979502 seconds)
    (49/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.637774792 seconds)
    (50/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.420176063 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.526001919 seconds)
    (52/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.664603395 seconds)
    (53/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.448170534 seconds)
    (54/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.395167689 seconds)
    (55/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.404845042 seconds)
    (56/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.168087338 seconds)
    (57/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.491549783 seconds)
    (58/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.420432419 seconds)
    (59/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.586182648 seconds)
    (60/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.308147415 seconds)
    (61/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.230876994 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.420693185 seconds)
    (63/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.414698347 seconds)
    (64/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.550856071 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.565896658 seconds)
    (66/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.526959348 seconds)
    (67/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.597940808 seconds)
    (68/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.400239664 seconds)
    (69/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.115405274 seconds)
    (70/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.446160356 seconds)
    (71/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.418505331 seconds)
    (72/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.514941176 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.507406512 seconds)
    (74/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.395807516 seconds)
    (75/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.400250651 seconds)
    (76/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.432556856 seconds)
    (77/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.524851451 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.522141294 seconds)
    (79/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.533225794 seconds)
    (80/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.667895007 seconds)
    (81/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.664567588 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.518934989 seconds)
    (83/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.396470034 seconds)
    (84/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.589006015 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.503286148 seconds)
    (86/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.264002075 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.488819643 seconds)
    (88/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.396905477 seconds)
    (89/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.39966535 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.543375751 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.518053261 seconds)
    (92/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.449664866 seconds)
    (93/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.598471243 seconds)
    (94/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.60368719 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.535857082 seconds)
    (96/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.461445211 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.450987031 seconds)
    (98/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.429944905 seconds)
    (99/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.429295953 seconds)
    (100/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.401554974 seconds)
    (101/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.235453955 seconds)
    (102/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.457612319 seconds)
    (103/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.450319743 seconds)
    (104/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.124037363 seconds)
    (105/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.418930246 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.495103202 seconds)
    (107/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.455048848 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.417990447 seconds)
    (109/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.568661414 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.517774312 seconds)
    (111/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.123141221 seconds)
    (112/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.538397985 seconds)
    (113/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.404736148 seconds)
    (114/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.42875627 seconds)
    (115/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.60112154 seconds)
    (116/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.399796999 seconds)
    (117/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.404004562 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.461420906 seconds)
    (119/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.218319504 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.545244329 seconds)
    (121/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.494068662 seconds)
    (122/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.397753462 seconds)
    (123/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.512550833 seconds)
    (124/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.523267093 seconds)
    (125/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.521571115 seconds)
    (126/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.455660529 seconds)
    (127/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.479768639 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.190230923 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.660764434 seconds)
    (130/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.453654461 seconds)
    (131/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.242078548 seconds)
    (132/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.40564914 seconds)
    (133/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.423175784 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.566435115 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.512469268 seconds)
    (136/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.5173936 seconds)
    (137/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.399673624 seconds)
    (138/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.414935552 seconds)
    (139/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.404813476 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.497458678 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.500185513 seconds)
    (142/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.584854671 seconds)
    (143/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.409588368 seconds)
    (144/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.632869774 seconds)
    (145/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.566669985 seconds)
    (146/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.102611082 seconds)
    (147/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.562655249 seconds)
    (148/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.497710902 seconds)
    (149/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.399362806 seconds)
    (150/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.497485615 seconds)
    (151/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.601906027 seconds)
    (152/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.565537084 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.543748268 seconds)
    (154/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.491400884 seconds)
    (155/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.610448317 seconds)
    (156/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.271134173 seconds)
    (157/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.418470241 seconds)
    (158/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.379686155 seconds)
    (159/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.394491255 seconds)
    (160/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.495827354 seconds)
    (161/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.498903009 seconds)
    (162/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.402409401 seconds)
    (163/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.556867723 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.479759994 seconds)
    (165/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.569308354 seconds)
    (166/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.447884612 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.458034267 seconds)
    (168/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.571959716 seconds)
    (169/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.257206223 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.530172231 seconds)
    (171/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.39323502 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.412723489 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.558700745 seconds)
    (174/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.656498288 seconds)
    (175/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.762857099 seconds)
    (176/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.622656353 seconds)
    (177/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.396204583 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.569136235 seconds)
    (179/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.56325615 seconds)
    (180/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.526300288 seconds)
    (181/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.47326808 seconds)
    (182/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.26015661 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.606633145 seconds)
    (184/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.147606719 seconds)
    (185/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.406521912 seconds)
    (186/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.60439179 seconds)
    (187/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.221966565 seconds)
    (188/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.450911318 seconds)
    (189/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.621043543 seconds)
    (190/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.49425644 seconds)
    (191/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.525890749 seconds)
    (192/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.682112589 seconds)
  done (took 356.301053294 seconds)
done (took 357.591452898 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.441671665 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.51515156 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.420712495 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.418602704 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.421118884 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.422640436 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.441262845 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.42079035 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.43252383 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.434711552 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.421535765 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.428693517 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.436565163 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.430665502 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.453963583 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.421561745 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.420258776 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.431799488 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.4356725 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.436535129 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.423068064 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.422455701 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.446955695 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.421495114 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.429092161 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.428596991 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.427937076 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.420846693 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.427971795 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.436691967 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.423151969 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.427617098 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.436475323 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.431158433 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.422388718 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.4309977 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.418863017 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.514865089 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.438176641 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.42773907 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.425278071 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.433201171 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.42291697 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.417271221 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.423295548 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.439431526 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.422928951 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.427944 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.406117396 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.413021109 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.43358147 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.426340302 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.421851033 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.406993901 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.408018111 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.428553328 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.423049604 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.432921874 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.421769603 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.414792852 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.447656929 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.434904148 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.426556427 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.421932126 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.423678002 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.429812864 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.423555689 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.431521578 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.422611103 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.417675903 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.416238783 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.423294328 seconds)
done (took 112.205094554 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.540020095 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.411184505 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.571368258 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.422168577 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.579074601 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.536298909 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.42333369 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.422875331 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.422214674 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.231740166 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.422910944 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.422183376 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.413099045 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.422783479 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.534911947 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.42434733 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.424017864 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.121050602 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.425838238 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.549299042 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.404702046 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.419113998 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.419853333 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.21911733 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.410769645 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.401317874 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.543828965 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.416658969 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.124867686 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.4043561 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.406555027 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.110873562 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.539385433 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.432135881 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.425521402 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.416552584 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.56467347 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.410105506 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.523489242 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.525596638 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.558006829 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.446070689 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.396149758 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.396064165 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.407314986 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.405535244 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.405785701 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.433884701 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.391514549 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.40106986 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.109692757 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.412763922 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.411668117 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.402768346 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.399468816 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.419465324 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.400354596 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.398912188 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.525891525 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.399878595 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.515814918 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.209936677 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.192688331 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.397484193 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.38900908 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.3965588 seconds)
  done (took 113.353743875 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.454937228 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.46358934 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.495194449 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.386270114 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.435416594 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.497955577 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.387020446 seconds)
  done (took 11.386892384 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.392981832 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.395339541 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.435170003 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.433573785 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.395913841 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.560383986 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.397287825 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.398499808 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.395266551 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.437625115 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.396827761 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.39573966 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.402888582 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.381298076 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.434796078 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.398941147 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.506451677 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.389752271 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.396155782 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.539270749 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.395600829 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.404489861 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.439545734 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.397249244 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.398922316 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.394812013 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.181804042 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.397031971 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.396937644 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.396318345 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.396040823 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.454111898 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.397662192 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.381970733 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.398422274 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.502281757 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.39793719 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.400410736 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.395973842 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.387965288 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.394164755 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.394019649 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.394478809 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.394179515 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.395181668 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.407915202 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.392072259 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.391050642 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.390931793 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.391287688 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.433551581 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.392394978 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.38889374 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.389697627 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.434676994 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.398680056 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.389813486 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.389859217 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.392607063 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.387279836 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.531426311 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.426069891 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.389007492 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.426590304 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.387326098 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.390603952 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.386077298 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.385486006 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.467305992 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.386209162 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.424588889 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.387307819 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.562040979 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.399434696 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.386457581 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.380681598 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.380223901 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.385455301 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.376001538 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.384742484 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.383423205 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.375594806 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.382583727 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383049669 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.384267207 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.53421706 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.483645658 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.382273563 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.390095897 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.380738463 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.381518929 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.423507327 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.382443845 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.386439098 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.422466208 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.492096501 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.424158606 seconds)
  done (took 142.849094991 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.385797787 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.386340844 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.377653176 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.398634445 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.370778428 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.370963956 seconds)
  done (took 9.5467228 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.373795939 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.38206218 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.381251427 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.378621917 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.378804163 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.379896647 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.379594856 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371715076 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.381256016 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.378551717 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.382328 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.379876244 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.377691348 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.37735922 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.379003822 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.37748627 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.377579752 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378286312 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.376248657 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376258456 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.365759321 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.377468056 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37682486 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.369331351 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.383415573 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.374869109 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.3906623 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.375361067 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.375137823 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.371464992 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.378565963 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.379070456 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.366874194 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.369570007 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.377362918 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.367731237 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377523326 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.376824811 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.37605526 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.375532134 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.376563857 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375608646 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.373564469 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.37726274 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.366815826 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.369303274 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.376686229 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387209307 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.374497579 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.375619408 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.376258649 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.373248672 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.375011606 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.377458503 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.365501667 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366516986 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.376324835 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.373624767 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.373081471 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.365307669 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.378201941 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.373881862 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.364356372 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.373849562 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.371622293 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.373413468 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.364497875 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375600711 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371941295 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.371073248 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.372883814 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.371064812 seconds)
  done (took 101.268760507 seconds)
done (took 379.694235755 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.632535573 seconds)
  done (took 3.879467776 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.399859098 seconds)
  done (took 3.647641311 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.35372141 seconds)
  done (took 22.603625039 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.380913106 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.386621246 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.356135098 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.364686726 seconds)
  done (took 10.732987771 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.77796564 seconds)
  done (took 4.023056363 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.375375653 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.363846617 seconds)
  done (took 5.984661852 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.564470118 seconds)
  done (took 3.809961567 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.567968232 seconds)
  done (took 3.813920838 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.379118115 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.368117256 seconds)
  done (took 5.998922544 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.334862466 seconds)
  done (took 3.578886367 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.470081099 seconds)
  done (took 20.716965854 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.376981698 seconds)
  done (took 3.625142609 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.388932465 seconds)
  done (took 3.636065467 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.854826276 seconds)
  done (took 6.100828672 seconds)
done (took 103.399890759 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.355290458 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.364338984 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.360182419 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.35953973 seconds)
  done (took 10.685245992 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.435970979 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.433360962 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.442406244 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.429684587 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.428893804 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.43578611 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.395701399 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.395935556 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.426287944 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.423576699 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.438320294 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.430388281 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.437784586 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.396677941 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.422814144 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.437921107 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.425725744 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.443818479 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.397069894 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.429114799 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.373310362 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.429770354 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.423597095 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.373457434 seconds)
  done (took 35.354844177 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.859667938 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.432912541 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.516275478 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.414326907 seconds)
  done (took 7.471494694 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.476380185 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.477929561 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.495621948 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.52981226 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.577565773 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.490869699 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.400097682 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.394018972 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.379778709 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.478925308 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.562777655 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.477057924 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.69138959 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.372616621 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.691930251 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.372548846 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.373115069 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.475885333 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.525095888 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.556171573 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.375005198 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.477336898 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.480910438 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.477527499 seconds)
  done (took 36.859460438 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.381098391 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.389860288 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.375316672 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.389063042 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.374337013 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.375765489 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.375684157 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.381504476 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.374478168 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.374039284 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.375722782 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.389510752 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.374442529 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.374045751 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.382190488 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.376348835 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.376321492 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.381161107 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.383171818 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.37647375 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.374917314 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.380965766 seconds)
  done (took 31.585440805 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.360886381 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.360777095 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.71232295 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.61326118 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.359410977 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.35794028 seconds)
  done (took 14.015350623 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.431275835 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.572589403 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.364567648 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.701430165 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.792071045 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.367730875 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.362618581 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.60196879 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.895129053 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.889343302 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.42039171 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.429411735 seconds)
  done (took 20.077456558 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.356960216 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.357773616 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.357755695 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.372447565 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.413315703 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.362757092 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.36729799 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.354781988 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.417281112 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.416966427 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.365598796 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.413501068 seconds)
  done (took 21.803199393 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444570724 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362467111 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364402806 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356958313 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368143911 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36490781 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380188828 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.081462302 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.373744476 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640400028 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372454592 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451949957 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611688987 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3661454 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371557707 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.345855861 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594087862 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865722481 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366051377 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38126444 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402866738 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370693899 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380828672 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.5798386 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368199874 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365143701 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.628906668 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365283641 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65374451 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631750779 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.629865024 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373068048 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644909244 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998793487 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478084956 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57376784 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358435884 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367834571 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.338104598 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.375754669 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378332914 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375756533 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631135723 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373789433 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367598915 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367341787 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088700162 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.379274296 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.36765041 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369590053 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638784566 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45457082 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.37372948 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369814329 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434753587 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373696617 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.373705821 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487302117 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010060953 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368538579 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388187034 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.373691657 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373477307 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369851554 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034563137 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.380410847 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.374514434 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375360286 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36946681 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369891575 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395437239 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368830663 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.389401153 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369380244 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156635579 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383000497 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374809421 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920904729 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370138722 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.377535235 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59562534 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370540074 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371537597 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.371832067 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370410441 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096629211 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380856802 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.340389387 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40792536 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.089806549 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.583364784 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39108624 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399264156 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.590324803 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.340807869 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37233526 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.378278114 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375836392 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39246506 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.095273354 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376332164 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.378220076 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617433523 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.582012351 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375988911 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.345509392 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85789582 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389782908 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.401622919 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373355668 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.583984554 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.005358187 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642441489 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387529261 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41115158 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371713767 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15948744 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373026512 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.398737214 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385878559 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652768301 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.186745404 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373645611 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445558447 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382971186 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372383767 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372954145 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380664012 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373747923 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.56060066 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377329321 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.641965414 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.379167586 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373258643 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.375813313 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37826915 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.379533957 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593894899 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386841509 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651992033 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374213631 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374697097 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374217531 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.590833289 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.374200509 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.380262904 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.713828757 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375518871 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378579744 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643490434 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411011844 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486445055 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405307364 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.376700136 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.626781564 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.379742563 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.380221929 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375581891 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382703963 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375917114 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.383639608 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386434655 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010283788 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355190799 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382223151 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378239579 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.39106668 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448755717 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383552834 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584603305 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.375847329 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373542925 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.383025363 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.384257302 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601839085 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640479448 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.38782865 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5569354 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.85527562 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.015074898 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394577587 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.376000457 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.376150407 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.377990028 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378400653 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377092606 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376893397 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.584380094 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643829815 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385446958 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.02154101 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383230725 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377409082 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.405651069 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64034516 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.390176725 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378780872 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.383347319 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393500037 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394470981 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.644536602 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603046311 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.393599878 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377898455 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.896093949 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384831112 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379306693 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378657783 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406022094 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377490378 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233703048 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716280029 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388200404 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642194488 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394864363 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.399183526 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.37954585 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389245158 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38803748 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.386360733 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386318591 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.587413791 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380538343 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385008063 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017919751 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172637551 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958956999 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393091403 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.391747272 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383409293 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.111592292 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384058537 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379889093 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623584277 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102903715 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383009237 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860636838 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.393830592 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124693353 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64756549 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608972224 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38805067 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.39535946 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649765194 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595958993 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405736941 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388581711 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385242753 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.350344948 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929482812 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394693879 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563557883 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10870777 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395271184 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386624341 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.432119574 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.388357058 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763154207 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385285636 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38132595 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383760123 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386137831 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217688898 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387413497 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381086447 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048035357 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392448631 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.86837227 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386339716 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.590674254 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.64496047 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.628590681 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.387517892 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.396615887 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.630000165 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646214185 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387768652 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382966574 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967074868 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.243089872 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.389872132 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383791953 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174757497 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393967883 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675147445 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.40108918 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.388478724 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393809163 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3845659 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384516356 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.382045071 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39213788 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358907745 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882503212 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.375541166 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374831332 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39377786 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389031776 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.630888189 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.398674655 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.024055041 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6129818 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391951114 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415776502 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.389628048 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383975703 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.371496773 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384481993 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382554162 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443451255 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60774477 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383897791 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.358033722 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423928091 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598265326 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384313724 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384980993 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604634474 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.384090728 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.394510546 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183810978 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414849822 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383858793 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390340759 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383785888 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42275311 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457515943 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59386842 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.650982439 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.655990335 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771182151 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389254148 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391079497 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.401369231 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465542465 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397920245 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.392069539 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.390566872 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024567179 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187124733 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.032520413 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65945487 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391382879 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396369131 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386976318 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628217755 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385309067 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661618834 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389223427 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.385935089 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407915775 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386483435 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392655724 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617699168 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661241474 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386774426 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399440038 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392073194 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.387329988 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654864409 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.602165584 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891329459 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941654975 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388353041 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400734703 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.124236097 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667630164 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388400176 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390190854 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390099617 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.406887238 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.393193998 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.397748948 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38812655 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615784964 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653419605 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037966888 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.657347612 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.577012807 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.389580449 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394207627 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637312969 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232335911 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598179341 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032794722 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.138962525 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644863483 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463714285 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598913596 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.390732919 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626532892 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.38854952 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39433161 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389615699 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391396142 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.391065252 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.655996561 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039808838 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647993608 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.395380834 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.391378868 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423806793 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.599386364 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609685464 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128900513 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611080469 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658594464 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40280549 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391043317 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038530153 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662801619 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396017898 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.396525848 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612012898 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390464941 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424960672 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.261308039 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.389470378 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952792798 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.600147442 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411599019 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402635818 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.143911151 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037121215 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.398091331 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9033623 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392007635 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393584349 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674715929 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.39889065 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398573413 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676314157 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.397543301 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392484093 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608722157 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.029217742 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154708292 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.412019031 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393750908 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.398958449 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392379507 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395348014 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398188075 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402615821 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.778151406 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396696933 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393713639 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407593301 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.40618546 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397998649 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.397417754 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396046434 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.401184016 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.379106843 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.367675736 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404291742 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514806402 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946448142 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395691585 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.010751056 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.735996271 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.64052589 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402209784 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.367959089 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.399792797 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395193211 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394256716 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394494974 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398628541 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955464113 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.398300077 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.668496888 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405588542 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.604504928 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60718314 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395468104 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611184591 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401237103 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421423304 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.366538689 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396757713 seconds)
  done (took 985.748010939 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.427424129 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.39905367 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.399052433 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.462801518 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.413815145 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.406986021 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.410041668 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.462980941 seconds)
  done (took 20.655841315 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.387271484 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.400067827 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.402152775 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.401540537 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.387275905 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.869906241 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.387691986 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.399615408 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.409285364 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.389057163 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.403155011 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.021550856 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.39936976 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.399287266 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.402274502 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.402960454 seconds)
  done (took 32.736756584 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.105179606 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.424628774 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.967384626 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.439863947 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.393244107 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.393819697 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.528767386 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.405247315 seconds)
  done (took 25.931413954 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.402084597 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.401437976 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.401713675 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.401527031 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.402423221 seconds)
  done (took 8.283959899 seconds)
done (took 1252.456538925 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.404310649 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.401608885 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.402418439 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.402969486 seconds)
  done (took 6.885877257 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.368092813 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.367850408 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.369018813 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.38304788 seconds)
  done (took 9.762433666 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.091982432 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.899774507 seconds)
  done (took 5.266147961 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.937163833 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.943808734 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.938938384 seconds)
  done (took 7.093742289 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.673437585 seconds)
  done (took 2.948062167 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.37573865 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.393165568 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.12476561 seconds)
  done (took 8.169908346 seconds)
done (took 41.400555332 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.392704181 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.155788277 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.544866403 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.396005657 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.553373641 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.545780097 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.636738295 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.388496435 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.398109103 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.406964236 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.398295051 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.551468514 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.624391948 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.149183264 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.625895985 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.153394045 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.551668322 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.389633449 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.409290057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.404289834 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.63947784 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.398743991 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.390863991 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.391729621 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.555565737 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.535799843 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.390957598 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.154870256 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.39066904 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.398299349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.541034249 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.400497517 seconds)
  done (took 83.140520806 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.390673436 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.405978201 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.398749222 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.390913326 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.406346114 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.397493114 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.391174757 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.392130071 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.390885303 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.392338476 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.407510883 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.391573684 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.39448156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.392158809 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.391966054 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.393026167 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.420872289 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.397216361 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.39175227 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.392083085 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.394864552 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.392531087 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393263845 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.424477784 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.397513553 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.40586165 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.392723713 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.392463255 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.392565283 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.392443231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.407481976 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.392545019 seconds)
  done (took 77.985930885 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.391985295 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.396560773 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.407636611 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.403886838 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.399091196 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.403844686 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.396722077 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.392141201 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.40867922 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.405680631 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.39411977 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.394237473 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.395323185 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.409392679 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.39389162 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.394812006 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.399502445 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.398828592 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.398994965 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.394549912 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.393870941 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.395447885 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.394239146 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.39989253 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.403248747 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.395142803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.394173134 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.39276254 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.394334508 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.39340073 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.398543702 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.399004276 seconds)
  done (took 78.014090721 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.63415197 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.408873871 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.412217013 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.40452377 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.41170472 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.410117718 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.404015455 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.640691809 seconds)
  done (took 15.007703112 seconds)
done (took 255.422548795 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.405207555 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.907375838 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.437859636 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.406643687 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.422882971 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.433496214 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.62490142 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.433222314 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.626960579 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.427829064 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.424466301 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.407859747 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.213358089 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.560374 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.214414379 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.328340195 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.267629904 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.40196263 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.953532538 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.689913912 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.432462899 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.408621462 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.213268249 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.282346378 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.380583895 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.481898409 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.502236421 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.632376693 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.570829724 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.485145112 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.894815723 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.410603431 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.408847855 seconds)
  done (took 64.972374081 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.404529307 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.412149002 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.412101251 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.411822623 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.412907399 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.41250451 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.403398021 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.412847359 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.412901354 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.413699627 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.414100745 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.413330382 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.414936389 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.413908226 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.412499865 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.387550697 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.402379945 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.414095034 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.40331253 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.387679708 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.414584145 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.415110982 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.414337759 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.412630154 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.415279204 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.416719392 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.41443571 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.415935635 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.413551334 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.414156091 seconds)
  done (took 43.603850777 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.416051365 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.950330704 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.132522452 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.415941254 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.406687938 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.410865468 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.690285112 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.420226003 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.410046928 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.410204312 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.860559931 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.422292407 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43913015 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.140041248 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.414422277 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.416207967 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.415584302 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.407945834 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.963665704 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.421175115 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.690635923 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.420394981 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.690206012 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.416275434 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.408991751 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.408874222 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.41223902 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.217370252 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.428237202 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.864055451 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.180701895 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.690040159 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.149917991 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.18424089 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.176882846 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.423678226 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.416498097 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.869198217 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.410608197 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.408752988 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.687114803 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.408673225 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.142425759 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.106477903 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.427098701 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.416903894 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.257511338 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.86732417 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.647933477 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.414976192 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.184842713 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.412256969 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.419214416 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.4114542 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.648678932 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.4160414 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.409479424 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.240982631 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.413795289 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.690301466 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.423567922 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.409414654 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.961012174 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.41491224 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.963115291 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.411310227 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.41784552 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.410108842 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.147516127 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.416907697 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.119882971 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.427282093 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.419218663 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.866043235 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.962730382 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.31076862 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.417714713 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.968318703 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.189170924 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.711378593 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.418676702 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.199606865 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.713551879 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.416826242 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.422035211 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.422666218 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.420213283 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.491250875 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.688893666 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.036965004 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.110926292 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.252141817 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.694382058 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.419347496 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.411959615 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.255182265 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.424734159 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.419965975 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.143657026 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.131823718 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.427280691 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.418900294 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.097226505 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.430242432 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.695012862 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.418519492 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.182419794 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.419258675 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.494015757 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.422242762 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.419450987 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.416286378 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.694317917 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.420317904 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.422050455 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.095084167 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.894788461 seconds)
  done (took 196.574330519 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.408791462 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.407585596 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.405856967 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.407619907 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.406805121 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.415390788 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.406333964 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.408674262 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.413252167 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.40729003 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.408893186 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.415609963 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.412748973 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.406530431 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.42137237 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.407572753 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.407160103 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.421004863 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.408764344 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.408377477 seconds)
  done (took 45.495332912 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.422960993 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.964100634 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.931697292 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.429027613 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.422907366 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.414597663 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.470547505 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.428327849 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.422816092 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.710937666 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.587511128 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.429156341 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.424033282 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.422841578 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.928706911 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.401666656 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.708160375 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.97164527 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.429616741 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.96602751 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.402341517 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.424757362 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.414481432 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.966342021 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.726604477 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.699360987 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.477159483 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.973025415 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.429207196 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.424712971 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.966894823 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.428946085 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.416901348 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.956916217 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.430460794 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.438416953 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.424259131 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.475336684 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.475364715 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.714197967 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.979842268 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.710948064 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.441320718 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.585574867 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.426583747 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.39840346 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.980283164 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.431699773 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.398119799 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.427819779 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.431580972 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.946131438 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.423285127 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.945844484 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.430819309 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.426386455 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.970973254 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.949840669 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.937773008 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.589019878 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.421049602 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.696288874 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.431612382 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.981621669 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.430053694 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.427039486 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.428312293 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.588503889 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.977888658 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.70318964 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.719515877 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.7207059 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.432218831 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.485998657 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.431622341 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.714882666 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.487780481 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.822568797 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.714696675 seconds)
  done (took 128.293319705 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.68186312 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.539249068 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.80126031 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.997845606 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.926029444 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.566623203 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.53446613 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.662844528 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.427372309 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.539103391 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.058662068 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.50897772 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.159025906 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.482874779 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.527578578 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.549279117 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.809090597 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.358435517 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.052642 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.041022097 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.442900857 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.527313238 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.93030508 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.611513177 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.435510913 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.981186977 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.339822159 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.933164436 seconds)
  done (took 53.721698951 seconds)
done (took 533.940626896 seconds)
SAVING RESULT...
DONE!
