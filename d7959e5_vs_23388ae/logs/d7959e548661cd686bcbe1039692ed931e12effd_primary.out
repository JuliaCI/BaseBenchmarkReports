cset: moving following pidspec: 23107
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.423278368 seconds)
loading group "string"... done (took 0.509407269 seconds)
loading group "linalg"... done (took 8.754731457 seconds)
loading group "parallel"... done (took 0.173044188 seconds)
loading group "find"... done (took 1.228918616 seconds)
loading group "tuple"... done (took 1.993691607 seconds)
loading group "dates"... done (took 1.453403569 seconds)
loading group "micro"... done (took 0.202348091 seconds)
loading group "io"... done (took 0.52987318 seconds)
loading group "scalar"... done (took 50.911753675 seconds)
loading group "sparse"... done (took 13.491019572 seconds)
loading group "broadcast"... done (took 1.244918274 seconds)
loading group "union"... done (took 9.160725973 seconds)
loading group "simd"... done (took 3.245230856 seconds)
loading group "random"... done (took 11.896275854 seconds)
loading group "problem"... done (took 2.166602187 seconds)
loading group "array"... done (took 24.332606228 seconds)
loading group "misc"... done (took 1.085040699 seconds)
loading group "sort"... done (took 3.650833856 seconds)
loading group "collection"... done (took 18.869226424 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.606062834 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131635673 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.203970395 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.346660551 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.231180387 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167278461 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143612914 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.242386693 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.463884094 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202091927 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140936253 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.508544905 seconds)
done (took 6.114719031 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.249576566 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.248817181 seconds)
    (2/2) benchmarking "String"...
    done (took 0.161744062 seconds)
  done (took 1.078430288 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077027696 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159365694 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110872599 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094965607 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093942267 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109008768 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093094984 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109225792 seconds)
  done (took 1.44380392 seconds)
done (took 3.522016827 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.500344759 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.849933671 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.506601073 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141184504 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.306562884 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.290504056 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.270659513 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.198968495 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091635832 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088974261 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171903843 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.398492235 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.381548656 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.945272419 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093302587 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.0957906 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.129291371 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.767320776 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.07926667 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.120936912 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.483301421 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.178267623 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.099198379 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.120209568 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186846804 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132322043 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159954108 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100976026 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.674957787 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.130878187 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.176085338 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097938837 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158218524 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.184266086 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193973678 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109791968 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679144508 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198461782 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.087913004 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10020931 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675421219 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116529583 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.180561396 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102650011 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088950865 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181333212 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.090390528 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079330349 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109298129 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086319477 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163997835 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.452999797 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104530688 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.17065676 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093814987 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.70301374 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096904191 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274202206 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126308651 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094352561 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090052123 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088136541 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.162328116 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092842525 seconds)
  done (took 19.816197041 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.149942142 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.164969182 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07976727 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157263752 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125795448 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.082582932 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103868128 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079806278 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126652905 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181301834 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141954005 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152969465 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091983783 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091948022 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128277229 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248830621 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111224755 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124146359 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091559706 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091085721 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139731382 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097834335 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107867284 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092873286 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170699673 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205020125 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112241797 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125668833 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093325598 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097617752 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144005538 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148266667 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094390477 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091230345 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.191060924 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108531576 seconds)
  done (took 5.233319167 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.200135636 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121653561 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.203865265 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.158152325 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145718215 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165834726 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124463769 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.267148442 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.201431199 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177894767 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115694582 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.121124525 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080307956 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081407385 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.184266066 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080296903 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.465266552 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148328512 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.16111571 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.126032629 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102160718 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083162665 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.379423326 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086035652 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078455709 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09896884 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064563778 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.190115886 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083561428 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.125357886 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085298935 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082887848 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133817843 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193946362 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.138872795 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123640106 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083753514 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095223727 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221515605 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08855455 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084809547 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094231989 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116949142 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131034081 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115735986 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.094635338 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086140839 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.21962359 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080247863 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115616102 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.056655666 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194991303 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.12177458 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077712597 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290565173 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11905395 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080288808 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077768873 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.813987772 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113666725 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081610467 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099235845 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085304461 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08536273 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098044696 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.4264925 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082844073 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.201857799 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083411424 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155492574 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.080838223 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097063172 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08722067 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085855606 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118827024 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080209566 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07901712 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079206273 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097066443 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081893208 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.12681004 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087244198 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080655087 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159970432 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09899044 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099231792 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127210811 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083161804 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093673141 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112830286 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09603873 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082236781 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.163383411 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084191169 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112164992 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.101015005 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080355654 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143860239 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081373184 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.251030585 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084256134 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122518808 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100804386 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126640664 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101008578 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079787379 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10104979 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079416573 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080182297 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160792071 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081358797 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080476823 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081370653 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110606665 seconds)
  done (took 27.719340518 seconds)
done (took 53.43763378 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.43090661 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079018583 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078492774 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.096418053 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079591367 seconds)
  done (took 1.513739573 seconds)
done (took 2.235902572 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.316089464 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.186080754 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102549676 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.18559842 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08517237 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19161646 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.180219035 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09463308 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.203445823 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083892173 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182129341 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083863458 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10304102 seconds)
  done (took 2.746607385 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104953274 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113547638 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121405879 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105432246 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086793611 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103130979 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117426428 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110154782 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09996913 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110897341 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084847089 seconds)
  done (took 1.876686721 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103091537 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106981362 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098928267 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116124566 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084715124 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097674335 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113883819 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108586426 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09942139 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110975317 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084835527 seconds)
  done (took 1.848099585 seconds)
done (took 7.189871213 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.073111054 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.224458621 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.164888694 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.207630695 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343470762 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.234185057 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.559821989 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.150854082 seconds)
  done (took 13.827300875 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.121565983 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092625057 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.111201261 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.13494178 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08958255 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.109533998 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092055057 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.0926805 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.108060103 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094315054 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090341277 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.108213301 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091857246 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09640165 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.109119791 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09458418 seconds)
  done (took 2.425781956 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.144703548 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140646067 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098322963 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097860745 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.111153441 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098304377 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100976979 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.114626004 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093662074 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095200899 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.116920599 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.097443536 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097225318 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.108307292 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097866991 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116843081 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.109500535 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098586005 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115391672 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.11426825 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099254037 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097163759 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114001203 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.09910666 seconds)
  done (took 3.387844522 seconds)
done (took 20.36474083 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.153068012 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102782513 seconds)
  done (took 0.983898743 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.143288652 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154404785 seconds)
  done (took 1.032273042 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114991652 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093476957 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137124079 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102715602 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092051023 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107734633 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116881549 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.10687266 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091347412 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091964004 seconds)
  done (took 1.791833604 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.098732163 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098951795 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124424954 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.136531999 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11474076 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094045037 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095909162 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.093878097 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11327365 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091190383 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096247108 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124487344 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096675059 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12488611 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095500724 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097725893 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.1161392 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096710862 seconds)
  done (took 2.64932311 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.09484473 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095426016 seconds)
  done (took 0.929501557 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097252744 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093680968 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092264324 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108065695 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091743489 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089611753 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105821228 seconds)
  done (took 1.416124222 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.489837811 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.257270211 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.353502855 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107811922 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14523247 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.348233872 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.144926335 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104441262 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.220581351 seconds)
  done (took 2.944026808 seconds)
done (took 12.481323429 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095279085 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.223517503 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.626825921 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11328712 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089676607 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158945813 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.279821474 seconds)
done (took 2.332359308 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340780441 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.139849317 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080571834 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092426277 seconds)
  done (took 1.392029473 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08654373 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102257802 seconds)
  done (took 0.933285786 seconds)
done (took 3.070544823 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093978522 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090055606 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.08893778 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.105059163 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.088141453 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087949798 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.136428104 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088842916 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088269994 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.106618239 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.089224046 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089092101 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08765437 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105802741 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088674611 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088383247 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105220352 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088884882 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088273749 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087518383 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.104029524 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088227135 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088139641 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.103903084 seconds)
  done (took 3.054328588 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110309228 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093256843 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108416633 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092921054 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094869806 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108881757 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093260159 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09133617 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109522618 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09137316 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093400134 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.10890456 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.090776986 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093184748 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105884944 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094452715 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093070772 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08963815 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107454798 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094244456 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092208893 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107314051 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093614582 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093329688 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109764725 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093992528 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089896877 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106545315 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093870364 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093923651 seconds)
  done (took 3.68417612 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.101547037 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088126896 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088668778 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.112799405 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086778891 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089659303 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102166714 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.087719911 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090662858 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088417949 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108210354 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089000448 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086321952 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105909155 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090844987 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09207014 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114084463 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087239865 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087191756 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089936696 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108944575 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086701552 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08948233 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.106160779 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089254607 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088798259 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08971916 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106032106 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091645688 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088600766 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.107695935 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092685583 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091030769 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.115826143 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093066651 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089663669 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.110513509 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088674461 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091358192 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085564631 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.102671083 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089374111 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087520023 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.111524782 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09016713 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090410916 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087195473 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.106898343 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091006787 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092347364 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.102670061 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.088185057 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092055911 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090056776 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.108904279 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086685952 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090800404 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.102763231 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.090768459 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08913309 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.102415614 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088311853 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094629499 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089766004 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.120706198 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096644537 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086460639 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.106755052 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091099746 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095889171 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.108850785 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100273501 seconds)
  done (took 7.622026072 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.10546732 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099495004 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090048572 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107368477 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090698515 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089621902 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11153314 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090902979 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091284816 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112724479 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09106366 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090857917 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106761721 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092051734 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090604531 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091191471 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112882335 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0908065 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090592939 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107222717 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091068533 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094601692 seconds)
  done (took 2.894187484 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.239658438 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09896682 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14060258 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120701268 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107324278 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11949388 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094456564 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097019588 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109940558 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101339546 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099352459 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111893441 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108183406 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115184063 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100925921 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100252822 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11033262 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101130404 seconds)
  done (took 2.834516725 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.1070529 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095050628 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127717304 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092147097 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09311964 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09161463 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113950324 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110664481 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109005059 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092604351 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098355668 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111159414 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093221162 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092912955 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090789639 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108538809 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092949814 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092773694 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115380405 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098505685 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097195664 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115946744 seconds)
  done (took 2.999128338 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109039829 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092345627 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126047786 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097199515 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092077066 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106924384 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09719023 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092236178 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.11450796 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09233877 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09216258 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09075615 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.12270146 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093004026 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.0955983 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10991814 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092640584 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091194902 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108884456 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092526444 seconds)
  done (took 2.768704537 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.171039544 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124014014 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10848474 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115511296 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124482385 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108991133 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115891354 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126632313 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107923869 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134529799 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10963855 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108999252 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133609456 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113250143 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123555083 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116763994 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116096064 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132911048 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10818538 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123408684 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120935643 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107317818 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133147706 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108035083 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123814901 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108227364 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109413315 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12928682 seconds)
  done (took 4.126064049 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095521975 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092404639 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090166635 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106642632 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091390218 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09041845 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08955137 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108112764 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092226417 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089943173 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107669338 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091480228 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091030875 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089754745 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107489768 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091958477 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09037604 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.10871549 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090920039 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090564828 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090450276 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108218881 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091170785 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090257225 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107639611 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091438479 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091518398 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091622124 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107486693 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091169898 seconds)
  done (took 3.630711504 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.108415262 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101097737 seconds)
  done (took 0.975125859 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100929046 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105118703 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090131256 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109488142 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097437444 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091312577 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117004885 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098413627 seconds)
  done (took 1.574857288 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.143065562 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.158388529 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096375879 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102504962 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.157921256 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.14899588 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132309808 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095405334 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107481284 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086042755 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.15253927 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083423619 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092442306 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106875868 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092485003 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097800693 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.110407227 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101792068 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100587622 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.092785706 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114949818 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097455158 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112368632 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103323229 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086879916 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11155559 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096604707 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103017168 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105697488 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093174393 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090049748 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090639745 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.113572686 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096771112 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093198274 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.159357057 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098717281 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106712949 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093035943 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095879417 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.142442387 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09258651 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092451293 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10736956 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095536409 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095750381 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.113567279 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093454015 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084899012 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.104782827 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094102645 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087296212 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.108858324 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094052643 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093312286 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116149152 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094103491 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089264086 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105109552 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089573026 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09111865 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087632801 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114250695 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095009618 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109901803 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.0946324 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091555947 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.091515616 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.111180474 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094296784 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091203728 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124587902 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094190385 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09521329 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114656989 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092863184 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088623849 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115183482 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091529155 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091931862 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.114236991 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121150627 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093080938 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10588044 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089453646 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097232848 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.112400231 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095454463 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085924614 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118746157 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094617167 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092284145 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102892403 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090906622 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088435697 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.113160187 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086457077 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093211832 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090890007 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.116894957 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097347319 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090867802 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112093549 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097391223 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097977424 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110223674 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.134158393 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107310819 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088504877 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094296204 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114203549 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086183476 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09229283 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090403291 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10796306 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.0887783 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.095484941 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110111021 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094311454 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.095432072 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112249812 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09514554 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093784899 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.110257375 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089317434 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.094990607 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117669556 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094780455 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093244056 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.109996243 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093593979 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092765918 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.113754083 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091211682 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097079262 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107113941 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093305609 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093230213 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096738468 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111144001 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088632752 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090895782 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.11134267 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092816363 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.093943713 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111807703 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089510706 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08441604 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111266314 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088854451 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.092491821 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117818783 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089909035 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095118225 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106772292 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100519974 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089658387 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.11567674 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096154542 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098124143 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115835461 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086486881 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090063229 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.093437838 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112830727 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090111234 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093096802 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.110714952 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099901547 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085772705 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.114080308 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085604876 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090117456 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.116671824 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097380414 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097555726 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087431308 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149534676 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1043589 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1145872 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092938655 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092575705 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.115281486 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.095725062 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096669119 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096484794 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.11585055 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091249985 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09034623 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116052139 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.091033592 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09394044 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108714971 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094627459 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084591988 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.112582802 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086029303 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096903766 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112240986 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098270048 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096444217 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111901607 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093313951 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101374299 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105987758 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097247514 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085850144 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096474884 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.121785413 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099475734 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096880972 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112480896 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09054158 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093520288 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120376325 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09609621 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094093692 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.113369497 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087363046 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086696323 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.115815149 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096036927 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088832491 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091594749 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114023142 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095349044 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090351692 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104445244 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097107972 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095720874 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.107632045 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095100212 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088917996 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109544162 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101293798 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085533568 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107595304 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095799011 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.09684408 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.111354132 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093370824 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095038204 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.117293003 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096529584 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095621465 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107844113 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101217108 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090938607 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092783742 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.107854406 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097081699 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086108306 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.111743459 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094287651 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089252283 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107301229 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09772151 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098253158 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.116110574 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092441063 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097364473 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.116587407 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.098908008 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091652348 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.116887835 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089682229 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087985331 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106980617 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087257211 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095974127 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088903201 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.116844195 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092893263 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091112524 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.114781588 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097252236 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090630952 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.116864318 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104117522 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087127346 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.105610727 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091722439 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101318508 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109298019 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091521539 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094127273 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113752965 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098758056 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095610735 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.107716125 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094584476 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099290072 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.106803543 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.099671752 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099320768 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.115753731 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.09015148 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.097741184 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090489863 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116497586 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087685981 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092066996 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112464316 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094255025 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090045663 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.110732602 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090366579 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086419079 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108350593 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.099962074 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092284996 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.116634577 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.102693046 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091395228 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.107814236 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089363407 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.09953573 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.110626322 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.099907781 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094366508 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.105557672 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087949379 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.098480445 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093409478 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.117768655 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090414406 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096359296 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118795358 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097694783 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094005079 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.120730858 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103294738 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.098395664 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119291905 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089044981 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091094349 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115883938 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095204633 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09594855 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.113698827 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088570602 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096717276 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099040316 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11451044 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094287424 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08628094 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.113151308 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100350594 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.096420714 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.115518959 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096664517 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096129511 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106635198 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098536213 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099869929 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.112536378 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100540411 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09389507 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.097387525 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.109704761 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100238697 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095734091 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.107306193 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088557521 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091415274 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.118967274 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088751217 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099343015 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.116071246 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092511082 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092218419 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.116574071 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09118856 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096783839 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098498188 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.111625759 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103835063 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09496331 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.111063886 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098889402 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.098675301 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106897904 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093353253 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0938453 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119797223 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093716504 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098893459 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113538005 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101352118 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096279238 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.117659982 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100882944 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099713745 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088385385 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.120079726 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097831559 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096139379 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.110939531 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09420683 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088526351 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112095107 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102459774 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091250594 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122145479 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101106355 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092671878 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110114766 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10253114 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093995026 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120765579 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092989421 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096281482 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.106553982 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098427099 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093932203 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.118918459 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093079494 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089730485 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098194522 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.118178035 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100238833 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096485565 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.119571235 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089223898 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087216873 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.115642932 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092212183 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104840672 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116791909 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094717956 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092383543 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.115826216 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096462697 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101045661 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089550119 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.110725313 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096117032 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095420529 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.112242556 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090577493 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097782991 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113570961 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097049273 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092384609 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.108588884 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094336664 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100623246 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112047999 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090983978 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091381036 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120103886 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094694396 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091812109 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107612373 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101736551 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097633118 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119528798 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092474894 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09520872 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.111066698 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09825704 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101638509 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.110853036 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095706421 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093188467 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09989252 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119064322 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.090774735 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091873193 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124740669 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100306269 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095298888 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.116764417 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095356655 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101660083 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122058195 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098526503 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088341835 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.10806728 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.096029119 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089028291 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.116291203 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102056523 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093775158 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110784935 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100388881 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099655726 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096736239 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.11753451 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089997295 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100944968 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.111910154 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099162546 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089567838 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10791114 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099362054 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099866374 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112635793 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096759399 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096441847 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097169667 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.109976982 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093088387 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097821083 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118520894 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10071438 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094030091 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.112020349 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098334203 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104779536 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.114904709 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094785908 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103974744 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.120706139 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096332102 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094490216 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11767849 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102994929 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097342 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.120074158 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094258989 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094414281 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.119762643 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103131297 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105146513 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113692286 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0909043 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099832298 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092211758 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108774362 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099995074 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101474556 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.121533377 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095924191 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091888429 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123460002 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101582262 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095129738 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.112881185 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094180148 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099649123 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113283947 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100382076 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092163789 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.120973187 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102544582 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100897872 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122447116 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090051602 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1002844 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115897051 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104783215 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096271749 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089164124 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109971483 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09936814 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101519732 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.120463723 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100610455 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099053609 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.118265488 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098631569 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095884274 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.111228266 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103691046 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101953726 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09636999 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117699876 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095505034 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096328832 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.116862098 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102447321 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101047113 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116253294 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105701475 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10178341 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.113034543 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094412503 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095788656 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.117316542 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098051586 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099810678 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.110598476 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091264573 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1018991 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101629997 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115089746 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104371498 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101421231 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114346541 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098616883 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103030627 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.121401086 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097886942 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095497191 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.11815333 seconds)
  done (took 61.334719989 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148525906 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103030193 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116815096 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098897139 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114357776 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118738268 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098096271 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099311658 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118317716 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107804044 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097796946 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116884663 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113494232 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136516822 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116549555 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107061034 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117736573 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099870877 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097800294 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116914414 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113551081 seconds)
  done (took 3.173440698 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11931388 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111437773 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128692184 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112196772 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104658226 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128014183 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108676438 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128957195 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113983067 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105690239 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131547399 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108812162 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.124812037 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107238275 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105780681 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127693989 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112690878 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124247318 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.110550248 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10909213 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125755537 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111054702 seconds)
  done (took 3.378314435 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.13364052 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101533784 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095713343 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117270558 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103365666 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097915971 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119684346 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099489262 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106510936 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.111517706 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090191618 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094392376 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095582136 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117705538 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093389517 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097984277 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.124544313 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101847795 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102601424 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.116988387 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090927269 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098757877 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098665938 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108539141 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103982636 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102022268 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.1177981 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101565426 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089033604 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100533987 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118156583 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09327627 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089589843 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.10778634 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090158926 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101026066 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.12002625 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.099717005 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099883098 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088858161 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.119283957 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102534138 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088944761 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.117318011 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099415201 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09294354 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100413843 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.11740331 seconds)
  done (took 5.800371614 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.131632149 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162206697 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10272285 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135185153 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134359962 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108964649 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.121803777 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136138813 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.1001906 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123421419 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11411565 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.132645576 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104655394 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106333384 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.121436075 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105189399 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105143225 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.120077214 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108343548 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103170966 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.125581479 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.104230705 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110627913 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131589022 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.343469749 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100973221 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121408377 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105346958 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.130167632 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10841177 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105340622 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125575029 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.113332072 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101157301 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.121325158 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103659592 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11231651 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.12372771 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104364732 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100125866 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123674037 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105445038 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102404122 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132978308 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102448857 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.122808314 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104077811 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099124537 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.129569388 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104445257 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.10782993 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.132314628 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106768058 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102168444 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126329132 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.112408808 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102778336 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.121821403 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104805642 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.129951534 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101508232 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107438836 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.131649811 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104267656 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107555712 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.131613015 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104009386 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104452834 seconds)
  done (took 8.970364281 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.13706752 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106007143 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133366668 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113788352 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105285313 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12585554 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106004978 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.126203458 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105887406 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110803899 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124937861 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.194436626 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123397219 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111305446 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103912019 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127308705 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105145994 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104926278 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125448379 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105407303 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125417277 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114108442 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104335086 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13296484 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116152299 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101487775 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125960909 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105317096 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133790395 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106605599 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116879703 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.12598376 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106605608 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132160087 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.118669074 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106360498 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12206546 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107360506 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105014249 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127126847 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104412217 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113496668 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127363795 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103144215 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104588416 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127238017 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113436593 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.136189299 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110507526 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11032725 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.125526918 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115198836 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126006678 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107013485 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113802938 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140315683 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114181776 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133505691 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107239475 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11424351 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135079527 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.119486082 seconds)
  done (took 8.165593857 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105004327 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099190434 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098442633 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118482211 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099322508 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098264421 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097989068 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119914575 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099324472 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098226764 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120059885 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099384822 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098642495 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118568254 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099680495 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099544808 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098602329 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118690458 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099898933 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099700675 seconds)
  done (took 2.92251919 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.113684745 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11644974 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120668168 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108126591 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102460567 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127767599 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102475149 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100890845 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121646057 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10338965 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109172863 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129327887 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102750757 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106513077 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130950612 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108361635 seconds)
  done (took 2.642281411 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.124624223 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117582348 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.184692702 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103516175 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123800281 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108592026 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100725674 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125083526 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100671127 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107095101 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.124944601 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.104767727 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102364475 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102025894 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123048683 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105663552 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099968633 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125843229 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102510028 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.183191934 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106342259 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102901057 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124509389 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106342769 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103597874 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.12679756 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108540061 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101108771 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124582977 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105602976 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103468121 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.12899498 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101949778 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105715831 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.123113857 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.10366571 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102599563 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101505346 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125884204 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102327127 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10346731 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124074682 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102489729 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104347114 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121852601 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104022187 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10103308 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.127428077 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105102994 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103759458 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.123922955 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109495751 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105430285 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.129800724 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109902091 seconds)
  done (took 7.094572823 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117002849 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102734591 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132610472 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101260714 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102963847 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103276975 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124763169 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105168004 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103685614 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121879641 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104641891 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102948546 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124663228 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104986881 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103174847 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123963367 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100070239 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102364546 seconds)
  done (took 2.824191885 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112080342 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101087015 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106298307 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12329108 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103144558 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101235238 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122559299 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101262355 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100301889 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.122491171 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103254116 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101644064 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099843268 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123370433 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102551656 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101553825 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123350075 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102184168 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101370273 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121865123 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103451985 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101179457 seconds)
  done (took 3.224414716 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.116916266 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.181126341 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108301991 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.189301752 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099294835 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097180588 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129491299 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098964203 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112946054 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119474439 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09817942 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096804444 seconds)
  done (took 2.292868545 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132530194 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136841783 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123880328 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102644532 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110370727 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128977515 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107523474 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106526545 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135787332 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118290919 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127511788 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115501289 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112096975 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136068591 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110145787 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131074149 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10803013 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106250652 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12348481 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122094314 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10618926 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136316614 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106947226 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128316394 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10803534 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113478827 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1360575 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118501168 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127735547 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115781601 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111042333 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126934371 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115533731 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138849327 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104286302 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113390034 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126936564 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122771437 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109976014 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135913203 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10251934 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131232082 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115461336 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110792268 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135559857 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107457711 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132750027 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107238948 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107057966 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14814775 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11139695 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135328721 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11258468 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114581302 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135438494 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128280508 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139610161 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116513207 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131391145 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118272943 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115415953 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132808588 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116086303 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139541513 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112711421 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113988225 seconds)
  done (took 8.818703659 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145206674 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104320064 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130085516 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119675311 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136316852 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109263042 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109603912 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128448263 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109446133 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104544096 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169292142 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108277358 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135603172 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117371909 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107970728 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129599428 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108299969 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114424478 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126414121 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127098551 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128228704 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116688921 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115082256 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137974424 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11946942 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132873319 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108749105 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107430938 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128972509 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108107968 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133734893 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10906313 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115436506 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124405205 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117542133 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108253531 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129107172 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113627805 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107847817 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133563358 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115817947 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142562307 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108364958 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108234747 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141119506 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107903267 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128227731 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106231136 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108361989 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125221969 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120049664 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119269911 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14211394 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116252138 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130023828 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109151515 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109034122 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130160859 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108156762 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110608223 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138572958 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108656451 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152314248 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10901527 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107852273 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138374761 seconds)
  done (took 8.831570492 seconds)
done (took 166.383997409 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.150778486 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.184997573 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.142435066 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177487685 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094598574 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12837061 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146969094 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.144363483 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092599387 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116905221 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09455385 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095618452 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182803091 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094674635 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093031452 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.116611388 seconds)
  done (took 2.901577932 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195690833 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.304164032 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107360643 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119854273 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099831733 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09755569 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117770676 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100695678 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098342092 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127661749 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099382891 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094256294 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126198296 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095116727 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098061622 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.118922286 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106605185 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097754058 seconds)
  done (took 3.060097811 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.124158753 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141548714 seconds)
  done (took 1.124053533 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132793569 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211903006 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279328437 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.16863213 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119104745 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138449531 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147186554 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133030286 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.186341765 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13392943 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11138134 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097459116 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146484385 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104372912 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.136688253 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09861657 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127495841 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134016398 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112861338 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10014553 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143363759 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102475306 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103128266 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135188585 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178928 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134471887 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102932503 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101266417 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123499013 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112015054 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.126343927 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116726191 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110720688 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177406062 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123816714 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.152019508 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.126927244 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.100517954 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113105028 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.120970278 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103307346 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102453573 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133523064 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098356091 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101803114 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.127709693 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103073 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.122538298 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.106950137 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106800183 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128412797 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106646849 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.171611362 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107113133 seconds)
  done (took 7.805142479 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.858414817 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139777757 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098797465 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.002798931 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149248089 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113657532 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.854371774 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145509133 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254256946 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.854949886 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11544645 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.134782832 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235282834 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255834208 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.279128278 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35744957 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.721688386 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113956504 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128262982 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161422551 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108484304 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148537792 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119894185 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.519466049 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100408643 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121329422 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108336979 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112688658 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174719176 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100881579 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12576576 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196970548 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.268593056 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203599898 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12244783 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0995549 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100066415 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186868014 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267220601 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214169401 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.195255916 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097026839 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.119418424 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110315397 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118874552 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119762141 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156739049 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190567498 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190815557 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103928902 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135625254 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110402591 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129781211 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.155010271 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120796234 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358204701 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361578965 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0987834 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130711277 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114673551 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263406945 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123469361 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231645115 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126306818 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210063603 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122267081 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.84181112 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161953675 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121807985 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107526654 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127948433 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106273491 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107340096 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.189711766 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.499390346 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114080691 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10342594 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122284714 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230683782 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101602164 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10095132 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.178709222 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100526046 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130077432 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114743939 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134831454 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167952363 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269937137 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133715696 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109612 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104957452 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135012879 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101178368 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233053698 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223799165 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.171701393 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230035761 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110503546 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179591676 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16054897 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131603597 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186949895 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108215202 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137573948 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110145043 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222162645 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.153678521 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103208758 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1058811 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130753748 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.136463022 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126742597 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110234265 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189297327 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553772449 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.161507224 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.118984481 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105599247 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110156369 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178781993 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106519356 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258182677 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133360012 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183815418 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108875551 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097456334 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130719915 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.158924843 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132691576 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10885514 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129404445 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110430899 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.278636924 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219768472 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113308876 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245608173 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.197368331 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107257695 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191301382 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129586367 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164803237 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13326271 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108752135 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100603711 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.850487554 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116504936 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108084082 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128624022 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184460696 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121821247 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104034139 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101386953 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118957526 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815386588 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10561363 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098748023 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102622957 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130816259 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107673032 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130568374 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107940084 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178431005 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242756243 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113060489 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130374065 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100978096 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.17834742 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101348161 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100410916 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124886873 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101853049 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108044957 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128785084 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103418138 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191084917 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.174156062 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22677932 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.633981402 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101467433 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12203288 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239347737 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101691611 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320801243 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130564149 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232346634 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183090992 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100378383 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357507319 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186169632 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184535194 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126588836 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.16813878 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.120980329 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110091302 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178323351 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101355547 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129700207 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.154460509 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138448519 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113669048 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.273199276 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12371621 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22834459 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.120512627 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.185954032 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103694811 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107913838 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320842196 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124119339 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118852817 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.178936419 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10649407 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124041755 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.674631718 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103317042 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112377784 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130878884 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233318041 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.182371731 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110210539 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110619953 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.136597253 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178736334 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207371837 seconds)
  done (took 47.574093628 seconds)
done (took 63.317710802 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.294745516 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.254498401 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.299440626 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.208580166 seconds)
  done (took 2.01235557 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.258327789 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.162187572 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.226513456 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097773224 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.235305543 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096974357 seconds)
  done (took 1.964721504 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.490817677 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.364669479 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.300925238 seconds)
  done (took 2.046970932 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.256466715 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237239426 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.329896956 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.407659614 seconds)
  done (took 2.23601341 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.260819579 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.125772944 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124083699 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.201171407 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.224637881 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.208403228 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128037171 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177482722 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127803014 seconds)
  done (took 2.515189519 seconds)
done (took 11.663879469 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.34079547 seconds)
    (2/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.337772184 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.227124724 seconds)
    (4/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.279766019 seconds)
    (5/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.307165841 seconds)
    (6/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.281642045 seconds)
    (7/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.243428177 seconds)
    (8/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.138211377 seconds)
    (9/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.257450545 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.192635069 seconds)
    (11/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.304476422 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.132553238 seconds)
    (13/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.280579439 seconds)
    (14/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.214462285 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.130452049 seconds)
    (16/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.153245995 seconds)
    (17/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.171106384 seconds)
    (18/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.187370178 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126948284 seconds)
    (20/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.315096338 seconds)
    (21/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108677117 seconds)
    (22/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073121455 seconds)
    (23/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.132272686 seconds)
    (24/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.161774212 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.135682275 seconds)
    (26/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.129656457 seconds)
    (27/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110627015 seconds)
    (28/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.210371152 seconds)
    (29/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.189094715 seconds)
    (30/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.192383731 seconds)
    (31/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106502342 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.122443696 seconds)
    (33/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.222543856 seconds)
    (34/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.169717045 seconds)
    (35/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.224073925 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.130181302 seconds)
    (37/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.126104198 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.135535273 seconds)
    (39/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.187321036 seconds)
    (40/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.07368727 seconds)
    (41/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.100357591 seconds)
    (42/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.159211634 seconds)
    (43/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.109769493 seconds)
    (44/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.280162269 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10059895 seconds)
    (46/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.284415275 seconds)
    (47/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.205929703 seconds)
    (48/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.187029038 seconds)
    (49/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.192484942 seconds)
    (50/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075381922 seconds)
    (51/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.132590828 seconds)
    (52/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.074307671 seconds)
    (53/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.133334079 seconds)
    (54/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.185618577 seconds)
    (55/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.141453925 seconds)
    (56/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.132800472 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.073983623 seconds)
    (58/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10544208 seconds)
    (59/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.122733781 seconds)
    (60/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110234949 seconds)
    (61/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.142800201 seconds)
    (62/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.180546144 seconds)
    (63/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.074445922 seconds)
    (64/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.138053132 seconds)
    (65/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.131076313 seconds)
    (66/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.09821165 seconds)
    (67/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.082307858 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.131501686 seconds)
    (69/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.083374439 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.127244494 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.139620864 seconds)
    (72/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.211117627 seconds)
    (73/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.142655872 seconds)
    (74/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.135148137 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.153050379 seconds)
    (76/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.140088951 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10126521 seconds)
    (78/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.140011653 seconds)
    (79/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.082176253 seconds)
    (80/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.165030373 seconds)
    (81/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.073208345 seconds)
    (82/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.098945992 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121224802 seconds)
    (84/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108759917 seconds)
    (85/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.194586588 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10542142 seconds)
    (87/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11070895 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.147023827 seconds)
    (89/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.074768391 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.130046032 seconds)
    (91/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.082830828 seconds)
    (92/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.211647457 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099362105 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.132904347 seconds)
    (95/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.169844795 seconds)
    (96/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.16626759 seconds)
    (97/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.132974876 seconds)
    (98/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.076453098 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126052214 seconds)
    (100/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076474896 seconds)
    (101/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.133230677 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102475277 seconds)
    (103/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.101703555 seconds)
    (104/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.107173653 seconds)
    (105/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075479348 seconds)
    (106/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.075124266 seconds)
    (107/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168673076 seconds)
    (108/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.098891605 seconds)
    (109/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.074969194 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.106155601 seconds)
    (111/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.08481308 seconds)
    (112/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.075239289 seconds)
    (113/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.09843558 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109095937 seconds)
    (115/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.07439963 seconds)
    (116/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076429517 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.125259216 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.113524786 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10214084 seconds)
    (120/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.075392422 seconds)
    (121/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.099707544 seconds)
    (122/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.136418718 seconds)
    (123/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.14007223 seconds)
    (124/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.074235608 seconds)
    (125/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.100071653 seconds)
    (126/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.083428135 seconds)
    (127/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.110816391 seconds)
    (128/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078000598 seconds)
    (129/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.13324214 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103396346 seconds)
    (131/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.099877695 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.124891277 seconds)
    (133/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.07518025 seconds)
    (134/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083874077 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103179923 seconds)
    (136/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.074099063 seconds)
    (137/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.133163694 seconds)
    (138/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100940783 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122000233 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148029067 seconds)
    (141/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.075594081 seconds)
    (142/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105429959 seconds)
    (143/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.083505687 seconds)
    (144/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.125986911 seconds)
    (145/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.083759668 seconds)
    (146/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.085509387 seconds)
    (147/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.106099098 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.136410181 seconds)
    (149/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.104406092 seconds)
    (150/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.171443305 seconds)
    (151/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.140703482 seconds)
    (152/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.076611311 seconds)
    (153/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111077219 seconds)
    (154/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.156835391 seconds)
    (155/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.157288804 seconds)
    (156/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076540752 seconds)
    (157/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.074812671 seconds)
    (158/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.073967052 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.126527226 seconds)
    (160/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.075260563 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102405506 seconds)
    (162/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.19486164 seconds)
    (163/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075285571 seconds)
    (164/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.077936331 seconds)
    (165/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.077071405 seconds)
    (166/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.074500458 seconds)
    (167/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.099301237 seconds)
    (168/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.082585929 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099620319 seconds)
    (170/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074899782 seconds)
    (171/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076192111 seconds)
    (172/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.134060865 seconds)
    (173/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099827982 seconds)
    (174/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122914774 seconds)
    (175/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.124176544 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104189505 seconds)
    (177/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.111849805 seconds)
    (178/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.098964552 seconds)
    (179/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.083090838 seconds)
    (180/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.082333055 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.101727347 seconds)
    (182/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074278902 seconds)
    (183/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.106151082 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121542225 seconds)
    (185/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.075437647 seconds)
    (186/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.08206809 seconds)
    (187/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.076359373 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.126690499 seconds)
    (189/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.074546258 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10257356 seconds)
    (191/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.125569276 seconds)
    (192/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.078271219 seconds)
  done (took 26.008526971 seconds)
done (took 26.909549296 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.210646423 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.125137398 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110223823 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108436179 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.19591783 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117851358 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.148715086 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110475313 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118728157 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132596005 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100182398 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12126825 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.131612229 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.177159263 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109966443 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126567245 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101104152 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119790331 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.14885662 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126092153 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.196308637 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103473113 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119209267 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125748693 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.17140176 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127258179 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.10908682 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109831488 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.14624583 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111368266 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110224263 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.125481925 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126230028 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.125301985 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124291619 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110661949 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101684483 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083657355 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.135002382 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111914825 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121424114 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.134057695 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11097858 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102641443 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135242577 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11057947 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102097725 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.136235452 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100549831 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111045367 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127481719 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126323706 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109035075 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.123564129 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101434643 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103518737 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.142977828 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103846584 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122610938 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100913441 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.126844879 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102866471 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111845701 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126094583 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110377364 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.10168503 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134054455 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114609981 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109397744 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127371659 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102389821 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109923574 seconds)
done (took 9.75375977 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.112262098 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146418215 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.195696786 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.206255765 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129830997 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140371798 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11696883 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124646993 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.137651239 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1207722 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137487124 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157602348 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.176716111 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.141060705 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115885462 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112125845 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.137281442 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110296377 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.203059689 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124627639 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151995059 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118095776 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12834675 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142157148 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106554206 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126461722 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132812383 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11375015 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105471169 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.147774643 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.12640223 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.127792128 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108974672 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124377758 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.145880925 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116849058 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116108855 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.137642672 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106677262 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106105351 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138140023 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122124486 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105811148 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.142270218 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114604862 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119588589 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137637446 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119467487 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106060941 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137017138 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107786174 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130016314 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142366039 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122739347 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116169339 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.142859163 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119915708 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117982418 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.134116886 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.117792692 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105188174 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.130294254 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.10656957 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.149667142 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111276451 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119974071 seconds)
  done (took 9.481014466 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130201703 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13449854 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141012431 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116819411 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109904575 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123668563 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.1004972 seconds)
  done (took 1.800330547 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.108772762 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182489857 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.206920434 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.20430919 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.175774955 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.214983812 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148303518 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102279746 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135433165 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136503467 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.180023432 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.232470968 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110176552 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143121689 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.207180148 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101488798 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.208700631 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102332627 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115364669 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207280895 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117364135 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.157072905 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.113937113 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101922631 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.201084016 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102448799 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.258981593 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143645304 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113418789 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114730975 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115482629 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203294056 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.203692228 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115443218 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109148569 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.2045173 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.202106716 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115911201 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.215947883 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105930822 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.201562519 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115519591 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116407987 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.141526655 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.115927661 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.192034598 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120473998 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.117555115 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.141850418 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18356011 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.138584254 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.178033436 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.139198489 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116570768 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112381547 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143998303 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123701453 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116189273 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.211105309 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118752244 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.204590457 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.205661685 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.176644074 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.206632173 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149595831 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.180789343 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.198623634 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11703842 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109612588 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.14336383 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.204277376 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116444934 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115760018 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.19477749 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119411127 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.205169709 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.205407003 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114451565 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113901464 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.129753634 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115932359 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102467135 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.196744561 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115615609 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113955111 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14553376 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115318075 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.14080073 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.10815438 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.123775413 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.140863603 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114234652 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120933288 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.140788695 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118914436 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.211992332 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113532162 seconds)
  done (took 15.483458961 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.111341509 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104222977 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107707033 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.12983964 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104127937 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103906818 seconds)
  done (took 1.622163603 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144064605 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11642926 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150128426 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118751788 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.184622456 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.185879888 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.212304492 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111394577 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.15866556 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126340691 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.209790741 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.187363341 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.212510523 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11990266 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.215399991 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117433518 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.216377848 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114229081 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151619308 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114811696 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116338707 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146981648 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11486807 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.202349894 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118239151 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.14313948 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11310846 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124757618 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149908834 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112090873 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119976389 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.1446689 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111920453 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110876565 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.216633359 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.107975982 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140203476 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120353331 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118464056 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144126402 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.214561275 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116034145 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123579828 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.144578999 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112699972 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109274961 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146573695 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11213867 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.217112817 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120042246 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119848938 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.143722727 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118354031 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.12015623 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.137025655 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111462473 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.144250355 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.192992904 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.144209579 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110449983 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116977079 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.143993515 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113161263 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120863417 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.145040839 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119902228 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108593255 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.143958922 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115567245 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118407073 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146032879 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118828736 seconds)
  done (took 11.079621784 seconds)
done (took 40.403783315 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.569161381 seconds)
  done (took 2.524173648 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.904271659 seconds)
  done (took 1.862031583 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.673320703 seconds)
  done (took 18.666766964 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.523867416 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.58673186 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.017795267 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150064129 seconds)
  done (took 3.241071744 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.056625798 seconds)
  done (took 2.033901638 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.317985295 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265973969 seconds)
  done (took 1.553141982 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.717402013 seconds)
  done (took 1.695362684 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.488242135 seconds)
  done (took 2.456107906 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.352919004 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178310839 seconds)
  done (took 1.512754868 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.603346265 seconds)
  done (took 1.587460488 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.224312933 seconds)
  done (took 21.207775208 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.251763552 seconds)
  done (took 1.236577896 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.293261927 seconds)
  done (took 1.280610673 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.561017468 seconds)
  done (took 4.548377445 seconds)
done (took 66.37381545 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.119538554 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115292871 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.13922324 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.115225786 seconds)
  done (took 1.464778771 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.126352354 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116999363 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.164337501 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117928586 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122022707 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116809205 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.14296571 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119010887 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115828155 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144591976 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117653551 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115879022 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144529481 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116662104 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113930304 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144078925 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121020027 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117260664 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.142936265 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118558292 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11737926 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144613834 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121697956 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119137276 seconds)
  done (took 4.030877402 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.118880274 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108282795 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109513261 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131308608 seconds)
  done (took 1.460864976 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.129855283 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128336572 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151080488 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125071404 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128083566 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153160931 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116814347 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114532735 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141840114 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125172934 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131594591 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155654855 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129056254 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117963033 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154450871 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112485304 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116443045 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153468113 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123602785 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.150139407 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119228158 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122131585 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.146580927 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.125781045 seconds)
  done (took 4.159037808 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.193917413 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128392387 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.172112842 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159646538 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175388102 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115625002 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.143266034 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147607405 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.123684664 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.144356675 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.120053589 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16014545 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147950925 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11917058 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116542885 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.147296833 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128267385 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121599588 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.187860786 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120849555 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.14968811 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128666792 seconds)
  done (took 4.147521404 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123215652 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108716307 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.127796835 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.108452996 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118931628 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.135731745 seconds)
  done (took 1.718969877 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110368539 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102426825 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10266449 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126961398 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10633489 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101498375 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.126476992 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.103335543 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101895625 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10266416 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127779213 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101758328 seconds)
  done (took 2.305108903 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.329622078 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107019304 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134448173 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110667937 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112817632 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105090147 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145605137 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106288154 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267646659 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102782208 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.145711663 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195261988 seconds)
  done (took 2.861951519 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202330096 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145572865 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311717872 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.361446414 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159302168 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184575205 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264645219 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188305891 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199967335 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137027529 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210309788 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158223009 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177759225 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182593661 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164123782 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.155389278 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19230979 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201600524 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166061092 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238338135 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153178725 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199052482 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215061984 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148752878 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135368913 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185710414 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117473585 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151311453 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163557065 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187207641 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193765664 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148599796 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137039306 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211760165 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250468871 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193384413 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268716942 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13044665 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.190465765 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.188435336 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256752088 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164877675 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185085304 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176997054 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127427402 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213212778 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149182167 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.20664029 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130655082 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169119873 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202250866 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175538648 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198609929 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134428381 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303692264 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134667912 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166603212 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161822934 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211016206 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223981024 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172963192 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.148816593 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199949342 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1887435 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234783847 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.164292814 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161556303 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121416523 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188703325 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230519763 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175591809 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184178177 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.22565393 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128710779 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194871088 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16811913 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178441876 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226018406 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168296137 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.143855592 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148067769 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129974072 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151316032 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.187492189 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145406752 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212661565 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155999408 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.337630992 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179669272 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179122859 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154997793 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184244378 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184093834 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146265253 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.09845626 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166587419 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160026878 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180082865 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125462852 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177266007 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138003763 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123062363 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174697111 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121049385 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190067493 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.130408984 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186947776 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166125559 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.154718486 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174871274 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171491293 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15875634 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190304896 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189569725 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15649573 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129860405 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240235289 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190597212 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135261066 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197927562 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194200494 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.172756656 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132582857 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187425584 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19005311 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169439173 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224449395 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135674025 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131902858 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.160445813 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167678182 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181984069 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150286259 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15292996 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.161004478 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214117446 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12368457 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164825673 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176291507 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158309021 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12213271 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16107824 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134130848 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.13994499 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.174235017 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135769804 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17711563 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162740853 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189861574 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151878688 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159096161 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166681918 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15565482 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.164804082 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174037741 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117164115 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197407205 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193200017 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154408388 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177170127 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.186914185 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207539753 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168137124 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153673021 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179051354 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15270132 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119098805 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184890822 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165577265 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184842716 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.18524418 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2061226 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188867526 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.157846103 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173373643 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189675873 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.182155822 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180396377 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141967832 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195377023 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163524963 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.144547002 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122108502 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125359861 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160690187 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128138952 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133258348 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19949442 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186991827 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204374171 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163873076 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134674919 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215491159 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122707384 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183917458 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.198309051 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136381758 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.212690351 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187622368 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203493926 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137516285 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187465371 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119640866 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151035613 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132328654 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184633931 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136347375 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132591536 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166903138 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1885997 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195356483 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171513672 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192228442 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190245219 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225370698 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118973938 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.157486742 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194668165 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191120195 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180822154 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132447445 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.182885429 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189095681 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168079985 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217270341 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166177938 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201916647 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217792797 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.1624889 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126522886 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174252556 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158115181 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163035538 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161811359 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171146069 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127913869 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17528466 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135911479 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136163554 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203596504 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167570759 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173846749 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.183434822 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164760585 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150980846 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138447551 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199215586 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143797295 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.1014988 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191790886 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220272171 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145403476 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179361884 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17013928 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156400656 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.313146568 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213332342 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198720402 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132975611 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134921835 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19490456 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158926378 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185354457 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209876752 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138038037 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230423585 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164469811 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.169290134 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129189776 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172842871 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148419414 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.160991855 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148030289 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.186928174 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141370671 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208377225 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134286458 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194228544 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171742302 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.171419198 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147023936 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164151134 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221778574 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192072433 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196128112 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.16342834 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191205761 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180910268 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120719044 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152445988 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130357962 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210877485 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126638774 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201805079 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.197960382 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182525183 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197463914 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185498026 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139777475 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124694534 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191891618 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146313381 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212404624 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158767773 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136154506 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213583652 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.124797269 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128878511 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185848364 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291571117 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145233713 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198154738 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104278271 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.286907285 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128539026 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129910333 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188734625 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166295941 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.159185819 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179137014 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197458274 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137879502 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187385606 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133811693 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204959993 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184384172 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189947145 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195918647 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141466969 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1850067 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156148701 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200666374 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142967983 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.173268651 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156484668 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219289688 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177825347 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.158040402 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166542198 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193166185 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16823083 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196768169 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135534736 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208511029 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12470538 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189880826 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136472917 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150617275 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1566333 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.200125903 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128481788 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200951857 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191608219 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130499733 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125070431 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171569075 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162611698 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165106096 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128510125 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207634348 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127130399 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204622506 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201954427 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154589625 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164697772 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171447502 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129193189 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134289292 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168179983 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12871811 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.175088062 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202710736 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127632154 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201699782 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188344473 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159039133 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181091265 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139465018 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.359412663 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126003858 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216776628 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147768834 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221411435 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146123519 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199811307 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166153725 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175697905 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15799678 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173592339 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.217309093 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188814059 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.163117958 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157322804 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139721862 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163480585 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.131614592 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148248568 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193340511 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137733154 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.162540265 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.163259291 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171378808 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142972198 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168320637 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197381367 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177915724 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207531487 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185245128 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132999858 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19980806 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198079227 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12596997 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.190006125 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167265108 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171321864 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148292845 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.130726607 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.164257745 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234190014 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124200742 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156237591 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198541383 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165227934 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196820604 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132213449 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204196307 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136964394 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201537345 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125685344 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.179443543 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170278358 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161215517 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127073407 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196004536 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156343448 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.190500729 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140931383 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174164619 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220420023 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121857074 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160223985 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265893012 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18202871 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221719254 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133632907 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133934527 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171575593 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155141093 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.190405456 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16690101 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.157091976 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128127547 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.170015287 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.154073463 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.164157197 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166756508 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194486894 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1567635 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210461254 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132751006 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28082259 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142009029 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192555567 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113909155 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.125537109 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165057282 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133838909 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137988432 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208589923 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239083192 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.159930393 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.17237987 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131867544 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.153493572 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128586221 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163282281 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17515308 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163847957 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172424019 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.100197971 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166549045 seconds)
  done (took 84.769772925 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166432795 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149998099 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166767752 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219727039 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191409705 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287577366 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227190725 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242012256 seconds)
  done (took 2.73231084 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.123274662 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.156209816 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139179615 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142597172 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.107868533 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.435563316 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.155758524 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.117778377 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.158227722 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148891775 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133540124 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.527008538 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114664518 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.141801509 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119251082 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13345875 seconds)
  done (took 3.926977607 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.998680972 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 1.031935026 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.769323617 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.293201302 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.248726335 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.200790329 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.739894495 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.188144988 seconds)
  done (took 12.549534636 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.149714916 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135245768 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.352054461 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.25067228 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.146759006 seconds)
  done (took 2.124382192 seconds)
done (took 129.229143599 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128145974 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121585164 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120883197 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151276597 seconds)
  done (took 1.597116125 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.176497788 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.087993357 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091004566 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116140266 seconds)
  done (took 1.560783646 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.430420487 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.08803603 seconds)
  done (took 1.63233774 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149745271 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135503676 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163499396 seconds)
  done (took 1.547369127 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.135147704 seconds)
  done (took 1.223077786 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.12504808 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.117465502 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.229708282 seconds)
  done (took 1.564917329 seconds)
done (took 10.223206422 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121866493 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.924692009 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.430450928 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130714865 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.70949071 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424246589 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.41926855 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171869477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17124861 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13608356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129922439 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688652153 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.435121924 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873252499 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.387594339 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.900436505 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.691728745 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110200468 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145652645 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110749365 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.39891663 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136423152 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110412605 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110057275 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.715988132 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.417706007 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107278159 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.913022036 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108268954 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11145807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425279591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109378919 seconds)
  done (took 20.857489698 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120736402 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.164249776 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143314395 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110663357 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111710584 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137020011 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120920517 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120994348 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200558733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107996583 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158378361 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108392673 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113018817 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136465965 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.133926297 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10842747 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.138904995 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111640658 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116277212 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137673654 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.129553138 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107279957 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137839377 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110969475 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108172805 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156780069 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109769004 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120119209 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136566475 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112637818 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113031265 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137041935 seconds)
  done (took 5.180481789 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161296326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17355533 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145164574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145539084 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184726643 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112006471 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221209924 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14706924 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200947854 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109837 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128808794 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136332254 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149247408 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110126542 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162952962 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108488789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111695488 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140219725 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118135611 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110360065 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158162755 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107848201 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.136304705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112508246 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110451079 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158279423 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111195283 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121761056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136470258 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113912542 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114459692 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.13714889 seconds)
  done (took 5.489126296 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128972051 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124718323 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130593219 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160454203 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118491866 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121593031 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.151688872 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.11817559 seconds)
  done (took 2.151658682 seconds)
done (took 34.77341237 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.140225297 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128722433 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128294692 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151440225 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.181533863 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145153135 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125965483 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114579839 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.151416171 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129843444 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108581445 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116946714 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156319006 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120108455 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.213147251 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124456121 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.217916101 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.185484758 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146344231 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12713357 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117288463 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.217154554 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121287336 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.14562576 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.183572936 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.11036687 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.207467214 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119500695 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.149612953 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111330326 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.213711208 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121314947 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117363305 seconds)
  done (took 5.938733141 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.20587058 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118992913 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.147813214 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118531185 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118325814 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146114376 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.202590971 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.1454885 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117009576 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117119463 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117041068 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.217669245 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122514239 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.14348839 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121234701 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.106634781 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.232070754 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120553971 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109264509 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.119213084 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114269414 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117080696 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.24473667 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.11315951 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117352564 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147064049 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122063921 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122828372 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.149197083 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.119371976 seconds)
  done (took 5.327070488 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128850028 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130479775 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.163114931 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184466153 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145864853 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.158228191 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136901219 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131198707 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.168625896 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111832571 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125063787 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.17508826 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127913199 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120066286 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14417332 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.12941747 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132106284 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141539942 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119780093 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128508543 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161820292 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127505121 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.132680318 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.147995728 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109943931 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118427406 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.149971425 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.12563753 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.118557117 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.154355697 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.114092034 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114033799 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.141401405 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.146286252 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.111650557 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.153594562 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.137418357 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122855185 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.152828673 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.14351676 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114254512 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.142346963 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137149062 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163628381 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.141983391 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.123931837 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121732244 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.155279451 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.110703325 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128892948 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.181763824 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.111831992 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13161269 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.139315737 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111125383 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119187307 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.14092769 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.115377937 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.125753478 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.14211609 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137359978 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.11828488 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14922027 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.114490185 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122815414 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.109966891 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.139973655 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115960673 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.136701959 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.148416719 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.148307747 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.110685351 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.152199781 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.124188111 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.121810546 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.15306845 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.111891646 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121420266 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.150042035 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118660048 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.123149063 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.141798977 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.11626434 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.128091137 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.159241372 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126372176 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124045811 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.151360147 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117621399 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114148776 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127410585 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.143942021 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.117645171 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.123774872 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.141489259 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.115617649 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124786312 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.153188009 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.110185119 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13614624 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.144319515 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111765254 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13656457 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.144239449 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118048745 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.121953188 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.181191855 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113730687 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123114411 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.154221287 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113144828 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119602647 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.114629634 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.142098897 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130668852 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.126265748 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.148349249 seconds)
  done (took 16.707248509 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.315186603 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.266846033 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209099736 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.299114415 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.155912731 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.20206681 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.295063401 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.299515771 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112227978 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178721156 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163037044 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.265272664 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.143931646 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142707343 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.298246163 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.351446476 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.172811988 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149331574 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.178194625 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126110991 seconds)
  done (took 5.444909704 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138168271 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146768449 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164983266 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.139887388 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.122413367 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158271844 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113168357 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134014622 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152904089 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123101873 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114163572 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.156546625 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125380624 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128165771 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157389683 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145037045 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119566496 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146743321 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134908412 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117670651 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.128624183 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.137228187 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12050017 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164424501 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132173448 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.150386686 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.113322168 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118445594 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11853034 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151184871 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117842859 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130799417 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.149099602 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.102742553 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123173732 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.155719165 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120529175 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116206878 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116223747 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.144982169 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127899964 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125445739 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.150075774 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097585481 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.130202988 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.10713842 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.156287059 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125011688 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105173405 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.161653504 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126230682 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127062445 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.148806806 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.134723094 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119923811 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.159222734 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124755956 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127422022 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.147225664 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112518633 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111439917 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.144308678 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122811087 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127243954 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124560677 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.162009995 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129212751 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.139744414 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118782255 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.116314824 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116873833 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.156557581 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.133063095 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.149686363 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121831343 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124361597 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120643412 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121203904 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.122706277 seconds)
  done (took 11.564122811 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143676776 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124198542 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.158576033 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.150060159 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125851427 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.147823371 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125037068 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132149545 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127286489 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160019501 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128225585 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125979706 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16324814 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123132073 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122241364 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.157722033 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126967896 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.179091548 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.132634907 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142379756 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.157366669 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119389973 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125328132 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.153103227 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141946502 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.12395114 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.169201756 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.127207017 seconds)
  done (took 5.055017823 seconds)
done (took 51.141993512 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.271893207 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.459449771 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.233305439 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.231083836 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.260328731 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.264482968 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.233454078 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.243912291 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.657401535 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.202714128 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.231574095 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.230582733 seconds)
done (took 28.652000402 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.289583986 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.778067829 seconds)
    (2/2) benchmarking "String"...
    done (took 1.541738131 seconds)
  done (took 4.442591921 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.220651208 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.221827188 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.468573375 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.221619561 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.220098975 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.220249803 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.224975727 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.2359528 seconds)
  done (took 15.931307567 seconds)
done (took 26.003373567 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.267051326 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.398496286 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.459479896 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.234870282 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.222304651 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.239851929 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.241020169 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.244056019 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.221403107 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.231665181 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.632017281 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.481300122 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.220892228 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.588647975 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.220894809 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.266458109 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.21994609 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.444416559 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.226755179 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.250643635 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.205274296 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.204209685 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.25051746 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.22014214 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.224192331 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.235405954 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.277824004 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.22201515 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.400468691 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.255794657 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.259435424 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.223475387 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.275560698 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.221833838 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.22806548 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.231198551 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.395453741 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.224740531 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.211009703 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.249498882 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.406520288 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.234477211 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.232050836 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.227680903 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.235667622 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.26658049 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.204556398 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.348702059 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.242866489 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.232047366 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.227829453 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.600448916 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.227658175 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.238468672 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.238056086 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.446446032 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.248105764 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.278527445 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.248560651 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.237583224 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.232152736 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.229254042 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.222076104 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.227688222 seconds)
  done (took 144.985677797 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.22920319 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.230210053 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.231643818 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.232686842 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.224399566 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.226616429 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.225081224 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.224002114 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.22981451 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.234330987 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.232731379 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.224476977 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.228299218 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.178336277 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.239227499 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.250178178 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.227382858 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.240124791 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.233365433 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.22528462 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.24100186 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.227075361 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.227797736 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.22708232 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.27041016 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.306157334 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.257855669 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.253843057 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.240788767 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.228432901 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.273077123 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.233682581 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.847074252 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.096744221 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.243054343 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.248401187 seconds)
  done (took 81.118817319 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.230527924 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.232579102 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.226807271 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.257972965 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.226817654 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.799119844 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.800782069 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.197867335 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.352346705 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.575590825 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.461459761 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.227744096 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323727539 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.240751068 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.227597125 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.23357806 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.247804017 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.258101058 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.224676581 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.230971456 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796573761 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.245724932 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.42949649 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.408140958 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.240593688 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.262952012 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.626599537 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.228404765 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.264540281 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.563085956 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.276647395 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.226939897 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.569095551 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.439150327 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.339564108 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.228803341 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.260314886 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.231123501 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.513962256 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.231204439 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.231277389 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.228672078 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.235341529 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.861549809 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.235045273 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.800479192 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.234221201 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.177926505 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.229739576 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.234516456 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.087861211 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.915780987 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.232622845 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.23030381 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.235661488 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.231250206 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.232287494 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.264214499 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.106659034 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.326579596 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.233078924 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.235877835 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.263367776 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.232147658 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.232977152 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.395429725 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.231011869 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.898453234 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.29450602 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.336908361 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.80201487 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.236169934 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327778518 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.349158823 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.232319162 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.231694395 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.231595703 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.232929705 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.343604496 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.229207832 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.915735224 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.403103861 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.243268567 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.582778218 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.329040641 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.230476844 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.598401517 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.235274274 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.23349057 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.932039401 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328471983 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.230300813 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.234243574 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.231661622 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.918856139 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.233351908 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80607445 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.469583398 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.23622838 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.709198129 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.235020683 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.091752833 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.789106458 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.896602154 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.233664755 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.350264239 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.408079304 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.251414993 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.233746857 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.584391867 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.23872284 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.295243401 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.234865116 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.6362615 seconds)
  done (took 376.572970406 seconds)
done (took 603.799245447 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.07274866 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.027124404 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.181687703 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.041216632 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.021937103 seconds)
  done (took 11.477360715 seconds)
done (took 12.610665416 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.427477423 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.424088611 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296111948 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.42509029 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263089994 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.441530625 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.4060207 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.249014046 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.343008405 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.312548477 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342583916 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.283690449 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.266697267 seconds)
  done (took 18.609686265 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.516661047 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.241679804 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.30538669 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.505995543 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.282103385 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524024085 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.591604199 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.246546961 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.381695255 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.281551286 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.262556865 seconds)
  done (took 18.274719177 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.52370074 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.244820039 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.302014117 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.504555264 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.280821898 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.522760816 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.553408846 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.245096796 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387576622 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260602645 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.259275546 seconds)
  done (took 18.221025547 seconds)
done (took 56.242962192 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.273364669 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.331079242 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.267866719 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.257183468 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.254027587 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.256141952 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.259098026 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.256210216 seconds)
  done (took 11.288702314 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.25102364 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.249872586 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.25670047 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.256163737 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.252501191 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.251693968 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.255328805 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.254904128 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.254975747 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.254506289 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.256027421 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.253622672 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.25494109 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.256986038 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.256118871 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.255868817 seconds)
  done (took 21.204198202 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.259731119 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.251341827 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.255135822 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.25681149 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.255596543 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.259290342 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.255172086 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.253125021 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.252862573 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.257669795 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.260225069 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.253895089 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.252787007 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.256466986 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.25599573 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.258113156 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.255211808 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.25107391 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.256434325 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.256263846 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.255994406 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.254612376 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.252222639 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.254248855 seconds)
  done (took 31.268896049 seconds)
done (took 64.897410854 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.252726014 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.24767369 seconds)
  done (took 5.633991351 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.313732446 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.313281272 seconds)
  done (took 3.763274258 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.254308645 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.257371246 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.256502937 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.254885222 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.253656438 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.254798423 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.255913547 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.257296965 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.255862491 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.256265883 seconds)
  done (took 13.694979479 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.258852113 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.256936151 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.256342401 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.2592843 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.256603651 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.253521755 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.260463357 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.257196644 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.258411465 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.258085651 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.256513185 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.256814606 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.257467768 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.256933205 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.258961241 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.256161184 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.256126073 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.255506584 seconds)
  done (took 23.767559534 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.273247165 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.277627578 seconds)
  done (took 3.686219285 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.388468017 seconds)
    (2/7) benchmarking "second"...
    done (took 1.302503035 seconds)
    (3/7) benchmarking "month"...
    done (took 1.361341333 seconds)
    (4/7) benchmarking "year"...
    done (took 1.353953016 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.303200472 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.279624959 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.300763003 seconds)
  done (took 10.425253144 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.262935967 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.459007888 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.589299059 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.852848293 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.257349659 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.263548903 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.198859804 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.262135084 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.268097203 seconds)
  done (took 14.552963165 seconds)
done (took 76.661809848 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.243287478 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.329252254 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.254470363 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.25720793 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.599877826 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.260435445 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.245306859 seconds)
done (took 16.328775018 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.2255083 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.239212494 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.226113658 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.25172089 seconds)
  done (took 10.077338509 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.245718512 seconds)
    (2/2) benchmarking "read"...
    done (took 1.57336053 seconds)
  done (took 4.961618003 seconds)
done (took 16.182989078 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259747329 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.262226948 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.261531283 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.260314954 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.260295527 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.261361989 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.259993391 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.263203711 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.261392938 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.259893168 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.262634571 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.257582741 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258068622 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263030895 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261497738 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.260450667 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26047989 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.263550024 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261686834 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262628993 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.26090854 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260209558 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.261653329 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.26263158 seconds)
  done (took 31.407624868 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.262582989 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.263053884 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.261638668 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.263375594 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.262274175 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.259732567 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.261919143 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.264909807 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.258306976 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.264163999 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261898595 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.260016682 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.260404374 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.258557238 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261751301 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.259700064 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.26605478 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260249527 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259512806 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.259132959 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.261720277 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264372647 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.26632599 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261090949 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.264350037 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260455863 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.260630148 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.263595446 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267835168 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.263492323 seconds)
  done (took 39.005885555 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.267943742 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.263227483 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.267729829 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.267342696 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.261088598 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.264301095 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.265711613 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.263823421 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.264731242 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.265729489 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.264573291 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.263339151 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.260494644 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.262865359 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.264739822 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.266154626 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.261455356 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.260575927 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.263756115 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.260670839 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.26253432 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.267901118 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.263739945 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.264381698 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.264250129 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.265219656 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.266587486 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.268505553 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.266626223 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.265646121 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.262965484 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.267179445 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.26625323 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.265525727 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.26587548 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.264748774 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.265939669 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.266222387 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.267560224 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.269418939 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.264201807 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.26446984 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.270573538 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.26809701 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.263001381 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.268913542 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.264833202 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.268094408 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.265820843 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.264650422 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.267057897 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.267762135 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.262041224 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.264084716 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.2631267 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.26528302 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.266771315 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.270740124 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.264289659 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.26707897 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.264930655 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.266375655 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.264465521 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.270332828 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.265703937 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.267407426 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.266608676 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.268453713 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.264562326 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.266762477 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.26673739 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.26864596 seconds)
  done (took 92.262368969 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.268720115 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.267819193 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.269870012 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.269685835 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26650103 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.269633992 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.265800872 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266816172 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268498116 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.269938454 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270162862 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.265241114 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266412582 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.267257739 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269395499 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.272048448 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.268726819 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266575538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.265131478 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268269201 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269764754 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.272045779 seconds)
  done (took 29.052025689 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268747414 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.27245997 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.272677616 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.269401308 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.272697067 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.272461232 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.269865258 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.269906479 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269861598 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2709522 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267882265 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269779936 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.270065222 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267626484 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266684446 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.27125145 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270049122 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.271716565 seconds)
  done (took 24.008460817 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.269710071 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.274281433 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.271814366 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.271879515 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.273261945 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.273975966 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267550488 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.269505869 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.27231736 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.269504882 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.271508975 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271335878 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.265404956 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270934953 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271678875 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.270625634 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.269169881 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27186365 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270543291 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270493642 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.270686778 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272288464 seconds)
  done (took 29.108018975 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272967662 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.274123955 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.272663016 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.271807213 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.26962001 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.268389381 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.269807224 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.269331638 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.272242859 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.272720941 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273275094 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.27396525 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.27379148 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277138643 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.271262295 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269846154 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268035008 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.270784181 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274370761 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.271610874 seconds)
  done (took 26.586130018 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273841262 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274209957 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.272154825 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271561817 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270342275 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.274930397 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273018036 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.27092217 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.272009542 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.272860354 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272692131 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.276855693 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271714867 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274357067 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271459742 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273811884 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274208989 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277841817 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.268237635 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273369475 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.2735299 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.274076598 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273962332 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276903585 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275279783 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274418613 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273142373 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278184225 seconds)
  done (took 36.809145696 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271944919 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.27675341 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.273310356 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.274394958 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.27298791 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.273525527 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.275091378 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.277755634 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.285203425 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.274843882 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.273359147 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.275127794 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.277340365 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.275129713 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278007964 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.274735701 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275992466 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.275360187 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276292055 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27659903 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.276678173 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278090925 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.281439331 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.276486 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278461934 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.278002098 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273132917 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280853514 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276712235 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.274949783 seconds)
  done (took 39.44270761 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.294273049 seconds)
    (2/2) benchmarking "in"...
    done (took 1.290695257 seconds)
  done (took 3.739157167 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.27314429 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275606288 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.277392525 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.280123507 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.280926213 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.276330418 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.277281376 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281633089 seconds)
  done (took 11.374814976 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.272208045 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.274506061 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.279067114 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.276421426 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.279345826 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.265901032 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279342109 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.283590358 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.271103144 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.269520479 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.269946831 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.270175441 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.272932492 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274143146 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.274034645 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277318327 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.279024894 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.28011383 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.280513686 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.279318261 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280948726 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270012083 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277752146 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.282043326 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.271463326 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.277273509 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.280942028 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.285963927 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274043659 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.275802482 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.27838698 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.279475567 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.28193962 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.279057138 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.274977992 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.281913826 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283828173 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280720066 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.279964185 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287626783 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.281682716 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.277551132 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.272491205 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.281447977 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276718523 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.287598838 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.276523788 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.281416068 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.277074643 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.274507709 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.282916086 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.275379374 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.281100738 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275226512 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.278576163 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.286700005 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.291240795 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.272465268 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.273026773 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.28099785 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.287294155 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.284247481 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276039357 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.285368808 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274815522 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.280620067 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284159092 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.289329709 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.281108162 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.282959916 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.284193286 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.29085758 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.285466808 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.285295868 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280828682 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.278526387 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.276128896 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.28695987 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.285529242 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.284512162 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.288322167 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283331851 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278177026 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281479455 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.275906628 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.288325739 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.28257503 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.284245339 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.276791393 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285870454 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.293120061 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.282882488 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.273447412 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.278096725 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.282033914 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.284063947 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.275751126 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.279522873 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.285189885 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.282326653 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.283245619 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277270946 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.281299811 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290134807 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288166874 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.287247316 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.292934868 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278891694 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.290767021 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.28816119 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285297621 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.277381331 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.281668205 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.289240316 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27724202 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.282289695 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.290508006 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.279124265 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.287675767 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.284705116 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.285953861 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.288465093 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.294822813 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.284372178 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.279160145 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.287863162 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.284111187 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.283154255 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.293707199 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.28299811 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.285348451 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.28571625 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.292090633 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.282013695 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.288524577 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280561671 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.288165981 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.286036431 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.286945155 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.280973314 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.289881355 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.28198576 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.284156123 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.291129188 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.29171849 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.285712754 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.293348881 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.288268266 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.281708588 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.286260242 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.294153379 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286630615 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.281836377 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.289337936 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.278412216 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.287010891 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.279146812 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.288447384 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287013155 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.287773324 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.287383888 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.279015713 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.282737879 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.288424847 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.283450387 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.285778641 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.288278655 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.285683184 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.287213773 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.278926202 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.292270974 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.279341911 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.278975664 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.287977485 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.288156011 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.285718877 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.286459785 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.293014618 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287687959 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.286374784 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.277869404 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.287266394 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.293116154 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.290117677 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.29947168 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287802896 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.287858333 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.282930939 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.283628 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.291256221 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.28306985 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.295831232 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.294615513 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.295808751 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.285928181 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.290979455 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.280781212 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.290259454 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.290572055 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.297691359 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.287379023 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286162745 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284687694 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.29364921 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.283608539 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.29549197 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.280311534 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.294267623 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.291415269 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.291110393 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289934619 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.283756292 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.287408431 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.292607048 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291152996 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291986757 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.284333016 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.295753343 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.280233267 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.282762957 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.296076908 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.293271208 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.292547757 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.295397264 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.290052119 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.293306645 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.292676824 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.289753303 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.293679746 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.293434929 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.294193793 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.295977598 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.293887349 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.283710054 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.299807693 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.294438279 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.284250124 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.29168058 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.29858055 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.290399934 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.281769754 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.29759672 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.296157551 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.293486158 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.29160031 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.284809488 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.29586341 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.293634084 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.301210126 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.289395739 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.29208002 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.291495116 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.296455985 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.290069661 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.29568224 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.294625367 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.293631169 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.301589269 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.294744646 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.286974824 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.29897946 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.290274849 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.291992411 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287655887 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.29769834 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.296340409 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.295662157 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.291938738 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.296297775 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.294045159 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.28763284 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.296502753 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.288297875 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.301047094 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.310547274 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296831124 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.30159126 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.300867879 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.300659842 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.297470517 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.291924126 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.293975268 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.294866443 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.294542974 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.292161118 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.294248786 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291096366 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.301748353 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29458618 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.298419153 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.298340067 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.298845291 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.289497033 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.29823814 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.292923126 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.296217457 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.289026534 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.29501947 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.291523902 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.298519155 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.297746189 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.292519395 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.30328013 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.302164069 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.295052415 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.292358144 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.293247421 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.291280312 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.291971854 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.301306689 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.288282939 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.300819189 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.292244558 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.289227462 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.290779832 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.302920977 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.306886202 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.290288768 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.300492961 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.29584072 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.28772083 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.294261056 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.297564433 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.300582587 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.310858812 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.288277182 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.302964623 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.299635087 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.295782392 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.297518044 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.298945775 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.297263685 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.295869447 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.301074413 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.306564302 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.291867324 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.299954493 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.306921908 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.297445432 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.29942425 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.291807952 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.298879051 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.306152937 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.293844407 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.295635402 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.295883532 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.301942804 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.300051076 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.297381765 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.303519222 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.300480527 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.3028218 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.304809192 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.302699525 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.30136945 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.302314277 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.311284329 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.30051844 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.314158747 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.2957828 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.30729231 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.29872505 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.294288363 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.297078448 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.296204514 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.301973549 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.293250709 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.299666213 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.301270824 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.299770267 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.299796604 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.306543248 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.289770289 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.298821864 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.308367175 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.292551238 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.304411151 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.301957252 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.292711925 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.298934473 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.299293564 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.291739631 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.297993565 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.297366066 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.305712013 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.293960181 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.304937023 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29527802 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.308089302 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.301731659 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.301460655 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.301385071 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.301548017 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.29876929 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.30527889 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.300735813 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.311126165 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.297230664 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299674744 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.29940031 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.305940379 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.311009016 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.296284816 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.308850305 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.302577934 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.294972404 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.297359374 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.308251512 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.294100595 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.303062824 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.292041821 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.299736296 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.29572044 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.302389428 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.304798826 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.31025383 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.291407347 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.294975367 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304505822 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.305512552 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.304351378 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.295146053 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.311327692 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.299166135 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.298387345 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.307949233 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.299156795 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.310203882 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.298062455 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.302074768 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.301086206 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.307062461 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.306291751 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.306089508 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.295261172 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.297448752 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.307846905 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.307871516 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.296666353 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.298958707 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.310630252 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.297742605 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.303340165 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.302427516 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.298905555 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.297887559 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.308257005 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.300569121 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.303694612 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.300321502 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.305087696 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.311653874 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.312707 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.3015988 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.310538301 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.317838318 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.310129984 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.29881218 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.302520263 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.303118826 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.305181046 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.309187217 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.30056312 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.311241855 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.311375431 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.306690614 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305941764 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.30765765 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.298122696 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.311792745 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.306997017 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.301743529 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.311336497 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.302663428 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.313167258 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.305926221 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.302610684 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.297811494 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.302485693 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.301310955 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.301681052 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.306916825 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.303495391 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.31001335 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.306084658 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.314575904 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.304823177 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.306021592 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.305558409 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.301238773 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.313533336 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.297054026 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.309459797 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.306373434 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.301383687 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.311789616 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.307615305 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.30198091 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.305470625 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.314939831 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.30907514 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.300327225 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.30580624 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.314854062 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.317490266 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.310230329 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.303250625 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.305357152 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.309157799 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.308265329 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.310451563 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.30171145 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.315696749 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.323732077 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.30034419 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.308259647 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.311078845 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.31923875 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.3106139 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.311696686 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.306950481 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.30865989 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.312685602 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.310988285 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.313860525 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.319170462 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.303234053 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.31248666 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.30402872 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.303126965 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.307212291 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.325543244 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.309601335 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.303744899 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.317001553 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.319849678 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.309457551 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321349053 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.318589928 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.309185147 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.317568879 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.301966731 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.313382853 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.304483295 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.316007927 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.31348619 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.310400615 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.31318717 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.302426492 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.309902689 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.3190665 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.319995073 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.310578492 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.304257 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.302689943 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.314508538 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.31048669 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.313186423 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.310878917 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.312435364 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.312366606 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.303529857 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.320682443 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.324027125 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.314158557 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.311851016 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.311724459 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.315360464 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.313160904 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.308708312 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.309764039 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.312119363 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.311609136 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.310898789 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.323172852 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.313523651 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.306515814 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.306240192 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.307240293 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.316945046 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.317070845 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.331972189 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.314203708 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.318493927 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.317655168 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.312453708 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.310069315 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.312951672 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.316638219 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.307618695 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.310389289 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.316284781 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.31206777 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.317079961 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.30796544 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.319019142 seconds)
  done (took 773.384979294 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.319002317 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318737191 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313480249 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.312226217 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.311347815 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317678561 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.318824566 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.315724004 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.313846741 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.313522878 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.314794241 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31821891 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.315299249 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.315780411 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.310932176 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.313881069 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.311604824 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.312379093 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.313996612 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.31834025 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.313755793 seconds)
  done (took 28.797658134 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.317647922 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.315090558 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.314829677 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.315894681 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.318148247 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.315809109 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.318413184 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319503987 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.319539548 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313520612 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.313550936 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314810251 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.314002085 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.316330085 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317635087 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316163305 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.313181488 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.318527054 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.319219357 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.316469321 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31864479 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.320579849 seconds)
  done (took 30.157436908 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.32068587 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.318332275 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.308883696 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.320226736 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.318952819 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.321466771 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.318686596 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.315418878 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.3205305 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.312257684 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.313688637 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.310965288 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.313506484 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.318318586 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.311962866 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.32615523 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.315776059 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.316096857 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.31622827 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.320236653 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.319736333 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.331702406 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.318234916 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.308413717 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.322980023 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.32440526 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.320946498 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.321571764 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.30626185 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.322818773 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.32285112 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.309995048 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.321120249 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.326028927 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.312806916 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.318372252 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.320194197 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.316294059 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.322908524 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.316209667 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.330710647 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.318978628 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.324576486 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.329138883 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.322308019 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.310998387 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.326506663 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.317646459 seconds)
  done (took 64.496317647 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.323391077 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.321308382 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.319334667 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.320355986 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.323452949 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.320821472 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.323147847 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.322800862 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.318038138 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.32178603 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.320182659 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.320470448 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.320579733 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.322609402 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.321138493 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.322775337 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.316638846 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.325936545 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.321068777 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.32361499 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.321608834 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.315470357 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.325874112 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.319842101 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.32157465 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.324283739 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.324470145 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.324312118 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.321171115 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.319816725 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.322768901 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.325633683 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.319564588 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.324712728 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.320776179 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.314913594 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.318703597 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.326704496 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.32509397 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.323063802 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.323433207 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.326760836 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.318775569 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.329043339 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.325471106 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.322212338 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.328339112 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.325471361 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.320957993 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.322536422 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.325631376 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.324765011 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.327882474 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.326570291 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.326997443 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.325126966 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.327128367 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.325439439 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.32513202 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.326516624 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.322250064 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.328985601 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.322382859 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.328029864 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.323331684 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.327000778 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.324520176 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.322216381 seconds)
  done (took 91.163839932 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.323843245 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.327986783 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.328307953 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.326634232 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.325563664 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.325879566 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.326971791 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.325739345 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.328209466 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.327227956 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.327848017 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.323982114 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.323904601 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.326542322 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.324534488 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.32491055 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.326140956 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.32660078 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.328765137 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.326358746 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.325637817 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.321280822 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.325479081 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.327271397 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.326122638 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.325177171 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.32258842 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.328260317 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.3273888 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.328773548 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.327780213 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.326495446 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.326935304 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.328877211 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.330087078 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.327179965 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.325536006 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.328234617 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.329471573 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.329198528 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.327334307 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.331658973 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.331324413 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.331092857 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.328842758 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.326135259 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.328785846 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.330919995 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.332548287 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.329769373 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.328899574 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.330106142 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.328758424 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.329292775 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.330090506 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.32604838 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330623536 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.32857846 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.330287927 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.327503893 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.330297887 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.332328782 seconds)
  done (took 83.507707602 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.330577342 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.331014111 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.329545288 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.333302504 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.329403949 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.330601599 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.32981486 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.330014023 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.333170275 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.330295213 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335081536 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.330349767 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330815232 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33125105 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.331107603 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331277688 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.33448156 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.328955149 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.330793054 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.330469989 seconds)
  done (took 27.819884184 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.330725136 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.328884457 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.330638065 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.330249876 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.331033848 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.329128555 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.330551731 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329533937 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332978196 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327962222 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.330869079 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.333327772 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330339068 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.332340182 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.3377097 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.335327749 seconds)
  done (took 22.505562024 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.332427603 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.332308746 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.332885938 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.333061825 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.330862424 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.330028772 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.332364078 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.331756054 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.326115246 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.330616463 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.332258334 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.334685849 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.33387911 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.327219309 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.328820562 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.335861801 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.333271978 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.332267381 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.334823442 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.329685104 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.333222719 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.336110018 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.335471685 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.334747338 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.334835944 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.333051821 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.332763421 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.335620963 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.335588459 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.336035493 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.336267445 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.335931114 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.332873488 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.33420709 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.33535389 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.335854743 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.335504342 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.335362387 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.336012375 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.335844742 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.333397702 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.334288113 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.336445508 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.334094446 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.329362743 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.333807245 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.336472285 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.333661718 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.338999483 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.332806763 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.333555265 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.336977062 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.335198164 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.333959579 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.334762698 seconds)
  done (took 74.557548453 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337304566 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.332955228 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.329578214 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.339072768 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.334244094 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.33593746 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.332683426 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.336171879 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.334475385 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.334359115 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.334020255 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.335704415 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.337125107 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.334289066 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.33669522 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.336265489 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.335778584 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.337188035 seconds)
  done (took 25.239709737 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.330852099 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.33077014 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.335432687 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.335626745 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.34022403 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.337893909 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334568632 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.338361677 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341491747 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.33416159 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334867389 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.335195124 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337427998 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.334666788 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.338854497 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338862844 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.338683004 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336455025 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.338897246 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.342193767 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.33599275 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.336070571 seconds)
  done (took 30.616981437 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.329320728 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.325447092 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.32482435 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.340797025 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.337875997 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.326293144 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.328212628 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.325078101 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.345314186 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.357186591 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.343065078 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.335305703 seconds)
  done (took 17.229482248 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337935401 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336219259 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.33810367 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338425549 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338754988 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341471694 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340152807 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341288283 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338522062 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339773263 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338769402 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334758017 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3347852 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335083562 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337039471 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336238781 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339294154 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336091926 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337510671 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338340116 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334743842 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33888725 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338624238 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341542637 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342217577 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337165518 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338733306 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338661727 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345374802 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338073119 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338766181 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336909384 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333954417 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341069698 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343442669 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338176481 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339939774 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339141035 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344187852 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336782594 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.34350091 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336647304 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342941641 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340333507 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338591343 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344201628 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342580932 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340779326 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338842402 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340891482 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341220523 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339933218 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343387139 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339921999 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344333213 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341094231 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341078758 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341963355 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342848562 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345872303 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341971129 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338149625 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341335819 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342567792 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344453416 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337700787 seconds)
  done (took 89.631173207 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343070094 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.344667131 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341923349 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340434677 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346107015 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343748367 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345422011 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342514113 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343858985 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343140145 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343452267 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346880347 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341253903 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345386212 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342473263 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341315337 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345558684 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341987098 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345245998 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343977164 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348303305 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34458066 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347028699 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347627487 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348553347 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345891663 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347968236 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344128974 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346396678 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34639251 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343298913 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347767018 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343944365 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.344470718 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346936915 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346343826 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344974771 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347352032 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346361968 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348203652 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347421884 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345567397 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346842068 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346997445 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348314626 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344282645 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345499408 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347940816 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347557806 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347536959 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345752269 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345197006 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342358073 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346219891 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347519094 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34815369 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347750796 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345879559 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345047843 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347436101 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34665604 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344218439 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348493999 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347413903 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348138844 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348457176 seconds)
  done (took 90.025560956 seconds)
done (took 1813.072444973 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.51609698 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.460096238 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.340015421 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.353214625 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.33667085 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.339197286 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.343608499 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.33663694 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.337231678 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.340771115 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.338864206 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.572168805 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.371110082 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.339168488 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.337178001 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.435020968 seconds)
  done (took 27.308889429 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.369192363 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.342142719 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.466532354 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.342825797 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.365745329 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.531567177 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.406008898 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.344690071 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.520531579 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.360834823 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.347242843 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.363171598 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.338826571 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.349067283 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.360941362 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.541267101 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.620218902 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.338192706 seconds)
  done (took 29.523743526 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.814732905 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.357839263 seconds)
  done (took 5.390582418 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.361084376 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.342395538 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.344862162 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.340172207 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.33396298 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.332578704 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.344017062 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.336176675 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.333304842 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.476629188 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.33987793 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.358593654 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.344875842 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.343009876 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.351513712 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.39030262 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.511418528 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.357942647 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.348528404 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.350025165 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.347032003 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.457698656 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.388821446 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.354967207 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.47797472 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.338587104 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.340442175 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.351602349 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.458524148 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.358045415 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.33895376 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.347599833 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.345787174 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.310891129 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.904144827 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.33306318 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.364982312 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.355096229 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.348537949 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.50370543 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.350110124 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.354819941 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.337191123 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.891627314 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.446274158 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.46771162 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.33687173 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.339255222 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.34229221 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.410899819 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.338203487 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.341133287 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.40440195 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.14344815 seconds)
  done (took 85.9917731 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.337205131 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.333713248 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.51926726 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.356579872 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.330749137 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.346599455 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.348023639 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.634949345 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.355621012 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.334834365 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.655337897 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.980597252 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.342868209 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.399205365 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.368001464 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.395155224 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.332001459 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.347932364 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.351949893 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.335282115 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.919862675 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.332533141 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.329052296 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.424644728 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.375847697 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.884202747 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.332069517 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.331383868 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.348439279 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.330585409 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.939594156 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.339429759 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.381672346 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.334810274 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.625606635 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.737473791 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696430092 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.338844549 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.375902708 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.331361005 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.374088848 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.873143786 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.717088812 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.343437184 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.333102431 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.874978901 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.334499698 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.348901715 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.334157389 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.609421154 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.332060323 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.336240812 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.334569125 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.33419673 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.336744621 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.405334855 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.421365087 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.890470188 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.334723993 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.332995476 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.348467316 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.335732508 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.337552365 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.340992415 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.332238914 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.723269852 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.60542773 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.342726339 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.728554604 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.933172466 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.34077142 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019194797 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.346453654 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.355886392 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.387274059 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.33468519 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.338897939 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.8894619 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.353740086 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.336976572 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.707314941 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.33951443 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.647004859 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.355242111 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.335238652 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.943893005 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.34991118 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.382975315 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.353791809 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.33853734 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.333424541 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.348648156 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.631405459 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.394082884 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.343420522 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.342891815 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.380086771 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.337025335 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.336953597 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.348294745 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002403965 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.354433399 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.338339155 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.357538761 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.340422859 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.335787118 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.34240927 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.339701272 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.633552344 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.339573207 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.344501727 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.345346269 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.348687495 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.3502057 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.437203664 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.343263388 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.66825575 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.342007873 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.344289058 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.346175361 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.338908339 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.367200601 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33365822 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.341776465 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.344590793 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.634456403 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.356841563 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.355898711 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.341379885 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.342748396 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.339062167 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.340197642 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.398336146 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.343358227 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.223448751 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.348219182 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.35132922 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.340890295 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.346671102 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.343037484 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.343693581 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.344612576 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.644593015 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.630905893 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.594070308 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.343847922 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.344027105 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.19990107 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.351186653 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.523393037 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.3594219 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.334246163 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.623067287 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.579506513 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.339027677 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.338135125 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.345375868 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.621172183 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.338289067 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.681653466 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.961850227 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.341660735 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.344697356 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.226766414 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.172002608 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.339649885 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.339273857 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.642332734 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.353955237 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.342181411 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.339794952 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.342273948 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.338711656 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.339383093 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.345005072 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.341496713 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.343992655 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.626633568 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.535550688 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.354221131 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.349190252 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.880070519 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.362315446 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.34231585 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.346410076 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.34097623 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.339070751 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.410001764 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.34009659 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.343417849 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.342604923 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.348912275 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.903210221 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.336402083 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.358627603 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.534121056 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125231815 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.341882499 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.341677985 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.342916226 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.396007841 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.909091584 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.389196279 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.654748368 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.348774483 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.381932882 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.342317067 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.361556784 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.913641067 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.339414653 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.356882567 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.090260999 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.339938991 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.8243202 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.341944728 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.340522446 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.015390495 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.34464832 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.346438065 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.342249954 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.342096223 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.658920457 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.347281712 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.372861282 seconds)
  done (took 501.189542436 seconds)
done (took 650.618388726 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.342993421 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.343519253 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.325858963 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.341866953 seconds)
  done (took 10.573219649 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.359804526 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.35169656 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.355140431 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.347071332 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.358890545 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.348921439 seconds)
  done (took 9.340174509 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.339050448 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.348273718 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.346996113 seconds)
  done (took 8.253192684 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.5585305 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.365944378 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.700321341 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.351335145 seconds)
  done (took 9.197590117 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.360564219 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.363957611 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.359950612 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.359800946 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.365862013 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.3601229 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.362165461 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.363598139 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.361521464 seconds)
  done (took 13.479338712 seconds)
done (took 52.061021101 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.324459443 seconds)
    (2/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.249015412 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.440012991 seconds)
    (4/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.458871673 seconds)
    (5/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.329246646 seconds)
    (6/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.32704259 seconds)
    (7/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.429033302 seconds)
    (8/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.37260513 seconds)
    (9/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.116709147 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.419025934 seconds)
    (11/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.61571849 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.378466283 seconds)
    (13/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.229241691 seconds)
    (14/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.027790144 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.591167353 seconds)
    (16/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.412466383 seconds)
    (17/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.346441334 seconds)
    (18/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.55114634 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.427726663 seconds)
    (20/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.197240415 seconds)
    (21/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.382193815 seconds)
    (22/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.325985819 seconds)
    (23/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.383643839 seconds)
    (24/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.413343395 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.346046094 seconds)
    (26/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.442387566 seconds)
    (27/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.378212337 seconds)
    (28/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.322349686 seconds)
    (29/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.20246937 seconds)
    (30/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.327666679 seconds)
    (31/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.444224938 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.427861695 seconds)
    (33/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.326148014 seconds)
    (34/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.567009328 seconds)
    (35/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.323215447 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.504876233 seconds)
    (37/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.423872567 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.418184253 seconds)
    (39/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.328957057 seconds)
    (40/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.155776623 seconds)
    (41/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.336263675 seconds)
    (42/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.450094173 seconds)
    (43/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.420302371 seconds)
    (44/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.324505625 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.480809528 seconds)
    (46/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.326760156 seconds)
    (47/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.426345511 seconds)
    (48/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.062856924 seconds)
    (49/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.589040993 seconds)
    (50/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.338730342 seconds)
    (51/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.492876484 seconds)
    (52/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.325330638 seconds)
    (53/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.394425051 seconds)
    (54/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.20173683 seconds)
    (55/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.530428922 seconds)
    (56/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.391638154 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.510555791 seconds)
    (58/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.459697217 seconds)
    (59/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.41224027 seconds)
    (60/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.37598271 seconds)
    (61/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.470766857 seconds)
    (62/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.325933176 seconds)
    (63/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.55054995 seconds)
    (64/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.513710128 seconds)
    (65/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.425507187 seconds)
    (66/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.358880246 seconds)
    (67/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.560856369 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.365049959 seconds)
    (69/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.319071848 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.355040323 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.439901459 seconds)
    (72/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.143396053 seconds)
    (73/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.420548203 seconds)
    (74/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.34905591 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.460312873 seconds)
    (76/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.560000143 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.513092959 seconds)
    (78/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.354318749 seconds)
    (79/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.556929687 seconds)
    (80/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.342584591 seconds)
    (81/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.496016773 seconds)
    (82/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.327304463 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.444108104 seconds)
    (84/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.391971789 seconds)
    (85/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.4943094 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.461314589 seconds)
    (87/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.415435801 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.436434384 seconds)
    (89/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.314222202 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.501604423 seconds)
    (91/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.321638161 seconds)
    (92/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.535487292 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.470370311 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.381185531 seconds)
    (95/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.08844398 seconds)
    (96/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.177826373 seconds)
    (97/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.384075256 seconds)
    (98/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.329047352 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.424087585 seconds)
    (100/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.331642359 seconds)
    (101/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.387058428 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.374702353 seconds)
    (103/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.350016614 seconds)
    (104/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.331206173 seconds)
    (105/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.330067154 seconds)
    (106/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.355801336 seconds)
    (107/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.484159291 seconds)
    (108/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.493847272 seconds)
    (109/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.197143171 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.459825726 seconds)
    (111/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.324564618 seconds)
    (112/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.342751194 seconds)
    (113/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.139019976 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.39477438 seconds)
    (115/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.537113097 seconds)
    (116/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.327484665 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.50277159 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.471671533 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.359831477 seconds)
    (120/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.323945506 seconds)
    (121/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.335938175 seconds)
    (122/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.451350007 seconds)
    (123/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.373440764 seconds)
    (124/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.542539822 seconds)
    (125/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.322270466 seconds)
    (126/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.615392922 seconds)
    (127/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.429200103 seconds)
    (128/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.364964151 seconds)
    (129/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.37911103 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.452773969 seconds)
    (131/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.434689106 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.469576897 seconds)
    (133/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.054718406 seconds)
    (134/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.589776257 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.473328931 seconds)
    (136/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.484678425 seconds)
    (137/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.383963964 seconds)
    (138/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.468002246 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.479043903 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.436921174 seconds)
    (141/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.043209837 seconds)
    (142/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.456327809 seconds)
    (143/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.323931791 seconds)
    (144/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.404001106 seconds)
    (145/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.700092285 seconds)
    (146/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.334232694 seconds)
    (147/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.534520877 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.416802313 seconds)
    (149/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.466319359 seconds)
    (150/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.187038833 seconds)
    (151/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.351510222 seconds)
    (152/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.341777188 seconds)
    (153/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.407355019 seconds)
    (154/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.378786937 seconds)
    (155/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.481160917 seconds)
    (156/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.323737464 seconds)
    (157/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.184695507 seconds)
    (158/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.469895511 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.455579773 seconds)
    (160/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.452740458 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.491294897 seconds)
    (162/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.086514057 seconds)
    (163/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.210597573 seconds)
    (164/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.422173538 seconds)
    (165/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.422378754 seconds)
    (166/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.529141075 seconds)
    (167/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.145694306 seconds)
    (168/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.469927454 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.411212144 seconds)
    (170/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.499499822 seconds)
    (171/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.329759619 seconds)
    (172/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.397908246 seconds)
    (173/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.468625608 seconds)
    (174/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.463143714 seconds)
    (175/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.539465158 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.602260786 seconds)
    (177/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.498981676 seconds)
    (178/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.327276245 seconds)
    (179/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.607872034 seconds)
    (180/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.470376919 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.508356709 seconds)
    (182/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.155245994 seconds)
    (183/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.470488177 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.555243074 seconds)
    (185/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.452603581 seconds)
    (186/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.518356677 seconds)
    (187/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.330424098 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.467795473 seconds)
    (189/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.500814511 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.597478562 seconds)
    (191/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.376840992 seconds)
    (192/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.379252436 seconds)
  done (took 343.332224971 seconds)
done (took 344.552777781 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378356221 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.441348789 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.357636366 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.363025637 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360367128 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.352533843 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.376406604 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.360127163 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.376130719 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.375036771 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.352432178 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.364378235 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.371433846 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.367187756 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.396344363 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.365974302 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.359725318 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.370269848 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.379725799 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.382177958 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365007062 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35924658 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.391766009 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.367370943 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366687179 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368030508 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.370234007 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.349683309 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.363672216 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.376363313 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.351674908 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.360922544 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.376747649 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.375833103 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3625772 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.36973822 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362917071 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.450296381 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.386703428 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.372650925 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.374458578 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.385225232 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.368023757 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.363897753 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.378210232 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.391531089 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374858126 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.382043226 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.352828803 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.366224082 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379500022 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.377617945 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.373242892 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.368559482 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.363574347 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.37556419 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.372950297 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384245784 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.372198796 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365600339 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.395792303 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38734548 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.373116431 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369640957 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.374340604 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.376810441 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.37157332 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.378711901 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.36824153 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365754446 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364129444 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.370895857 seconds)
done (took 108.093332901 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.490451206 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.357307456 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.523903911 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.371442471 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.533339187 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.495622795 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.371119468 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.368661325 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.378169167 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.172921548 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.376326033 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.375301739 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.365565445 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.376609671 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.487338468 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.376915868 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.372027126 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.066624066 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.369707725 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.498518364 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.366245935 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.367903312 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.369584502 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.175066297 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.361073717 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.358776993 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.504692947 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.372993456 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.076209469 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.359821678 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.360376005 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.067734281 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.501583421 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.391657668 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.383797081 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.378830804 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.537969196 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.377461685 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.492815265 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.496190692 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.520402883 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.414337293 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.362712763 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.370885873 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.376593096 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.380369788 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.3711014 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.401556755 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.369919208 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.379060607 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.074785316 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.390533442 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.373095948 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.376863903 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.376576356 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.4041672 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.375278016 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.378205864 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.503290775 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.376029752 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.497060176 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.180434048 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.176414274 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.377538209 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.363587429 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.376396079 seconds)
  done (took 110.804966028 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.438654275 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.446111256 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.478052873 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.368275625 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.416023777 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.476632104 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.373394789 seconds)
  done (took 11.230935631 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.378253887 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.375513484 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.413460241 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415103854 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.380466653 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.539228852 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374944704 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.376983793 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.374370506 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.418452562 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.380622018 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.382746382 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.386679661 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.365463653 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.416821653 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.382687116 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.486229068 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.370350395 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.380964601 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.522486561 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377139167 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.388669155 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.417635228 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.380864184 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.383594853 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.378993193 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.153473166 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379902228 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.382865912 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.379024261 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.381797957 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.442511821 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.384754663 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.37042941 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380633985 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.487496562 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.38159189 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.381504587 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.379459082 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.377518823 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.383037383 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.382760945 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.386196961 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.38427913 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.379487002 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.39714986 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.379513499 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.383355898 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.381476941 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.378289821 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.417823832 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.381478915 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.37800091 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.385130946 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.425450955 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.391283308 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.384526196 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.379131137 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.380791863 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.381264876 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.524586418 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.419723617 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.383818658 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.420493635 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378391342 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.380968763 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.385271591 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.382416856 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.460657367 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.379295841 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.418776991 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.376863735 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.555263453 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.396870118 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379770421 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.377688115 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.377229895 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.380249304 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.374153543 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.37916671 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.38414263 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.373279099 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.378869983 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382946318 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.38333675 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.528905731 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.483692954 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.37895471 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.389550506 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.383081896 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.38454163 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.428233066 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.380044109 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.3838102 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.424593313 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.492200849 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.428445536 seconds)
  done (took 141.809055137 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.385116615 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.385516517 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.378071127 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.405532686 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.377201268 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.376134854 seconds)
  done (took 9.549237358 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.376249852 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.389594102 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.385898155 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.385293089 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.383338225 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.386588774 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.386509506 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37583317 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.387778723 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.387791829 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.391248714 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.387724787 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.388060839 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.385869982 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.387222032 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.384300812 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.389536282 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383825501 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.386232713 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381825916 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.375329797 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.388607407 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.384632147 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.377897434 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.39271565 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.385942751 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.400940483 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.38875798 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.382204956 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.385901706 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.389302378 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.392038993 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.381727493 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.380680572 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.388364136 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.377039265 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387946429 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.386461613 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.38706255 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.386207927 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.390604344 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.385696112 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.386818597 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.387091945 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.380905041 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.383202243 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.389824269 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.401486174 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.390212738 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.39140583 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.388084295 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.38732519 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.388178635 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.390016828 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.382433686 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382930603 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.391676721 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.386847499 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.385615662 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.384892266 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.389768992 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.389357037 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.382811209 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.393838376 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.387040814 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.392961773 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.383207196 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.390738688 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390910925 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.392130548 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.390926948 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.389723363 seconds)
  done (took 102.105822885 seconds)
done (took 376.726083105 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.715866449 seconds)
  done (took 3.960061798 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.458449938 seconds)
  done (took 3.706190529 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.67678972 seconds)
  done (took 22.93001429 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.435383372 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.431704717 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.376912028 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.377286536 seconds)
  done (took 10.867818983 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.791400168 seconds)
  done (took 4.036960878 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.385213581 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.390627909 seconds)
  done (took 6.029270471 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.596395662 seconds)
  done (took 3.843647944 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.683631753 seconds)
  done (took 3.939505562 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.407047357 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.404817257 seconds)
  done (took 6.064613233 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.356490004 seconds)
  done (took 3.603763256 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.545067309 seconds)
  done (took 21.794192472 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.396777999 seconds)
  done (took 3.64602205 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.426301443 seconds)
  done (took 3.676272154 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.969250531 seconds)
  done (took 6.211646812 seconds)
done (took 105.557125401 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.376421879 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.372465948 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.373492518 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.372730233 seconds)
  done (took 10.74129813 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.454243434 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.452454667 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.463711158 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.447124198 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.451032853 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.456529716 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.432515139 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.417487683 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.444218493 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.441327081 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.459782756 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.448068188 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.455632224 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.417254374 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.439090939 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.458692451 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.447414804 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.465896317 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.415717859 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.448103554 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.390897354 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.448845401 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.442719142 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.392662533 seconds)
  done (took 35.8399492 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.877002337 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.452299756 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.539219511 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.436445073 seconds)
  done (took 7.554729922 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.500651156 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.500992532 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.512845564 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.552694387 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.59951987 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.520643555 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.420218671 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.416966914 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.39975985 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.49692986 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.585945641 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.499416726 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.713863356 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.395399795 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.7093781 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.39086024 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.397971623 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.499625829 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.552039102 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.579764181 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.395467874 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.496589002 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.504027691 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.499396864 seconds)
  done (took 37.389950803 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.404612418 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.406256412 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.398897996 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.408240156 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.393517921 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.393566127 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.396086891 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.400678588 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.396481634 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.395436054 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.393866426 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.408820572 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.395530368 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.395656233 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.402157617 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.397259301 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.397764181 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.40339601 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.409569646 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.396798861 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.397605479 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.40635238 seconds)
  done (took 32.048662665 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.380846208 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.382384904 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.736283809 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.637961329 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.3799895 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.386584905 seconds)
  done (took 14.154514148 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.455261239 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.592364655 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.385353187 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.738614904 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.823460158 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.386993442 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.38624729 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.634215269 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.928932416 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.917572232 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.44784806 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.453641484 seconds)
  done (took 20.403189361 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.398430587 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.38352046 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.385850197 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.398660173 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.442062374 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.391984645 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.399445724 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.38306179 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.444978199 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.448628772 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.388125513 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.444152172 seconds)
  done (took 22.162881835 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47079087 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393381389 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393463846 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413552694 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392668963 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391911613 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.423183692 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.121395711 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.401389147 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668677469 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40872748 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47537714 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.639078499 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405371225 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398027238 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.364871921 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621051159 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875495856 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392867593 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394165837 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428632972 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405098116 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399261048 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603511404 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39714218 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394446735 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.657227726 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391564265 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673470056 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646284461 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.64833694 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402026438 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671607085 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045243571 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501903233 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.597719046 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393012673 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414214152 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.370148249 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.397705364 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409980898 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399596962 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.651637364 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401909265 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395490075 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399469279 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136135152 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.400810229 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.396629962 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396633091 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644335779 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481210303 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.403734603 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395355739 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467980517 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398852317 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.401926974 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519719809 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040187714 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394990374 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41479638 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.398340605 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395499591 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400054488 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056254038 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.401610115 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.403582397 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405332201 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401065786 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406639142 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422691935 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399568692 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.414837387 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394970204 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16821 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409326316 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39957025 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929249622 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407719616 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.400296402 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626418879 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396806266 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39907798 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.398858174 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396566167 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124052709 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407474699 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.37179435 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434643087 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.135746273 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.601113658 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424701817 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427794264 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.616842389 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.369026694 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399739998 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.406834956 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397515241 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420307186 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.138733272 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403491974 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.401165695 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648437056 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.612194953 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401512242 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.371627217 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883821312 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401734747 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.424521289 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411373518 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600519534 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.015138256 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662821437 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403276315 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434341648 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403010657 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188458305 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400468607 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.406165297 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411324959 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676060191 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.216721864 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406522696 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477680433 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408646741 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405855848 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410278464 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403673474 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402890007 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.586763419 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422345648 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.655155546 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.408012366 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40538006 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.40099009 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398392529 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.415676104 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.621328898 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411722823 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680381097 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401030657 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399643816 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397205918 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.617342585 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.413260736 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.41303555 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.743388286 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413614446 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412612353 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655975745 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437240705 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515468287 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433170934 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.416015369 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652623934 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.409893227 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.408578399 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409100567 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408880959 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403770741 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.410099897 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410648952 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021423432 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382931229 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409722903 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404997742 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.421283483 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473378407 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414672115 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611437324 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.406676986 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410153802 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.417794362 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.414219374 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630165809 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659704068 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.406861268 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582348162 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.884297982 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.018287993 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424180496 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.403062493 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.408864093 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.408034259 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406430083 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410372627 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406574138 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.609919505 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667781011 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420336787 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.029950982 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413837503 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414003689 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.414210554 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660318981 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.416915183 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408956768 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.414685195 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41073492 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415589721 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.662109105 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628933363 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.419980037 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407931874 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.92425821 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413139158 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408554906 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407795685 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43020159 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414877618 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254892553 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741755254 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407910619 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665727263 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41601433 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.428835573 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.40744682 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406786948 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407123444 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.417869658 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414678924 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.61507054 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.407669187 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427305606 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045115082 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186842211 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975091337 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407906538 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.408368615 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407530009 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150003568 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407062797 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410687651 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658137299 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124300875 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405388281 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886576067 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.421387869 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174244109 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664546604 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641187218 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410249813 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.413934472 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665887294 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625389578 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437545002 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414986235 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410285749 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.374914931 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953506203 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414619405 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590704498 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139051586 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40489208 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40851462 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.420623593 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.417090221 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810561673 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410899538 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410299391 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419433124 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419024869 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259405035 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413492199 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412063805 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063713124 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420889749 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.897191777 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412750009 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617698668 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.667516918 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.644450765 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.412382578 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.441364305 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.655319614 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664454546 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414852537 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416905655 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974601546 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.269821502 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.417609077 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411865268 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20359208 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413472578 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697216963 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.416426296 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.411856137 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420725896 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414608672 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41341365 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.409245438 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419804972 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390550146 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894088672 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.429948868 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408186111 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415525863 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417824025 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.66020597 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.429350316 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.030593227 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642225528 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401143324 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464064928 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.420317279 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421461907 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.384216236 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414211986 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415960066 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411162974 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.639982287 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.436074414 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.385186742 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.437441783 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.629838691 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416488079 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.421276439 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635776408 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.418464902 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.437482389 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217243405 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452570386 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42701587 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416299629 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406192266 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45627463 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49235703 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623818144 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.675751898 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.676502575 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813114354 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427515986 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414609239 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.431686835 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498450546 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419609888 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.421291542 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.419859327 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039586801 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208804899 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.046032894 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677290635 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421088621 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428404287 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42011067 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656816473 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420527399 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694773873 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420355072 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.410519181 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44091605 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426641772 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425692573 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628449606 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692147655 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41343275 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416339835 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421231584 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.4177367 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680143665 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.631953082 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904468445 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954610683 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415847212 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417244264 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.162206043 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690562074 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418123028 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420345412 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421169954 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.427829071 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.435382794 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.428793159 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433704434 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641729722 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671435482 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083007613 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.675569581 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.601000128 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.422275217 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419853827 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.668114768 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269770265 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.624451156 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05249962 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.151382231 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675028108 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497360415 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627240403 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.423021864 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657462578 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.427835331 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422279122 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419678587 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422358038 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.421923994 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.674289112 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046178009 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668393538 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.426521074 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.430536441 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447159201 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.630086722 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6416196 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160578037 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634025197 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681422516 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.428670861 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415997582 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053026818 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678281058 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419761494 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.425304833 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637578029 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421084717 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458950569 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.299794109 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.422530383 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963195858 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.630106501 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441944667 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422991504 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.152761194 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050459585 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.421496939 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912206664 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421397847 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424258603 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699730094 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.43070665 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427847661 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706843173 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.428866443 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422836717 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633289285 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.045980593 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192872346 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.435120957 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440148405 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.422819556 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427866499 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437624426 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422589013 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427646954 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.824288413 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421462435 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421245829 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43164044 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.433652508 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436018942 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.424898641 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42205624 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.426803484 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.417079443 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.411241563 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428274954 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546813303 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979147451 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423608873 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.040209733 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.761225669 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.675264541 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.4263263 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.401327493 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.430602513 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424243116 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424963691 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420093053 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416406854 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989423641 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.428900566 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.687678686 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.431470329 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.633552466 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639399805 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.437851013 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632999788 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434586095 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443213347 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.398844872 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424721056 seconds)
  done (took 998.868198999 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.435570695 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.465677383 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.467205838 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.483227444 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.449180286 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.525920235 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.495931756 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.503669516 seconds)
  done (took 21.113313771 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.427312539 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.423017705 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.417251122 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.422221812 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.421898326 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.904810712 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.425309682 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.424669033 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.43824273 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.427714916 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.417206985 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.056514853 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.429354791 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.429080556 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.435395064 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.428274597 seconds)
  done (took 33.222231459 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.201248259 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.480417124 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.11759462 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.420769439 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.452199563 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.433663266 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.598033316 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.444762651 seconds)
  done (took 26.43405611 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.436702185 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.43524065 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.434264763 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.436070117 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.432586672 seconds)
  done (took 8.460481831 seconds)
done (took 1269.644703772 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.432428054 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.432543328 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.437310325 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.436432591 seconds)
  done (took 7.024846467 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.401012431 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.395518941 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.398533706 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.415951756 seconds)
  done (took 9.897657794 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.128398527 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.960252767 seconds)
  done (took 5.374801235 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.986822723 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.983478615 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.973543637 seconds)
  done (took 7.229339473 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.71471372 seconds)
  done (took 3.004192224 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.422137432 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.430108513 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.173320871 seconds)
  done (took 8.313109027 seconds)
done (took 42.127770016 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.41985065 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.198532899 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.593034264 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.434113717 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.625863352 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.597824435 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.673303943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.423711921 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.41924764 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.426757356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.437753708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.585832544 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.663895346 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.19037122 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.66099512 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.188751337 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.587650287 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.429197914 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.421326514 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.445918037 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.669332436 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.423989217 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.428708658 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.416143836 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.589066984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.573211253 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.425818047 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.186258789 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.436924943 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.417138481 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.581829609 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.42911333 seconds)
  done (took 84.289199865 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.433978627 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.421549336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.437460618 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.419001985 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.421370931 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.44065789 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.418101212 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.423529207 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.435246417 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.420627205 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.421601112 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.429900635 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.420263073 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.424947658 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.424169853 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.42026155 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.424974472 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.422976174 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.435438581 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.425792388 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.426750036 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.421587171 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.422230202 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.420129097 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.434129874 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.420079648 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.439388015 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.419316761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.428540065 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.431074241 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.426895805 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.444304594 seconds)
  done (took 78.946987972 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.43644307 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.425159615 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.436989668 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.433407823 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.418587657 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.437735433 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.42446587 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.423349033 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.431134376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423761533 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.423390403 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.420555997 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.42308167 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.421780779 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.425984577 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.427276538 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.422054203 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.426678378 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.435067402 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.424110196 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.423848033 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.425490908 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.434592119 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.428827475 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.426583182 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.428363196 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.42383908 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.428733987 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.419837408 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.42235411 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.452610701 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.442459993 seconds)
  done (took 78.987879336 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.666165584 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.445096365 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.445321219 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.437265528 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.442903921 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.443437715 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.432295056 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.675601544 seconds)
  done (took 15.284107651 seconds)
done (took 258.796987535 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.439036289 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.936508802 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.471286777 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.447441705 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.454579648 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.46674699 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.664730908 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.461727939 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.669183393 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.454389092 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.448954629 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.449143472 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.254467704 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.58946628 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.264739617 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.378208708 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.331851301 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.439139535 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.006761258 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.725645248 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.463607082 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.437586983 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.255865936 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.346976381 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.419629244 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.518961211 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.538507887 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.670828708 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.606350911 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.515458298 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.947545581 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.443827769 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.462746285 seconds)
  done (took 66.27650496 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.438983717 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.445019369 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.449707956 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.447097825 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.449783368 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.4497543 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.436067808 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.445603428 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.446687256 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.447310253 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.446871751 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.448117659 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.446242742 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.448283896 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.446186008 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.422696151 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.435251692 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.447124329 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.436835808 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.423319708 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.446626565 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.444535358 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.447066596 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.451908841 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.450206861 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.445883299 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.450997771 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.448252429 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.446352445 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.44886319 seconds)
  done (took 44.636632621 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.448320806 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.024165461 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.193547271 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.450109273 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.440550801 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.446184507 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.73564055 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.447721734 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.441652449 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.442772264 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.925360123 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.45280529 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.475611121 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.198086508 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.445674749 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.450619406 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.448435879 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.442026628 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.035764499 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.451266762 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.734726149 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.455317829 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.736170011 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.453977918 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.443528705 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.442888161 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.447228021 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.256318991 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.457576883 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.929732819 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.234585523 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.733743408 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.182058036 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.238243694 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.232439558 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.453957452 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.453682745 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.931570132 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.441884054 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.443355777 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.734551852 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.443025323 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.205656278 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.147571554 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.453899798 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.453324839 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.276920143 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.926359383 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.690803531 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.453239283 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.235065729 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.449971045 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.454616423 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.449547359 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.690387119 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.447602031 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.445679211 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.30767033 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.446746772 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.740985882 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.455351005 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.446352956 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.03837185 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.447237534 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.033534794 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.448624014 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.455003393 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.446863605 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.210065605 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.442850536 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.159381726 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.455296899 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.455867603 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.931985636 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.034012035 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.332847241 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.444127437 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.043645359 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.219101428 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.748125032 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.451626809 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.234251202 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.751052901 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.452852511 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.456177732 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.456602499 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.451372934 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.521706017 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.736549346 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.078119994 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.147414874 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.327171811 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.742242833 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.45547334 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.445706145 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.32210837 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.451906066 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.454507657 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.203211043 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.164417222 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.459465407 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.454413203 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.142476967 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.466508387 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.745300802 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.454006324 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.24650354 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.452568588 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.518893215 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.453200965 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.451301292 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.453866888 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.741330022 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.453538297 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.458886217 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.136270218 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.967253629 seconds)
  done (took 201.463915186 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.457678735 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.438846353 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.445287326 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.454973699 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.441503259 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.450205965 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.442403173 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.440916979 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.447675387 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.443197558 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.443383821 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.456013253 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.44875419 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.442842671 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.444276551 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.440144279 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.44276899 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.446085507 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.437754911 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.445796509 seconds)
  done (took 46.215674423 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.462263741 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.031309793 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.987404396 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.460335313 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.459668815 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.447827936 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.509383984 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.454510589 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.459104777 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.758619342 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.625721139 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.463358696 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.457396775 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.459563757 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.98859873 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.434275261 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.757145749 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.01554611 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.457483325 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.020966319 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.430673598 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.457660724 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.446828245 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.018263316 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.76494663 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.739427861 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.508603654 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.017994132 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.458943152 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.458039202 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.022041305 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.458434424 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.452539223 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.010047174 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.454588227 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.474344283 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.46116875 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.511869691 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.504967751 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.751759102 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.021906604 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.751549664 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.467267666 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.632701812 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.461345691 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.43581913 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.032196315 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.458380022 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.437223682 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.466798395 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.46910486 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.008764289 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.450207156 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.009967096 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.463737428 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.461508501 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.022243316 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.005762748 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.99605791 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.6189884 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.456823912 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.749342626 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.460063827 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.034513711 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.458828736 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.464323608 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.46648423 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.63266754 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.030770929 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.748170466 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.772201354 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.767599108 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.467096958 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.524533398 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.463349506 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.765502413 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.525120923 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.869955027 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.768711656 seconds)
  done (took 131.518029924 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.737832651 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.57157212 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.835695796 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.035091768 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.964316465 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.590820433 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.566453325 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.702198514 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.474886456 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.571150315 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.125106579 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.547309494 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.200313742 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.522498914 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.565644319 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.575761595 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.867321291 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.421372266 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.084230845 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.102361367 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.462661561 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.575645261 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.970389792 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.662132308 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.442029596 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.034210206 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.414657361 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.980412009 seconds)
  done (took 54.914249496 seconds)
done (took 546.318185518 seconds)
SAVING RESULT...
DONE!
