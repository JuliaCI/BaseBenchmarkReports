cset: moving following pidspec: 3257
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.399696804 seconds)
loading group "string"... done (took 0.507685978 seconds)
loading group "linalg"... done (took 8.545615694 seconds)
loading group "parallel"... done (took 0.17206384 seconds)
loading group "find"... done (took 1.350017506 seconds)
loading group "tuple"... done (took 1.938707634 seconds)
loading group "dates"... done (took 1.334044277 seconds)
loading group "micro"... done (took 0.213086699 seconds)
loading group "io"... done (took 0.575594067 seconds)
loading group "scalar"... done (took 42.051558079 seconds)
loading group "sparse"... done (took 13.034536516 seconds)
loading group "broadcast"... done (took 1.031668947 seconds)
loading group "union"... done (took 14.310540275 seconds)
loading group "simd"... done (took 4.867440887 seconds)
loading group "random"... done (took 9.746808285 seconds)
loading group "problem"... done (took 2.076806814 seconds)
loading group "array"... done (took 23.326874854 seconds)
loading group "misc"... done (took 1.070000763 seconds)
loading group "sort"... done (took 3.526718067 seconds)
loading group "collection"... done (took 20.956296837 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.580132065 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133941618 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.145831223 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.172258011 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204899758 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136182592 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15487606 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.460184819 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.031617996 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210645431 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139738272 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523414656 seconds)
done (took 5.641474218 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.222952008 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.07274936 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125627611 seconds)
  done (took 0.894023875 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072689912 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.17216619 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092270812 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.10874557 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107797622 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.091274047 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.107891285 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108255555 seconds)
  done (took 1.485224875 seconds)
done (took 3.378406416 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.770060462 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.823489778 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.493572654 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.123731183 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.155384559 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127887158 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.306640901 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.160406401 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.108248156 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112221308 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17481646 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.360173253 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.482570343 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.935796369 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.106306958 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127772368 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.079503766 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.701940541 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080087817 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130156738 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.493135581 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.107269963 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114269841 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124038788 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.205072193 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113052782 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.180099572 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.108108949 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.676567856 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102032996 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.184162733 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09579808 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.15831066 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.226954827 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.077245993 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107152003 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680458574 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.189314545 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.109391197 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096062876 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680035506 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.078456573 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.193183529 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105647659 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.107650319 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186765461 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114550832 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075203072 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097989597 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084929008 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167828088 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.484394027 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105729529 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.141920813 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092897728 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.70581933 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094529863 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.154243565 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127217751 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108255458 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095453916 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090421072 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.168670394 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097621619 seconds)
  done (took 19.605314598 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115330544 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137866726 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091488946 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136529591 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139336292 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094633294 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081317475 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091296892 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106895902 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180276234 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13446301 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.143037869 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072007088 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.09411518 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114321305 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231205045 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120279338 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118279996 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078902346 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103420775 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120371524 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109536026 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105847787 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091460861 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166932831 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203958208 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.118499471 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120160434 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076848138 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11212976 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139861149 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.159028069 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075376019 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091632887 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176371377 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104537568 seconds)
  done (took 5.068510963 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194827344 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118040751 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.184532191 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.172594295 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149115274 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.160474998 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115420018 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259123536 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.153396148 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178885357 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128564721 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097084043 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092782278 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078310087 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.091515177 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.753523065 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14232624 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.164990947 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121485704 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100282722 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079812428 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.385989758 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098097414 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07605625 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099775884 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068211731 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.183609759 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082927286 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.21330885 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098246217 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105981042 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128756814 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191490916 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127780236 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.113880282 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099815844 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077608097 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.211174117 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08730883 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092089032 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102523452 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130791433 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13306101 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097784002 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.087558423 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.240686995 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079765112 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112643098 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.031203456 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198960806 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.141245877 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075936595 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.33688909 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114990323 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098192495 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.10865585 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095019925 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.295396306 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132581711 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.077215206 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074532739 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099218536 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076839191 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400314284 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08403072 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.062736038 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.092449036 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.152138887 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095728611 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084716275 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100098043 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082784336 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114733852 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077267846 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.093917401 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.076966338 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074437904 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096551259 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080053479 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.097193162 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095058511 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.07990584 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.0943894 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144097819 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117851703 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.112683826 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107441015 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098798726 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075575035 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126542929 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094200279 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079538144 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136461777 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081930854 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113361273 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097532229 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139045975 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07976278 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.192491508 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078644425 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122258415 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096701518 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109623474 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116631753 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093810603 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080874959 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095484255 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074855426 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093956701 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143746646 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079281143 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093900457 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.078981896 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107194588 seconds)
  done (took 23.28357509 seconds)
done (took 48.651874587 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.416000035 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107576554 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108069979 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107198441 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106565769 seconds)
  done (took 1.619747908 seconds)
done (took 2.368993717 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.317221501 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.193979346 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084524118 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186973479 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083445409 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174235809 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.177140979 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097596646 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.203465378 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.078980932 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164980947 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097836664 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101242364 seconds)
  done (took 2.738375509 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088671579 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112824426 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077583408 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086694489 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088145587 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08671201 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102854253 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108003879 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103332871 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080998953 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088665507 seconds)
  done (took 1.769262915 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087947014 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11138242 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077873816 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08691774 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088739038 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086772786 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104729699 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09696556 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104934434 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081877961 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091440203 seconds)
  done (took 1.766625514 seconds)
done (took 7.01447979 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.109460304 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 13.172257679 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11956427 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.168835689 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.327239707 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.195042351 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.632357622 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130475938 seconds)
  done (took 16.797980614 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.107037417 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.110011819 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079303008 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096482595 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07740313 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096101041 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076454548 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092224679 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076415949 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091499578 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078969565 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094334455 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077392617 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091950919 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076888268 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077262526 seconds)
  done (took 2.209206019 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112585109 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11099617 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098881158 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083803408 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098622908 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079417028 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101481191 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097528797 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078631553 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095631742 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.084226684 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099249745 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.082610082 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094922828 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081927257 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.101398781 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078879702 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.097683562 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.099345937 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082550949 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099999085 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.080030382 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.099152622 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.083269002 seconds)
  done (took 3.077788945 seconds)
done (took 22.833126624 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161130251 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080082784 seconds)
  done (took 0.992311996 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097029791 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114460154 seconds)
  done (took 0.971950186 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101811593 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092809921 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131175407 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094378665 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094371946 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077202141 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125387795 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094163318 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077784064 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094084252 seconds)
  done (took 1.743621917 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080505755 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097295045 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.086063922 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115422145 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088106532 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096356877 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08157233 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098461285 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082470526 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093136776 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101448259 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096479073 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100848765 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114174315 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.082243157 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100284686 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086865448 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097701923 seconds)
  done (took 2.457195691 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076629124 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078522258 seconds)
  done (took 0.919441695 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07953007 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091316122 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079096134 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095388906 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075621952 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091782779 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076355462 seconds)
  done (took 1.353231813 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.466631182 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.178199973 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318509671 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109589521 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.128462736 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.338703666 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.130119213 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.109722913 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108586642 seconds)
  done (took 2.693538571 seconds)
done (took 11.888277089 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087253229 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.12953426 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.477495803 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113044153 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.07468327 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.153922697 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.258343347 seconds)
done (took 2.056383139 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334481058 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118692304 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084190322 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076216478 seconds)
  done (took 1.374197573 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076005642 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081794337 seconds)
  done (took 0.92342019 seconds)
done (took 3.064464678 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075790989 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.125569024 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074607079 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.090815075 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074776937 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.071659557 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090793555 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073841607 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.092126385 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.072196711 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.074228353 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.09172343 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074908671 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088942375 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071956549 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090931946 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075383695 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071624771 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.207309801 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072713023 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088665509 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073728071 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.072120969 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088782281 seconds)
  done (took 2.884562237 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099559761 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092528178 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079660526 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09893982 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078924275 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.098165999 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080708454 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092270381 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.097096328 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.077442484 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095145582 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.078792283 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093857778 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.079753603 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093950068 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.079418762 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097406914 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075722399 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094787766 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.077922658 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.098254498 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075846442 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096450977 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08044058 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.09548866 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078381189 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.094527846 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.075627029 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09707786 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095561595 seconds)
  done (took 3.41874262 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081027888 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071118673 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090329932 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083198531 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089048187 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077074628 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.089344661 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.073358389 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094394049 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.073295683 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.076813754 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.08902666 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.072590393 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094417074 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077155671 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096701298 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.090111573 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08976618 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.072458698 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077619312 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.095601442 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07270459 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09313634 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071948054 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090110223 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072443595 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.072739082 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.089739037 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.072487642 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089332146 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07761115 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096120049 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073122131 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102357312 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.079043366 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.072011532 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09723284 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.072030787 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094136456 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07122845 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.088929796 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072127451 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089780051 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083745315 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.075431404 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091432096 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.072298264 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094258984 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076198852 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09648546 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071962795 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089714498 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078767416 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.077764938 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.094638402 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071695255 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090737771 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072235962 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094356823 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.072253782 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071894598 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090085076 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07872036 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089764736 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095715543 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101379781 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.0717986 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094867645 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.076832396 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097084676 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.07787507 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108022925 seconds)
  done (took 6.792032209 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077537718 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100786772 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075221448 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074089039 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088671781 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072504544 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097554684 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072888889 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091773581 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091428419 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091299436 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07571001 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092305389 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076645941 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090902102 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.075315486 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100657165 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071349049 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090299332 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076553047 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073351299 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096691417 seconds)
  done (took 2.629802997 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.217318983 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101446757 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136633802 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091180305 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111212125 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109099923 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.079902715 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099240492 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079950642 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100076093 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100733585 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079840581 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110866487 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099632371 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083263808 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101690032 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079489469 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102091946 seconds)
  done (took 2.663618674 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088426048 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093640819 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098937421 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093625992 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076005205 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096700838 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08225452 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109019775 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077793208 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093691735 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085542183 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094993696 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078412619 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092729564 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078805677 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093701141 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.077929999 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093600145 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085446595 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099945288 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100128141 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086707394 seconds)
  done (took 2.758484057 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093609867 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095995652 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096736154 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09795997 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074297776 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09460097 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.082757402 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093614893 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08700821 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095212815 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075768962 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094408428 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083742158 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093546437 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.082016887 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094219865 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077807502 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093570593 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077906766 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092100915 seconds)
  done (took 2.559811415 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116388599 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10788911 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090561515 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121888297 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107668379 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090565733 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119064413 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089728485 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107755737 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121318078 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090369494 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108359453 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102549408 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115524252 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107330094 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10232763 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119331631 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119141991 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089988428 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107637684 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104694934 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108251267 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118934814 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090316295 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10817446 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09081854 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107883298 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097318967 seconds)
  done (took 3.743631768 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075533204 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075928265 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091284698 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073088857 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09149788 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07298595 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.073021149 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090760495 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075583652 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090998995 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.075068722 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093353281 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075198562 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074218402 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092859405 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.07548388 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092329772 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.073484905 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073576818 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090918766 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.074638654 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092975636 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.074781619 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09013736 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073289812 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.075458945 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092277496 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073430802 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093250132 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073404052 seconds)
  done (took 3.227222702 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08358861 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104393628 seconds)
  done (took 0.976102187 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073793437 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109868703 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073085513 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079194101 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099803451 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076850573 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103664907 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098743052 seconds)
  done (took 1.501143868 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100061335 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113951209 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081806579 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.106593977 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09496008 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113196479 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1568487 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.082395828 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.102982577 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.077379936 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114150732 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.076455288 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103596488 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082111238 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103910816 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091454742 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096014581 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086364084 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103218069 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.078509209 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100411614 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092219016 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105899125 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083788359 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.097731605 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087755369 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108728822 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105966894 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082517547 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107266669 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08356776 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087993781 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081043863 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099809881 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078020297 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112550839 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094382644 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100177402 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.086191476 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101114007 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085688437 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094147412 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087134032 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.102747294 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08859354 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099786454 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082278774 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093063885 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.077551144 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.099543993 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.074858693 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098877058 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.071140183 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105071442 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086330286 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113325868 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078979295 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099849555 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081692727 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.098242431 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.083877846 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.099543942 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087771863 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098076724 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086059896 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.104616271 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084999359 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094069937 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07040259 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096489388 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.086095164 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119407711 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088211017 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100579857 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082587775 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096014222 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08227158 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101465467 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085059965 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106515751 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081611276 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102192298 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08795235 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098676526 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080834545 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.102750427 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078636941 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097584773 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077741225 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115250963 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079068292 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.0956955 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077163035 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.105908608 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080350324 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098641375 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.07734141 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104778892 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070790369 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100662987 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083226628 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102451627 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088980847 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100816429 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082871477 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104946163 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087975654 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100403548 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080048849 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091902571 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083251616 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097682081 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085592868 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089069706 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082128699 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099830003 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083347742 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105823906 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078728096 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099987356 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087730912 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106380949 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079421342 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091203745 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08204446 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.10035395 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086549468 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10744379 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.079340687 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094801475 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.07520028 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103962816 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081321182 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103115213 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08277135 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100802563 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.071176602 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096877243 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.081959765 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105760139 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080373634 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102164511 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.08704657 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102971397 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080586208 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106110242 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.079983144 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.095458846 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086723328 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.09991172 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075598642 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106411729 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.082001372 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098162061 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.081853817 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105090225 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.081930491 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102096586 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079495248 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100407034 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08289553 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.096016598 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082133908 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.078793743 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108418593 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10011335 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075612969 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.073757262 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101864384 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.077945904 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100652774 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.07684657 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10070099 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083599639 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096936663 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.079825355 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.099224653 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091817044 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109405968 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083857288 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.103426457 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088482586 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100626793 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084623743 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099934464 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083123503 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10187029 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.085782873 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.103520637 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082695451 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.09950086 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.073012225 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102195701 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086892119 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.096289935 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077513693 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.096247271 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.081594803 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107658594 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081292228 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102018745 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078237802 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10306867 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087587844 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.099595862 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081366028 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.095674775 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.081895694 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086063785 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101008729 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082794039 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.106940971 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101747097 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.075477977 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106108233 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079103366 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103836898 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.075427401 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077980462 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096751166 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084087307 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101348002 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080711183 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.08929016 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087063477 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106796356 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083964851 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.09678423 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.081599847 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110625696 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.079938747 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104382074 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.082196908 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.103704657 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096478897 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.095844334 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.081689419 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108589409 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081385132 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.090505151 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.084429842 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098049492 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.076936333 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098764971 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.087658939 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10217593 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084661899 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101996282 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.071833496 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100113441 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079076995 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.078434488 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094717285 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106227364 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.082695039 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10037627 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090906748 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103448943 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083596486 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102077073 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081418325 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102099607 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083427321 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101312574 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083098822 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.0989171 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078416311 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.100619185 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.077554738 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.078471096 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.099777786 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082704434 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102193562 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084366235 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100296962 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087545223 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.101607628 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083788371 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118706717 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.098838296 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.079012299 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102945751 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085395369 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101033283 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08205924 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094885829 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08793617 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100813622 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087808367 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100436681 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.073971624 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.101862141 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.081356949 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102308343 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083977487 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102156425 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.081105187 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081192057 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.101179357 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110022467 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.078871418 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.107043502 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084848751 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102872313 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.082275535 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102300062 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.080968948 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.096822084 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.081711025 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102772024 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083327428 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099643066 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.084258641 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.101952709 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.080676861 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080657698 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102445211 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082675382 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101898204 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.071558713 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.097104254 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.078167131 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101562754 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085846669 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102387806 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080322285 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099712582 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084803318 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099989459 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.074373236 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104761835 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085166908 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101909453 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091748854 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.09794082 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08344367 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111357688 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071879831 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098604341 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.078230919 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098473542 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088246509 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102908977 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.087605617 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10273248 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078089005 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.074633295 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103080726 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080688916 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.091962081 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078767999 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10559714 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081029168 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099730231 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082679903 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103681108 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084860905 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105889507 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.080802514 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.101324873 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.082869186 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094334524 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.079001634 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.097309181 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081956372 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102405947 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.078895922 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.074804202 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100907594 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082600191 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102817088 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.081500926 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.100830297 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087863639 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100264644 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.083031106 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107585534 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.071974413 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.102159498 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081363636 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101944779 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.078687779 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.103466425 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084851431 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10387933 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.088082999 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102093206 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085287823 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101272156 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.07957751 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101499626 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082308655 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102764596 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079043327 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103330914 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088996921 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098048592 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.083330128 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103516209 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.080868329 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083653577 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10287484 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.101950562 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085233911 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083267852 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10186615 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.087032384 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101969239 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083994643 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103452623 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.082010429 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106202099 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.078899796 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108335071 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103312462 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085061367 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081814431 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099396892 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08262078 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101632104 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082088868 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109049445 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084571222 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.098644537 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.079655523 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099113971 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083064034 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108014924 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089043151 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102063295 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083727179 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096111913 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.075186063 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103844724 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079567919 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.101222667 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.08608233 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105983926 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.083074565 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.099703305 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081844684 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.107224839 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087706107 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104110042 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079371684 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104467854 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084034178 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.102660205 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08140797 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102056762 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084206558 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104303281 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.082001677 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097996871 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091475267 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106636755 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084876375 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.100890979 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084934369 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101142633 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077027262 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103760295 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.083565232 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105363923 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.083242812 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102252562 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092420285 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.09719378 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082989603 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10717505 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081837475 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10693242 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076997645 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103571041 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085280239 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103735639 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077377887 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.097885589 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079848681 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.102695621 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.078356279 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076408003 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112770655 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.10663207 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.083609686 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100556538 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080696562 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076212947 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095731739 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.07836967 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103650882 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.081566724 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109662935 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.079142132 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.098527913 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.076988349 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101310922 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084251275 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104041555 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.075254513 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096284681 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.079750929 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.102501763 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090020649 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100091579 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08289345 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103414321 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.083301955 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099417225 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088396655 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094146852 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.084002447 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113673087 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083693611 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105275053 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086406896 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108980367 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084106957 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096896046 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08408631 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103401182 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084412992 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104217349 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087249264 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117668486 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084411801 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09866314 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081528137 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.102232294 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079819828 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110306458 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085259794 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104375073 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.084589742 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101046361 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085293897 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109059209 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084770733 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.102188774 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083242129 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100349956 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082746298 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100820624 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081658137 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104104541 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084828453 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101251381 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.086096313 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.098652644 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093430613 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109515793 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084994668 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094502615 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079686219 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.099002168 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077811167 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104057322 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.077592506 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080825488 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100933426 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081085533 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105291301 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085520758 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102851578 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084819724 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102385997 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.073110475 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106620849 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.083768284 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105965737 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.075751777 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102616919 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085090043 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107304886 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089139561 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100570137 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084034543 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.101642713 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086735513 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097006722 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.086429346 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101134134 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081563328 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098541915 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082945115 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084704369 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104697368 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084446263 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10542301 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.082570974 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.107056393 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104917545 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.076595251 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.075380762 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.106128716 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079408323 seconds)
  done (took 55.750339683 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143102533 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083775723 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073917207 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094216236 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120212163 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078408462 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092987153 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078272429 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098536926 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087483578 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.092906932 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074010352 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116307908 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12131385 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119933165 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088764892 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093034954 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078049381 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093395286 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079166288 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114382705 seconds)
  done (took 2.860011131 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.099013048 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112190425 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110582521 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096137431 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10446582 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112749702 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09054694 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112282323 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115834051 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087459415 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116742955 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111908298 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085979805 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106568466 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106605644 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089644805 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115532812 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084861509 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112455338 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110144599 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088579057 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109709669 seconds)
  done (took 3.1153249 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086792302 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.082262021 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.108191243 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.072944478 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101726327 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.074050758 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.106929081 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.076376847 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107072997 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.083453631 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.099689824 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.082932328 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107370272 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.073905684 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.080889533 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095931873 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.086722102 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101723631 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.083270066 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.095723141 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.122164549 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.076683405 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.076800343 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.099781574 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091443761 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104272008 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.082284326 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102249245 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.080321143 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102318204 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.076259634 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104549529 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08683441 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.100072706 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.080972733 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102770047 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082614441 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.07726695 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.09910613 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086029564 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097889925 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083753516 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109654269 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.078953639 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.096239087 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084977391 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10222573 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.074140509 seconds)
  done (took 5.210305822 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.11457605 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.150561752 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.081103236 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141663122 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118315882 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091378383 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10329275 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141812688 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076708123 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.102162146 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120201769 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.097386827 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103547211 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088152174 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102509099 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082095679 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104686614 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097344582 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088268649 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100968414 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.088630663 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105551984 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11603127 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.094197201 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106880444 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.081086339 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.098894646 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107715097 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.094670634 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10853862 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.088139475 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110032462 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11744417 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.080317465 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101595933 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.085883592 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11916097 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102955992 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085917867 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.096563491 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.084825935 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108543068 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.085253788 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120253275 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103470728 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.085149507 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102773092 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075829835 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114818151 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105684939 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093469697 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117099855 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106421549 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083572546 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10900799 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.097903776 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102610748 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080650351 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106575567 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113163493 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.076533377 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106999136 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115617286 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085060221 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111606665 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115920827 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.084790947 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105804462 seconds)
  done (took 7.88149621 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110050995 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107927649 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09968561 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120353854 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107635541 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087147791 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10799058 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.107092387 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088276517 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11496153 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087437925 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.156483417 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.104802023 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093661316 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.108312065 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107471371 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.087752748 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107727242 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087658003 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107960308 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.087275288 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119731818 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10787903 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119049254 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101113198 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105254151 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087680304 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108266522 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119474032 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088677974 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121171605 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.107861478 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088303582 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119900706 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120893491 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.087796449 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102534539 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087736765 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108107427 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107536597 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085506165 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120643384 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088739626 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105703127 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087321763 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.108715206 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120033442 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.121081558 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093400699 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115576697 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.108312027 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100416851 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10878249 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088526351 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12000144 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129826349 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120123694 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119939235 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088113784 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119854985 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120341538 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128243487 seconds)
  done (took 7.443305383 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079460238 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078381832 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097577753 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077199124 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099046386 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077385782 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078346413 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.100198851 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081495448 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098804758 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080299109 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096702309 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077825577 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079587149 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09718351 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077197479 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096613402 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077362385 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080405848 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097097318 seconds)
  done (took 2.578780822 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087789396 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121458253 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.0804142 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107862564 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082765485 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108104047 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081522856 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103576114 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080056442 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102684964 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092231341 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113837357 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101210133 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086870474 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112564499 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106946607 seconds)
  done (took 2.422665051 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100466207 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121578355 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125447476 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.0850934 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.099245864 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.087867455 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102652837 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.075095546 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075597377 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108599997 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085662535 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106562799 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.081813485 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.09848678 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.080064438 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106767494 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075618171 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.10339681 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.082117391 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124131901 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.084189823 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104081344 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.081922919 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.102098968 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102983457 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.085192728 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106744539 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077623006 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098455926 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082973559 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102974057 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087357605 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.09641413 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084909343 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098353977 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077588341 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.08231919 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104193249 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106219403 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083005546 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077433299 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104042539 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081439971 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102728624 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075021589 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103362071 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075636702 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105530788 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.082280752 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103106416 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082519109 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107963242 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086299593 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.112077755 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089693185 seconds)
  done (took 6.016558547 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095346021 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104405091 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085233892 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097232843 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083095257 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107802893 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.084812212 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103479012 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082591245 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097117464 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082737109 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104401571 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081935876 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103859824 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082898615 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104419795 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075542462 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.080565965 seconds)
  done (took 2.517074688 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0850157 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079024036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108095531 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079428193 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100396331 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081844775 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096833331 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.07811212 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09905207 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08008314 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099500585 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.082358991 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097761927 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.081967155 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079547554 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100547969 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.082426225 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098820513 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.078997482 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096434109 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08138165 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098327803 seconds)
  done (took 2.826815755 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.097042479 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.131316824 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.093860799 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.142569808 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.104999086 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.084043851 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.11472478 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.08448784 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.123632916 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.083701111 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.104197718 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.083595505 seconds)
  done (took 2.107950797 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10343436 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137951394 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080836466 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10375133 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093710635 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107269145 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105360748 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085089214 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11894603 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119524453 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085127029 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120203194 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118482828 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096866734 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114391479 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114046445 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084731838 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105949107 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081264369 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128820875 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106068929 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120024478 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085061073 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105660021 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085458473 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118051196 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119596257 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1189801 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085734232 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119624876 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114460911 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085318386 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119405344 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119379791 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08237993 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119998096 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084899236 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12792796 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115111604 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117045635 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082676902 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115282759 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119082455 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093113944 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119734594 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106258416 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092981702 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107348085 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085439351 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133996473 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115564536 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11838258 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093399712 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120172009 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119502915 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135581304 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119357999 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117092588 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094126439 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119426456 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11814926 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094407571 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117773048 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119540579 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115347839 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096533098 seconds)
  done (took 7.991174755 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119165145 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103682734 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084601519 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120856543 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117962783 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106336099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085790723 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106056516 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085578312 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102286931 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152322717 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085915495 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117716327 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118125095 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08544365 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107356934 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084840445 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117513805 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102386272 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134317497 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085778666 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118173363 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118229101 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117736806 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098506586 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114935962 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106620634 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085504066 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106151027 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0858605 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113808289 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085314401 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117213847 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102471173 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096938922 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106877521 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106202789 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091730129 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106665402 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09304646 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118201327 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129122625 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106331782 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085949705 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120009171 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106199296 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085984792 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102938538 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085370272 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102424496 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119641534 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09909484 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120267752 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118504255 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085795456 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106860623 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105970526 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085917777 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105993704 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094051639 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118412802 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105669561 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135754615 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086306454 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107310766 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119223042 seconds)
  done (took 7.823864609 seconds)
done (took 150.467954479 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098959505 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13691272 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094262805 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.165289299 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080718582 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136338089 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114151736 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.11672255 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07983072 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101877667 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.081351422 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.104914664 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.145996359 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.079892687 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101656533 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.083080161 seconds)
  done (took 2.58743706 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.175843333 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.282848896 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10165833 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108495651 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087673917 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.105940503 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085869239 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.109071137 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082094063 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.114271633 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.083063677 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.105147441 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.091712172 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.105245724 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.08134318 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.105011978 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.113808248 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.085939292 seconds)
  done (took 2.897737667 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111682764 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15133556 seconds)
  done (took 1.137427981 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11654676 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182880179 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293549563 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.392723953 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.111228921 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.124173148 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157379156 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100040667 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.222027978 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.103242942 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.126469312 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.109534857 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.112808913 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11544838 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112215238 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.087149422 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.136054325 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.088461831 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.109359902 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.088310398 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133757216 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.110373992 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093648756 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.111122634 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183753965 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124241927 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088418674 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109075535 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.088561388 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.110072473 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092347714 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123069995 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12265082 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.165289822 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.114042503 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.161195105 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.115803579 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.086785707 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109333026 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086325274 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.113877371 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.112746546 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101419154 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.107654064 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088904392 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.116407145 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088142714 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.109979757 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116214203 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096070593 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116543562 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.09252296 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.182759426 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.095570249 seconds)
  done (took 7.629943203 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.781959135 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149213568 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086901376 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.886636503 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139186446 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101021994 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.790137702 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131566547 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234900021 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.783514634 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126205669 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126352437 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229591713 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.250578749 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.143579123 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311600364 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.692596075 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102431931 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137568754 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.147776037 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09304749 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137848207 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127834373 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428838632 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.087403377 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.1087078 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091309706 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122090605 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159227206 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108404287 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090709803 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200832469 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.264630395 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.180964855 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110285979 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084546957 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107254258 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.166594473 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266774247 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195448342 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.174056717 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105005474 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084738171 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12173918 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128431698 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083280393 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161676648 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193171569 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172277656 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089613282 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121620997 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117571704 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.098406572 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.181953845 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084227969 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.337660711 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.342961956 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085454689 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11800778 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105126452 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266206305 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109004693 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203460174 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13657083 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213387183 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085759324 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78852853 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.165809908 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10722126 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097999979 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115704102 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092606518 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120577136 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165572344 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390818211 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124470163 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092009973 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107531359 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210517516 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085068453 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109085448 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162701315 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109817772 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096196705 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125713815 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12331853 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170393991 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.245318181 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123982543 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095060614 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114453145 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121636252 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.088379529 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209326727 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220933621 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.15797577 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.235695917 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099604538 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163215689 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187620465 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098610312 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192642834 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.095566116 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126803254 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121254274 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194090432 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14041962 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.110195814 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093117774 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115660087 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.143418258 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090108593 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115407977 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168686964 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459656095 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187405743 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.083181318 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089639966 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118757706 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159876618 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117385794 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239661474 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118983769 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16581244 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116646125 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083309714 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11788992 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163330024 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124052049 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094986374 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122141081 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11773167 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.250350607 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221466762 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102500237 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240819403 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177875173 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09667268 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195428091 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095543581 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189507044 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097049893 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120711909 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.088093458 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780727523 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121742852 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.095167333 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114098053 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185254671 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085848965 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108969314 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086158049 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105211857 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776054248 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111234777 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084875375 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086222747 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119279035 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117603701 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093570406 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114380252 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161410856 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235738493 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122504941 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093834962 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107594051 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160063564 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.08713578 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108487115 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08655761 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108279273 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.096494964 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113933773 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088190481 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19168186 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.157320607 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221445485 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.558465889 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.108277538 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086585385 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232129078 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086446835 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.306278498 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11630518 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.205310553 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188450458 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084322632 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.33873749 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167699684 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186253507 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089024158 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195171169 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083642403 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114710354 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.161563065 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085036082 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117222124 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.157104131 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125680847 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123199412 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.121686057 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109128207 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227070124 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.083052765 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193201234 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088990267 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121377218 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30703649 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085999428 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129507358 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161742032 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113120167 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086758169 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.716822192 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10885966 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095824195 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119956774 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224795067 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164351527 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116482862 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093655577 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12355928 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161499007 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20997461 seconds)
  done (took 43.491702488 seconds)
done (took 58.612481735 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.304985875 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.258094068 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.288890833 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190145721 seconds)
  done (took 2.015351293 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174460391 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.146787 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120012611 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.105637307 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149328746 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083687229 seconds)
  done (took 1.679946185 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.428839111 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.382251169 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.30712436 seconds)
  done (took 2.021723851 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.246360694 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.270909131 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.318155526 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.422507524 seconds)
  done (took 2.262902935 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200469973 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.098116006 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118761686 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.135545094 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.166715791 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.170614898 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.138733067 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.146846223 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104307739 seconds)
  done (took 2.231079703 seconds)
done (took 11.115068755 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.136929002 seconds)
    (2/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.142198168 seconds)
    (3/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.117662527 seconds)
    (4/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.149134044 seconds)
    (5/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.091042809 seconds)
    (6/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.209674204 seconds)
    (7/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.180799568 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.230034058 seconds)
    (9/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.150119874 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.12712521 seconds)
    (11/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.258031006 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098418808 seconds)
    (13/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.242679996 seconds)
    (14/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096587272 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.114236685 seconds)
    (16/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.246812449 seconds)
    (17/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.242637784 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.154755027 seconds)
    (19/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.105955779 seconds)
    (20/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.190498747 seconds)
    (21/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.19736438 seconds)
    (22/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.1795153 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.159793319 seconds)
    (24/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.099355822 seconds)
    (25/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.224181326 seconds)
    (26/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.210531819 seconds)
    (27/286) benchmarking ("sort", BigInt, true)...
    done (took 0.243019706 seconds)
    (28/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.218096069 seconds)
    (29/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.122587467 seconds)
    (30/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088614729 seconds)
    (31/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.158423252 seconds)
    (32/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.086591948 seconds)
    (33/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.156925694 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 0.216525462 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.153580026 seconds)
    (36/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.22573152 seconds)
    (37/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.091471476 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.140614643 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118174668 seconds)
    (40/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.100597626 seconds)
    (41/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.189643811 seconds)
    (42/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.200811759 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090073319 seconds)
    (44/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.184404008 seconds)
    (45/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.190172356 seconds)
    (46/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.096793995 seconds)
    (47/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.145586566 seconds)
    (48/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.177475901 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.138736826 seconds)
    (50/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.121968889 seconds)
    (51/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.097104757 seconds)
    (52/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.168088665 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114326126 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.119022091 seconds)
    (55/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.078494043 seconds)
    (56/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096324087 seconds)
    (57/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.094930892 seconds)
    (58/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.071959131 seconds)
    (59/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.1338698 seconds)
    (60/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.185902028 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086701218 seconds)
    (62/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106949141 seconds)
    (63/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.0778597 seconds)
    (64/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.20024147 seconds)
    (65/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121132744 seconds)
    (66/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.171431387 seconds)
    (67/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.193782147 seconds)
    (68/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.09821499 seconds)
    (69/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.089562412 seconds)
    (70/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120261691 seconds)
    (71/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.101458988 seconds)
    (72/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.138184247 seconds)
    (73/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.177789786 seconds)
    (74/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092338168 seconds)
    (75/286) benchmarking ("sort", Float32, true)...
    done (took 0.226808853 seconds)
    (76/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.127707988 seconds)
    (77/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.223752305 seconds)
    (78/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089368856 seconds)
    (79/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.157931367 seconds)
    (80/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.072529504 seconds)
    (81/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.201107965 seconds)
    (82/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.111407562 seconds)
    (83/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.101301408 seconds)
    (84/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11543322 seconds)
    (85/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.113454406 seconds)
    (86/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.181953049 seconds)
    (87/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114541182 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 0.083694532 seconds)
    (89/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.097449128 seconds)
    (90/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098165381 seconds)
    (91/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.119861942 seconds)
    (92/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.223374446 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090980471 seconds)
    (94/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.098399339 seconds)
    (95/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099288805 seconds)
    (96/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.096220497 seconds)
    (97/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.070922931 seconds)
    (98/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.133725721 seconds)
    (99/286) benchmarking ("sort", Int8, true)...
    done (took 0.217218178 seconds)
    (100/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.089134326 seconds)
    (101/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182141838 seconds)
    (102/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.213272004 seconds)
    (103/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.098784385 seconds)
    (104/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114196851 seconds)
    (105/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.176285975 seconds)
    (106/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.134022837 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.113380233 seconds)
    (108/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.150487378 seconds)
    (109/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.164112909 seconds)
    (110/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.113027377 seconds)
    (111/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.098278187 seconds)
    (112/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.113012828 seconds)
    (113/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.179403137 seconds)
    (114/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.142290918 seconds)
    (115/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.171578485 seconds)
    (116/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.161705849 seconds)
    (117/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.11569548 seconds)
    (118/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090253029 seconds)
    (119/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.12211035 seconds)
    (120/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.10702395 seconds)
    (121/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118895752 seconds)
    (122/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080485804 seconds)
    (123/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163142479 seconds)
    (124/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120967921 seconds)
    (125/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093365408 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.112977266 seconds)
    (127/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.087956252 seconds)
    (128/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.242281283 seconds)
    (129/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112027824 seconds)
    (130/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.071961835 seconds)
    (131/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.114541676 seconds)
    (132/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.112588104 seconds)
    (133/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.156745038 seconds)
    (134/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.091706273 seconds)
    (135/286) benchmarking ("sort", Bool, false)...
    done (took 0.180793369 seconds)
    (136/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118823495 seconds)
    (137/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.09599591 seconds)
    (138/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.094168924 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.090015319 seconds)
    (140/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.096758339 seconds)
    (141/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.112083075 seconds)
    (142/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.095356512 seconds)
    (143/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167832436 seconds)
    (144/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.09627813 seconds)
    (145/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095868807 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090826931 seconds)
    (147/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.095802025 seconds)
    (148/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.094402317 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.106824721 seconds)
    (150/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091784301 seconds)
    (151/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084450822 seconds)
    (152/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.112926356 seconds)
    (153/286) benchmarking ("sort", Float32, false)...
    done (took 0.171171861 seconds)
    (154/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.07329409 seconds)
    (155/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.184723946 seconds)
    (156/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099058687 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.11960666 seconds)
    (158/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088801765 seconds)
    (159/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.130511481 seconds)
    (160/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075212293 seconds)
    (161/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110453941 seconds)
    (162/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088946839 seconds)
    (163/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.145530651 seconds)
    (164/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.114344021 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.098972906 seconds)
    (166/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.077961539 seconds)
    (167/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.095574749 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090262384 seconds)
    (169/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.161952995 seconds)
    (170/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.101994667 seconds)
    (171/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.095216143 seconds)
    (172/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.09711957 seconds)
    (173/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.169124371 seconds)
    (174/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.09671462 seconds)
    (175/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.073915311 seconds)
    (176/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.094908782 seconds)
    (177/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.167329049 seconds)
    (178/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.098909295 seconds)
    (179/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.078870772 seconds)
    (180/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.153683076 seconds)
    (181/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.073228159 seconds)
    (182/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.099209852 seconds)
    (183/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.07620838 seconds)
    (184/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.178473342 seconds)
    (185/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.07797374 seconds)
    (186/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108134249 seconds)
    (187/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091863238 seconds)
    (188/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.098707396 seconds)
    (189/286) benchmarking ("sort", BigInt, false)...
    done (took 0.228126628 seconds)
    (190/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120640137 seconds)
    (191/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098094813 seconds)
    (192/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.184666941 seconds)
    (193/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.07505328 seconds)
    (194/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.116208071 seconds)
    (195/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089451605 seconds)
    (196/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.096605122 seconds)
    (197/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085456727 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 0.216247866 seconds)
    (199/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.102890468 seconds)
    (200/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.132269408 seconds)
    (201/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111116458 seconds)
    (202/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094636661 seconds)
    (203/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.100917927 seconds)
    (204/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.080141085 seconds)
    (205/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.109560083 seconds)
    (206/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.07147583 seconds)
    (207/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075834149 seconds)
    (208/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.096940184 seconds)
    (209/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107076353 seconds)
    (210/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122559506 seconds)
    (211/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.071971417 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119653082 seconds)
    (213/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121741979 seconds)
    (214/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.123628434 seconds)
    (215/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133678766 seconds)
    (216/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098018997 seconds)
    (217/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.10788244 seconds)
    (218/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.093533272 seconds)
    (219/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.125167011 seconds)
    (220/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.11630769 seconds)
    (221/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.086469087 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.179138113 seconds)
    (223/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.089753325 seconds)
    (224/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.095630008 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090812069 seconds)
    (226/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.111775548 seconds)
    (227/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098325273 seconds)
    (228/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.102531537 seconds)
    (229/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.076257916 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.115731309 seconds)
    (231/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.073399087 seconds)
    (232/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.110351071 seconds)
    (233/286) benchmarking ("sort", Float64, true)...
    done (took 0.228276282 seconds)
    (234/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.073373396 seconds)
    (235/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.104517085 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090587644 seconds)
    (237/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113956924 seconds)
    (238/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.106332589 seconds)
    (239/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.096991753 seconds)
    (240/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.071565577 seconds)
    (241/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.112139288 seconds)
    (242/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.089862761 seconds)
    (243/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.073264376 seconds)
    (244/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163271399 seconds)
    (245/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.111270518 seconds)
    (246/286) benchmarking ("sort", Int8, false)...
    done (took 0.190026059 seconds)
    (247/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.074017171 seconds)
    (248/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108738904 seconds)
    (249/286) benchmarking ("sort", Float64, false)...
    done (took 0.146170642 seconds)
    (250/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.10855796 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.091619554 seconds)
    (252/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.13186666 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090823123 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120822588 seconds)
    (255/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.073669681 seconds)
    (256/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.097465675 seconds)
    (257/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09189327 seconds)
    (258/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.110836526 seconds)
    (259/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.073122665 seconds)
    (260/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.102279325 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090668487 seconds)
    (262/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.110708118 seconds)
    (263/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.089632398 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116486868 seconds)
    (265/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.07553796 seconds)
    (266/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.075733784 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108167935 seconds)
    (268/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089340998 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108816539 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.098009271 seconds)
    (271/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.120884762 seconds)
    (272/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.091488792 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.114340205 seconds)
    (274/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.089229472 seconds)
    (275/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112292665 seconds)
    (276/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136413059 seconds)
    (277/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.089284659 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.110282545 seconds)
    (279/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.075006774 seconds)
    (280/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.132854666 seconds)
    (281/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087065529 seconds)
    (282/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.082754548 seconds)
    (283/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.112277593 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.085901124 seconds)
    (285/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112995612 seconds)
    (286/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.088821039 seconds)
  done (took 36.458291219 seconds)
done (took 37.372053836 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09755628 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152051482 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095215393 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137666457 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097756711 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.123948015 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.116986431 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096304888 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12118997 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.099426672 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.120604349 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.078650215 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.11875079 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.09531428 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.118807476 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116508955 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12140942 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.091572266 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.110843616 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087059803 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.110825255 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08797098 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111595027 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078905237 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.118493627 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093662556 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.114376543 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.095430029 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.112086006 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.085199866 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.110218176 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.091341636 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.109724611 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.09826886 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.113475612 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.087240627 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119268869 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.09411416 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112923974 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088604563 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116710396 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08727736 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.114011484 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.092078414 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.087436375 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.109947044 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.087927835 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122907578 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14059518 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08789894 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.11661704 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.094583596 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.119076993 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.0913557 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.10979682 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.087440666 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.111883389 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116759703 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.111618282 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089021642 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116344418 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091133117 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.110318452 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.087031816 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.087070285 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.11829012 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095295981 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110018759 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093749531 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.113504913 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.084051298 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.111388935 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.085791885 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.108690077 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.093939583 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.117857879 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.082571644 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.112592487 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091708407 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.113690324 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.087148556 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110247382 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.088983539 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113115574 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086352041 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.078563042 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.108701236 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.090126437 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109848118 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.087360977 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.113900304 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09112605 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113595527 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.096010188 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11100562 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.088185802 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111787229 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088238263 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113188688 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.086502576 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.107280875 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086892372 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.115629789 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.085076512 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.112280919 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097084748 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.109630879 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.090202604 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.110145756 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.087327505 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124133894 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.09389315 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111750562 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089370884 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.108748585 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.090959909 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108841208 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086458944 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085853959 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111609044 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.08860476 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.11231651 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086379218 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.114560671 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.098262023 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.108441238 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.103483599 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110272474 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087924997 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.114683245 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088398272 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.109629245 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.086805363 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.106045857 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085543725 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.110812605 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.090790586 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085672192 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.111129677 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.087493302 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112671443 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.089269267 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112788526 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.088475682 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108685878 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.081492055 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112675523 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086375521 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113574426 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088509957 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111759045 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.083387156 seconds)
done (took 16.476640139 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095091361 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186652176 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.146954015 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.147937449 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.146053131 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.105415455 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123854789 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143486166 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.096943336 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14188077 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.144846083 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110126189 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149052425 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120693078 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.129636967 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.094631249 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.118128985 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.104913056 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.152675482 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.139050617 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119764347 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120294059 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.139901111 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138870147 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.094301863 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.148955667 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.121930286 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09511073 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122060548 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10342078 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135726851 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.098532887 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.121499583 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131564822 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.102863177 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117789493 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.104655473 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114677573 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.118679435 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.095629672 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133861133 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105928768 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.116371705 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.126242049 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094913083 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123143294 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093713899 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.117922657 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09544162 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113822459 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099874462 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139740482 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117261536 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.097049464 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119621462 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11950937 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.097279164 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.122607141 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.096886978 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121964789 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119345319 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.098014012 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124833822 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.13498924 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.094344466 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121411454 seconds)
  done (took 8.845904815 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109752192 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146370609 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.125255262 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.101769774 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.122476006 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083931061 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108432728 seconds)
  done (took 1.766153181 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085787916 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139431535 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11716095 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142079 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.135254215 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.120628205 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128564072 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085917562 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134838852 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.122373594 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11298682 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165029747 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.086065228 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121467413 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.144477174 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.084722001 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144449306 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.085208059 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118249422 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142403217 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091068299 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132619479 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.100692235 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.111841985 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106593164 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.111984697 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.17468904 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096793506 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109573695 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091288431 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115023725 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.180901051 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107131379 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.120558305 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083557425 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138329604 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130572531 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090370726 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.134569486 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.090324857 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.131751591 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091834759 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117932909 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.091474573 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117905389 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.09981441 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121875223 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118224546 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090403267 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.138652969 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.097056367 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.133320245 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.086701148 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114636399 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.095523661 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118039888 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099732523 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114959246 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.138603978 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093013541 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137406518 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.111307424 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.1317532 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.137374201 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103344578 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.133183698 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106400778 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115905004 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093309902 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120269055 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136559977 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089858302 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.121771196 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101079794 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119270358 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112834757 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139028383 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089334489 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123538418 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089620971 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112895945 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086211303 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.127728173 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090032253 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11336687 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127317794 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097925759 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11633009 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090329942 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.13347244 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.089873558 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122953779 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.097525271 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114195335 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127046274 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.115378119 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.121757555 seconds)
  done (took 12.112375488 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087545953 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087524837 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.117295111 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.088317138 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112939285 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088455647 seconds)
  done (took 1.56288482 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117032661 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114974411 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102442717 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118497541 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15453939 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111238088 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.136559497 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096757819 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.131627235 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12626568 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110968896 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137336752 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.115890186 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118800834 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.13651486 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.093953088 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.136139032 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.091166981 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126592219 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090836233 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.130119282 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.093997025 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116249867 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.109259117 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120459673 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.11969866 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.094637447 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126922163 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.100836619 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122403736 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.093500159 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120161205 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09406462 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121430302 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136541499 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094554612 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114428742 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.097011194 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120731749 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.095191807 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.137921174 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090489299 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125902282 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096208279 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123000576 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119740055 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098018382 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.119582228 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110881406 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121408583 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096684543 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119301908 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094777245 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122658913 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.0947405 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121959927 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097462653 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.135861264 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.1190897 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.094711013 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116593172 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095058676 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122886232 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094813097 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121187269 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.097082046 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120133485 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.090485575 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115596268 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.093506161 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121396821 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.090570361 seconds)
  done (took 9.095908633 seconds)
done (took 34.348347586 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.668016197 seconds)
  done (took 1.644705326 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.886960311 seconds)
  done (took 1.86562639 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.683656271 seconds)
  done (took 18.688534077 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.46500369 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.558171714 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.991902974 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161201329 seconds)
  done (took 3.156071607 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.954336747 seconds)
  done (took 1.951409687 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.293689875 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234006221 seconds)
  done (took 1.511066828 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.815941556 seconds)
  done (took 1.811734639 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.501895515 seconds)
  done (took 2.492209976 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.341130675 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.196258044 seconds)
  done (took 1.538526109 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.568806861 seconds)
  done (took 1.56302786 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.841327623 seconds)
  done (took 15.841113078 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240325024 seconds)
  done (took 1.249295457 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.29159228 seconds)
  done (took 1.289612839 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.617359218 seconds)
  done (took 4.613745546 seconds)
done (took 60.206696409 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098022951 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.101023246 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.125023991 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.097221115 seconds)
  done (took 1.413527218 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101264921 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119560944 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.098067432 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120064715 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102252161 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.121506866 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.093854773 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.165152902 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119700866 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096366706 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120746219 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.094325005 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.121882741 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.093140015 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117934812 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.095967143 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124010235 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.094362133 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122320145 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095353874 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117383731 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.095084217 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122755365 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092355427 seconds)
  done (took 3.650920528 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097496906 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090906006 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118656343 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.090369248 seconds)
  done (took 1.406206038 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101051854 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133372848 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106998835 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126534189 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.10783656 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.131632223 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115913868 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.089904093 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.092352229 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127151032 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091131517 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.135626099 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13287538 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086638604 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127806179 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087938881 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.112639582 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.106466422 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127269433 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101457735 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.115924715 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099457767 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.124029907 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.104459677 seconds)
  done (took 3.69666249 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172591883 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128676912 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139315374 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095573447 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165319911 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141771439 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088625604 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14093254 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088734147 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.127609468 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.09279 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167241214 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.124852375 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.092898667 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116070336 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.095480191 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.125664211 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.099111656 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.117723786 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.105120146 seconds)
  done (took 3.437962148 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097279905 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115992915 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086249904 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.08842887 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122433942 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092833139 seconds)
  done (took 1.617522253 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.086788851 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085650867 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111916084 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085455341 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.116220746 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.086077551 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.084285045 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.111757898 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085512697 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11165092 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.084992543 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.109778922 seconds)
  done (took 2.17439677 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.378244438 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114615277 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.114534774 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089959225 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095111406 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114576722 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128133998 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.089108428 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.146294068 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088781493 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115858475 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092015401 seconds)
  done (took 2.576401384 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204909304 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095206002 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26142964 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.35029119 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153001094 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16416804 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280889475 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16224523 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.181012998 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136292782 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192829279 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156022202 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151721167 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17665877 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11091971 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.175513546 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173811624 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198304041 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147037219 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202262404 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161851426 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165967206 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178106473 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150706431 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135737479 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129483536 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118253084 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125446711 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170622194 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167307993 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172214637 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146684022 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11120028 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222677179 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211260338 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176271722 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.305359671 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130785699 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.188929977 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.178952528 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248782154 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111897671 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217175511 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126120735 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12853895 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179234874 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155317674 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178814539 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102876206 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13904296 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179699581 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172545349 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.177525021 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134483396 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303217913 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143168664 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145922696 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181618662 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183157862 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1866101 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166341047 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118676339 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184547711 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179740078 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177367878 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143048033 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.165323583 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09520757 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171739622 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191422538 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174051248 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160915497 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.211247381 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132351607 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160818746 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139257747 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150504651 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175530691 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157358181 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.092416302 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14802304 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136140845 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098552298 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.186278413 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121354309 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200556638 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133541442 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.186003964 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201463509 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154913617 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130756624 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160076102 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161908634 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144950864 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.118326327 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116676142 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15895933 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154254293 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130052733 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153474671 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113550669 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126533687 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151766539 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.094126569 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158739074 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13188558 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165310521 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13389839 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125577221 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16221293 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147329718 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127359127 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167263588 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180695944 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130498624 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130387831 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191250574 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158339882 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104898387 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171352737 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181671293 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.163071631 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13658324 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166489395 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19066567 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139200922 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186537475 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112009995 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131857108 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.148404291 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157218135 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154862249 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126589054 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128762634 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.150810327 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188551779 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125528349 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10720513 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1719942 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125978604 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099026122 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140508716 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133220178 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112556643 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145012261 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134366279 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153839282 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129831041 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151122901 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155656546 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139805543 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188748802 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13179721 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.157192846 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117923903 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118518373 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.17733039 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181791252 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098992839 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223086512 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.167383819 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196035254 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162090191 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129186487 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174831464 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098784976 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117902159 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1630254 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158244923 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131301285 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179485083 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219575898 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16536727 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.15068732 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118616255 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163704292 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170371667 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153437481 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144186797 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160350467 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165544643 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.093240287 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122590622 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125276361 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113246626 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129571052 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102070103 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205670685 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161738017 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185941296 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158273815 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1120161 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177609295 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125000189 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162949563 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17073622 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136986558 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180004007 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178772348 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164784791 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112589574 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17236879 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118451611 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093208098 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132416083 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164304316 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103013596 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13348429 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141669173 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179682703 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171692846 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148002569 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202354403 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163615667 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18926238 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121504749 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.134136133 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166983839 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155641304 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181013809 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105527402 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.154175681 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175181127 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140157286 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186098442 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159803362 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167032571 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195091162 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.15456512 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128103259 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118678022 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163152231 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137863524 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164522455 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143463771 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105719483 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151391347 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132841296 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094679889 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205508526 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113849632 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177473692 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154317841 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17067856 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124894572 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140598106 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159716398 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115804198 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115652419 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168076836 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184982825 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143080319 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1576409 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172477281 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100349303 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305579081 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182393733 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208812375 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106755846 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140719644 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159299736 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155414203 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133078928 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175607937 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142569306 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177951559 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156544748 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141403151 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104933269 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144905281 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148583672 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.148194576 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.101860674 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152002277 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14114385 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181223219 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141644383 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127602461 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161638309 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145295936 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146987842 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111208387 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19632536 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15643342 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174743921 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.154543216 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163965547 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195139225 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122932368 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098303778 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124797871 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176078738 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102232306 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156190505 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.184202142 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222579979 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156194405 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162918015 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107156135 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118615404 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128178908 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148063739 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224899308 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112968289 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132345932 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187020934 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.148785639 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099198314 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160329355 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3103638 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115566356 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171800195 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115902728 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276831234 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095891511 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127887413 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156048484 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166549348 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108604999 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180404024 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162936575 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141716998 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128946707 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135695724 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186920789 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231654017 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168302171 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173999213 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.11164315 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155764493 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159979696 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17345269 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142779973 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142084234 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131219061 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178679152 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.184683756 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130961034 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161556162 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160119276 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158339675 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17172186 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102589297 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224894296 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101677663 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163890996 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139299079 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121173214 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127057103 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.210671924 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103792386 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172600351 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156935173 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13014841 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096097007 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150158317 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156766922 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13854324 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099492764 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17538301 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124983944 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159595938 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147352472 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128651356 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153681212 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114720908 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135587135 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141955408 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143851046 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104935189 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168107563 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17895678 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128908956 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173458307 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174832302 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160642388 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157340775 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113691428 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664694664 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.097579172 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178375231 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145273882 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182016219 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147734996 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164618285 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159010079 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118417201 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166081845 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14744256 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.218339482 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164522778 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156440887 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099446244 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142377884 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142665963 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129342591 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120333291 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162969993 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139031625 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.106223264 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155640815 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143490169 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142973861 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10716758 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180320387 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145042457 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179091344 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176754009 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135976773 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165037801 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171715335 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09970114 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157896224 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170000348 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140617715 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149128711 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10023154 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13262064 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177435922 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.094551092 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15747383 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158198314 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15985822 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161336733 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132926769 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128010881 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14092289 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158678997 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128515566 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.123367017 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154640112 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12962632 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.097299416 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152559287 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156316698 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.15689329 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096222712 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169435194 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177784062 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094906254 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132049775 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285721952 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154679765 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188239591 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.150892574 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103542785 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14182449 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153078888 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152648579 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15653032 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.099012935 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131055824 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.10065318 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.179441229 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.151407446 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153712759 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184747559 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158367339 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197676568 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13335155 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.235517519 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137547172 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153277792 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099987984 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128777048 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140403579 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10338267 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142087127 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189129901 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177681093 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.151714997 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.141634485 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097162171 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125688336 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102976434 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159230923 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153213106 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157092819 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112755752 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.116316948 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141468445 seconds)
  done (took 74.972083201 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145242532 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132120542 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146275336 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.192912556 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16367348 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241027839 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.204058188 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.224484928 seconds)
  done (took 2.541838682 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.09880409 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155660859 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.138107798 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.123773772 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.090003297 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.32992057 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.136486858 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122216592 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.117551042 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.159843644 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.090612595 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.534528626 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120341901 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.122212011 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.085906361 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.113615258 seconds)
  done (took 3.62979531 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.22406642 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536075254 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.977938666 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.242759796 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.223134688 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.150930029 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.743966147 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.155931586 seconds)
  done (took 12.352092036 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118991507 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137571369 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.132087608 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.160172276 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116920821 seconds)
  done (took 1.771253947 seconds)
done (took 116.235119624 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093650935 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123337083 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.094394886 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.124600567 seconds)
  done (took 1.526667071 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.10535278 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07782254 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109562947 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077289011 seconds)
  done (took 1.467098339 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.420171513 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.107731884 seconds)
  done (took 1.664476231 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11340476 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132193565 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103827605 seconds)
  done (took 1.453977524 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100965845 seconds)
  done (took 1.208812861 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094805017 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096340557 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138904469 seconds)
  done (took 1.436671671 seconds)
done (took 9.862288425 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111186176 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.430908354 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383325844 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135437559 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.693047483 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405940749 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.040780992 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.126806209 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164294133 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117022865 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105603843 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.698081033 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.995439748 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.369037542 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981044904 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.463128015 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.671653517 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119801886 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095039213 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118514688 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.989743258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116952497 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090049429 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118309733 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668629397 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421083162 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.08809909 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.476594271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088022438 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122936311 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.375286471 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116932211 seconds)
  done (took 16.992014538 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09486206 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177075997 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096249307 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119747048 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092563114 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119155723 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098979646 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.131553686 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179654792 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087957475 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1351783 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.088289536 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123604476 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088986094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137020565 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088848969 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119577246 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092101975 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123876785 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090624725 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13642339 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087772393 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11901246 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090888569 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115755206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102731659 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089406781 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130570826 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117349437 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095056544 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090782102 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118254765 seconds)
  done (took 4.683184531 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138941537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185907348 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126010879 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123512419 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168211613 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090169238 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.20092546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155958867 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182054411 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117851025 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106949944 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117797526 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124579193 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.119042149 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109633021 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117583415 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.092102454 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119632691 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095880014 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119219249 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108358134 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116684048 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090406657 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119657079 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089571135 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132394872 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089625064 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.131229198 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088713698 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123897721 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092120922 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117749179 seconds)
  done (took 5.02367429 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096317142 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126464972 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.105514843 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.133814939 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.091058892 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12414377 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097012208 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119039931 seconds)
  done (took 2.000971011 seconds)
done (took 29.805117717 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106096556 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093529826 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131418258 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.101398775 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127239944 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102125628 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.117661285 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.09997517 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.130228119 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096790045 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133249378 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.088550169 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089946916 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116048241 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.101881857 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122685904 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.103893225 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.127251206 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.109277916 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.134627408 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.08895125 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.129159826 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.097918403 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138993038 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108734492 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.138697204 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133045433 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.095491995 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088644235 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.11880254 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.102894448 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.140561666 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.091682603 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.134860998 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095355564 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.12250931 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.088976066 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.120145717 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.104326172 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.129384061 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.094367612 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.128849876 seconds)
  done (took 5.828132172 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.118040362 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.161703534 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.088983334 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.120139788 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089856273 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.157556457 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.153682071 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.089849022 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089427626 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.143579246 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.145243138 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.089973531 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.118431563 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.089417056 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.089405062 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.119396111 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.112766715 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.142803652 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.148066683 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.1193061 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.164110016 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.149015368 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.124111039 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.141637092 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.159991155 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.124959698 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.139809181 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.15425974 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.1168807 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.118113452 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.119813947 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.150691608 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.088565555 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.118747885 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.130357925 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.152802119 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.146555857 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.159096084 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.120345703 seconds)
  done (took 6.085230229 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.097256539 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103080235 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138746266 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182362298 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163657635 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101465287 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098373525 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136470456 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104137411 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118577518 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090291736 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148822797 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105430619 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12723071 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089798718 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133005892 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.107652439 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.121222373 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.093454937 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138369916 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.107026803 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131098711 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101036229 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.12882503 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.088211358 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127948766 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.092617164 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133050774 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.095005302 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126900436 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.093243766 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123173447 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.092964455 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.130903207 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.092890263 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.12561673 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.111944627 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127403499 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.100963823 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.151840732 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.131620522 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.094085384 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140558374 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128502556 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.119397998 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.096391692 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126163893 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.098355006 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.088068238 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136613094 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098455768 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.11833917 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134522314 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.089039617 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088342748 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133119713 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.089915781 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.122264202 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.098161177 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12679646 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.108654472 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12405685 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103002843 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120081503 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.095256725 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118901233 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.08973717 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.1239949 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.111416734 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122550072 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128377178 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.119771089 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095456114 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127134622 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.0947871 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129518754 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.089481601 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133118961 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10022524 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123469554 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100037694 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092189085 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122463881 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.107863193 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.13357899 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126292524 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095827317 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125024211 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093572614 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.118510705 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103451754 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091370621 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123327967 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.104661291 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119161811 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091970096 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126033138 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093676731 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.118646482 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101800547 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124393058 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.089905877 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129515731 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.090266208 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122784016 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.098241521 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.1226171 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090161992 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12337806 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.096990247 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.089656994 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122339449 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.094116689 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.121522002 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102833786 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127277389 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.092479038 seconds)
  done (took 14.359981408 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235059352 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216484774 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.193109858 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.303155069 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.141596659 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116095888 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213316489 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.165299171 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089749473 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161773991 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176706505 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187207408 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.176289935 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.187307657 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172943634 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120735582 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.108729889 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.173256212 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.218230894 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.297824122 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.109191024 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134822518 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163662481 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161855145 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.109227162 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.137155087 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113397115 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.140677519 seconds)
  done (took 5.863768503 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106828561 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156288044 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098378808 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146433135 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147841215 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090570723 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125274692 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.091618273 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.103267597 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135628205 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.122150495 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.09802448 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.126775152 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.100150836 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120200625 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.100271815 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130927757 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099822094 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.122577681 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.094510667 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134173027 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.108370779 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126309905 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092721178 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137426286 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.092307953 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.122595038 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142698128 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.099852333 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146188457 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.087256914 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130651394 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.104444373 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.121089781 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.093454611 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.123121132 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.092720165 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.092697021 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122214978 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.088046131 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120608238 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081415401 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123305503 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105176041 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127594862 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089728919 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125676545 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.095161703 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127083287 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.087265718 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.092665108 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123675934 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.094347407 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132141235 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.093872009 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127773146 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.094218041 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.122661974 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.09954228 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123674948 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087383998 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121918353 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.096561408 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.125228776 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.098888678 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126865755 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091752891 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.122710368 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.095559018 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097050393 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.12307717 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099110805 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.117884847 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.09066457 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131400037 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098785073 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.124971451 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092396809 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.124366994 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.089835675 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.079254855 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.120411203 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077916004 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125318704 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.089745744 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122411345 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.092995906 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126013983 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106872192 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129538884 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.098599887 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.122381572 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.094110511 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124906505 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.0879493 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.124854307 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.107914122 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140155215 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089036662 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118354071 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105896109 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.122331262 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.08872946 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.082020762 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.133078441 seconds)
  done (took 12.776202839 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130725107 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.171584335 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122154807 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.109602992 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155965003 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162912496 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.098686569 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.097136259 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.122285838 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108960369 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125162833 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.0990861 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.124948919 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104618674 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162248108 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131041876 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.092511786 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.105203722 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126040322 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.175672249 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.109742984 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.160107855 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161160997 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093337127 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126982013 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.157380486 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.134482492 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.13516407 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103182258 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.162992035 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.135744528 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.134882802 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.164085378 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127691422 seconds)
  done (took 5.58463228 seconds)
done (took 51.60621808 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.22930123 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.423043747 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.202111699 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.202155155 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.252972331 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.228251458 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.22261724 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.396751351 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.958945364 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.195982231 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.201772602 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.203193959 seconds)
done (took 27.854649246 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.257596317 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.365484314 seconds)
    (2/2) benchmarking "String"...
    done (took 1.536564021 seconds)
  done (took 4.037342814 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.208739027 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.202980842 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.447799309 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.210674596 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.20397285 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.219859504 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.203146641 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.212969082 seconds)
  done (took 15.836292912 seconds)
done (took 25.476498052 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.275799297 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.400019204 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.472302978 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.234202637 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.205061539 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.206349056 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.207667854 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.256599238 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.207361837 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.221234033 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.21260018 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.475633497 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.221235716 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.593587729 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.205908065 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.213031488 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.222285691 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.441261489 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.217446655 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.253307177 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.192402302 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.216146187 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.209668582 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.22944628 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.214731469 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.216524615 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.220008249 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.211762873 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.408120093 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.235350154 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.252164672 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.208793191 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.222263364 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.21213563 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.318605509 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.224767921 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.399891693 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.217477199 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.201784365 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.205952459 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.415176184 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.61461129 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.206334538 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.215756703 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.211882817 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.282343838 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.199697115 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.933922817 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.208413766 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.210023513 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.214249257 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.613031968 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.228602173 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.212843123 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.213362287 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.459109584 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.235153575 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.242413321 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.241102007 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.21257672 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.20871851 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.20749818 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.221591821 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.222139049 seconds)
  done (took 143.929523688 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.208114862 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.212577978 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.211905291 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.215641225 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.213093032 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.212546986 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.208499327 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.208191295 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.212268041 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.240465764 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.212787605 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.21031586 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.213949892 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.168828617 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.21042341 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.230006275 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.213759846 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.225698409 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.211280634 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.209350605 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.211227335 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.213708729 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.226430965 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.20989744 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.215279761 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.290277915 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.256710852 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.217077674 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.213972779 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.209747558 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.210784723 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.221658426 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.840845233 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.068222336 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.217604816 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.234865279 seconds)
  done (took 80.448486233 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.210137645 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.210038844 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209644399 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.242494183 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.21058961 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.795186626 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803642393 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.935495997 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.406994631 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.625044431 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.529231453 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.214506365 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305473809 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.225902726 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.2113043 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.227197886 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.23964641 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.216763878 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211985863 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.786486063 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.225906945 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.362482448 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.392734836 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.226986267 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243622804 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.60910572 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211661961 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24400655 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.548028038 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.260593961 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21117673 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.626024169 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.001150491 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.330208264 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.213523293 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244045189 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.212648622 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.494633514 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211586707 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.212446971 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.215422495 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.918363172 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.216634319 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.798400134 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.216000608 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.207577323 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.216434917 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.213997858 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.316213117 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.966030554 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.233726449 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.212184304 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.214571613 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.212145367 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213782243 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.213071803 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.245829093 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.31637549 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.328363682 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.213355511 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.217026814 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245185363 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.213556081 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.365789562 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.218380723 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.003042177 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.293983913 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.33515865 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800704954 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.219044518 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312593713 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335273051 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.214453429 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.214688973 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.213870607 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.214957101 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.326043441 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.215406688 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.214673425 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.642888823 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214406434 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.391689705 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.230494788 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.64004256 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.317635415 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.214391582 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.619849556 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.220833503 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.215758055 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.031933779 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318793247 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.215672263 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.2149123 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215380829 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.642851576 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.805347728 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.489544377 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.225800345 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.590785671 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.220716352 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.649464921 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.78050214 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.938837116 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.221182607 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330029716 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.393126096 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.232057786 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.218568809 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.215772371 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.642914925 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.222064133 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.274442529 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.216980341 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.615161749 seconds)
  done (took 368.542333728 seconds)
done (took 594.057721082 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.937753097 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.886922411 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.016278331 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.912134916 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.877041251 seconds)
  done (took 10.778651258 seconds)
done (took 11.927468918 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.409554148 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.409641282 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.769420695 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.409706278 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251509873 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.427054382 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.390361796 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.237647228 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.32372904 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.302513852 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.324005482 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.270561095 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.253331712 seconds)
  done (took 18.927648784 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.564377378 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.220388597 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.298800121 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.5539456 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258554537 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.543522911 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.42803348 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.237178587 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42177608 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232852631 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232094986 seconds)
  done (took 18.141012752 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.564797874 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.220391194 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.304763928 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.554734873 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259171292 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.567825096 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.433363812 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.23814862 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.440193204 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234414723 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23210801 seconds)
  done (took 18.199653338 seconds)
done (took 56.416550322 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.263952708 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.390215045 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.24878579 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.232729543 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.227949961 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.230425331 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.234835113 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.230091167 seconds)
  done (took 11.210545029 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.225506235 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.228413527 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.229421807 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.228197076 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.227610723 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.227575492 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.225420996 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.226093176 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.225096711 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.225194497 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.227360663 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.228355565 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.225857335 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.225767129 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.227175893 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.227311462 seconds)
  done (took 20.781666109 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.227232146 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.226102005 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.226828388 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.226970962 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.226181207 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.227218384 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.227582643 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.226630172 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.225886463 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.226702697 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.226966022 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.226641167 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.227428428 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.226742021 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.226155328 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.227760724 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.226622878 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.226934718 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.231266934 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.227209401 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.22712886 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.227693367 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.226450951 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.227238496 seconds)
  done (took 30.603359148 seconds)
done (took 63.746335175 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.221210185 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.222194797 seconds)
  done (took 5.595850623 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.287327493 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.292363959 seconds)
  done (took 3.734404995 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.230084857 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.230491431 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.230664136 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.230425632 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.230981502 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.22973412 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.230432568 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.231846347 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.230918855 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.231121778 seconds)
  done (took 13.460021392 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.231786399 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.230067998 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.227196404 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.231714411 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.230556294 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.228759858 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.231454883 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.231313012 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.231685644 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.228713968 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.231053997 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.228800869 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.230660881 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.229672627 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.231942587 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.22953312 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.229363313 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.228640006 seconds)
  done (took 23.297221226 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.245022841 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.252937288 seconds)
  done (took 3.652921459 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.359775569 seconds)
    (2/7) benchmarking "second"...
    done (took 1.269885919 seconds)
    (3/7) benchmarking "month"...
    done (took 1.340392538 seconds)
    (4/7) benchmarking "year"...
    done (took 1.328824825 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.272226083 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.252548646 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.272196847 seconds)
  done (took 10.250216033 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.23386374 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.425113227 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.534898078 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.813200958 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.233569722 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.236075875 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.08512463 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.235385861 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.239156886 seconds)
  done (took 14.192738914 seconds)
done (took 75.336698263 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.229707479 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.24639006 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.244780532 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.249161354 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.530366295 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.256451752 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.235562982 seconds)
done (took 16.147581514 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.21257215 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.218141896 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.225349879 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.224158889 seconds)
  done (took 10.035981073 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.237516122 seconds)
    (2/2) benchmarking "read"...
    done (took 1.544497236 seconds)
  done (took 4.938569925 seconds)
done (took 16.130134816 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234274478 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.233850867 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.234680093 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.231914549 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.23485767 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.230787866 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.231594587 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.233414891 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.23515339 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.231939473 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.234221069 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.233803556 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233085616 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231612009 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232138188 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.234579441 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233097098 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.232285315 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.231115606 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231994031 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232431098 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23525987 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.232404858 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.232498172 seconds)
  done (took 30.749138847 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.234493582 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.232542613 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.235098067 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.235581876 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.232327818 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.235211096 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.235528291 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.232024762 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.235822279 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.23572323 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233267281 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.233454405 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.235310733 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.23258584 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236827862 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.233596352 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.236112782 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233354096 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235453199 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.234248487 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.235183797 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232808553 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.23375667 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237305127 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.234290824 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233327637 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.236291365 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.234131494 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236660543 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.233859824 seconds)
  done (took 38.195206357 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.241123673 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.243999268 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.235979723 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.235843337 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.236114322 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.237201041 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.236791322 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.236570461 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.236685993 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.236539397 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.236305415 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.236757859 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.236283174 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.236874354 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.237352231 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.237380453 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.237479708 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.237608899 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.238015624 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.237906875 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.239485657 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.239094979 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.23710934 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.237987472 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.238536 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.237742791 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.237589382 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.237783553 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.238106083 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.236712801 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.237857327 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.238065124 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.238353283 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.239335663 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.239714101 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.240095043 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.244232875 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.245684474 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.23880356 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.24017253 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.238574738 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.238825475 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.240066285 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.239117337 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.239081307 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.239482893 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.239794015 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.239104453 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.240392092 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.240185776 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.239834143 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.239876317 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.240523139 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.240662374 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.239208411 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.239046756 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.2404667 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.239858213 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.240345082 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.240371264 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.239122692 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.239120485 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.240138157 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.240385582 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.241220258 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.241162407 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.239989927 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.240778661 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.240983411 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.241608276 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.240963086 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.240997606 seconds)
  done (took 90.372896356 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.240769819 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239205968 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.238889258 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.238686877 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239607781 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.240947938 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.238725086 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241011253 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239466046 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.241832742 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241256978 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.239969291 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239425514 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.241286468 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241889725 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.239539525 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.242497413 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239257831 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.241619922 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.242119767 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241335176 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.23953775 seconds)
  done (took 28.452840136 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241902718 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24492488 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.240374529 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244004353 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.240583112 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243382918 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.242813732 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.243468504 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242214966 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238368595 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240466646 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242391786 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.241876151 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239510461 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241131201 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.24235039 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242871624 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242122228 seconds)
  done (took 23.519096117 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.240729719 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.241761942 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.243133297 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.241704422 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.24064729 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244106633 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241222242 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.243677046 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.243460901 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.24136669 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.243894568 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244701717 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.244142268 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241088437 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244394673 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.242327899 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.243900796 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241863021 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244431112 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241904348 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24114431 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245192494 seconds)
  done (took 28.505873672 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24429354 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.245348761 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.243338369 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.241498418 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.24280132 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.244755204 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.245666864 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.241846754 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.247059599 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.244794 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242741758 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.245849275 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.244925433 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.242879877 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.242981778 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242942625 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.245120146 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.242793283 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246490623 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.243531932 seconds)
  done (took 26.050299566 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245873178 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248262265 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.24753746 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247055197 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247577977 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.248340214 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248091547 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.248017728 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246222563 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.248208732 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.247715223 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247659472 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248473534 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.248126115 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247210591 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247964012 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248371996 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248105247 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.247726178 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249032237 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248495647 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.248993101 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.248741575 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.248934559 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.249773861 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2484371 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248165066 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.248801266 seconds)
  done (took 36.11471171 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249047322 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248426746 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.24589744 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.245591225 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.246227556 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.245892466 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.246408901 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.245918305 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248477125 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246207939 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.249922694 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.248853999 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249171043 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.249476441 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.248951754 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.249645945 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249243759 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.247042721 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247201827 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247491892 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.249454831 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248801906 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.250160509 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.247279248 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247346191 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.251076979 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248378105 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.247948909 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250278287 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248297319 seconds)
  done (took 38.615615916 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.300054849 seconds)
    (2/2) benchmarking "in"...
    done (took 1.294062383 seconds)
  done (took 3.765762798 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.248102131 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251384409 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.250458391 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247875427 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.249594507 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.250094508 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.25053417 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248297807 seconds)
  done (took 11.168163098 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.249633304 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.250507111 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.25125828 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.25078532 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.251741614 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.250624731 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257082353 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.272089117 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.251110085 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.253096587 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.258494564 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.258522182 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.253470833 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251289319 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.250292162 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253453352 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.251167077 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.251876173 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.252087516 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.252243543 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251608068 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254084536 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254262064 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.249599888 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.252891715 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.26336911 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.256059557 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.253047476 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252737441 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.255339941 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.252522837 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.249918855 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.252787714 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.252447194 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.252136235 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.253310885 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26016719 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275055564 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.258386486 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25251924 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253473625 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.251090034 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.254503266 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.25432077 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25531593 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.252332991 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.252733051 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.250069155 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.250898185 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.257249147 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.258310588 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253969628 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.250231599 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255641313 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.252977941 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259219599 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.274663084 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.256349236 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.263106431 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.263522161 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.265651146 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.278649909 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254051663 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.25437135 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264138432 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.276539929 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260672208 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.271026489 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.251282995 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.252941348 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.260496762 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266498798 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.280103239 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.25458 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255217653 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.252972155 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253275238 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254019026 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259724186 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.274656717 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.253590503 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253348876 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264563204 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275842438 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.252703233 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.253077782 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.253211688 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.254097045 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.255631574 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263885337 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.273624311 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.252749988 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.252662686 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.254232436 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.254040886 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.254287829 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.253419642 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254022959 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.251414605 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.254678959 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254400371 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25851218 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.26231773 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255339974 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.255545449 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.260202537 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.254349272 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253880893 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.259932391 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.255030939 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253614868 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.25676479 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.260124665 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.252782083 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259091599 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.262168621 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.255034757 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.255706934 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.253255073 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.256411544 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265926686 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.281529437 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.256515273 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.254687838 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.259763672 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.267441019 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255078167 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.257639571 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.255567713 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.252313732 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.251679503 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.255484242 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.254879992 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.255050498 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256795765 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255322672 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.252398534 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.255241379 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.256846389 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.255490186 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.254592847 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.255181819 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.255455718 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.256557025 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.254690937 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.256128189 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.261478378 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.254741968 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.255275503 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.255535136 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.252515177 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25617449 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.25520913 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.255645734 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.256142397 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255474741 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.254961137 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.254882704 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255587568 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.255592667 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25581582 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.256097649 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258798897 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.25473276 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.258003841 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.255314718 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.252995372 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.254904154 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.255632586 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.255061212 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.255907315 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.254460048 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.259804661 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.26447423 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.255990136 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.25634115 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.257614826 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255737692 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256825602 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256283649 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.259171296 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.264040507 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.256554631 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.26445102 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.255933948 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256282586 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.257414503 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.257123505 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.255857182 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257535765 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.261094147 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.263544957 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26919796 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282087657 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.257942453 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.260836045 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.259398381 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.261849314 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.261142246 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.257617794 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.259476755 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258781406 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257837317 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257562183 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.258686974 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.259665478 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.256430364 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.258006739 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.258337917 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.258115493 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259058995 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.258330693 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259071011 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.25652207 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259447124 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258722914 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.258881297 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.256464099 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.258556975 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.259305645 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.260132989 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.259218699 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.263849007 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.256333738 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259703156 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260022623 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.259200414 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.258194774 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.260687007 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261547812 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.259133957 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265843402 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.277910498 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.260749202 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267257553 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.278951102 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.260080447 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.262710973 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.260279794 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.259034754 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.262990777 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.268332081 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.260515785 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.259952739 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.259931676 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26143469 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260952353 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.267701412 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.257886635 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.261353078 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.261410987 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.260861507 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.258335314 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.262894315 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.261926043 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.261443039 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262973183 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261609893 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.260958265 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261897233 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.262012604 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.261202408 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.261971067 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26587653 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.270036605 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.266765993 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.261584221 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.263030571 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.262064915 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.266006633 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.261437271 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.261835618 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.262636393 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274645889 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.287750882 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269785269 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.283680409 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.263535595 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268298657 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.281885133 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.267001899 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262973071 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263672593 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.262811463 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.262841652 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.26132918 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263979473 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.264086782 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.264137265 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.264476559 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.267411757 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.264523862 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.265010306 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.264218 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.264214713 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.264655949 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.262662904 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.263905971 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.265741955 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265882727 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.26327664 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.263904876 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270803164 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285163869 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.266015871 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.265232467 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.263777218 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.264051487 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.265594768 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.264775586 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.268213971 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.272757247 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.27110519 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.273164081 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.26645992 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273779259 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.264826662 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.268914465 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.272325265 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.263677119 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.266834004 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.264422906 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.265677143 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273121854 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.28533874 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.268091653 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.270968612 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265073579 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.267200029 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.266479739 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.266594044 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266591203 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.266369493 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273349734 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.290137777 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.270291159 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267806054 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.265422925 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.26727808 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.267441332 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.266438244 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268872209 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.267348914 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.267057998 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.267248576 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.267220623 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.266934912 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.268356183 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.269525538 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.264262075 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.268145692 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274027077 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.28968677 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272774694 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.269100031 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.274459406 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267647948 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274511738 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.288561957 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.26776798 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.267731433 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.269012281 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.270298684 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.267506849 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.268363994 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.268129 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.269750562 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.271440894 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.268899597 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.269296165 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.268401485 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.268192193 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.26973382 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279730375 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.292122048 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.271456885 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27362996 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.267272597 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.272523354 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.272857149 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.269291037 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.269229741 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.272473161 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282044476 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278509097 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.2712497 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.270190385 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271990922 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269188454 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.270560064 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.270212722 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.270089611 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.270742346 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.270290272 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.270288102 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272220787 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.270236997 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.271598773 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271442442 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.271760618 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.280560618 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.269757348 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.271358397 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271576691 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.271267051 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.271500493 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.272379127 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.27147561 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271847832 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271005745 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.273375245 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279207789 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.277592879 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.274180062 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.271509538 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.271083424 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.270443522 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.272184396 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271364138 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.272346883 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271745251 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.274456873 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.272629228 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.272478484 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.269782176 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.27079742 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.271686652 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271763052 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275357358 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.279379203 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271325137 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.269144308 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.272766131 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272467438 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.270359346 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.272414578 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.278666232 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275920271 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.28340396 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.280921674 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.276927151 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.273591584 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275908515 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.28050089 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.271768044 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.272947779 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.272616119 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.273979868 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.274379292 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.276715714 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273916188 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.279651568 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.273612315 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.272881608 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281927473 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.297466587 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273962667 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.276344879 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.278569325 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.273345212 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.273366998 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.275833553 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.274307345 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280323396 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.294885144 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276310204 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276314709 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.274471998 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.277183462 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279159498 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274477592 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.273748544 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.272160867 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.275976869 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274527229 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275468448 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.273093612 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.27496289 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.274978608 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.279741207 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.282913854 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.273775543 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277261686 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.27615436 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.275951889 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275860848 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27705776 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.274132867 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.274370501 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.275196235 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276821668 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.27588198 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.277855226 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.276136158 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.278857328 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.278395167 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278275014 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280269433 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.287248959 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.283672982 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.274283321 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.276020842 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.277033106 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.279131405 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278228924 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.2770665 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277267272 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.277734897 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.277083551 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276359875 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.277976828 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.281008749 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294045278 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.299318877 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27721076 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.279362992 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281963755 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.278908674 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.276176835 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.279156737 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.279758762 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.282632706 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.285990576 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.277814655 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283882305 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296785898 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.2784783 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.282286565 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.281416238 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.285593651 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.281460561 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277597047 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.279062986 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.284722499 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.294090602 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279564962 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289224965 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307562362 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.298659193 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.279741554 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.279607815 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279285194 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.278806667 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.281151184 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.279912071 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.279009109 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280721752 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.281010292 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.281278623 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284884617 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.281095984 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.282143758 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.279799465 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.279763209 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.279906866 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.277912978 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.278614407 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.279772008 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.279513754 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.278932458 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.27936547 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.278496988 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.292262715 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.30553423 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.279482552 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.279558715 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.27699236 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.281911086 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.28180151 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290690951 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.286522647 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.280866292 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.27966533 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.281148162 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278263278 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.278722737 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.280263605 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.279533978 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278841634 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.278215764 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.29174096 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.305086304 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.28382485 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.279979215 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280046896 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.281203987 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281154316 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281395322 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280195243 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.281418089 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.284053246 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282905247 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.279100381 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.280405655 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.284661467 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.287886653 seconds)
  done (took 756.604288983 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279482024 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278416413 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278428436 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276669323 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278360728 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279334003 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277060065 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.277401986 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276920387 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278655418 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278376452 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278670104 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278497736 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.280143644 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27819405 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279091034 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278425183 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.279241523 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280404457 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280124746 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278925792 seconds)
  done (took 28.050253385 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.280814507 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.278233987 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.27898472 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.282208742 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27958481 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.282148286 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280003393 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282645725 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282112424 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279603948 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.282286366 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281204274 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.279409393 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.279757385 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280114913 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282947759 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.281137281 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279105546 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.283703055 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28030287 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281822469 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.280377182 seconds)
  done (took 29.380479497 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.282095348 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.282818165 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.281808946 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.280347649 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.283071168 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.279315088 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.283264832 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.282830221 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.283379626 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.283444185 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.282794904 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.282939287 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.29036851 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.288013784 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.283825293 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.284279903 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.2832882 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.282881299 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.28341538 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.280236119 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.289342151 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.281121093 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.280966395 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.282637733 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.284641584 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.284172132 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.283475693 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.285166483 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.285974228 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.288777429 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.284475688 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.283867413 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.287164501 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.282814773 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.28531488 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.288237221 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.284257314 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.282178389 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.283961169 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.294036458 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.306530605 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.285367384 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.291879826 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.304947894 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.285134614 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.287549211 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.293316507 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.283181507 seconds)
  done (took 62.906611096 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.284695529 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.28507114 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.283026752 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.286235423 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.284838478 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.285275137 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.285726256 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286364141 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.284207359 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.283133536 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.2863831 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.283176582 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.283399522 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.285271577 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.28649411 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.283980201 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.285424579 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.284527627 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.283650363 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.284822052 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.28331171 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.286151201 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.287040282 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.285505698 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287124049 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.285129143 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.284117781 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.287461804 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.284421216 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.285108546 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.288578658 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287845577 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.287769882 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.286155313 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.285947726 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.288762071 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.287998546 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.285405047 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.28845163 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.286703883 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.289312644 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287611608 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.288967689 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.289846711 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.286363131 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.286247126 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.286218923 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.28689708 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.287217018 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.288392122 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.288827625 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.28694728 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.29042161 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.285969256 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.289894327 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.290206767 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.286927723 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.288404305 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.288487383 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.286378737 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.286876646 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288936547 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.287535111 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.289647939 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.288637911 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.288315635 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.287670241 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288808039 seconds)
  done (took 88.696666021 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289224686 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.289360266 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289931093 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290474572 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290569636 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.288292198 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290664417 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.291077958 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.29040016 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290279909 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292084019 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290267081 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.291741042 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.2909362 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.290883818 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291227628 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290744719 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291283605 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290857947 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291348205 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.291798638 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.290407926 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.291713556 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291730511 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292861647 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.291190822 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291507119 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292354623 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291756326 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291320147 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292635185 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.291664626 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.292751701 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291586446 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.293996084 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.292043804 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292086624 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291617846 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.291216055 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.292171947 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.29231739 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293066494 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.29248283 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.292049326 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291787329 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292240907 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292053107 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.293050828 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.293494371 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292841389 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.294001039 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292971479 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292563413 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.293344812 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.29245565 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.29440313 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293125233 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293769675 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295651143 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294021929 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294360383 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.294305605 seconds)
  done (took 81.309897103 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293240309 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.293477448 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.290254721 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.290987975 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.293367529 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29177002 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292491908 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.293001389 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.294167856 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.29407856 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295312302 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290236698 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292637146 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29528718 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.291368623 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293823196 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292035081 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292377589 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294253416 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.292297265 seconds)
  done (took 27.067500226 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.291878976 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294503396 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.291476671 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293388402 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.295489546 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293761266 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.295327249 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295497537 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29227497 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295014482 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29559229 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29442173 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293599064 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.294422842 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294772867 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.2936284 seconds)
  done (took 21.917236072 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.293471653 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.296109747 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296685656 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.29562297 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.292964245 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.293615565 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.296627894 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.293765273 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.293591223 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.297146061 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.296705116 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.295856401 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.296004471 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.296064172 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.29413471 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.29728769 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.294267533 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.29419739 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.296242749 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296812634 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.295626381 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.295315315 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.297622339 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.297332441 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.295925251 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.294959078 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.294861264 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.294855339 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.295220468 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.296820083 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.296077408 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.295359933 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.294801651 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.296067676 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.297759087 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.296021076 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.297176926 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.297687213 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.297982859 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.297487101 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.298373035 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.29633073 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.296788578 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.297193313 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.298339402 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.29806096 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.295256843 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.295233478 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.295955302 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.296813249 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.29950548 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.298339628 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.298692647 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.298011235 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.298189494 seconds)
  done (took 72.509784333 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298352755 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298146764 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.296599603 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.299835027 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.299172354 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.296016579 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.298201634 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297411757 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296956523 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.2994654 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297037879 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30156778 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297068557 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299065287 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297072292 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299495705 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.296608586 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.298487097 seconds)
  done (took 24.581844521 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.297385861 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298445436 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.300267357 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.297253168 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.297167961 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.300361532 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.297535446 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.299696067 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299533516 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29780853 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297332197 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.300596593 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301405212 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.300444127 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.298526505 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298836051 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.300856395 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299343311 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.29892781 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297088615 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300616764 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301679174 seconds)
  done (took 29.797785694 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.299391466 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.299922934 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.299485015 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.317867646 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.320049546 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.300370416 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.299890995 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.299720006 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.326035705 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.352991609 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.348465747 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.320155615 seconds)
  done (took 17.002087052 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299131058 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302711089 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29868443 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301775499 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302186048 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298005638 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299231376 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299875962 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301630312 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299185111 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29952314 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30158088 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301010387 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29909593 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301875507 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301825759 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300924672 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300550868 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300559379 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302904499 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299936912 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302319534 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300687289 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300866515 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301207844 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300015979 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304540807 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300829608 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301883798 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303242109 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304303674 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301177694 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303968995 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300447428 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302829674 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304008665 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302968249 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304298059 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305145414 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302936001 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304107769 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30515419 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304963852 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30230723 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304855811 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302887235 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302164883 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302645452 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303030115 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306213226 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305452345 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303464809 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304901034 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306511858 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305653832 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305197237 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302927095 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302561419 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304964856 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303101228 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303012934 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305251136 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302890545 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303257411 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304540743 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303700383 seconds)
  done (took 87.185854343 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304443532 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304435729 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303804236 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305413406 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30276583 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303524611 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303730576 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305173255 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304857535 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303838813 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305707537 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303169078 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304528366 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303249439 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304272303 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303865619 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303784275 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30443228 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304061141 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305841519 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303789072 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303743365 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305798435 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304778176 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304783231 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306499435 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304723595 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306230595 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303920027 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305256513 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304992799 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304727551 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306132849 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304933032 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305228524 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304815742 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305856074 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307270565 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30590736 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307886725 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305401156 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308978508 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305769209 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306910987 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306435801 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307638103 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306176502 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306364636 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306604031 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307123243 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306657352 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307875945 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306684997 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307304801 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305716533 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306228363 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306458102 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306851516 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30706467 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310629846 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306133618 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307205116 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309186314 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30700882 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307252014 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30698526 seconds)
  done (took 87.399218679 seconds)
done (took 1771.075059294 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.470894555 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.425453381 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.30880093 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.32268289 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.308226499 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.334026765 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.316399577 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.308796261 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.308688452 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.309982138 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.308308573 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.496247106 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.363776087 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.310059344 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.309602587 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.402396171 seconds)
  done (took 26.832350386 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.338487462 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.317693618 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.430795171 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.337671824 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.337842402 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.503472626 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.373881334 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.320890564 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.493358118 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.361368159 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.32113331 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.342555077 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.315344013 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.319669612 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.337506943 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.501711291 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.577214186 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.310751874 seconds)
  done (took 29.069609678 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.777106455 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.340454909 seconds)
  done (took 5.346835207 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.334019147 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.315671551 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.316084006 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.313950471 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.317683075 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.310000618 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.314408456 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.307785476 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.309321077 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.449397783 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.323024069 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.327578223 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.336785931 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.317851013 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.312825421 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.355477744 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.462237139 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.315842421 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.312315361 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.321721112 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.315957069 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.404891135 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.358281106 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.315531768 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.445542405 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.315863158 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.323855156 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.32339689 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.492837858 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.313786409 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.31530954 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.316681425 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.317556562 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.250726426 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.865826575 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.313790101 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.340894813 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.323198131 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.313623469 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.482993356 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.316879518 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.322323554 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.316620236 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.849062941 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.472034445 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.434246957 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.339932407 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.322191059 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.317409604 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.38045162 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.320653918 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.317823604 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.361540654 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.138605344 seconds)
  done (took 84.574640376 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.353080251 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.309426373 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.488871666 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.331604543 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.307928571 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.315025033 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.315816051 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.602687371 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.373803548 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.309738656 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.662897261 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.885127304 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.336426907 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.345674463 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.156523188 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.360044817 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.309845086 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.310453261 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.333803714 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.31768162 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862759976 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.316484283 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.315162055 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.474443625 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.347745291 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.828619214 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.316344013 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.334190189 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.314063105 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.309115451 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.827292184 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.335614813 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.364309814 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.311939217 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.580278773 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.696731652 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.654749617 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.315506808 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.336992385 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.312272584 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.329847782 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.814259653 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.686528619 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.31581738 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.32838207 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.838011196 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.316780261 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.324917404 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.313889215 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.557732975 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.310423949 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.31191903 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.323516371 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.31247176 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.3117296 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.405945279 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.379398584 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.827500429 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318482453 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.313609596 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.336869042 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.31166017 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.315097511 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.314563922 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.316308527 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.695616086 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.464487969 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.311710039 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.683657982 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827613266 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.334701441 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.888622838 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.333734146 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.344025058 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.322392296 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.31198808 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.331176603 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.811335097 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.325991246 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.31212235 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.655642377 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.315005355 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.637142406 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.336848025 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.313767707 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.889562768 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.329064753 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.391323307 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.312569173 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.324145227 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.312764727 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.315170181 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.585479599 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.372608173 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.315470053 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.313750118 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.351549567 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.313377477 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.334023465 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.320055366 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.890826295 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.343547796 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.314540173 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.3151001 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31718577 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.313830671 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.318142279 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.314664932 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.576445397 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.314125194 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.322936398 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.315755734 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.313854801 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.324404855 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.463803556 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.322965578 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.632739371 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.324946772 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311931512 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.316296261 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313212812 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.356743447 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313744171 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.311711748 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.231381706 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.621251086 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.33006588 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.314214416 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.315338082 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.320336504 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313691614 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.315467358 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.336992381 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.316165133 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062904933 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.361514076 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.342953475 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.311764202 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.318162704 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.314821374 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.313365238 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.315397751 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.607619728 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.591912192 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.473187163 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.314723122 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.314493951 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.045925242 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.362709696 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494741452 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.336479669 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.318407216 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562565048 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.490106523 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.317007274 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.313834429 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.317708002 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.57341712 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.319841484 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628652821 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852973802 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.339396004 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.314732142 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.067431168 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.056743524 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.323812272 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.313196604 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.637819521 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.338288523 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.314031691 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.313756532 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.313841258 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.315088022 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.319765813 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.317736664 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.314291728 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.315205661 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.449045682 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504956265 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.334076367 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.32267926 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.817973536 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.322283756 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320424703 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.319273895 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.31925875 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.316291343 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.368474434 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.318431572 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.332867168 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.31790014 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.322740657 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.888741735 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.325291811 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.323550908 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504736782 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.990050677 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.339987401 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.316106072 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.318774947 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.19902104 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.847518378 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.337942828 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.631522896 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.329163774 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.356898685 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317978643 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.372703342 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.8445456 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.327070982 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.317196622 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.959406853 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.340054275 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.842520497 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.317032313 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.319113669 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.897043212 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.339915622 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.322063696 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.321610241 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324428583 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.632175714 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.320034208 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.33948885 seconds)
  done (took 494.41578269 seconds)
done (took 641.465179983 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.317823281 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.3235062 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.314186923 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.324245866 seconds)
  done (took 10.519498512 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.328930727 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.325014173 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.325599778 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.325259531 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.32763751 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.325220033 seconds)
  done (took 9.198253199 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.319020386 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.325735493 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.327859969 seconds)
  done (took 8.212932836 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.529062308 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.339021836 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.650489389 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.351035891 seconds)
  done (took 9.111785866 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.326114056 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.326597757 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.325936933 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.327906206 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.330826016 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.33031378 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.329945148 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.329919874 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.331021547 seconds)
  done (took 13.199789516 seconds)
done (took 51.481202339 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.532254121 seconds)
    (2/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.357489174 seconds)
    (3/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.428014888 seconds)
    (4/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.321279492 seconds)
    (5/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.346358943 seconds)
    (6/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.30695937 seconds)
    (7/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.48475564 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.952714002 seconds)
    (9/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.156326054 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.598727885 seconds)
    (11/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.332203779 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.361810618 seconds)
    (13/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.308979336 seconds)
    (14/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.35134873 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.349137631 seconds)
    (16/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.307751422 seconds)
    (17/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.292353298 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.220944726 seconds)
    (19/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.163488745 seconds)
    (20/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.309241929 seconds)
    (21/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.339191474 seconds)
    (22/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.365851252 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.321477482 seconds)
    (24/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.370712518 seconds)
    (25/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.318958253 seconds)
    (26/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.310750209 seconds)
    (27/286) benchmarking ("sort", BigInt, true)...
    done (took 2.321254968 seconds)
    (28/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.317971848 seconds)
    (29/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.32734101 seconds)
    (30/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.822269526 seconds)
    (31/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.659785552 seconds)
    (32/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.414469772 seconds)
    (33/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.914894975 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 2.322169539 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.15209723 seconds)
    (36/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.320956861 seconds)
    (37/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.348310628 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.33065931 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.43277602 seconds)
    (40/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.409268469 seconds)
    (41/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.310215683 seconds)
    (42/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.311179144 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.939518848 seconds)
    (44/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.500865067 seconds)
    (45/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.849709791 seconds)
    (46/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.318585823 seconds)
    (47/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.653642588 seconds)
    (48/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.316804269 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.725544426 seconds)
    (50/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.493180984 seconds)
    (51/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.312509534 seconds)
    (52/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.311697165 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.449814289 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.578227785 seconds)
    (55/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.677964867 seconds)
    (56/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.457375549 seconds)
    (57/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.826346872 seconds)
    (58/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.170328508 seconds)
    (59/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.329483107 seconds)
    (60/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.319438714 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.389779529 seconds)
    (62/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.572223812 seconds)
    (63/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.335264184 seconds)
    (64/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.330674973 seconds)
    (65/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.380338014 seconds)
    (66/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.321292742 seconds)
    (67/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.351566905 seconds)
    (68/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.311909122 seconds)
    (69/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.319330598 seconds)
    (70/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.332164355 seconds)
    (71/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.330297409 seconds)
    (72/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.0747096 seconds)
    (73/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.345359631 seconds)
    (74/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.351647 seconds)
    (75/286) benchmarking ("sort", Float32, true)...
    done (took 2.325327316 seconds)
    (76/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.332816012 seconds)
    (77/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.813019746 seconds)
    (78/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.396343379 seconds)
    (79/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.471592803 seconds)
    (80/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.568363323 seconds)
    (81/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.312101217 seconds)
    (82/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.31302152 seconds)
    (83/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.343258163 seconds)
    (84/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.344923525 seconds)
    (85/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.437618046 seconds)
    (86/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.321418473 seconds)
    (87/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.353819557 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 2.324628974 seconds)
    (89/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.313642392 seconds)
    (90/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.34766893 seconds)
    (91/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.411942101 seconds)
    (92/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.313560885 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.900947047 seconds)
    (94/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.320857111 seconds)
    (95/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.351469511 seconds)
    (96/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.318703309 seconds)
    (97/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.315100834 seconds)
    (98/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.376395997 seconds)
    (99/286) benchmarking ("sort", Int8, true)...
    done (took 2.334255188 seconds)
    (100/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.365786927 seconds)
    (101/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.396848952 seconds)
    (102/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.23894686 seconds)
    (103/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.09565597 seconds)
    (104/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.423888103 seconds)
    (105/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.162987374 seconds)
    (106/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.429056407 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.223916956 seconds)
    (108/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.315077544 seconds)
    (109/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.321735256 seconds)
    (110/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.329180994 seconds)
    (111/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.33628657 seconds)
    (112/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.466184935 seconds)
    (113/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.314803763 seconds)
    (114/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.355552667 seconds)
    (115/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.320167912 seconds)
    (116/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.363264011 seconds)
    (117/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.34992694 seconds)
    (118/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.090787029 seconds)
    (119/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.338137953 seconds)
    (120/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.329651493 seconds)
    (121/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.549250059 seconds)
    (122/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.316261421 seconds)
    (123/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.317654167 seconds)
    (124/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.354983612 seconds)
    (125/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.443796109 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.660384675 seconds)
    (127/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.418199662 seconds)
    (128/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.329946518 seconds)
    (129/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.413737651 seconds)
    (130/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.316056935 seconds)
    (131/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.160306942 seconds)
    (132/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.340167578 seconds)
    (133/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.331359698 seconds)
    (134/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.35485858 seconds)
    (135/286) benchmarking ("sort", Bool, false)...
    done (took 1.836202739 seconds)
    (136/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.352533851 seconds)
    (137/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.608972253 seconds)
    (138/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.178383132 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.082494528 seconds)
    (140/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.328917158 seconds)
    (141/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.609912966 seconds)
    (142/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.279313035 seconds)
    (143/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.321742057 seconds)
    (144/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.461654406 seconds)
    (145/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.324717433 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.722001928 seconds)
    (147/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.335540823 seconds)
    (148/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.485609558 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.105539704 seconds)
    (150/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.357427707 seconds)
    (151/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.112310909 seconds)
    (152/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.329967561 seconds)
    (153/286) benchmarking ("sort", Float32, false)...
    done (took 2.333283195 seconds)
    (154/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.325551325 seconds)
    (155/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.318657587 seconds)
    (156/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.338334321 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.35267751 seconds)
    (158/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.435370429 seconds)
    (159/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.156352363 seconds)
    (160/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.340173304 seconds)
    (161/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.407439484 seconds)
    (162/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.331295213 seconds)
    (163/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.489830607 seconds)
    (164/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.359726003 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.725929067 seconds)
    (166/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.688520888 seconds)
    (167/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.325320036 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.227977868 seconds)
    (169/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.318268375 seconds)
    (170/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.078744424 seconds)
    (171/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.461544025 seconds)
    (172/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.33300856 seconds)
    (173/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.331609391 seconds)
    (174/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.841100476 seconds)
    (175/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.866301378 seconds)
    (176/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.23169049 seconds)
    (177/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.336972053 seconds)
    (178/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.319589923 seconds)
    (179/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.683791095 seconds)
    (180/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.340982491 seconds)
    (181/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.332035751 seconds)
    (182/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.332295236 seconds)
    (183/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.321487748 seconds)
    (184/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.338101749 seconds)
    (185/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.319569915 seconds)
    (186/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.095525252 seconds)
    (187/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.358738905 seconds)
    (188/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.325113648 seconds)
    (189/286) benchmarking ("sort", BigInt, false)...
    done (took 2.340635412 seconds)
    (190/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.375966069 seconds)
    (191/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.341914966 seconds)
    (192/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.463097636 seconds)
    (193/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.32028487 seconds)
    (194/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.430350751 seconds)
    (195/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.382740505 seconds)
    (196/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.320314799 seconds)
    (197/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.416699625 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 2.333197171 seconds)
    (199/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.333275492 seconds)
    (200/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.321448175 seconds)
    (201/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.396777469 seconds)
    (202/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.333658656 seconds)
    (203/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.344921769 seconds)
    (204/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.085742148 seconds)
    (205/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.415882415 seconds)
    (206/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.334540354 seconds)
    (207/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.331410492 seconds)
    (208/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.103017638 seconds)
    (209/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.350068186 seconds)
    (210/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.331087696 seconds)
    (211/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.957437719 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.568234221 seconds)
    (213/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.346086416 seconds)
    (214/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.31487777 seconds)
    (215/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.361932619 seconds)
    (216/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.448082103 seconds)
    (217/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.340171793 seconds)
    (218/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.337363756 seconds)
    (219/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.338714586 seconds)
    (220/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.334789912 seconds)
    (221/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.375072475 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.443081898 seconds)
    (223/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.419361378 seconds)
    (224/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.932473298 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.238915741 seconds)
    (226/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.374724587 seconds)
    (227/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.46712275 seconds)
    (228/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.323573072 seconds)
    (229/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.362732075 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.665183944 seconds)
    (231/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.623508386 seconds)
    (232/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.361902597 seconds)
    (233/286) benchmarking ("sort", Float64, true)...
    done (took 2.335239959 seconds)
    (234/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.333405974 seconds)
    (235/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.32224533 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.342752228 seconds)
    (237/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.397862833 seconds)
    (238/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.349869728 seconds)
    (239/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.330009054 seconds)
    (240/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.936338209 seconds)
    (241/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.334541652 seconds)
    (242/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.420753902 seconds)
    (243/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.108771675 seconds)
    (244/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.336633227 seconds)
    (245/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.338104703 seconds)
    (246/286) benchmarking ("sort", Int8, false)...
    done (took 2.3375925 seconds)
    (247/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.327260476 seconds)
    (248/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.547255184 seconds)
    (249/286) benchmarking ("sort", Float64, false)...
    done (took 2.354676685 seconds)
    (250/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.237918018 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.363275463 seconds)
    (252/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.345787421 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.722877181 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.741626568 seconds)
    (255/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.323719774 seconds)
    (256/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.340414792 seconds)
    (257/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.362760008 seconds)
    (258/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.354225997 seconds)
    (259/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.332815945 seconds)
    (260/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.668297054 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.337287698 seconds)
    (262/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.419433044 seconds)
    (263/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.346624758 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.419068217 seconds)
    (265/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.338407004 seconds)
    (266/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.328378046 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.419955552 seconds)
    (268/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.353832369 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.447180554 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.335116681 seconds)
    (271/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.462428594 seconds)
    (272/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.363989479 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.174460057 seconds)
    (274/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.347566072 seconds)
    (275/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.528425858 seconds)
    (276/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.377926294 seconds)
    (277/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.363118275 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.380165442 seconds)
    (279/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.326108363 seconds)
    (280/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.438320164 seconds)
    (281/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.78983047 seconds)
    (282/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.32646757 seconds)
    (283/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.418693972 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.363164912 seconds)
    (285/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.401817687 seconds)
    (286/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.338949397 seconds)
  done (took 565.601532084 seconds)
done (took 566.843506899 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.377515572 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37168345 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.354338163 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.375831001 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.467224616 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.531100715 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.36478703 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.356982421 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.402617922 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.405150331 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.353576231 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.531436216 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.357347778 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.356104949 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.354554675 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370531261 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.347853697 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.362080437 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.372262389 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.364578837 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.371920065 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.354360543 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.405256166 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.531222777 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.359704708 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.357752134 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.360756071 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.376247585 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.468717567 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.359360662 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.359730416 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.366462437 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.348479589 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.36161816 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.351264506 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.375896098 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.367737513 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.36481165 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.359898566 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.388708047 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.350097144 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.363119362 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.357926933 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.357416643 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.358259125 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.361550702 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.358224449 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.36223479 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37130051 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371705358 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.350721777 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.378207351 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.360478555 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.358913175 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.368485821 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.358430825 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.361383909 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376214378 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.378835611 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375631445 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.358473406 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.362813152 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.361490685 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.374809319 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.365764022 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.359130682 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.359415462 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.362295864 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.355392086 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.371839945 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.358835766 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.375457398 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.363412905 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.375321941 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.39303399 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.35314928 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.356840872 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.360799646 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.369253831 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.359989884 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.371325958 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375793347 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.366242316 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.360676608 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375388817 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.537159134 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.372184534 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.36172878 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.369087996 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.382362641 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.36842667 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.371755527 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.364328077 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.357296208 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.370198702 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.364700486 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364077426 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.363687258 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.367476909 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.371823101 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.352017563 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378685259 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.357510205 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.358139035 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.360951125 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.374520754 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.352203443 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.361330635 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.382523914 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.408610389 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.363403101 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.351472411 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.382232138 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381284758 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.371587162 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.364533786 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.358131583 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.366191193 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.364450651 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.375371208 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.364172308 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.361541547 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380367408 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.364744774 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.358396945 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.356931507 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.364270061 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377196449 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.483194728 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.373532648 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.394480219 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.361056908 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.367999481 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.393005055 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381663157 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.395348153 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.366590348 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380861667 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.379336931 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.360575011 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.37450258 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.374467103 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.365416592 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.369388492 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.359213994 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.394153598 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378100231 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378229979 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.385468384 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.484980643 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.363265115 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.353245026 seconds)
done (took 226.257654196 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.419738863 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.34807774 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.452014067 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.356737291 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.456853753 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.479846829 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.353947157 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.354361251 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.35413561 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.735976501 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.353526652 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.364972033 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.357787256 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.35569825 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.439046002 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.355246368 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.354340938 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.735328816 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.35669036 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.428216095 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.353482728 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.354094347 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.356562774 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.782716324 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.357817579 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.353123322 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.438035621 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.358777292 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.702738885 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.34985485 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.355501564 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.741872267 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.461502133 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.375174553 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.367960051 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.366308445 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.475949437 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.376343517 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.4602788 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.44018145 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.452533274 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.396598731 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.352447389 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.357070213 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.359598128 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.359523859 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.355983282 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.386255988 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.35108947 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.367019339 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.701676437 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.370263833 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.358299919 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.358243917 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.357744458 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.388766069 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.358901171 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.360445147 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.451282054 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.36047734 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.430587921 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.741920829 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.781229204 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.361924584 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.357631929 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.358924995 seconds)
  done (took 106.347088471 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.426626068 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.435035613 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.474018256 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.361063676 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.407881966 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.476830405 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.361532729 seconds)
  done (took 11.215461854 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.369216114 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.362500591 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.409536261 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.410683996 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.360566401 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.575822452 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.361259569 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.371812412 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.360227688 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.436609644 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.362685524 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.36293665 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.368399758 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.357095754 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.410017491 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.374078132 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.477370783 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.362884259 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.362302289 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.513541669 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35879981 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.367693197 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.439859755 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.374176615 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.364048453 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.369539434 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.266895691 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.362604667 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359226627 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.362318548 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.360082566 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.464025347 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.364762595 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.360847909 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360440757 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.521913211 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.363039718 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361158974 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.362956982 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.363919243 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.362916658 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.363088708 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.363251691 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.361922087 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.362921247 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.38706319 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.364929262 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.362984728 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.363915086 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.364780443 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.438927449 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.36570325 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.362382493 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.363758771 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.442280428 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.37178411 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.365243581 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.362673242 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.365636094 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362856583 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.517033861 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.41284229 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.364932842 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.410967803 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364827313 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.364442702 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.365362279 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.364748067 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459530081 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.365126263 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.413514737 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.362509753 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.588973001 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.388882327 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.366296428 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.367975679 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.368115862 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365708117 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.362319149 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.372813768 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.363309107 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.367507602 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.372314912 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363103503 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364128866 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.550400242 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.522795423 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.362710164 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.379462867 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.371951518 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.363269477 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.441005754 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.365706568 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.363624927 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.418855598 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.481176717 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.44817681 seconds)
  done (took 141.059174102 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.371259549 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.37524777 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.370477852 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.389278716 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.367097692 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.366952396 seconds)
  done (took 9.518026357 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.370093204 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.368533841 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.36751907 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.36726349 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.365632746 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.369043445 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.368131613 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.369681952 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.37097696 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.367831472 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.369121456 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.369690745 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.370119455 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.368662192 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.368850442 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.368692204 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.368241804 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.366246221 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.369139298 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368379708 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.366904312 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.369412472 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368316109 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.370016258 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.372743993 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.369882023 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378031383 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.368905538 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.368561951 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.377084377 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.388902876 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.37089613 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.371317456 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.375827053 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.374804113 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.372109254 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373202522 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.371761666 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368737091 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.370442277 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.371944512 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371497306 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.370908907 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.372199757 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.372048531 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.375911288 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.375852588 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378514667 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.370217233 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.372535457 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.37260086 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.371135803 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.372374295 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.37284523 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.373348355 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39314054 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.376275883 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.372280625 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.371388915 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.374372926 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.373623595 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.373021778 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.374153621 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.376829678 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.368951759 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.374495463 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.374156692 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375934551 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372303252 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.371859428 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.372511521 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.370413325 seconds)
  done (took 101.060481046 seconds)
done (took 370.469273203 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.809153419 seconds)
  done (took 4.092849517 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.464567687 seconds)
  done (took 3.749156269 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.282292327 seconds)
  done (took 23.571682227 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.377630486 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.425529336 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.377420591 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.373726006 seconds)
  done (took 10.839977234 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.616798805 seconds)
  done (took 3.900166975 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.364537622 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.366824693 seconds)
  done (took 6.015633032 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.690603639 seconds)
  done (took 3.972947659 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.788758694 seconds)
  done (took 4.07685733 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.380746281 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.379634927 seconds)
  done (took 6.052635701 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.353081428 seconds)
  done (took 3.636380869 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.586488255 seconds)
  done (took 16.871366468 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.369309627 seconds)
  done (took 3.655632704 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.397314057 seconds)
  done (took 3.680847475 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.005650633 seconds)
  done (took 6.28892946 seconds)
done (took 101.68716784 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.365251858 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.372943783 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.375256836 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.372052186 seconds)
  done (took 10.769366533 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.407181048 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.406439672 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.408459002 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.417465478 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.408672496 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.40631577 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.400072129 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.400551112 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.418093566 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.411446685 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.408833474 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.409664531 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.407404857 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.400820836 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.41061483 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.409961739 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.418383347 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.410588175 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.399806501 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.410363345 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.374380302 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.419087709 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.411282741 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.376324451 seconds)
  done (took 35.038195974 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.893296592 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.446171091 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.528968392 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.428091746 seconds)
  done (took 7.582301907 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.426690063 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.427350847 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.441377888 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.478925761 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.505478431 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.438364412 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.399383185 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.397638442 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.383700658 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.428207583 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.504358539 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.444760501 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.512458708 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.375132785 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.572112689 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.377346042 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.376181608 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.427295333 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.479948308 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.499324296 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.377189948 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.428800826 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.43092977 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.446605155 seconds)
  done (took 35.865833985 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.376606588 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.394955055 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.376408505 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.376114362 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.38431747 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.375329808 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.37678373 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.377598729 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.375530823 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.381892637 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.375898523 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.389459295 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.376544034 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.375819945 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.383161994 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.378145925 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.38256343 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.376714199 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.376847857 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.383329168 seconds)
  done (took 28.882824784 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.370833065 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.37114022 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.72336392 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.627024894 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.371232154 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.379544226 seconds)
  done (took 14.131870721 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.449720147 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.601871671 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.385337665 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.749720924 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.833325996 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.378721275 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.378391733 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.635056512 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.972155522 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.949479847 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.445756935 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.449040789 seconds)
  done (took 20.518951026 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.372910153 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.378742994 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.393854751 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.396035978 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.434206994 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.382539655 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.386138299 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.371041492 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.442303598 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.439981909 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.383424166 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.436660765 seconds)
  done (took 22.108427348 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460122118 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374646664 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374206607 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420793156 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376132554 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586878977 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.423884037 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.096600271 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.397728713 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647436484 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373461025 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470427398 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.630280265 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376745013 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382427471 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.360822894 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602268924 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878812857 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376391315 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374776978 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407865824 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38182704 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38376995 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.606069309 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596172544 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37486302 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.63717062 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37359842 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.669757373 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390856103 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387830388 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376764363 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65182745 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055055138 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497518838 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59762398 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402153177 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377035075 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.384582431 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.377006942 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399273251 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384969392 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388868061 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376542926 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377957978 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381389507 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112757901 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.402164337 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.375077585 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376364938 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651539857 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473320692 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.380820593 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377429534 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457591816 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377174251 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.382579138 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477502779 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95081541 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385059301 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389275665 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.386418618 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382896981 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397788267 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023380872 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.384403229 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.382822014 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382868574 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377830029 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381408195 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402515422 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378803465 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.405144469 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378596758 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089816883 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381161032 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389151119 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94337434 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386118851 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.387803144 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608461622 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380265243 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380156155 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.377861798 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379775666 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115202438 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38962431 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.367228153 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421306688 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.103765697 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623857694 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406005394 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403680583 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604385362 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.36677005 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38072847 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.380398596 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40730684 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402506395 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.107706592 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400177245 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.384481033 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637930566 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.592252807 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388918563 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.378679974 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874430238 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410175403 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.403432718 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381984458 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611579438 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.990585484 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400184771 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386393035 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407513658 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381334444 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158268311 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392600683 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.395231061 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382241616 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661808609 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.194901794 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383288998 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450644603 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388337724 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382877574 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386227441 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393208979 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382170563 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.597581706 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418925073 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.401162724 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.383130985 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383535375 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.394553821 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39009221 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.39240585 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.608503456 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392206145 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666615083 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383935869 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38317836 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382388307 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.607062104 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.391420234 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.390394814 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643975874 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389041957 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394848325 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403844487 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403687837 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484894491 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406628543 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.384155873 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.664742834 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.388821203 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.390096119 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389172595 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394020404 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390780982 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.38947013 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385749671 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99498394 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364425344 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392986193 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.274489125 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.399173301 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453811314 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391512356 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609327935 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.399220425 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385923856 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.410433235 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.392948304 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608893953 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396955575 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.39257764 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473408189 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.876717219 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.008016975 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401960092 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.386177615 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.383183268 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.383556892 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385788333 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385580544 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386509809 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.610544065 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408485702 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386341411 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.99243831 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388597208 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391874423 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.399929554 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39907695 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.392989016 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388132008 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.398983511 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403859489 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411059587 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.407793364 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532049777 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.401186977 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388293294 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.904573484 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394299717 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389456728 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388486825 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424761208 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394693589 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21842198 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647760305 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388897207 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658732955 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393341446 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.411832224 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.38790943 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387949776 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39769799 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.431975897 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398534382 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.399356514 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39451818 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39808417 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957048919 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134542771 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944586452 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391350053 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.390732361 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39744747 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12079874 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409887961 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390029077 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633267093 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119233304 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410755876 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883794095 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.42002782 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175829154 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659832654 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620065546 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390032834 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.391037975 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676708604 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603885619 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425747457 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390805884 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39895892 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.378641071 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963214857 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412647899 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4801274 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124193052 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410734527 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400629024 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.405774198 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.407328403 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821082324 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418274455 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392815207 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396018859 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40662851 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221050421 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40038595 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392341993 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034455126 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409110049 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.892274654 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411287971 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.618127749 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.412732607 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.40111787 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.403585739 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.39607499 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.656008182 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66325204 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394885268 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407941066 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957976538 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.251428897 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.398678837 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392846745 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165027091 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397219295 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696089499 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.4066247 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.399554648 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412690268 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394818858 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393225666 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.39140887 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401046321 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368536928 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901179692 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.396008164 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39762836 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417200681 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247121533 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649515153 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.408001392 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000979291 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620571078 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396701286 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418268024 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.399660518 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409314335 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.391533332 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3948569 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.631820033 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462300309 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622693568 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.396344468 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.383618347 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424253664 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611192041 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395462561 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.407532567 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659045111 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.402593219 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.398781995 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121060164 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423162616 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40679722 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405316424 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400062736 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418740559 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467678359 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622469304 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.4158082 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.407773194 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82720204 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439057254 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406632969 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.413189538 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490116418 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411788725 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.40441904 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.170413977 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00935243 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147281038 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008715292 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678373677 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399403103 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401126271 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398394466 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547075086 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398231404 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672947697 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397737031 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.399066894 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441926071 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412567544 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420701762 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618032164 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673109186 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398402091 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399146814 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40647281 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.397874276 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408792067 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.609763589 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910180161 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970217127 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399811878 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410900691 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.139722006 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692967595 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398215424 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399593651 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399754243 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.405339128 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.418074528 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.406958949 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400465506 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555435966 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67029786 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082834106 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.430320259 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.426548564 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.174114072 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412722778 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.664229424 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405381843 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.630133562 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019376875 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.135029682 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668977156 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470554652 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629023146 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.408756435 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549146046 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.405551633 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400124373 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401829312 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246602034 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.397771284 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.410164525 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019989284 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672083785 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.405500501 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.405371161 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425667144 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.410674361 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625519808 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150731752 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626171695 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412700169 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410248836 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401596413 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016857668 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683643035 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403543543 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.406563159 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656028244 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647016722 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428233364 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.856463234 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.400156074 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977253528 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.376140792 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424805311 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408644358 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.150441342 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026748196 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.402862509 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917696186 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405935772 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417144591 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685874094 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.409014165 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40839441 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687379367 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.408049244 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40327031 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64046986 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.026489826 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206475217 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.408834464 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406098296 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.43072018 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403560894 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493327222 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412003035 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404911423 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.853312898 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.432880221 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40588343 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417153688 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.404894699 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420501908 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.412392456 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405630113 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.410630216 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.428256115 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.407045282 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.423404879 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511746235 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985334491 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429827473 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.082742896 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.734594345 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.662001252 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405168894 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.40100181 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.410646276 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406032279 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407336986 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407176517 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427733017 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98288115 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.41507879 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.423172599 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.412575351 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.624693476 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619190451 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406914365 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661837673 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428412455 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430394404 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.394635356 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406191446 seconds)
  done (took 982.347987429 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.438291587 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.453570461 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.445174458 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.428009865 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.451363356 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.457227662 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.482200378 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.431985489 seconds)
  done (took 20.909875562 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.419875853 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.425189375 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.413048712 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.426512362 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.411597584 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.906412615 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.431308986 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.417472051 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.420041883 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.415208374 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.413586975 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.122111013 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.437108571 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.413899722 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.417658165 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.418646938 seconds)
  done (took 33.239950852 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.502852417 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.58624443 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.58892486 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.48838912 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.443083292 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.408330016 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.67944436 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.437546147 seconds)
  done (took 27.459289532 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.421521954 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.421439984 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.420384894 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.421512941 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.422035767 seconds)
  done (took 8.430906902 seconds)
done (took 1248.571192104 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.415658686 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.416731079 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.415781923 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.41840083 seconds)
  done (took 6.991261456 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.399260622 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.397316715 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.39849247 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.41506089 seconds)
  done (took 9.935131693 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.157127056 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.092898111 seconds)
  done (took 5.575098706 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.413249215 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.175293183 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.149548461 seconds)
  done (took 8.066139276 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.711822469 seconds)
  done (took 3.037839668 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.829906104 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.780899908 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.602241848 seconds)
  done (took 6.539536008 seconds)
done (took 41.470926645 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.411597653 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.662638271 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.568379382 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415414782 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.575549504 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.568967405 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.14434766 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.412804126 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.419409048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415163147 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41140681 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.575016691 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.132876448 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.663466712 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.130628014 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.758904917 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.574052421 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.422528866 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.422724649 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.412272091 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.14883241 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.415717774 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413260251 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.437194857 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.575248735 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.559568202 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.41677253 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.759784165 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412707518 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.421335116 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.560430088 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.418689133 seconds)
  done (took 83.965186115 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.413839699 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.422436884 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.42961365 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.427482162 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.419496613 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.42718316 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.414907854 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.42266618 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.413978539 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.413350847 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.427209044 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.41789439 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.415368107 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.413341774 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.416806583 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.414436289 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.413847333 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.430935756 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.414597913 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.41475972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.415981086 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.414566435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.432058801 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.414412679 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.425540419 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.416134644 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.432877912 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.415500724 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.414340651 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.415270827 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.415769742 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.436236037 seconds)
  done (took 78.762738602 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.418843082 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.416443417 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.43341411 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.417851221 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.428570377 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.41477493 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.417214905 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.417691103 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.420354257 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.417984241 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.415157062 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.426600932 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.418026958 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.416791493 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.420146027 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.41577045 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.416083772 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.428146011 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.429961501 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.415927788 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.419276254 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.416770443 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.416317242 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.433761108 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.416336134 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.417030435 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.416331461 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.437053448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417556477 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.417733005 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.436338465 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.426894818 seconds)
  done (took 78.809104143 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.611786859 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.425101359 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.42569787 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.36190016 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.426393787 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.423628492 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.418263031 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.615995193 seconds)
  done (took 15.04118942 seconds)
done (took 257.903606603 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.419906405 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.425152436 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.629238901 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.447648933 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.41815177 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.468415694 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.4461636 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.648929416 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.425239295 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.66986379 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.438215741 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.444738213 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.42115831 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.443010644 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.706919672 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.573830765 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.363752312 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.419858872 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.763999038 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.437741961 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.713891391 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.422793436 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.70039907 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.408163511 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.442441149 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.422348159 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.420503598 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.351318076 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.463068767 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.773931387 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.428964849 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.411687679 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.509490712 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.530148215 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.64304939 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.585163822 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.419577153 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.509231392 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.648837726 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.420858422 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.420139984 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.220669497 seconds)
  done (took 85.211323193 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.428057536 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.547332971 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.428115797 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.427583538 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.427048999 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.551588813 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.526936711 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.428707275 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.428751113 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.42779809 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.427949383 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.428283262 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.42745348 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.428987569 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.429936516 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.428815232 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.429123204 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.430134727 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.431937525 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.478764528 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.555039536 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.454051898 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.423925907 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.429444937 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.53452675 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.567300129 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.428821719 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.423490363 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.475947894 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.429588395 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.431765072 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.477330195 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.429943458 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.430640939 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.551630604 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.532924657 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.431765601 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.43059712 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.581775403 seconds)
  done (took 58.320927122 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.430475762 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.67749159 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.856548401 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.437949123 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.43899182 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.435255892 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.513244493 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.431119481 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.435889233 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.435622205 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.602684446 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.43332607 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.468787573 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.888701283 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.436091136 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.432249863 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.432236748 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.432933011 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.688961591 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.442871362 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.5357955 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.433389165 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.515654247 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.444589331 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.45723575 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.434435609 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.437151635 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.006047244 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.437144335 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.605363018 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.261251624 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.520186358 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.978808544 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.872853329 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.291253461 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.442341236 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.434020426 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.60915163 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.437399087 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.435647808 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.515685107 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.43540644 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.873237725 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.124160116 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.457073079 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.435602819 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.02834726 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.608659765 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.688419304 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.444172992 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.89775861 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.439227467 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.438130895 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.435961829 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.690062132 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.449478965 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.434901013 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.054939267 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.458416965 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.516631208 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.436715284 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.435023014 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.715518221 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.437837907 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.685119294 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.437883979 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.44312757 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.455516271 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.873672954 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.438034571 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.147355735 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.456008619 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.435756748 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.60726539 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.688072002 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.062479426 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.44337574 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.714375449 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.995685182 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.516128105 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.440793128 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.997227757 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.520197405 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.441020128 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.439270853 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.438900628 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.437180075 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.488594127 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.514083498 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.09756593 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.144394041 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.085482839 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.537880828 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.452072838 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.438824402 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.060008437 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.457557124 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.438422892 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.871680281 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.147448995 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.45998014 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.4466638 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.152620349 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.460108466 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.520926659 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.445990011 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.884562571 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.440257092 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.490234461 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.437398208 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.445578359 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.463781645 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.52049351 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.445082218 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.439638955 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.118559728 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.634729663 seconds)
  done (took 189.389507454 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.433738005 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.434220145 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.432298122 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.449622128 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.432540067 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.442718482 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.431871793 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.43185608 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.440453453 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.432278931 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.434028502 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.435661119 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.433457043 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.453007036 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.444952285 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.441570883 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.432201883 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.435015822 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.446044415 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.433459448 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.433663475 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.451186357 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.443093591 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.433626497 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.435018216 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.433621505 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.453591429 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.436641582 seconds)
  done (took 65.617434846 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.442785971 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.020982711 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.443019926 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.57980199 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.467164634 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.440240553 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.577005653 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.502341832 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.444324537 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.43981211 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.440561551 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.753930191 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.44479089 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.970890225 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.643242902 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.579933393 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.970985534 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.461495138 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.440281074 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.442000052 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.580412814 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.455906818 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.75245192 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.03942848 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.454416197 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.023578572 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.43597927 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.445009115 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.441908878 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.025975449 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.442638531 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.756586612 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.523541131 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.50539051 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.039674583 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.975125087 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.994431306 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.59813408 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.443382921 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.441807448 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.442263537 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.434928108 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.046356052 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.455574297 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.445613161 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.04543553 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.472418969 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.446361292 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.45132628 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.476860403 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.504735583 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.510162572 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.771537692 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.062262684 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.533862367 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.457969748 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.581564905 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.839222667 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.447645448 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.976702377 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.453649785 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.052812884 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.473419989 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.437001781 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.445764747 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.450826376 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.601029582 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.582419065 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.977077069 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.466132552 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.975896644 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.620645366 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.445759926 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.445788148 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.447826169 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.051448059 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.987051271 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.620196642 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.585404196 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.652250748 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.447952312 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.445063613 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.437826356 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.526026551 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.447459027 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.055260531 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.005174874 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.466605523 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.448135374 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.44808657 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.448248567 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.6298451 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.071603391 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.533292531 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.975043733 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.79205093 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.784325159 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.454466596 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.5096093 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.468528904 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.775743925 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.456685006 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.507461012 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.906613793 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.77654878 seconds)
  done (took 172.225353069 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.696134648 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.485222864 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.545942004 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.601234865 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.073663379 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.069903761 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.44550804 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.580192878 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.565528011 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.716716373 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.464682132 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.536761244 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.667803949 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.52532002 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.183817105 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.518427844 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.547707986 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.617408133 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.590211425 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.443863987 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.136509369 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.751155416 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.64193517 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.47115189 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.561474717 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.234102914 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.046834853 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.975125844 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.63574 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.444999789 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.976989083 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.461900687 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.427149395 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.137743159 seconds)
  done (took 67.134487489 seconds)
done (took 639.231280231 seconds)
SAVING RESULT...
DONE!
