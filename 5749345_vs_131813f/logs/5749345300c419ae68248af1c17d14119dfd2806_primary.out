cset: moving following pidspec: 18210
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.18130103 seconds)
loading group "string"... done (took 0.533903671 seconds)
loading group "linalg"... done (took 9.847507543 seconds)
loading group "parallel"... done (took 0.166410096 seconds)
loading group "find"... done (took 2.601684375 seconds)
loading group "tuple"... done (took 2.060369821 seconds)
loading group "dates"... done (took 1.399449395 seconds)
loading group "micro"... done (took 0.192708236 seconds)
loading group "io"... done (took 0.501873109 seconds)
loading group "scalar"... done (took 54.4746314 seconds)
loading group "sparse"... done (took 14.123621497 seconds)
loading group "broadcast"... done (took 1.308633487 seconds)
loading group "union"... done (took 10.92115424 seconds)
loading group "simd"... done (took 3.798981087 seconds)
loading group "random"... done (took 14.097674776 seconds)
loading group "problem"... done (took 2.214518276 seconds)
loading group "array"... done (took 23.621657615 seconds)
loading group "misc"... done (took 1.129364339 seconds)
loading group "sort"... done (took 3.748349477 seconds)
loading group "collection"... done (took 20.625158357 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.747637986 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125041909 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.204527022 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.222503607 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.257603581 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.169400643 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.167259448 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.162341067 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.600274408 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.205501787 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141757112 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.379073987 seconds)
done (took 6.09805851 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.305679235 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.067125423 seconds)
    (2/2) benchmarking "String"...
    done (took 0.201780788 seconds)
  done (took 0.937043363 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.082068608 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.166034364 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112429446 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.099087768 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097991412 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113616414 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097743967 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113310478 seconds)
  done (took 1.459549161 seconds)
done (took 3.442951023 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.501544225 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.959437891 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.533238341 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.189374792 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.307610992 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.307813776 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.276637622 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.234822329 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.098398463 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091258123 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.263351733 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.462530542 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.428284569 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.978172168 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.074765676 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.102573963 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.16420037 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.852499914 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.087435312 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.128348634 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.505150513 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.219920628 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119956171 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.110619868 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190962666 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13124707 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.147349305 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.108143366 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.733422104 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.140357031 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.211632461 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.08939519 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.144012024 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.173990111 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.223108284 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.115522382 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.760703393 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.209196613 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101011721 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.106265287 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.753418295 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.129260136 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.216827596 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109860877 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.072852823 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.176956644 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.119849484 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.08595004 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098607709 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.105108134 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.181841638 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.511928856 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.111252705 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.199539198 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.099486654 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.763088575 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.105772544 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.281257788 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.137235097 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.11321241 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.084079624 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.094850158 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.173117787 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.101458467 seconds)
  done (took 21.098080705 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.195534215 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.21060795 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101433271 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15036852 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.147636947 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086718777 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.094518328 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.101067344 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120610836 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.200965285 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.131178205 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.217599343 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083618393 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.114353585 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.188642587 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.240055082 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.132706291 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.110363447 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.096248897 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.117608916 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.132366742 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.101441502 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.116241391 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.100798802 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.177630446 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.210583062 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.118154493 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.131015329 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098726663 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.104459182 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.149743366 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.155315487 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.100036779 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094566093 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.197026091 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.114228402 seconds)
  done (took 5.623371826 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.24144271 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.109233061 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.24853635 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.196867198 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.135297664 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183905465 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.196587682 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.305917549 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.323667127 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.170882513 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131958846 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108254422 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085089808 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.103362977 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.085040417 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.847289762 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.16055297 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.165955034 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.190476157 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102001512 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102443472 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.221813527 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090647289 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.108965516 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100854101 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.125144261 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.686103538 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.233087118 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100984793 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.476459699 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090692082 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.11913035 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120901074 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210638445 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129615022 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126248305 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115991056 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.09037727 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.214733988 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105009409 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.101163966 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084561522 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136255055 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12348036 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.110870367 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111760136 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.13836355 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09308776 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113100646 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.077762211 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201115661 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.170260678 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.108584062 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.090673139 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.282769833 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11157737 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.12250887 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097390715 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.812531998 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128297346 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.10291529 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08556764 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100152981 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.102050138 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.810855168 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108530029 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.370111579 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.100970923 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.148571493 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117825725 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121309714 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092815236 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091781816 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.12992888 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.091832526 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.086119772 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.108477112 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.087683509 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.089295374 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.111059444 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117492854 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107119172 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.086223983 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154262452 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.115381591 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090030038 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.110638566 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131712914 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.095735973 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.106321397 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118796383 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103037236 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.094586715 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.209126758 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.118673492 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118450626 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118236059 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.148476488 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093023013 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.296317555 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.087765175 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127546314 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.105839103 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132372327 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102496234 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087381689 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107466175 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.085523096 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.087040049 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165111282 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092897105 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087027669 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.110792511 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09901735 seconds)
  done (took 28.719091797 seconds)
done (took 56.097289512 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.81000362 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081771491 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102605878 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082925263 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081536576 seconds)
  done (took 1.888641279 seconds)
done (took 2.599094132 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.190592048 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.268557045 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202202902 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.133713155 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.155226389 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.174447914 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.157745969 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.174463044 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.154520698 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.174319938 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.172072509 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.111454921 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196796483 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.170003032 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.1268605 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.190298509 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.109463222 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.153060075 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.110095888 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.177361503 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.110484478 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09199211 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092152413 seconds)
  done (took 4.327293248 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.111542207 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106456395 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.108908053 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.127266164 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09227866 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108380895 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.126190076 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113805137 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108419327 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.120507042 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093243812 seconds)
  done (took 1.932862545 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.109371733 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104684893 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09945169 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.124327202 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093280738 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10528556 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123025991 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117312788 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106513419 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.120011997 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0940169 seconds)
  done (took 1.914228889 seconds)
done (took 8.881933508 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.214301615 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.890934659 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.186987838 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.253620195 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.33549895 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.302379263 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.613652025 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.207092441 seconds)
  done (took 15.833670924 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.234162212 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101250146 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099285893 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098767628 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.120669149 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.10220908 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098034217 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.11567559 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104214395 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10299244 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.113908439 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104714844 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.103561243 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.1163056 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102340194 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100761157 seconds)
  done (took 2.592526024 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.146599287 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.126904154 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.123466429 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10666988 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.101361537 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.121423941 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107928445 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.104409769 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.118003451 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101579957 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.124636952 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104961214 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103695414 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.116184252 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104318159 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.125016551 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.116055749 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105150845 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.123005945 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.122487801 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106094638 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102972372 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.120600093 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104567608 seconds)
  done (took 3.524392856 seconds)
done (took 22.666007302 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156561033 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107236839 seconds)
  done (took 0.990376143 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.172875986 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.187464546 seconds)
  done (took 1.08952431 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.118913099 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097569181 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.143943498 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110025857 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098601315 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.113728981 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122863739 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.114391699 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098710824 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.099124094 seconds)
  done (took 1.849558032 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.103075117 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102137132 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12988946 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.164126296 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.122069702 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.100185746 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102837464 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.118427943 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.102997243 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.097707695 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.119554682 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11438439 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.10216395 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.131762859 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10274461 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.119016262 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106057873 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101688077 seconds)
  done (took 2.775712987 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.100725516 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099355713 seconds)
  done (took 0.939544921 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.100604028 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097811355 seconds)
    (3/7) benchmarking "month"...
    done (took 0.099581697 seconds)
    (4/7) benchmarking "year"...
    done (took 0.11386225 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.097060498 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.097850994 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.112635467 seconds)
  done (took 1.457351302 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.524461881 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.241231045 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.375840354 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076792097 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125067886 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.333406373 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106515798 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07720017 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.094392414 seconds)
  done (took 2.716961912 seconds)
done (took 12.549792955 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.101034846 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.21613499 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.606114698 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.134844641 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.097450456 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157670684 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.342477889 seconds)
done (took 2.39454733 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347929377 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.181143973 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088858181 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.099365689 seconds)
  done (took 1.455938102 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.090175807 seconds)
    (2/2) benchmarking "read"...
    done (took 0.106184231 seconds)
  done (took 0.941491839 seconds)
done (took 3.140667967 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.117716042 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098093158 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.116349007 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100494383 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101721113 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.118675262 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101966554 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098736713 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.117396217 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098630105 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10183937 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.117203513 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097563495 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.102244201 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113671091 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100613543 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.224119451 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1138593 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098170334 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101191394 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.117030247 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098146111 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101248608 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117112256 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10058159 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101692681 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.114603617 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09794113 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100735089 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.117635648 seconds)
  done (took 4.04864899 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.103102042 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093586685 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.095979579 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.120696105 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.093991266 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097495934 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.110614624 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097956566 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09744904 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.112853601 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.099546846 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096179286 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096387387 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.113662224 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098633706 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099487136 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.121878646 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.096977183 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096003458 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.115417011 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.103364621 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097634636 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097447247 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.112875726 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097148637 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093245632 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.114004477 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096252068 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096799258 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.113456095 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099106111 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099069184 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096448745 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.121293501 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100164644 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.097937126 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.117708947 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094420278 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097986938 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.111161063 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093709261 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096988954 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.113066511 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102953341 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.097707184 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097703013 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.113247263 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097860837 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.098305538 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.115188293 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.094045234 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097292129 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.114821468 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09884551 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100107301 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094607718 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.1144627 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.093767815 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097548232 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.113129245 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093345813 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093905385 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.117659638 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097758889 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11121208 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.119208697 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097770391 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09875242 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098106204 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.117121851 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.1003038 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106106413 seconds)
  done (took 8.159095973 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099758739 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097128295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.096404544 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.114136236 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096745302 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098286828 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112808645 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096518186 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096100722 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096966943 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113322056 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09683333 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096607919 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112668462 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096671586 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096805387 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097138564 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112738292 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.097103969 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097324472 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114076849 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096600383 seconds)
  done (took 2.986690265 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.240941858 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103151836 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145249095 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.127688723 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113989003 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.126891324 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101698234 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103514987 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118685859 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106582425 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107156805 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117906184 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114024172 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122725226 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105556642 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107902424 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11749118 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10815633 seconds)
  done (took 2.944986563 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.098525959 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096632888 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098176381 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.115425195 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097355638 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09739424 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114264444 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.097037481 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.097688001 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097959607 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.114522543 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097499643 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098150857 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114139714 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097125149 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097342647 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097559322 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114385963 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097713565 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097525645 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.11409066 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09736444 seconds)
  done (took 3.005113726 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113516871 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100132177 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.134789515 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103025456 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098832759 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.115990412 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103431299 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099761469 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.123716002 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099424457 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09890471 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.115679675 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.113930603 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099518943 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.121894256 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099318545 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099225621 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11872824 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102561999 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09979768 seconds)
  done (took 2.92118891 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.191555823 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13393239 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114356998 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123064206 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132271409 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.116099795 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.140203798 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115963651 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115308184 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142956349 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115430902 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.132491997 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122074611 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120084798 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13228166 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122980256 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138963287 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123125146 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11634259 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13175546 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125318139 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131976742 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122206166 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115424677 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.131747798 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116374471 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115703379 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136658148 seconds)
  done (took 4.335552022 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.112306577 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107889248 seconds)
  done (took 0.977770783 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.104130914 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101087338 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.099532976 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.118324813 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100077236 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100501258 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118320641 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100532066 seconds)
  done (took 1.604425898 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.191961824 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.211863013 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.123096156 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111651457 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.212274203 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.191853761 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13578582 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.105919108 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.114847746 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.090757667 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.203698105 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.089909096 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.116923331 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094818578 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.097765122 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.122921894 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099351227 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108449455 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.123531092 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101139633 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104712996 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12188017 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099715589 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10961934 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.11379011 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.102364016 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.10203149 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.132319434 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098365833 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.099283762 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.117269065 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099406725 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.103844694 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.120059276 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.100304792 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.213471513 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105787009 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113765897 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.098991194 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103555997 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.152266436 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099684174 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.099505997 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.116461555 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101608554 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103047559 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.121120316 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.100288743 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.091826328 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.093902759 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.116950224 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094616258 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.098578744 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116474285 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.0997359 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105598109 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.118163424 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.09579277 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.095051809 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.111962224 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.097594814 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.094457551 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.118298056 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101764329 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100282908 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.117478849 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098885285 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.099346738 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.119310266 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100790808 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.098010636 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.132238903 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.099593628 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105495045 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121410115 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100592106 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095408952 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122524439 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09811513 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.098609748 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.121296541 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126816472 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100051475 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111310474 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.094276549 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106523751 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.119597642 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101332322 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09230031 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124111773 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100920225 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.10109969 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.109189656 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.097470302 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.095045924 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.12073237 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.092262187 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099170695 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.116054535 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10397618 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105005795 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116419232 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099933777 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104461137 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123656277 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.098053696 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.149188786 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.114525608 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.095640153 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100529277 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124377578 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.09459658 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.098885804 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.117445006 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095905442 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.094895154 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.122962969 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.098473769 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102935195 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.121156527 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100777419 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.100935109 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.119855391 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099547742 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.095428867 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.12204521 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107532967 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.100648033 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.120439344 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.101262416 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.10053212 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.098473784 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.122319189 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.096059091 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105029931 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113984361 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.100062435 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100883059 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.125190577 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.099337368 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.09472502 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.116696047 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.100324786 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.098353795 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.121217502 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.100509338 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.096219457 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.110890675 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.099484496 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.09528649 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.119733819 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108153466 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.095819305 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.121754638 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.095732799 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108297854 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.11560205 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104108485 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103246868 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.122800588 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104899648 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.092394017 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.116053131 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.101735926 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.101542354 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.115863155 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100107227 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.10049228 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.106322406 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.111628427 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.104123255 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.092378177 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.114760898 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104851639 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101585195 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.122507822 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.09520011 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.136704552 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.130535679 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104991177 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09888251 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.119789788 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103041983 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.098712885 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.123099833 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105651905 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105626629 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.115157607 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.097546282 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105528002 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.115863795 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.102552451 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097885846 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119498412 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.092238217 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.102505197 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.110975325 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104187902 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.101486583 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105366694 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.123614283 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101780472 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098055116 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.127644525 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.09588724 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103872244 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.110731657 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105309172 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.111138659 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.125735591 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105853874 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.101863621 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117088036 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.102248669 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108326428 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122267938 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.100428088 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.10119492 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.11257868 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.093714503 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105849627 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.12390786 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.096165601 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.100017212 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102124606 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119995279 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.097422679 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.093537861 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.122948462 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103035988 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.09534154 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.120805154 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.096673031 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.097740728 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.125114119 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.093024792 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.096712703 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.120794217 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104869418 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100405005 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.118201166 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.103352906 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.105872371 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.125546476 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102716885 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097336888 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.127842818 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.097652543 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.10044733 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.115001574 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10260538 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.094222238 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.121929924 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.100865955 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.097379051 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.116577817 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103674393 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106968087 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.126147232 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097728425 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104671362 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106593203 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.125017263 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097623967 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10653436 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.115056828 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.094083051 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.096374788 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.113609521 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102656828 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.096183347 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.126248871 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.09886932 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099002868 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.125343721 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101409517 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.098322896 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.126768867 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110354809 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.09669886 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.11295287 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098220758 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100295071 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.117522932 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.096511086 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.10315566 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.123520687 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105497793 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104101587 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.117305978 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.103765213 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107837202 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.11831863 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107909508 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.106434392 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.127203889 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.096522353 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105599856 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.097100253 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122153216 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.093934032 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.118678328 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098788028 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099952173 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.116049644 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.097847571 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.096753148 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.094243642 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.115538534 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106735182 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.098642447 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.124553666 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.099856991 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.098302451 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.117033956 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096234309 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106807401 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.118518389 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107587138 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.102059106 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.113815229 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.093726021 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105930883 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119693272 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10613342 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.094718614 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.125604866 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107640546 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10433747 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.102112153 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.12844697 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108629441 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.107906831 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124119493 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.094249351 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.099418537 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123857468 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.112532423 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.10421523 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.124930844 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.095889756 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102467964 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.129367038 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.101212676 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09896524 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.1131608 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102817997 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.108099387 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.123725067 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.103762064 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103439577 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121597513 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.096397116 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105242512 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107162802 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.120322972 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107559163 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100914523 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.124488245 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.097541688 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10752125 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.121559855 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.094836537 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.09441385 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.117018418 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107559558 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.09473552 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.125440829 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104840712 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.097620318 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.119042994 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.106088636 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09768306 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.12244697 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105762159 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.109147355 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111032603 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.122205314 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.098923402 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.105909377 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.125681823 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.094553426 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.099596712 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118778587 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107134772 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.099615534 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.125790163 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100154524 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107222554 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.124520026 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105687628 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106572184 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.126450145 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.094082171 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.108546972 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.123169862 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10344909 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.098106357 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.119447545 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.096070512 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.099704163 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108054154 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.116964127 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109643784 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106115456 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.118333925 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.098080182 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108240681 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118494019 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10790939 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.098426838 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.121739624 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.094867666 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.103168454 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.119432481 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107865454 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.098210116 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.114637221 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107613059 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10635528 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12528473 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.103022497 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.108348761 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.114309111 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.094671441 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.1046698 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.116906642 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110566736 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104113622 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.118736652 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099191722 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.104478916 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.103624915 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126925257 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.096565881 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.097928881 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.121158185 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102828139 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.098934361 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.115485469 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.105191794 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.099900001 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.122566243 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.099530106 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.096419529 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.119083798 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107529639 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.100207332 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.116678104 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.099610279 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108858294 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.120081639 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.097974056 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.095265238 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.126711367 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.102360843 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108555178 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.117963706 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100488927 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.099145067 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.123640906 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108221623 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.098993259 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120780206 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.09871581 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107224992 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12507197 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.095054669 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.099077845 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.130544347 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106256853 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.102690468 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.124284748 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.099743693 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108800214 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109648031 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.124263643 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.095324732 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.096670783 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.11900421 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.095264053 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.10499431 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12577729 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.099748005 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.099388589 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1253921 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.1058196 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.105027191 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.123702037 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.095275415 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109690833 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.118401895 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.10341438 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.095593156 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.096993133 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.123950384 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107544606 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099893122 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.12170883 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.103717026 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.1045043 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.11624711 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.098638332 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.104369273 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.12648258 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.106780332 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101285941 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.120090952 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.104919687 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112318915 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.122817894 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.099909852 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109046681 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.12876506 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100950895 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.101570433 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.124858393 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.108229129 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.105768678 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.12869502 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.098862015 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101098295 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.128955779 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108012096 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110766854 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.121347428 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.096006455 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106969912 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.099688556 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.115540045 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.106672933 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108941717 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.128864354 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10215222 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.099990847 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.130083184 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107430558 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101775238 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.119259493 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.099393997 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107947445 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.118747968 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105306239 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.098682426 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.128729828 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108712988 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108666263 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.131441794 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.095296373 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107691686 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.123669769 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109997319 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.104476444 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.115217837 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.095489431 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.105808684 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.128978036 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.108697682 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106102664 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.106624947 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.126834053 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102576521 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102016569 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.119358081 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.110192948 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.108428212 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.123600557 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103352524 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.100845999 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122969247 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10394019 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.108762485 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.128946251 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.1029106 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115434131 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.127454343 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.100188767 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.099847341 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122633927 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.105977245 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.103708346 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.128192314 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.099365585 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.096856886 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109346012 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.129724631 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101767462 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110386726 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.129495178 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.100706751 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.105330207 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.130427436 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.106820138 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.105614694 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.123461362 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105648703 seconds)
  done (took 65.879758957 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152071641 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111578414 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125753886 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.104329645 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12162455 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126572468 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105617439 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106763543 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.127017294 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113322717 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105142476 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125492419 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119262714 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144947893 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121425518 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115233496 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125476901 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10808696 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105253472 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126391914 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11804611 seconds)
  done (took 3.321698061 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105931537 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105131031 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104519681 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123939948 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10410337 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.105357665 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.124201204 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105687496 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104494112 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105176167 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.124815442 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105045283 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105474666 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.123551997 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104755965 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105925126 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.105196277 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.123495704 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.104499803 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10473396 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123918864 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104833537 seconds)
  done (took 3.238204054 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.134206201 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.108418668 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.103787572 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.125037121 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.108174037 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.105458104 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.127938268 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.104752044 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.113923252 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.120318897 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.097081652 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.10155073 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103658696 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.125929239 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.099334942 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.105741122 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.133409205 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.108179532 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.111060015 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.125433395 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.096144629 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.105644237 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.126345492 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.095937059 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.111777237 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.110329958 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.130369683 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108817706 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.095788307 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.129824032 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.105359721 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.099103243 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.116870836 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.09582128 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.096267766 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.109322785 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.127972845 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.106091654 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.105952628 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.116830012 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.105785549 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.109598023 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.115948161 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.105802388 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.106313449 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.11911272 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108761667 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.105449479 seconds)
  done (took 6.143888526 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132855916 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164878014 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.107851117 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.134295054 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.141756509 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114612832 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.109314737 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.157324531 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107651934 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.131312616 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.119945323 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119407467 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.132681642 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112101522 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109428271 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.1316729 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111246696 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109002058 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.134740886 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108825521 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112678419 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.130469262 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118195868 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.138915921 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111696607 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109141433 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.130721853 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111696548 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117827699 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.134835547 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.1130358 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.134885709 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118201687 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111541069 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.130526155 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108890215 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120539025 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.13138742 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109876415 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.108357314 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.129979296 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111418278 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111082071 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.140213981 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.111526091 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.133343903 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109614493 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.107324075 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.139169205 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.11045564 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115481466 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.140907645 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111164145 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111450947 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.132228264 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119230259 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.131344619 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.109034874 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.11225334 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.139150141 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.1073836 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112065402 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.140344158 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10915038 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.115248637 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.140259454 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111524991 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112768201 seconds)
  done (took 9.168389467 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.139913584 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113075009 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.142581876 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119764595 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.367148817 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.13385468 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11287217 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.135090188 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112704575 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117839628 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134150856 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.244789622 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.111335259 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118949195 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136242387 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112111868 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113303968 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135820541 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113496055 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113969314 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.133785262 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120465683 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.136745536 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119550281 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123633787 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.131337674 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113305724 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11407623 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140388457 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11403528 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144780154 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113085245 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113532885 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.142101783 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124286023 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.135463549 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108706292 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113255552 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.13403573 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112523037 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110282229 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.142405456 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11324463 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111067012 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134120847 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113474889 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.141250369 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123473226 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118851457 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.139383516 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113058308 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.141704149 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114040056 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112936304 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.141799518 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.126384319 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142565171 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120432448 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113664177 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.142346246 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120144692 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.148290587 seconds)
  done (took 8.930022764 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108812269 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.109121339 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.108454626 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.13031754 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108339308 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11012703 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.129506935 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108387076 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108707623 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109613602 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.130017802 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108993243 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108935813 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.130657116 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109340693 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108407784 seconds)
  done (took 2.655871379 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.125153209 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.124723043 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.207709645 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.11152628 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.131250977 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.11569703 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.109787763 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.134134265 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.107231625 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.114390844 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.135205467 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110481313 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.12498951 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.131928365 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108937067 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.111399791 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.128946474 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.112582445 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109320574 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.208658 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.112629003 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.133618968 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108914114 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.112432358 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.133406368 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.115319508 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.114829983 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.131576926 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.111568388 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110220485 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.131649508 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115664251 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108270342 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.134703849 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.110633495 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.110413452 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.129803288 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109329144 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111429309 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.1299721 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.110572656 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110827538 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.130783972 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111191756 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.108581229 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.110209971 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.128886074 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114473262 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.11085728 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.132118388 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.109583453 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.114710775 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.134675259 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116432573 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115455959 seconds)
  done (took 7.533570948 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119413418 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110386879 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.142929946 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107337041 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.109976738 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111009823 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.131313128 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111557494 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111542872 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12920871 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110584769 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112035268 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.13201693 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1102263 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110750679 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.13240792 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.109664108 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111508239 seconds)
  done (took 2.95045817 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107132767 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108007352 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108687229 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12913084 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.108403251 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107946807 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.128675239 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106821005 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107663424 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107887053 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.129172186 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107791907 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108255514 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.127824816 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107374177 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107798454 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107816495 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128301815 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107616369 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106846636 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.129755836 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107348952 seconds)
  done (took 3.334630495 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.119169639 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.234008073 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.114030345 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.242679478 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.12924322 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.104268028 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.115030315 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.128609837 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.121052139 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.105914135 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.127965578 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.105559678 seconds)
  done (took 2.487193893 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136776992 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14710106 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131374385 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109317 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117579053 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13528368 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113071912 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11399838 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141600531 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124135592 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135508215 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120930865 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121090815 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141123724 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117477286 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13893356 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113574626 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113489006 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131049924 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126914569 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136597125 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120415616 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114172599 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135381553 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113533914 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120942994 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142080289 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124077847 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135816344 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120607001 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11802712 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134748892 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120781198 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146379912 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109674132 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121779885 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134166439 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127334017 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138999665 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120612188 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110893204 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13879102 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120867384 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140736498 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121052072 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114530286 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139607623 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11382117 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113792431 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15354383 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118202384 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145395579 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118151826 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142528449 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120608132 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133258611 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145308788 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121015262 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139034398 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124071873 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143274616 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116868703 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121251784 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146517937 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1182929 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142920987 seconds)
  done (took 9.275261273 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145765237 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111677679 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135999015 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125040821 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143674127 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113292666 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114602825 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135400935 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113644251 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111754615 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176984238 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11393592 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143298508 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121324906 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114712336 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135308831 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113963805 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143540634 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111082892 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134530696 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137558022 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121639536 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14337563 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120737166 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12519775 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140278311 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114276902 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136825165 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113232684 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114306754 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141433443 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113364751 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121891285 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.132645176 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12222089 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115158422 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135157515 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119346585 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135919529 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117943676 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122347569 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.149230354 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114553881 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136561222 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124788622 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114882416 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13640606 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110844524 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11485412 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132862626 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124709977 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148018093 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124557009 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143569506 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113441602 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114829954 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136589974 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113755056 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115062672 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141269066 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12217052 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114800231 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156419167 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115748914 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136522864 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12132885 seconds)
  done (took 9.230029966 seconds)
done (took 165.877448986 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.179658648 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.220183796 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.203049382 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163431021 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.099857458 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.156787457 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13245429 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.204839138 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.099993195 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.100508391 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.122912151 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.102332821 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.167313752 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.121929875 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.100029186 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.103056522 seconds)
  done (took 3.119163423 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201384399 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.346463936 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.139223221 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.102231807 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107267426 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.128024092 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.102231533 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.106909463 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.105307323 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.132896157 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.105824429 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.101153139 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129850755 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.102082619 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.125567152 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.105634874 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.111248532 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.126650521 seconds)
  done (took 3.236311422 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123309099 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.157454909 seconds)
  done (took 1.132710902 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134962973 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.22026645 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300409318 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.175214397 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.125958795 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.144144647 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154663289 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13943505 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195459618 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.139459986 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.117651906 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.125543835 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.130257967 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.110480495 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.144594014 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.103594898 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.133679097 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.141210893 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.119108122 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.107094239 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.151600687 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108937917 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.13280578 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11998277 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184902907 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.139855129 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.110027899 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.130368367 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.108544421 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119702936 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.13394821 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.120575608 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.13982685 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.161499901 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.131744238 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158244505 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.133631995 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.106715463 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.120260384 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.126288513 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.109474167 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.130337899 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.118101365 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.103879907 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.13042902 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.111591081 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108684149 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.13080931 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113313747 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.111949289 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.133811091 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112206552 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.178184418 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.113059023 seconds)
  done (took 8.166076513 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.913277439 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153810964 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105859475 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.071545755 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15082545 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120354986 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.942119872 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130963468 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256864997 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.934534702 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121763674 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.135589743 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.248168976 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.286324965 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.257338014 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.365529222 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.769814439 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118343126 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.158928984 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.149277524 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133408397 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123114093 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142725408 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438908935 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.106126728 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.126799103 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110578696 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135837232 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160560646 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.129964575 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109438003 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205959626 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.299850634 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219955753 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106087069 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.105547941 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127826027 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.172280488 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.297757729 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.227276959 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17430921 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125219506 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.104982573 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110165066 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141752988 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102905957 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188660762 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.198111683 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.176225991 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.131720547 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.114424049 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134698154 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.109458194 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186034306 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103582935 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.364419884 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.390066589 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105096525 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111428625 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.14005906 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274860024 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107801123 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243192611 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149893483 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221290635 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.104925159 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813463177 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19363878 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106567121 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132525443 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109680848 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112796147 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130449668 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166858482 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.437659724 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112991924 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.131815822 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10581056 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234900537 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107116456 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105641082 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186238153 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129757049 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110937143 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115548155 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134148137 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.198086119 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.255892522 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135104147 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112199452 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111594209 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136818979 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.107514997 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.238001741 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.23643588 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.18423024 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.235994519 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110336317 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.190815709 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.193755675 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110544527 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.197755097 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.111237394 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13973432 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109978997 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.232611217 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.16587541 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.109253223 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112935532 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133768391 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.145903506 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.133545566 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113035202 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.197133239 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.499802098 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.193232187 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.103612783 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11102064 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133504705 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.164167124 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135976277 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271525496 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11401197 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.194889222 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110905395 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104089208 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.133308109 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.190926474 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115457635 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112184695 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131352723 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116580343 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.286068359 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229519494 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115204629 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.276636656 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.179116525 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133488161 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178152834 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135250528 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170176098 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.138206244 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110227974 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128865721 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805175471 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117361411 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.111745213 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133300364 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190813348 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128723097 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109149465 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106689572 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126868192 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815224044 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109732097 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105425873 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.131063309 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11181159 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112107762 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133558357 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111757838 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18930052 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254701618 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115906701 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132431399 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107248027 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.185654551 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.108616725 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.128615232 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107164475 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107508607 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.134985896 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111116149 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110467688 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194977602 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.186983832 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.240001488 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.5758755 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107368771 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.129466914 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250376778 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106758852 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.333159901 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135088857 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.245457045 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.191185666 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105152272 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.368262394 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.19168279 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.211738395 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.111481847 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.199377543 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.104664645 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11269031 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.185728253 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.129454789 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113863108 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.185835596 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116274259 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136152619 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.262913093 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10702685 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254623276 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.104834213 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.198023646 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109225508 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134777108 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.333604095 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107123121 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118808219 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186434373 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134378728 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107765512 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.981093414 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10778448 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137235444 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112477536 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.243692189 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.19043914 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113185214 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137322758 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115654272 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.189223525 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23601736 seconds)
  done (took 48.162046137 seconds)
done (took 64.667423841 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260959967 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174524816 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.356840012 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.153084169 seconds)
  done (took 1.869911172 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.262920506 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.170342039 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.247996717 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.103839194 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.253577145 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.104644182 seconds)
  done (took 2.024758938 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.174999644 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170860723 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149050515 seconds)
  done (took 1.377556872 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214611832 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212464616 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.352633417 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.239835354 seconds)
  done (took 1.961287425 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.278411963 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.121806724 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.13555419 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.231226253 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.247647817 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.21176093 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130116763 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.18118807 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135808077 seconds)
  done (took 2.586085865 seconds)
done (took 10.697929939 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.292507075 seconds)
    (2/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.350845676 seconds)
    (3/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.354198728 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.135342418 seconds)
    (5/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.365480577 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.145313398 seconds)
    (7/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.242954875 seconds)
    (8/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.371539371 seconds)
    (9/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.357738042 seconds)
    (10/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.261168754 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.255145766 seconds)
    (12/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.320828453 seconds)
    (13/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.151283985 seconds)
    (14/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.226097536 seconds)
    (15/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.117157942 seconds)
    (16/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.206025343 seconds)
    (17/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.133225104 seconds)
    (18/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.412784328 seconds)
    (19/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.18103759 seconds)
    (20/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.194209205 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.152844401 seconds)
    (22/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.215776895 seconds)
    (23/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.224061531 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.12783463 seconds)
    (25/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.128908921 seconds)
    (26/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.157570373 seconds)
    (27/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.211932792 seconds)
    (28/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.270960628 seconds)
    (29/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.123685429 seconds)
    (30/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.220021168 seconds)
    (31/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117673757 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.150102848 seconds)
    (33/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.266264049 seconds)
    (34/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.222681588 seconds)
    (35/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.196882391 seconds)
    (36/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.087880788 seconds)
    (37/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.285660959 seconds)
    (38/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.134586698 seconds)
    (39/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.160171799 seconds)
    (40/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.264657888 seconds)
    (41/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.134260352 seconds)
    (42/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.178601955 seconds)
    (43/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116328087 seconds)
    (44/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.175283273 seconds)
    (45/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.148885639 seconds)
    (46/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.262795913 seconds)
    (47/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.136448396 seconds)
    (48/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116228793 seconds)
    (49/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.140850518 seconds)
    (50/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.180055745 seconds)
    (51/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.141456724 seconds)
    (52/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.139895357 seconds)
    (53/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.19410135 seconds)
    (54/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.097484387 seconds)
    (55/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.139510503 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.089039708 seconds)
    (57/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.085984192 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.150183701 seconds)
    (59/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.324620887 seconds)
    (60/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.146250714 seconds)
    (61/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090032042 seconds)
    (62/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.136638761 seconds)
    (63/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.15439472 seconds)
    (64/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.085618684 seconds)
    (65/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.299630212 seconds)
    (66/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.136634257 seconds)
    (67/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.150185634 seconds)
    (68/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.145823656 seconds)
    (69/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.149927709 seconds)
    (70/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.219320888 seconds)
    (71/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.089845621 seconds)
    (72/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.128644531 seconds)
    (73/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.136129787 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108898109 seconds)
    (75/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116426702 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.135771125 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.112368648 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.130540793 seconds)
    (79/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.082899189 seconds)
    (80/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.157239305 seconds)
    (81/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.146920813 seconds)
    (82/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090355058 seconds)
    (83/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.198688165 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10644229 seconds)
    (85/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116801548 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.131757824 seconds)
    (87/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116620659 seconds)
    (88/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.13954938 seconds)
    (89/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.207764447 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109805905 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.127111893 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.130340464 seconds)
    (93/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.133207812 seconds)
    (94/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.112778551 seconds)
    (95/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.138530884 seconds)
    (96/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.089843522 seconds)
    (97/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115606143 seconds)
    (98/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.234193146 seconds)
    (99/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.194925646 seconds)
    (100/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.138987713 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109231964 seconds)
    (102/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.083964489 seconds)
    (103/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.133494108 seconds)
    (104/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.083493353 seconds)
    (105/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.083652482 seconds)
    (106/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.083702543 seconds)
    (107/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.149337394 seconds)
    (108/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.178681383 seconds)
    (109/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.086515098 seconds)
    (110/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116484142 seconds)
    (111/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.132525595 seconds)
    (112/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.112642472 seconds)
    (113/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.086200634 seconds)
    (114/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105825239 seconds)
    (115/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.114345385 seconds)
    (116/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.083676061 seconds)
    (117/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.0836581 seconds)
    (118/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084168778 seconds)
    (119/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.08353596 seconds)
    (120/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.18219699 seconds)
    (121/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.085533324 seconds)
    (122/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091191926 seconds)
    (123/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.147441391 seconds)
    (124/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090318054 seconds)
    (125/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.106957163 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109118186 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.133134407 seconds)
    (128/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083167935 seconds)
    (129/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.087153051 seconds)
    (130/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.128847375 seconds)
    (131/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.151159366 seconds)
    (132/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.087004112 seconds)
    (133/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.093080171 seconds)
    (134/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.085744311 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.133822069 seconds)
    (136/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.083687109 seconds)
    (137/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.154558543 seconds)
    (138/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.141845807 seconds)
    (139/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.086218049 seconds)
    (140/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.083628867 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118850833 seconds)
    (142/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.088823447 seconds)
    (143/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.114438044 seconds)
    (144/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.08952245 seconds)
    (145/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.085034901 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109762745 seconds)
    (147/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.14138197 seconds)
    (148/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090286357 seconds)
    (149/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109815977 seconds)
    (150/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.134302858 seconds)
    (151/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084711648 seconds)
    (152/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.083419155 seconds)
    (153/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083384966 seconds)
    (154/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.085141984 seconds)
    (155/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.111598976 seconds)
    (156/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.09043178 seconds)
    (157/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.089080759 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107535863 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.132508727 seconds)
    (160/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085062856 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11021967 seconds)
    (162/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.090778 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.139644038 seconds)
    (164/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.087364281 seconds)
    (165/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090836448 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110072659 seconds)
    (167/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.114556402 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.130734744 seconds)
    (169/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.089756758 seconds)
    (170/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106454891 seconds)
    (171/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.107196408 seconds)
    (172/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109070502 seconds)
    (173/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.141975382 seconds)
    (174/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.10958572 seconds)
    (175/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.122816389 seconds)
    (176/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108936242 seconds)
    (177/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116246498 seconds)
    (178/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.114064678 seconds)
    (179/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.119228165 seconds)
    (180/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.091837193 seconds)
    (181/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.083598273 seconds)
    (182/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.1084637 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.129746566 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111611978 seconds)
    (185/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.086396544 seconds)
    (186/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.113715057 seconds)
    (187/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.085585001 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110049082 seconds)
    (189/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.09877216 seconds)
    (190/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.108830461 seconds)
    (191/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120433907 seconds)
    (192/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.087206153 seconds)
  done (took 28.311605874 seconds)
done (took 29.198021977 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.229442212 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134427659 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.117136025 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.116864441 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.23708389 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124395053 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.160365657 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11920139 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.127275362 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.142491913 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.107658634 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.130133126 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.140654377 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.251675209 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.121378266 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.108842043 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.133859082 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.128192703 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.132063479 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.158337567 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.239329889 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109738528 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.128297423 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.107804977 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.237469136 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.136244278 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.116481495 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.118608882 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.155325964 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11764713 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.118091072 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.133031211 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.133448801 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.133412432 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.130692817 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.117762895 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107998088 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090408774 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.142207231 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.119334867 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.130473637 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.142278685 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.118109914 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.109830475 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.142329332 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.118423851 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108257379 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.144237897 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.107392485 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118236468 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.133993062 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.135495633 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117627572 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.131257659 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.107061614 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110599441 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.151839315 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108651195 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.132090612 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.131053341 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110238707 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108847042 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.142401627 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108569995 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.117498209 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.109147052 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.140221873 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120732895 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.116583387 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.13388926 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108890394 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.117255985 seconds)
done (took 10.474427326 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.112858699 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.152453342 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.251944914 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.256653453 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.162647184 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.125415878 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122158427 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.157449567 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.121534715 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125877535 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.16836125 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140279552 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.257657068 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.149585897 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.125014021 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.120467896 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.144137302 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.115600401 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.255291528 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133096205 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156925537 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.124510539 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.133617073 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.150875199 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112849106 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.168568032 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.115690828 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.120836822 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.135473857 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.120851306 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132657466 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.13645817 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115221569 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.130040219 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.154194368 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122936211 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.123735531 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.144558844 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.112850102 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112485216 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142557408 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.128558958 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.112356022 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.147907136 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.121181753 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.15123309 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.120591486 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125941556 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113957081 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.144203 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.113903404 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.160563748 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.124464581 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.127074076 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.148937023 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.1247359 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125109575 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.149431253 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.116967914 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.125035693 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.137627706 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.113151555 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113551552 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.157205362 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.116202342 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124181516 seconds)
  done (took 10.125533286 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130995837 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141729417 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.147238264 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.123416233 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.117859045 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.130025623 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.107717325 seconds)
  done (took 1.839276448 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.110679094 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.272603989 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.261805297 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.262057192 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.254017871 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.271652272 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13126335 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.108412668 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.169465853 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.119351579 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.272000047 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.326682533 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.145561232 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.124885933 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.265970994 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.10815762 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.264926194 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.137865163 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.1241293 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.265401656 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126219401 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.165992353 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.122861862 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.108437128 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.265414114 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.137120391 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.314285895 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127411729 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.144519979 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.123513105 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124366916 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.211928047 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.26820032 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123530743 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117353968 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.259851373 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.255903086 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.150299063 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.31136655 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.1158439 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.250185738 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.150379673 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125611573 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.124474381 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.150551267 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.249868531 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.128304748 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.124891971 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.149425537 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.276125605 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.119609734 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.269010824 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.121415369 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.148681364 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11929607 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125452913 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.156213923 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.125751653 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.275726361 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126690938 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.260823786 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.263126189 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.256815554 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.264849786 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133250761 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.268316058 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.245375408 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.150206862 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118175939 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125125909 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.264852669 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.149408624 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.12113518 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.254613415 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126653506 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.266800613 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.266337699 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119676982 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.148981858 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113446844 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121764733 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.135676057 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.256893435 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123984785 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121281659 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153996882 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123761803 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.123400936 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.140751664 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.133533183 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.147622143 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.121777349 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12909783 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.148527898 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126718378 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.267900913 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.119124939 seconds)
  done (took 18.246851323 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.111288019 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.112128256 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.114738296 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.134701269 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.11189583 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11094774 seconds)
  done (took 1.66030367 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.149043952 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.1244944 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.157378676 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125590933 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.196561118 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.229546063 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.262657586 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145051786 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.143100598 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.13606949 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.256895955 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.262189973 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256949433 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.154040501 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.233898898 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.153660876 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.266274927 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123518168 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.132736664 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.149060175 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.124031359 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.127352286 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.148236048 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.24883966 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.125121627 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.126105063 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.143673538 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.134082796 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.132590664 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.145113873 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.128335109 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.124557445 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.140889684 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.118605208 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.262471294 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.116464182 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.148322789 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12923251 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127328353 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.151876372 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.263302891 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123106549 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.130942329 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.153701763 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.119271521 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116736113 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.154822731 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117726176 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.264515545 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.126162513 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.153697255 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.126561461 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.124334435 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.153515021 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.117272131 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11820562 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.152345577 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.265493152 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.128709304 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.116187428 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.151269667 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.126365348 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117727138 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.156216825 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.126355118 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.151977205 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.11700677 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12592758 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.147352981 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.126053155 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.127669222 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.150192569 seconds)
  done (took 12.183418568 seconds)
done (took 44.98538452 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.589358377 seconds)
  done (took 2.553752992 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.089519395 seconds)
  done (took 2.058279697 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.192557744 seconds)
  done (took 19.191124313 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.424404993 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.35259201 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.032118855 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155052519 seconds)
  done (took 2.936904014 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.08120039 seconds)
  done (took 2.063163756 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.415542713 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.280519109 seconds)
  done (took 1.670380235 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.71973048 seconds)
  done (took 1.699802761 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.885168028 seconds)
  done (took 2.862676725 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.274768667 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.250122467 seconds)
  done (took 1.509478814 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.669533883 seconds)
  done (took 1.650490101 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.80162986 seconds)
  done (took 19.788483671 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.263305848 seconds)
  done (took 1.255337705 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.296252234 seconds)
  done (took 1.288343142 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.617201631 seconds)
  done (took 4.609754997 seconds)
done (took 66.110586314 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.123927913 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128115597 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.151632642 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125869907 seconds)
  done (took 1.512905122 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.128214923 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124127651 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.152714437 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124892361 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.129271651 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12333194 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.149878936 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.126617631 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122356912 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150339062 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124353387 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.123144655 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.15117636 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123575275 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.121585025 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.152499111 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128430549 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.123767182 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.150708541 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.126321944 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.123995897 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.152784036 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.128201045 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.127533859 seconds)
  done (took 4.184220702 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.120491786 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.116195216 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11749251 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.138543655 seconds)
  done (took 1.485565015 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.131522199 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.156782067 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.159256209 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.131807237 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.136594875 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.15979258 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124673093 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.121669429 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.149194214 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.132861177 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.139405818 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.161877024 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.135151277 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.15201276 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.135007248 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119871423 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.150370372 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136307693 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.131084518 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.15957826 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.126565111 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.130423001 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.154807684 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.134066413 seconds)
  done (took 4.364478836 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.201257822 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.136011606 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177213502 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.170837527 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.181169365 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.123353677 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.151787672 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.15508949 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.130842837 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.132929931 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.150657162 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.170903599 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.155320006 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126928034 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.12517275 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.155761121 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.134165918 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12918547 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.192174342 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.128930152 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.15603611 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.137240231 seconds)
  done (took 4.319566897 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.127523289 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116095255 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.15957864 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.113308989 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.128466911 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.142383598 seconds)
  done (took 1.784304254 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.114519639 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.110886213 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10965128 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.134348893 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114033305 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.110385971 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.133764827 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11112953 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.110891177 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.109620844 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.134412687 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.109740374 seconds)
  done (took 2.395084733 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212240639 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15324033 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255541484 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394096631 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193740703 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193280593 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.286065722 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190013187 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.182534607 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169920856 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2137496 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16858572 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184378161 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193523743 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175993551 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.162191423 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20472288 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213898619 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175992189 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244370578 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161442889 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20940069 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195270958 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180686909 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145181799 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195544022 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.126771932 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160809437 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173516471 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196279619 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180427332 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183686477 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148201729 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219602434 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265739403 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210528084 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299587137 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139206886 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.202856036 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.195721882 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260864739 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173961719 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223487755 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158786313 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134935278 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224607674 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181615204 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.189948378 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.168452328 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151104215 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214217775 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185035451 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201567583 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168432055 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300936741 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164174182 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1470577 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208293245 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192488265 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234086828 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212078006 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12911417 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203799766 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222520234 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219603847 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.174153738 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.168265931 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158715252 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168411802 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.237037123 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214875681 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16373825 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224238915 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164078405 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177267579 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197050793 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160443784 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239657648 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204384091 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.125622773 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155510739 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16610128 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132480795 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.222976322 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12744859 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249514808 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137897516 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.213871294 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181283685 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185118359 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165750692 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19220131 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166762042 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180954882 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.106269663 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175516421 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.162636176 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190774841 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135019488 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155862591 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174561157 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131931781 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184646236 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128638626 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202699559 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.138593757 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193011109 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175772241 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.164544545 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184034146 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179537862 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.167197653 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199601652 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19678235 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164454357 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137773418 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250546396 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202019196 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143294572 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20255347 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201228169 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.18138578 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140575802 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198507826 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225947939 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148220586 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234730386 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143712832 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167640813 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.143778181 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20493983 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164168427 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.192285137 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134152012 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.198987823 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190479602 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.159995772 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144481436 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215738006 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13851078 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157303313 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143162724 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141194214 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.175084887 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.156450196 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.17138788 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159395745 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199463024 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172012409 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189371365 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139514609 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206472405 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13733319 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.201432745 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153877851 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.151122699 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.178667577 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230753142 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134968888 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21392699 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.16556798 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212011256 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204080688 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135337507 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216550934 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134133239 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.126222193 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194725566 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202399403 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167092911 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.220921808 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208878832 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.169220712 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.195115991 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153690942 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200227805 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.216631633 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162056275 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.173253233 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178991143 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201759753 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125956179 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.128226352 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.161967952 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143473969 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16457051 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142130492 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213288205 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169800832 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206967283 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199493678 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144087717 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223988005 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130703021 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192114717 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180054528 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173127941 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.193562003 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222691198 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212321368 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145516107 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197252755 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.12667802 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131435924 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.165652705 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165229774 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170412222 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14169196 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17627321 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196348981 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200324331 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152690818 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22012805 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196569965 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231466306 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.125902345 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16639366 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198241421 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174511869 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.215296771 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138107049 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.192438811 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197149227 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175249783 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19517029 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200805329 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212904517 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195631134 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.199789437 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136710771 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177777735 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165180386 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172044643 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164655462 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174770154 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135886004 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152763599 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.171306461 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145308884 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219568618 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177077715 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179630925 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.187074256 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173622025 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158734767 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148197178 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206663286 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150823183 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109138406 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197767059 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224121424 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155807652 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185146788 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173590048 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163541222 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.321638657 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213061522 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175390197 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168658161 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143480465 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206166499 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161618441 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19176124 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188122346 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175796903 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242482519 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175104503 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.172115378 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137214499 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150138665 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183252323 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.141866679 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.184576177 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.195930649 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.147617488 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221070564 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141910995 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204269063 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181835805 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.179424008 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.155373265 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144146828 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260710001 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203321976 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209647684 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.170483713 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.198345372 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187083233 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156542532 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131162465 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137238199 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218050981 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134974262 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214335505 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195409601 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183844887 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204546564 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194546486 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145267437 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.132109382 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200562435 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153799869 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215995038 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166631733 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.14175463 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218883119 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130746737 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135650206 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192942872 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313645294 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152119345 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201198647 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.110628333 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.308154211 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135826995 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137935362 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1907939 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173409254 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.165692859 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187871321 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204972814 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145800981 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192505265 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140134092 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208698502 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211943286 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171859163 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207204134 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.149685705 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194105046 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160657116 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204745763 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151051249 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.181494474 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163773303 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228061408 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.208770607 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.137667526 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173213813 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203565814 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203391782 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177345304 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17199547 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188313989 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162153229 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171500649 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171926685 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130107486 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16398567 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.197284283 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163447357 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176602161 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205929962 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13727124 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133039265 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180436355 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198479188 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147563376 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.135322973 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219011496 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.13375476 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216148936 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244600114 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135439107 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200394616 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147389191 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135385939 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171920563 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149807652 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165811617 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.180674059 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208453396 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136598088 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206132793 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17174465 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19791684 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158620261 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176559002 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.270260463 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.162317063 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197018335 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18467364 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201045033 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183453415 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180706082 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205799876 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154320758 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198988667 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151382856 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.255072451 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199010811 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.173889545 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136598862 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176907272 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142880972 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.168148431 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156779265 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202053757 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149760195 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.169809494 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.172453356 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178271061 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.151345852 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146376484 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234407172 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183885961 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191632608 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220246432 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143215741 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209879812 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207664832 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134646044 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.197359824 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176296232 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177304507 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157666553 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13870922 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.171503802 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249556175 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.131568683 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164222666 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209340964 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173794509 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205601918 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.139923163 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213117006 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14559137 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212760906 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132845828 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.184690325 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175160723 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168327966 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.133956355 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205646416 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165233801 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.200130651 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147154893 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.207300612 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200331079 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.157518653 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139923317 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316400007 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166739952 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227938501 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137085163 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172178021 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151467698 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192604826 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.170857538 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205406258 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135615388 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134576006 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.17861266 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.164363081 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.167610876 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174907329 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214803259 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161986248 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218553633 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13885451 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.290149304 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147234486 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206378581 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.121064504 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.16381267 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146142197 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141507194 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17669865 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210105342 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221015925 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.198609125 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.152453093 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170109257 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.132433368 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136343867 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194439425 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155300546 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207158998 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153473491 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.137271889 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147686967 seconds)
  done (took 87.621838932 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177842574 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.175806291 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.187295825 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.247481215 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.217649832 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.311737145 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.252737407 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265455496 seconds)
  done (took 2.92347865 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125793801 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.167082669 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.147559896 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.14946414 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.116635696 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.512467851 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.16833736 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.125700586 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.167115566 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.160331124 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.143861735 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.576215213 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.121979094 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.152576763 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.127314507 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.141685769 seconds)
  done (took 4.18561045 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.082866715 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.550024262 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.107038659 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.312016255 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.241848765 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.216782765 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.813116298 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.203432555 seconds)
  done (took 12.607843983 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.175272295 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.174145969 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.986224688 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.345234896 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.220075826 seconds)
  done (took 2.988751663 seconds)
done (took 131.356422425 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.129743462 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130465441 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.130015757 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.160608031 seconds)
  done (took 1.628139902 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.198945007 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096735402 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.128671411 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.095614621 seconds)
  done (took 1.608149521 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.394656397 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.095704 seconds)
  done (took 1.599057763 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150726687 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.141111298 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.170829955 seconds)
  done (took 1.562830871 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.142047598 seconds)
  done (took 1.230899733 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.122658994 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.122794936 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.282111592 seconds)
  done (took 1.621950819 seconds)
done (took 10.341322354 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148034396 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.933237559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.454146203 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140572654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.747359126 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.404477461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.431583803 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.182564503 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188387612 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.14578138 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137743694 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.697393775 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.448148949 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.883930431 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.430199157 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.886282258 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703229367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146960025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124380116 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118415522 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.439934206 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116587952 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117928204 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.146550121 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.699254917 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426862551 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.144652818 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.898393324 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116312407 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.149695395 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.406893881 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117518776 seconds)
  done (took 21.2177121 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157036956 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174385196 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.166313475 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118489657 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120543037 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.147668194 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127941925 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.15861772 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191166738 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.147431519 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139103564 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116450514 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152115792 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117758137 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142649381 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.146576699 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.122189925 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12016467 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.152792982 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119127491 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138381645 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.144923723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11904403 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11934379 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.145796456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139513374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118454608 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.157255463 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116897105 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122729374 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.152190062 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117780497 seconds)
  done (took 5.528629441 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.16451894 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183793777 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.169311496 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.155413329 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.19635571 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119366869 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.234545041 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154481545 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.223641127 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11711359 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138439439 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.147219326 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158386446 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.147590527 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142554192 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11801085 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.150640935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119468618 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124879653 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.148469152 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14014971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116652777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.148562731 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119865284 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117906975 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.169580262 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117256215 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12956598 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.145876194 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123516024 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124192209 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.148663139 seconds)
  done (took 5.815884493 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.132207434 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.134468509 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.141573319 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.172601903 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.128436131 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.132831808 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.16234577 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128349282 seconds)
  done (took 2.235962992 seconds)
done (took 35.89359269 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.140995405 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133974728 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13877243 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.164440757 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.280082239 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124830225 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.136420334 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.157228853 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.132846323 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139508927 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.147402802 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.126817906 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.139571215 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.129641921 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.277657181 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.166026837 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.285386255 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.281950918 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.126769573 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.134136129 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.157433286 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.252896969 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.163436872 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.126530128 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.27592585 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.121047899 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.273237198 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129633674 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.160698269 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.118608582 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.282795897 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.129803273 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.158595723 seconds)
  done (took 6.807460249 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.231371326 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.159122087 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.126818369 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.127487138 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.128367863 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.157009888 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.268261922 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.12669141 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.1272654 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.12601825 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.157923638 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.219774191 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.163411165 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.123172544 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.129182278 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.146393024 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.236859261 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.159347898 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.119207097 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.099013128 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.12212211 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.157666644 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.248334768 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.153989044 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.127217692 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.126773671 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.159553133 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.132562444 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.128976341 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.159394023 seconds)
  done (took 5.75925731 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131495426 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.140226755 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.175384155 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.194848931 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.157050879 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.168569256 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144044654 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137885463 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.178991941 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121379447 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.135697062 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.186292247 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137608325 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130952378 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.150223166 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136350453 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135552613 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.150658392 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129018754 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138101681 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.168985542 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13848102 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143081175 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.158771351 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118945881 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127590415 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.160533313 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.131256936 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.126955641 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.164367729 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121413655 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.121819354 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.151865381 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.155998416 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.121668715 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.163859902 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140868807 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132612417 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.164440851 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.154598077 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.121876311 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.151403355 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.147973776 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.207655027 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.122091063 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131414652 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121964139 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.165549911 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118714512 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137778271 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.193806425 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.121277464 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.170603718 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.119203973 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119680604 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.128176979 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.14974899 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124056728 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.134750555 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.151312545 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.140933053 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127486536 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161617186 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122294556 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131401106 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.148910129 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.119212284 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12430725 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.176736701 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128085675 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.157391163 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.148943471 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.132269268 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.133388198 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.160885702 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133326533 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.119110016 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131192801 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.161092869 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125334285 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.135348282 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.152196472 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.121504703 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.137254879 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.170309617 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.134811782 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.130942896 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.160494038 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123120916 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.122987112 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.167492216 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.121469622 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123713891 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.163545309 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120446728 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124367803 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.16044844 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.130881832 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117370514 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.175993736 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123744102 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.120244926 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.175923256 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123351945 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123798411 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.128993273 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.191793832 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.120199087 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128769027 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.162532278 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121474866 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.127388317 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.151501808 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120263836 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135991025 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.16599628 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128894394 seconds)
  done (took 17.733334937 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.37533296 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.367753132 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.217957475 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.410779193 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.164933512 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.254754932 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.398529284 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.370832832 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.120178117 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.185734539 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174783479 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.332900952 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.153699913 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.148694005 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.371155059 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.44669998 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.14843481 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.191332884 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.154331493 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.165893115 seconds)
  done (took 6.281441173 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.128247337 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15557798 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.173475718 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.138995763 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.13144336 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.167034553 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120724601 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.142248551 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.162244886 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129634911 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.124540793 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.158157153 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.134888127 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.135866685 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135169206 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.181014071 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.130430411 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124261552 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.171736409 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12524363 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.106265168 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.17527509 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.129814323 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.172578466 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.138164736 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.130817316 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.147987647 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.1249792 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.127287087 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.129400875 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.153412479 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129021993 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127041742 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.138650991 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.132144985 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.135827207 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.156872249 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.123581147 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126243595 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.122004374 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.1642467 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.13388841 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128239752 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.134103707 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.14012665 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114989773 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.133856763 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.16244479 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11067343 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.139920393 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.163438299 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.135150734 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128528996 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.17196754 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.12728274 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.136839924 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.161832309 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.134844611 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.1250216 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.149358361 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.118623042 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123024979 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.15860324 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.134116148 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.133069573 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.158096483 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128852828 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121138249 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124359674 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.15296833 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.123308195 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.133030641 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.169737386 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.130188698 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.126906586 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.161105181 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12912955 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.099474744 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128375267 seconds)
  done (took 12.084845907 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.146150415 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131785151 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.166337408 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.153934887 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.133175833 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.126235011 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.163005624 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.140263474 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.134728883 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16998448 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.13533572 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13434755 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.175281796 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131776488 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.130101793 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.167390094 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132966115 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.188330055 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.132621021 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14751833 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.165860417 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.125487109 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.133969302 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.162387841 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.148248223 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.132114123 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.17770677 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.132522976 seconds)
  done (took 5.262994494 seconds)
done (took 55.035114362 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.283473564 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.47928858 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.250265938 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.245344528 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.252153691 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.287104758 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.247363099 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.247767307 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.883942365 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.214802404 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.247513265 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.245779193 seconds)
done (took 29.017597201 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.365374965 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.385188953 seconds)
    (2/2) benchmarking "String"...
    done (took 1.568035116 seconds)
  done (took 4.091500787 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.237357916 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.23731852 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.484279871 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.238891021 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.239496346 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.238762306 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.237585331 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.253680611 seconds)
  done (took 16.055858308 seconds)
done (took 25.878705259 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.254252433 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.535789124 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.499041928 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.222431547 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.237324883 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.238997332 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.259127816 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.302206691 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.242018526 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.223220189 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.679960599 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.529867762 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.256566785 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.637405046 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.223069441 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.25317394 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.254081679 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.588681813 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.24113429 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.273048978 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.215367471 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.220079453 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.25873675 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.252949301 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.250928001 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.239859218 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.22533576 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.247899612 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.528592317 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.285216147 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.279035814 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.245341172 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.224059065 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.259559172 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.251219977 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.246556255 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.528463704 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.252889937 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.220457787 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.248128551 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.53686044 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.261434166 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.239555966 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.245316012 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.234127099 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.245862224 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.219356969 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.360881314 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.271628343 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.241318395 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.305532521 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.660613515 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.245866209 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.264824538 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.254801656 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.56298745 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.274468777 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.346844029 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.279949092 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.266017518 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.241309418 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.247521252 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.282447705 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.241335403 seconds)
  done (took 146.891407985 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.241262768 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.246322372 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.240898357 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.246310439 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.245858692 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.244514956 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.240765742 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.242302774 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.246100577 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.253939648 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.246645765 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.243064923 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.246492542 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.241478085 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.251535668 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.258416324 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.247708504 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.261333294 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.254135298 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.243432115 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.245929263 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.246669289 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.244361803 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.243289706 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.254088479 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.324851627 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.246975444 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.261416907 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.256743628 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.243547526 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.249172847 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.253999292 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.916326442 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.115375613 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.259990268 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.289597495 seconds)
  done (took 81.72517578 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.243384364 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.243226151 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.244176218 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.279475997 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.244116545 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.869514924 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.883053877 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.307808018 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.743664461 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.803222088 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.559299607 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.249262112 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336591012 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.256964227 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.249778033 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.340075773 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.271498356 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.245369578 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.245504779 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.881573138 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.26173954 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.248699588 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.428275333 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.26116399 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280706439 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.637409215 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.804746941 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.24984692 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281882373 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.585336426 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.297975533 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.246101519 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.656431634 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.554753759 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363430174 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.246445098 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282218306 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.24659077 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.5338805 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.246116409 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.247467527 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.250271829 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.943762585 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.250662342 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.876121507 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.24913978 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.294257113 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.251364813 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.247332354 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.202680325 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.082720093 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.250117342 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.246853047 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.247585555 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.249107433 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.247037113 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.247470921 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.283469201 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.229069174 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.196174434 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.251544225 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.252085857 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280612149 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.248841146 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.261090707 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.247920827 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.074363937 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.306310696 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.465853038 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.884869279 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.252356877 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.345888919 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.369782671 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.248437225 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.247227098 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.247420522 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.247858851 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.363377018 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.247962949 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.248179359 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.975391525 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.43191249 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.265111436 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.812277613 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.35390883 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.248064369 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.24936092 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.660066739 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.254372992 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.250054678 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.033572179 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.350757255 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.248342259 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.248574363 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.24972575 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.977685774 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.887032304 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.563512191 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.254673776 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.817215842 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.254239564 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.156876203 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.853912874 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.948657986 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.255601494 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.364951 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.436784907 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.270260692 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.249258429 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.815499261 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.256246611 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.305830639 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.256016146 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.655237311 seconds)
  done (took 384.746453726 seconds)
done (took 614.488838522 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.228855347 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.230110839 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.23151591 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.230596011 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.231276158 seconds)
  done (took 12.289893137 seconds)
done (took 13.426976421 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.470213874 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.465200373 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.461087449 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.323169279 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.476308027 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.48148111 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.384332784 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.327095306 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.453543522 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.48188616 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.467673789 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.293543992 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.478769962 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.445484379 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.273793009 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.373811134 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.403964531 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.39897045 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.342152771 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.368706282 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.496483114 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.294603227 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.288914058 seconds)
  done (took 33.390905735 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.560166566 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.268756571 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.318904598 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.539200359 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.300164456 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.571681584 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.590006309 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.267313994 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.450440607 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.297334824 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.275476059 seconds)
  done (took 18.57960319 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.557118668 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.268550399 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.322670021 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542844885 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.302092935 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.560413164 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.596605573 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.268406267 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.452270798 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.277288103 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.275929718 seconds)
  done (took 18.565111199 seconds)
done (took 71.675318493 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.294937505 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.360598642 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.294956698 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.274573768 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.274491545 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.272299086 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.275504967 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.27366522 seconds)
  done (took 11.461574694 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.270729224 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.270979523 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.272304062 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.271616493 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.272835023 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.273361394 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.270746632 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.272529536 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.272373374 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.270297196 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.271929997 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.272158533 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.271671907 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.27181277 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.273993242 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.272489429 seconds)
  done (took 21.495683868 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.273382348 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.271991041 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.271557295 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.273646061 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.272181092 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.2740057 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.274023517 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.272133984 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.271039444 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.272151778 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.275472553 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.272172858 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.272743556 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.273956074 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.273412421 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.275271044 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.273177597 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.273219472 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.280287028 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.27408011 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.273150077 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.273236735 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.274113676 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.272765483 seconds)
  done (took 31.707576344 seconds)
done (took 65.807218122 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.264287489 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.264044245 seconds)
  done (took 5.671659774 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.334270677 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.331299801 seconds)
  done (took 3.811549503 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.276515712 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.276050946 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.276195456 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.276129878 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.27429318 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.2771327 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.275146293 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.27419216 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.274330598 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.276663631 seconds)
  done (took 13.900183529 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.276235912 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.275158807 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.276820612 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.275130296 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.275413884 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.276087392 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.274577654 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.275229094 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.275728802 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.277016072 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.276852384 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.274822011 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.276505332 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.276366606 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.275419935 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.278208432 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.27595384 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.275686352 seconds)
  done (took 24.113416443 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.287194946 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.294052284 seconds)
  done (took 3.725958205 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.403671224 seconds)
    (2/7) benchmarking "second"...
    done (took 1.317959053 seconds)
    (3/7) benchmarking "month"...
    done (took 1.380850045 seconds)
    (4/7) benchmarking "year"...
    done (took 1.380152676 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.318222791 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.297064402 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.319937313 seconds)
  done (took 10.562897351 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.262142929 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.561401061 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.751338708 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.422284141 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.253776071 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.280902972 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.239170514 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.302039291 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.285788752 seconds)
  done (took 14.504159152 seconds)
done (took 77.433106003 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.262279652 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.291063353 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.275468041 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.301027309 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.617179177 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.316879864 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.266528882 seconds)
done (took 16.477371132 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.249955646 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.250571973 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.260596879 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.288616452 seconds)
  done (took 10.197183527 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.263510147 seconds)
    (2/2) benchmarking "read"...
    done (took 1.588832229 seconds)
  done (took 5.00007132 seconds)
done (took 16.345325921 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.279894287 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.27906755 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.279499316 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.278545292 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.276944694 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.278925024 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.279267116 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.27875307 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.278131361 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.280408383 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278479631 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.279785143 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.278224664 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.277663862 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278033546 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.278887858 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.279910483 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279839632 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280215973 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.281650523 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.280258386 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280744741 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.279840958 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278637465 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.279827896 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280027619 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.279576906 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.279129469 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280842223 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.279987558 seconds)
  done (took 39.529981285 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.286026063 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.287339043 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.279059176 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.281853823 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.283303349 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.281096144 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.280823275 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.280600964 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.280411849 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.282419312 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.282223044 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.28176897 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.282378157 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.280406735 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.282074386 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.28165188 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.282403674 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.281460492 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.281788737 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.281728937 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.281739718 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.280758325 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.281246622 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.281491245 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.282571979 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.28236231 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.28233409 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.282873261 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.282157353 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.28146098 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.2830147 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.282496879 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.282371103 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.282365653 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.281998802 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.28151209 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.287603197 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.290354444 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.281939872 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.282672797 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.281055219 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.28416326 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.283310749 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.283628885 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.282817071 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.281852429 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.28206787 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.282957504 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.284411733 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.284217269 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.283738832 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.284550861 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.284258327 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.285081473 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.283129938 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.283892456 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.282741885 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.283401669 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.284216803 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.284284275 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.285030684 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.286752889 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.285023617 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.284397408 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.28468685 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.285617767 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.283945563 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.284867506 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.284247754 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.28545279 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.285468219 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.285754412 seconds)
  done (took 93.541393873 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.285332112 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284955009 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.285643059 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.284242193 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28543338 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285008653 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.286340201 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286739125 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286199745 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.285239383 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286473716 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286668252 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284040496 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286192611 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285411357 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.28550444 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.287363231 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287344214 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.286264676 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287439976 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28659337 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.28753403 seconds)
  done (took 29.446612768 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287725831 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.286522853 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.288377128 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.287830223 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.28922972 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288725004 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.287232311 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288075337 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287092268 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28632083 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28664707 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285119708 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.289239737 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287134626 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287195895 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288341308 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285777891 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.290017017 seconds)
  done (took 24.331725535 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.28840285 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.288159428 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.288676176 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.28685793 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.288233389 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.287543354 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288471876 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.285850506 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.287443502 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.288363827 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.288368192 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287129171 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.287877554 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287847385 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287799492 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.289980693 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.287912552 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288083457 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287900006 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28870701 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.289422161 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288630327 seconds)
  done (took 29.493549474 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288752647 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.289499957 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.289260399 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.288821274 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.288073259 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.290055406 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.291428642 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.288645187 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.29456849 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.288691941 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289069855 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.290317112 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.292132313 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288693324 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.28952564 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289973265 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289238939 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289869387 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289698496 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.288901213 seconds)
  done (took 26.952127984 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290139842 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289707978 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291220377 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290163272 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289207464 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.291562656 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301197725 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.289391255 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291658484 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.291190368 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291335848 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292576155 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292740788 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290609112 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29162769 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290011277 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290440264 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2909093 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.29202931 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29104577 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292738475 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.29092887 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291505634 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291287015 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293102783 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291832712 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292709848 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29079767 seconds)
  done (took 37.322531242 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.311117044 seconds)
    (2/2) benchmarking "in"...
    done (took 1.310791407 seconds)
  done (took 3.780753015 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.291704206 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.291804956 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.294112931 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.292325659 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.293234176 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.291960966 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.29203234 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29158178 seconds)
  done (took 11.497185645 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.284186191 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.29517053 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.292692076 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.292739313 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.293769485 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.284629365 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.295097458 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.297842092 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.286439933 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.287251371 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.291991045 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.293223565 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.288728895 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287942833 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.287994573 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.288613152 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.296525943 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.294904421 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.294811263 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.293739748 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294727326 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.28923315 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291564296 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.29906456 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.28798009 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.298785557 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.296424656 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.299271841 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288662897 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.293890866 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.290916823 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.298331472 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.295704933 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.29632198 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.295893044 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.294859148 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.298528955 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296013058 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.297659936 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.301448073 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.297019316 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.296351757 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.288807592 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.294335366 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.293984663 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.302285966 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.295845461 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.295211467 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.288922968 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.29226296 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.303248971 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.288468913 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.29801485 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.293270192 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.294334415 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.301525252 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.303705718 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.291480564 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.296761211 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.30163371 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.30965963 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.307193632 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.296959802 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.302293613 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29924035 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.317053563 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.303655612 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.306705578 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.301128792 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.298027338 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.30066714 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.309581951 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.311552995 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.30409336 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.298301357 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.299593007 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.293627817 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.304290172 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.301814572 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.303758431 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.306378121 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.300707247 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.301230768 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.314049389 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.294090286 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.305715038 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.300030607 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.30055018 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.291905381 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.305738218 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.309075861 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.301049266 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.294273288 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.29570016 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.29677018 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.301620721 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.292049818 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.29678008 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.305437174 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.302974946 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.300514697 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294935719 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.303084985 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.30668395 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.299483874 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.303003798 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.30809632 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.294260396 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.306889586 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.310809962 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.303053011 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.294797294 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.301496657 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.305033492 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.295654755 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.303762069 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.306794391 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.298622328 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.308657801 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.302466076 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.304577688 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.323817197 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.309412169 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.302244217 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.299430304 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.314723598 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.303796671 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.301477785 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.310240967 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.303338761 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.302705861 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.300151224 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.310689081 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.296777565 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.307517061 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.297605841 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.306875597 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.302264362 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.303375038 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.299535922 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.304320011 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.300742939 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.304063077 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.306866017 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.310054038 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.300895885 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.311670759 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.304867339 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.303895378 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.306819283 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.309625211 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.305012341 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.298483552 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.308766364 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.29730633 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.306040161 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.297896127 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.307552888 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.304762713 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.304410017 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.303769645 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.296830632 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.301606145 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.307862086 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.302900255 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.304277785 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.308537474 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.305218992 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.305395878 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.297915274 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.308829325 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.296864946 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.301152443 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.312200154 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.306658984 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.305350577 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.304056931 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.312174885 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.305105498 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.306773746 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.299138258 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.307448972 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.311280618 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.307920231 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.315031896 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.306204147 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.307766168 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.300101271 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.302802615 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.308427999 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.302243835 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.315999334 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.315087456 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.323111223 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.302561684 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.312203705 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.301864292 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.311844838 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.305733262 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.315682707 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.307618286 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.306829892 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.301921315 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.313054256 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.301968773 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.312741171 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.300321817 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.309315012 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.308719944 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.306816419 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.308592443 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.30253451 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.307372424 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.312174362 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.30855097 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.307680853 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.302426953 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.311128135 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.300777707 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.303668936 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.312132174 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.309039778 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.312079873 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.317401568 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.308301625 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.313645787 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.310619792 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.304875454 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.312312059 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.307247041 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.309514452 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.313512231 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.312680515 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.305394101 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.317067007 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.31363111 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.303978824 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.311120371 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.31988483 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.311796342 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.3057991 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.318423016 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.312338531 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.310442054 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.312480515 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.305109426 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.31446145 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.314109813 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.323870202 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.30387111 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.314890153 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.30602819 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.315742752 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.30845938 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.312405281 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.313285269 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.316972244 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.319318777 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.313032298 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.307154736 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.317214186 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.313969159 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.312598266 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.306696171 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.319975709 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.316762411 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.31440013 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.309870093 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.309400473 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.317312068 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.305642749 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.315223042 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.306361612 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.324038968 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.336502859 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.315000482 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.317871964 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.317005597 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.314943188 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.317454989 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.308475823 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.308856087 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.310466993 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.309500513 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.306924887 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.316821351 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.306999048 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.31714602 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.312680951 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.315416742 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.316862274 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.314721373 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.307039411 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.316409175 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.314533776 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.314024368 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.306836403 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.315516217 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.308914877 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.317377803 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.316383213 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.308845379 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.32303593 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.320593505 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.312684998 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.31154978 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.310490658 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.309661761 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.312332069 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.321052255 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.310368601 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.32266447 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.309408821 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.316702943 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.311998478 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.324335724 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.327648812 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.311259084 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.322875715 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.315984945 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.308140081 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.309188611 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.316973009 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.320850568 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.328777023 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.310006864 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.320298858 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.316024364 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.317417738 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.31644429 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.316139857 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.315752208 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.317167685 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.321020952 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.323314559 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.312182171 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.320568916 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.326795252 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.316274381 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.315603133 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.308737046 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.321882222 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.326536754 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.315434428 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.314913599 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.313047812 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.318790982 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.318193158 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.318669611 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.319618297 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.318070664 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.321916562 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.325514339 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.321741364 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.319066594 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.324921677 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.330591355 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.324740266 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.332342688 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.312471133 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.323185895 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.31885223 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.313613949 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.314257998 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.315209671 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.321989943 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.311463175 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.324276832 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.319707922 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.315142687 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.322188647 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.327303179 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.312581471 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.323822028 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.343867623 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.313725624 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.323321379 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.318490834 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.313239369 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.32290696 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.318912563 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.312260907 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.317267258 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.319842628 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.327122951 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.313998888 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.322864475 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.314644603 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.324423671 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.320731938 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.319544741 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.321619845 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.320903034 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.314193738 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.32353611 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.320907641 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.331968303 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.316572344 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.320563742 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.315882479 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.3283217 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.333634168 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.317154226 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.327801914 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.322780627 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.315334997 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.319791029 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.327278934 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.315986156 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.325836322 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.314615451 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.320691572 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.322690593 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.324217516 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.327140022 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.325605918 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.316193256 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.317653124 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.324189081 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.322492677 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.325343815 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.319038341 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.329750973 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.315951143 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.316757128 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.325070944 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.318551739 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.328917977 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.318023882 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.32412895 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.321006838 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.327645353 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.324107966 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.322279936 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.314496276 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.318110542 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.331594713 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.331438363 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.324489718 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.325219508 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.32918688 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.319322848 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.321884848 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.32488942 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.318553218 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.318208289 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.32956596 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.318536101 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.31996283 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.31976851 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.327929939 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.329219042 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.330205136 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.320661135 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.332082561 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.335576221 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.333600404 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.316148261 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.323519865 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.321107362 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.326898457 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.326860621 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.318443822 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.333345653 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.332970037 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.330474375 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.326050841 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.328515761 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.319248138 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.329057745 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.327745791 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.322972092 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.333029273 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.322370428 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.332891114 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.327083294 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.325370971 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.319231228 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.320206532 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.324755407 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.32563445 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.329522714 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.32583725 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.331760863 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.323617461 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.333474401 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.328563576 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.327574303 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.327369636 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.320973828 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.328725461 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.321079484 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.331416598 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.330899017 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.322637908 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.331219058 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.328677876 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.324157087 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.328610192 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.3363652 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.327812724 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.323074978 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.325488793 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.333303102 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.339796911 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.329435896 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321414854 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.328389358 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.331496567 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.329137019 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.329302401 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.32394171 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.341589311 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.344806357 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.323107102 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.326048192 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.334604254 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.34033355 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.330866193 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.330943699 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.325141578 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.329602685 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.337469913 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.330308127 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.334602288 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.336940005 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.326665283 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.334060684 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.325532204 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.330239864 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.330986601 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.341667048 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.330220524 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.328699339 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.345288333 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.342465814 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.333411691 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.359152939 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.339694564 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.331713716 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.337531426 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.322637631 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.333646736 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.327135317 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.338043512 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.331787431 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.332484595 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.331257449 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.324305088 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.336648324 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.340697991 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.343613979 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.332466269 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.325862238 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.326525992 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.332817232 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.332272458 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.335050695 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.331497654 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.334104651 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.332629883 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.325535399 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.343582915 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.352485968 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.339434683 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.33474502 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.335188319 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.335149537 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.339844007 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.337283891 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.340853388 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.333634894 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.334146003 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.333682162 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.344219297 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.335161796 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.328293466 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.330040378 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.330281907 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.338302021 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.344592061 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.359644311 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.339021157 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.340231156 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.337688674 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.336097424 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.330958901 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.338726789 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.337496928 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.32904383 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.333454745 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.338698214 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.337187784 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.335509357 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.331108093 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.342320462 seconds)
  done (took 785.050532839 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.336050638 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333625612 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.336979512 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.335664474 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337949078 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.336937417 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.33527178 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.334858469 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.336913723 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.334474308 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.335232142 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.335890303 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.334569332 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.336490065 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335029039 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.337236591 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336050617 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.335117963 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.336009301 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.337222517 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.336805735 seconds)
  done (took 29.253173503 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.337496002 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.334766786 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.334649271 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.335627994 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.338024899 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.338277646 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.336961128 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336131699 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.337615434 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338687502 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.33921736 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336527997 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.337095183 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.335690949 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337586813 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.33679908 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.339775713 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.337492102 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.338212571 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.338920116 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.339335752 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.338363468 seconds)
  done (took 30.622709255 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.337993486 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.337473274 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.332144753 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.344787474 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.337863647 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.338127048 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.338686724 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.337808856 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.33734389 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.332024524 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.330585318 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.333361938 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.33552404 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.345456002 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.334515989 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.344940687 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.340148351 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.340505979 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.340781111 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.339265034 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.343192055 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.352493297 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.338884328 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.332125258 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.340535703 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.338973179 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.340771521 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.340000167 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.332414677 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.34455045 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.340279883 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.333173554 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.344047521 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.344996221 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.335110489 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.344180326 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.339956161 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.340228116 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.340709709 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.342914326 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.365899565 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.340911999 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.345226026 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.354984312 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.341191958 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.3359491 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.348390404 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.341052628 seconds)
  done (took 65.543586297 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.341147411 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.341980909 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.342414465 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.341117655 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.341588707 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.340473382 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.341238955 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.3421388 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.341769215 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.340693961 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.341414041 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.340665437 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.341674905 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.342401961 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.341581404 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.342292742 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.340807968 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.341442567 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.342434796 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.341384833 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.342225183 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.34165805 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.341307464 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.342824891 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.342405979 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.342729082 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.342709095 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.34352947 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.342846863 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.343800201 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.34294596 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.34213394 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.344202063 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.343786178 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.345227126 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.343729118 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.343917867 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.343337656 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.34370178 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.343569122 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.345888391 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.344543612 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.344440747 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.345038117 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.343943986 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.344676783 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.3440844 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.343709634 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.343397312 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.344123274 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.344663734 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.345398333 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.344428359 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.346201452 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.345420595 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.34606726 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.345860228 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.344491356 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.346213781 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.344040944 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.343633123 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.345565952 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.34573254 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.345293313 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.345369816 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.345270885 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.345436907 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.345220788 seconds)
  done (took 92.558345421 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.347174695 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.344518093 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.3461579 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.345593823 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.346862883 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.345104051 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.344971936 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.346492483 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.347147095 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.346058121 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.346658956 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.347447601 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.347382621 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.34698509 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.3460931 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.345760327 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.346410058 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.348207928 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.347267332 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.347204899 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.347763491 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.34763121 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.347363779 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.34845122 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.347918503 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.348191531 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.347213107 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.34782583 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.348695002 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.348761857 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.349361122 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.350245269 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.349436078 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.349634887 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.348426891 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.348996172 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.348719641 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349102158 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.35020033 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.350180523 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.349188833 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.348564777 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.350059974 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.349073938 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.349025647 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.350465445 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.349967579 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.349804743 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.348515583 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.350065777 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.348444546 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.350562696 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349162533 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.347982993 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.349341441 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.348443579 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.348554439 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.349811309 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349939654 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.349438779 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.350698485 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.350033404 seconds)
  done (took 84.798672489 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.349735018 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.350381338 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.349378152 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.349422326 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.350507131 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.350119503 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.349250629 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349436001 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34802186 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351432018 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.349664774 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.351271811 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351180539 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.348991368 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.350380051 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.350986516 seconds)
  done (took 22.809457348 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.348999867 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.350549373 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.350950474 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.351462581 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.350167709 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.352452732 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.34905954 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.351148444 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.350032821 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.350969618 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.349634446 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.352006885 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.353172549 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.352223341 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.350656874 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.350171791 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.350523339 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.351665537 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.350787236 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.352398635 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.351651301 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.35102796 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.351398993 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.352986213 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.353082232 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.352373641 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.351547237 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.352740239 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.35243604 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.352397306 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.351542701 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.352346768 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.352592586 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.351376097 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.354553477 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.353840629 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.353144212 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.354727347 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.352958383 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.355713558 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.353718325 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.352354558 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.353459169 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.352747867 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.353440239 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.353407954 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.353195164 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.354008209 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.35378256 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.353323439 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.354697979 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.354087203 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.353271882 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.355002439 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.354219214 seconds)
  done (took 75.591415583 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.354764462 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.353593349 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.353243902 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.353885171 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.354275739 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.353950623 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.355181721 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.356234772 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.354169799 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.35521016 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.354700085 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.355845129 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354822557 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.355703067 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.35626652 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355737857 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.356700751 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.354212351 seconds)
  done (took 25.601714302 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.355688159 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.357883367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.354714929 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.355119446 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.355677626 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.355423488 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.354204544 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.355748538 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355779953 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.357509026 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.357927971 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.356427772 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355983377 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.35658133 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.356285352 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356929961 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.357664696 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.356105911 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.355987195 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.355880447 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.357276998 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.357265584 seconds)
  done (took 31.05287199 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.348672939 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.347769187 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.34728071 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.365714563 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.367855806 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.349015694 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.347619628 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.348936409 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.372754369 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.396838376 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.391801134 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.367848555 seconds)
  done (took 17.567709543 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358180945 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359612417 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.357600964 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358295843 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358098468 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35757938 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357146447 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35925456 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358265194 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359391436 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358143839 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35791926 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358640362 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359463359 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359402454 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358996749 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360650288 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360472352 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357567375 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359130709 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359704297 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359016369 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358506883 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359910263 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359477802 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35897176 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359710162 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361297983 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360702114 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359496534 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360695437 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359606751 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35996292 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361086535 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36031782 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3612869 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360488987 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359784137 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360420166 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360477024 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.361186127 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360616474 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362159292 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360942703 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361476516 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362295088 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360284159 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361864582 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361899901 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362744787 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361180748 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360304204 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362005531 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360706227 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362662188 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362404515 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361232518 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36227773 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361587171 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361294339 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362186692 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36313549 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36355614 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361528911 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363365465 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361979467 seconds)
  done (took 91.000554861 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362351056 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.363079309 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363083828 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363283912 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364042382 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362686141 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362384037 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363026003 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362520901 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362890197 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36366114 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363136059 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363910858 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363536577 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362851541 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363047289 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364749009 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364422332 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364424279 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364541702 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364127117 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363604099 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364270511 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36373493 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363628146 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364753541 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365261763 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365334922 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365496194 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365873973 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363831505 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364662859 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365996006 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.36611278 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365746217 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365643857 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363849694 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365155135 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366421337 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366262701 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364213448 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366693642 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364301646 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364702041 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366710557 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365919372 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365673065 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365398646 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366902944 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366682388 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365963555 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366067315 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367701429 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367432619 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368003134 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366180996 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366727856 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365314398 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366553474 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368586744 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366242851 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368189377 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368599591 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367398698 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366649242 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366813982 seconds)
  done (took 91.319685782 seconds)
done (took 1739.814591578 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.525809625 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.478967083 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.357750067 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.379958888 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.358190579 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.356144431 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.37097357 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.359393887 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.356753 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.357986318 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.357268355 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.551332173 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.393949894 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.359351117 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.359720099 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.457882553 seconds)
  done (took 27.605683643 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.388694203 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.368485232 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.49763516 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.367167026 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.388486806 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.581062493 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.43060807 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.368282777 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.571188758 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.389705173 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.356531907 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.388217044 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.362869533 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.367391299 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.390361161 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.57814105 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.667911903 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.373582428 seconds)
  done (took 30.063124223 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.911498216 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.381186677 seconds)
  done (took 5.519349577 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.385490817 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.364512912 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.366367502 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.363285977 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.35555418 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.355226158 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.362914103 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.364778358 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.373355998 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.516893995 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.370848178 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.377542593 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.386225619 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.365598796 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.374405651 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.411637545 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.516413152 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.376367615 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.37224731 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.370244551 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.364151669 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.462118898 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.418585409 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.379290454 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.514824361 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.364973743 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.372832578 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.373457015 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.500750417 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.376441572 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.365935349 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.366141936 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.369633174 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.359577006 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.953336275 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.384355868 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.394531448 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.37423457 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.376326086 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.52419628 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.367551657 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.372913732 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.360687082 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.938391362 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.481839396 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.502017059 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.381164396 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.368035117 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.366357045 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.4391673 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.369625145 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.367699642 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.431642175 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.264902303 seconds)
  done (took 87.574062554 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.383016028 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.359375679 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.547259795 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.384445308 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.360817433 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.398371995 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.364175997 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.711956457 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.408510325 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.364595003 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.712052532 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.052555797 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.372446422 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.40802782 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.382046903 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.400045005 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.360285172 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.362215685 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.365710444 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.361890485 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.970682585 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.382317506 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.364334286 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.561286195 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.405348944 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.990967833 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.365978104 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.387331567 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.36863029 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.361210789 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.018456867 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.372734142 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.396969238 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.366890514 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.687888866 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.837791711 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.780115233 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.366546609 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.409193432 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.363324627 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.363083764 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.980715347 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.8001943 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.362462937 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.363857554 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.968648428 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.362105293 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.365798161 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.366198377 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.633040194 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.362718084 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.365763835 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.361063702 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.385927866 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.362837915 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.410982036 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.39499635 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.97564459 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.366826118 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.367033457 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.382962001 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.364721144 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.367831756 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.363721328 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.364466954 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.809373251 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.554188786 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.371663655 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.815180156 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.018000256 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.371984215 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105513724 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.371026046 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.387173774 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.477343973 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.37696375 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.364284489 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.988051756 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.39226518 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.366260043 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.801515268 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.372566357 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.705394955 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.389319374 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.366658468 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.992670076 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.375015817 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.421445953 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.364861245 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.371286224 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.387680344 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.365639847 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.689428383 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.437271799 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.367015195 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.367623534 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.365831663 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.367553423 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.366536833 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.373393828 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084146122 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.374393094 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.366678787 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.370971499 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.365344863 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.374343622 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.368566717 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.368640156 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.647847391 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.367578522 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.394319407 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.367775126 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.36755088 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.370098578 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.567514423 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.373894488 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.734866875 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.368743678 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.389299759 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.373434111 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.3680322 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.420432166 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.366612857 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.375504334 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.343500937 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.730672995 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.386691176 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.389699938 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.369837086 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.367036414 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.367078895 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.369394979 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.397633274 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.37273293 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.212534905 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.393504056 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.397742545 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.36738735 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.380784028 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.368740046 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.375735101 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.37077195 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.679170605 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.689977859 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.553498915 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.369126253 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.369127219 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.227735812 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.41202318 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.556519635 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.392411119 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.369654063 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.676716196 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.556858808 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.36868656 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.370508147 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.370446226 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.654538663 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.370455426 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.722759802 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.04599769 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.374734515 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.383506104 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.210552382 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.151115975 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.377196947 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.373190232 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.703136071 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.395625494 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.371163051 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.369313663 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.372119954 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.370301078 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.374297055 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.374573702 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.3714539 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.370175303 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.44358298 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.56998023 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.390844103 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.381739925 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99186297 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.377932909 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.372032903 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.379174909 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.372883768 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.371678865 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.409460461 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.376765657 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.398870867 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.372598131 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.380107953 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.061813037 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.375678628 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.371902608 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.572261792 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.171611742 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.376924521 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.373756593 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.37304562 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.424124051 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.013418705 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.439768722 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.758731631 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.3835837 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.417110641 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.38480727 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.476318129 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.020918094 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.380211309 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.372121004 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.170130629 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.376329426 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.147558536 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.374571754 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.37461102 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.097355064 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.379009473 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.374432238 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.373294533 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.375661167 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.679407606 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.374569649 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.401431247 seconds)
  done (took 508.86722018 seconds)
done (took 660.854455623 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.374100384 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.379878416 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.378063564 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.378891869 seconds)
  done (took 10.75204033 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.391479745 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.380771764 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.390032495 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.379888559 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.392245656 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.382163218 seconds)
  done (took 9.560575345 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.374213149 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.378017275 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.380212983 seconds)
  done (took 8.373571499 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.628959279 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.407451272 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.798032177 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.380265264 seconds)
  done (took 9.459264475 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.391380978 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.391737612 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.392355824 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.393600275 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.394267506 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.393255002 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.392696234 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.392524616 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.392818816 seconds)
  done (took 13.777439822 seconds)
done (took 53.164935643 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.484169051 seconds)
    (2/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.405951501 seconds)
    (3/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.354424245 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.47131562 seconds)
    (5/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.819538528 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.41827733 seconds)
    (7/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.493502572 seconds)
    (8/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.394360099 seconds)
    (9/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.354005638 seconds)
    (10/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.436503275 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.515679692 seconds)
    (12/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.353521285 seconds)
    (13/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.428788914 seconds)
    (14/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.463033404 seconds)
    (15/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.413319471 seconds)
    (16/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.813920112 seconds)
    (17/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.471523755 seconds)
    (18/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.660258356 seconds)
    (19/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.707859155 seconds)
    (20/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.89085674 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.376897965 seconds)
    (22/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.674780731 seconds)
    (23/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.35850421 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.498668646 seconds)
    (25/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.459207776 seconds)
    (26/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.467956069 seconds)
    (27/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.35603915 seconds)
    (28/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.575735132 seconds)
    (29/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.393816509 seconds)
    (30/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.467479741 seconds)
    (31/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.456309719 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.552347193 seconds)
    (33/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.707927797 seconds)
    (34/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.444345068 seconds)
    (35/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.731780915 seconds)
    (36/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.533216208 seconds)
    (37/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.194044022 seconds)
    (38/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.458360301 seconds)
    (39/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.508835614 seconds)
    (40/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.487508247 seconds)
    (41/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.381976107 seconds)
    (42/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.354607571 seconds)
    (43/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.421431926 seconds)
    (44/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.657876044 seconds)
    (45/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.472484256 seconds)
    (46/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.796025972 seconds)
    (47/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.569627065 seconds)
    (48/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.423662661 seconds)
    (49/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.45143286 seconds)
    (50/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.356226098 seconds)
    (51/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.358257043 seconds)
    (52/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.418851293 seconds)
    (53/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.002788644 seconds)
    (54/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.368244775 seconds)
    (55/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.416614638 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.768041438 seconds)
    (57/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.403626546 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.56476714 seconds)
    (59/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.683097811 seconds)
    (60/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.606477914 seconds)
    (61/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.722185961 seconds)
    (62/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.481813199 seconds)
    (63/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.470955066 seconds)
    (64/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.512928111 seconds)
    (65/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.357275149 seconds)
    (66/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.73905833 seconds)
    (67/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.420278844 seconds)
    (68/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.544904003 seconds)
    (69/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.656300404 seconds)
    (70/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.694056228 seconds)
    (71/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.195934132 seconds)
    (72/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.470235295 seconds)
    (73/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.453549938 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.547082109 seconds)
    (75/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.416950865 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.511592352 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.517635831 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.469328954 seconds)
    (79/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.358847641 seconds)
    (80/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.777517446 seconds)
    (81/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.543336905 seconds)
    (82/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.359585496 seconds)
    (83/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.364244006 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.520933984 seconds)
    (85/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.420896447 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.489662747 seconds)
    (87/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.422343618 seconds)
    (88/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.8264961 seconds)
    (89/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.37600117 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.55590282 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.669386339 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.454053552 seconds)
    (93/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.464796266 seconds)
    (94/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.514297864 seconds)
    (95/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.428858054 seconds)
    (96/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.374685713 seconds)
    (97/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.420461113 seconds)
    (98/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.470208357 seconds)
    (99/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.027764709 seconds)
    (100/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.598354414 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.492215019 seconds)
    (102/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.409416948 seconds)
    (103/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.392736169 seconds)
    (104/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.470523263 seconds)
    (105/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.477524018 seconds)
    (106/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.366119647 seconds)
    (107/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.37994301 seconds)
    (108/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.714040546 seconds)
    (109/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.364740145 seconds)
    (110/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.434935606 seconds)
    (111/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.38644196 seconds)
    (112/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.496502945 seconds)
    (113/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.800684731 seconds)
    (114/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.518542916 seconds)
    (115/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.901033754 seconds)
    (116/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.613985433 seconds)
    (117/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.36468906 seconds)
    (118/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.419227366 seconds)
    (119/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.493170404 seconds)
    (120/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.632528742 seconds)
    (121/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.476158339 seconds)
    (122/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.360432334 seconds)
    (123/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.398928367 seconds)
    (124/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.002227412 seconds)
    (125/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.530816491 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.559462728 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.487852264 seconds)
    (128/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.361282223 seconds)
    (129/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.605656925 seconds)
    (130/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.523737263 seconds)
    (131/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.475724409 seconds)
    (132/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.610332448 seconds)
    (133/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.375643259 seconds)
    (134/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.525014691 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.658159568 seconds)
    (136/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.365437792 seconds)
    (137/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.530145965 seconds)
    (138/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.460118751 seconds)
    (139/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.569406791 seconds)
    (140/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.366609777 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.453790423 seconds)
    (142/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.710042899 seconds)
    (143/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.794983484 seconds)
    (144/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.696695572 seconds)
    (145/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.416964882 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.510068677 seconds)
    (147/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.428602405 seconds)
    (148/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.673798981 seconds)
    (149/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.395585067 seconds)
    (150/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.405765109 seconds)
    (151/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.37842523 seconds)
    (152/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.503404427 seconds)
    (153/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.368951681 seconds)
    (154/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.389546113 seconds)
    (155/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.676553971 seconds)
    (156/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.541512675 seconds)
    (157/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.668768317 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.462786291 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.489416024 seconds)
    (160/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.369065242 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.402272432 seconds)
    (162/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.36972056 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.425675045 seconds)
    (164/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.571663385 seconds)
    (165/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.953897619 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.542774273 seconds)
    (167/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.400649311 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.499339351 seconds)
    (169/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.614628398 seconds)
    (170/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.533273191 seconds)
    (171/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.36860384 seconds)
    (172/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.601880642 seconds)
    (173/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.551136893 seconds)
    (174/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.971170793 seconds)
    (175/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.429806851 seconds)
    (176/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.478715469 seconds)
    (177/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.430096246 seconds)
    (178/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.01177411 seconds)
    (179/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.481096239 seconds)
    (180/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.902082946 seconds)
    (181/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.366459153 seconds)
    (182/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.481114273 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.600762979 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.660226452 seconds)
    (185/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.782101317 seconds)
    (186/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.038054721 seconds)
    (187/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.369253584 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.581135357 seconds)
    (189/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.852135137 seconds)
    (190/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.370861971 seconds)
    (191/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.591051883 seconds)
    (192/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.528848818 seconds)
  done (took 343.87960244 seconds)
done (took 345.123519622 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.4204012 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.483346288 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.397951454 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.398478726 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400568543 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.404039431 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.424020838 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.400288417 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.411294938 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.412827534 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.404346349 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.410875784 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.413947065 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.411545832 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.434299904 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.397523856 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.397962029 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.409614197 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.414156854 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.417188492 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402018549 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.40215796 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.425234281 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.400547683 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.406449223 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.408233081 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.407295298 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.409105339 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.411758898 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.415398939 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.406809096 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.410941826 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.417643563 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.412482369 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.402100931 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.410937524 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40263959 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.485781383 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.42105016 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.412932411 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.40883713 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.418286435 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.408347851 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.40692334 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.413525502 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.429624682 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.410873537 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.418139253 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.413584807 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.401570742 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.426439468 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.413352656 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.410181285 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.391641413 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.405781044 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.422390273 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.412014671 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.422694434 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.410307004 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.405899404 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.437455679 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.42333335 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.414555498 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.412334963 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.410560424 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.41808052 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.412068789 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.419329817 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.410373163 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406209545 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.405608111 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.41041459 seconds)
done (took 111.025274994 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.528648655 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.399351909 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.565053622 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.411912453 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.575706293 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.529668276 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.410461639 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.411853426 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.411306937 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.204491761 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.409730347 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.412156397 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.399430723 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.411559988 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.528812526 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.411417734 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.411100798 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.104528022 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.413423448 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.537244722 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.401905299 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.41221506 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.411974008 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.210835646 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.402461452 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.39968176 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.540695354 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.412981509 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.112444128 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.397009734 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.398802465 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.110945628 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.539923354 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.431566723 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.422586599 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.421650312 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.577091383 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.418457967 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.528331753 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.522729389 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.562249654 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.451341827 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.397775511 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.403602334 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.41560278 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.415578245 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.413759857 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.442595621 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.40171961 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.413515374 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.107138749 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.423988666 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.423547815 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.414921724 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.416686793 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.435238521 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.416013808 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.41386774 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.537866666 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.416887463 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.531052967 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.214405758 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.208173951 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.417274292 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.400892508 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.417450747 seconds)
  done (took 113.336731781 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.474428243 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.488849417 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.53154209 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.410553173 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.456950404 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.533233083 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.410624089 seconds)
  done (took 11.568486824 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.413237319 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.416631531 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.454639085 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.455145476 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.416540134 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.58144569 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.41589061 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.41869879 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.415862151 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.458524328 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.418741304 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.417880002 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.426259099 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.407750176 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.455347012 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.421259764 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.527467454 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.410034849 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.417449452 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.560010172 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.417638187 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.428259116 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.459042526 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.41977642 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.41982111 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.415987102 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.173284549 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.418353621 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.418593632 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.417930873 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.417804001 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.47595441 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.41794471 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.407765935 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.41928965 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.526683834 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.418704642 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.419589588 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.418320521 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.41090084 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.41948855 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.418654366 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.417737207 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.418313116 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.418047594 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.434198751 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.4192315 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.417231528 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.419044531 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.418953815 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.460408753 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.418855049 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.419627889 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.417661044 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.463909184 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.429403413 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.42073836 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.41819723 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.419496713 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.419528483 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.563702944 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.458230445 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.419065986 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.456536628 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.420461344 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.420973307 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.420404952 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.420944494 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.501956404 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.420589128 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.458946491 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.418484495 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.594414697 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.43628376 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.422099048 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.415362059 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.41569081 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.420362085 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.408718275 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.416709474 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.418685496 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.41338979 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.420939229 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.421237852 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.421298736 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.574728574 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.526219798 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.421093736 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.429593005 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.420003453 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.420397313 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.465284209 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.422269021 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.421035181 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.463953997 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.533061233 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.464884905 seconds)
  done (took 145.555638527 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.424680998 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.425168842 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.41901079 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.44243272 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.414580373 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.414331284 seconds)
  done (took 9.80858366 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.416084332 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.426733354 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.422833189 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.422106915 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.424168711 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.423256909 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.422989257 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.415245355 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.426680356 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.42472228 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.424600417 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.423728812 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.424826523 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.424519129 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.42481222 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.42444013 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.425337792 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.423282564 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.424775285 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.424435454 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.412559357 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.423986695 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.424594841 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.4166421 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.428798404 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.425445117 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.44031353 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.424188754 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.423906848 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.424338658 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.428779008 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.424738792 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.4182364 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.422907883 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.429750167 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.416860962 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.428437293 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.426445166 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.423369406 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.426915427 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.426520328 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.425728848 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.423476205 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.426393302 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.418354866 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.421973679 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.431079045 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.44123423 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.427059282 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.427125192 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.427698068 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.426016244 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.42641763 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.427740684 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.418639341 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.422206121 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.431637259 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.427638366 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.427071258 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.420801722 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.430810454 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.426852079 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.420745784 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.432265687 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.428055954 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.427697074 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.419526844 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.430267817 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.427342653 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.426159849 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.428264722 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.426935882 seconds)
  done (took 104.88270448 seconds)
done (took 386.410966385 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.791793532 seconds)
  done (took 4.065316709 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.537862834 seconds)
  done (took 3.813960683 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.802389985 seconds)
  done (took 27.081970419 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.461481058 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.415953378 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.442055535 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.411776141 seconds)
  done (took 11.006190789 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.003418755 seconds)
  done (took 4.277355366 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.430416583 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.422386426 seconds)
  done (took 6.130415038 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.701009031 seconds)
  done (took 3.9760373 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.234263064 seconds)
  done (took 4.514805943 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.434934579 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.426252349 seconds)
  done (took 6.142993496 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.389809935 seconds)
  done (took 3.664401075 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.788176433 seconds)
  done (took 22.064486984 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.423247005 seconds)
  done (took 3.701206857 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.446983016 seconds)
  done (took 3.721518443 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.67270177 seconds)
  done (took 6.94644622 seconds)
done (took 112.381934372 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.413036007 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.41959663 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.420137197 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.420247023 seconds)
  done (took 10.949070469 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.49206685 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.49312661 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.501765076 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.487432906 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.485175526 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.495411654 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.454525807 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.454022899 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.487215568 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.481453297 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.498346034 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.486782996 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.496370175 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.45431587 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.480988643 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.49899253 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.487371186 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.503187114 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.456264127 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.488747148 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.432873143 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.489146725 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.481752888 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.430783976 seconds)
  done (took 36.796498701 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.940091666 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.492549501 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.575331023 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.473306624 seconds)
  done (took 7.758634476 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.534723165 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.537132053 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.558529945 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.601469636 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.637670878 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.550073073 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.457257241 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.453950883 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.439491027 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.537634068 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.621842951 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.535805367 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.754863312 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.431813019 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.749581688 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.433178121 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.43057983 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.536898293 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.585941824 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.614623116 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.431493229 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.535421806 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.549931784 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.535895449 seconds)
  done (took 38.333813744 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.439825142 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.44998785 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.434381517 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.449301796 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.433761098 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.43286311 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.434955915 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.439932103 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.432872229 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.433858714 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.434708857 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.446703478 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.433018903 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.433040914 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.441093355 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.435220544 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.436456086 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.440308257 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.442112629 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.433042618 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.435809027 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.443297411 seconds)
  done (took 32.914704325 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.419933237 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.41829313 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.769943266 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.672002677 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.418532444 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.42340681 seconds)
  done (took 14.402490587 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.509237264 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.672361746 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.429492258 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.865019916 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.945814366 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.425604533 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.426531821 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.719760949 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.112811831 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.117978716 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.498608876 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.509082319 seconds)
  done (took 21.515070099 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512046916 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.429126376 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.444621197 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488649886 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431284656 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.431779433 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.481688118 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.955419844 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.437273691 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705704309 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447046703 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517944433 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.680399491 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433017356 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.436735253 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.398744965 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658198449 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028940657 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438186211 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430816935 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4672427 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.434639931 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.443729323 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.69060132 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43758861 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430333948 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.828986249 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.431807995 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.777458582 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753669205 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756550966 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438516656 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707413227 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915620671 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538257983 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.685278714 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445888645 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.433732504 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.400018632 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.438886769 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439258362 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.438046167 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749606536 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436900263 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.432643423 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451061437 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968264697 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.442437739 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.434782624 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.434069923 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.750349617 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521907114 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.438728486 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.434415104 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422660643 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435602749 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.439168424 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55219701 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077289513 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436315527 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453969262 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.439344479 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.434050635 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435250459 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209873284 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.447722403 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.44081983 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.440011756 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434066818 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.446805403 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461247904 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434912539 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.456809548 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435825569 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362638451 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.441920514 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441776776 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071157656 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437099838 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.44456783 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663343548 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435672833 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436604726 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.434780164 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.436237903 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.316503841 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444754447 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.402611486 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464058825 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.965430374 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.690927338 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461156446 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465936993 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.658986503 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.403723804 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436300322 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.437368748 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443726005 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45964831 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.967295947 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438337405 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.444597346 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685679707 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.648925599 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447458011 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.426021321 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970712928 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436452938 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.464038114 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.448810169 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.696667535 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.187481075 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767491418 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444541966 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480612132 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.437688297 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384800409 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440112031 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.451209472 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.439220011 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.760137922 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.40117997 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441088338 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512748421 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439831539 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.439363163 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.44694439 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446202105 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.440758302 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.669100573 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.452634882 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.763161649 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.447280328 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440724057 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.441795297 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453079611 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.443530871 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.664626435 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440236009 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722561338 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442053554 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440274902 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441069989 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.662069624 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.44773029 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.447846632 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.782723435 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44876681 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.457863296 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763118195 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481891763 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552555547 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474197224 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.44542733 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.694614818 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.447687066 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.44876263 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45920066 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.441502488 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444997675 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.45090968 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433898986 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190870029 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418903242 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.450806157 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.441335714 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.459351739 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517952284 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.450910575 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.696752781 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.456349596 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442436566 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.449364184 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.442078711 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670420696 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.760269556 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.45593279 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622411851 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.973692704 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1849733 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463981137 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.442001474 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.442725545 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.442546822 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447173223 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44265033 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.444483085 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697158652 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772279938 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.457840977 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.1892796 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449592932 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.45778759 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.452749772 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763892263 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.457438002 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442865872 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.442435616 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449851531 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454920258 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.768221352 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671115907 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.462740452 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.444752836 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.962878157 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.452699267 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.446749919 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.444050123 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472354109 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.461856204 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053933401 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.78635193 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459649238 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764401434 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.461157609 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.46321477 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.445776291 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447895633 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453408268 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.466041517 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454764197 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.701233641 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.469158695 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45310908 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086260524 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337255516 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119698024 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465014756 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.447375579 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.450601242 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.982043313 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446925537 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447374241 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.728878432 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982494077 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448157138 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981516693 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.453558461 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.378398272 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771344191 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682421734 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45758297 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.463531202 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.768144254 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.665476616 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476001819 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.457149961 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452028604 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.414462162 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053282057 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465860493 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625916865 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981896156 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462842124 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.450885559 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.518239131 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.456110758 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913793556 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.449513987 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448588277 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.450090764 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468569357 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05636751 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.456722456 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450377655 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196881345 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.463746583 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.992160741 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450445768 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.706906231 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.775085552 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.748239819 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.472564027 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.457187411 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.700867938 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77288424 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456646247 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.468261898 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14421336 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.322800898 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.457200376 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449444921 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392556699 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450760945 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801092204 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.473906106 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.47168851 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464659883 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.451925047 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451742196 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.449999789 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.457306858 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418938439 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054449524 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.448401493 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447393162 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456292004 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456506735 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.70085238 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.467225046 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.200291625 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688406065 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450043196 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48719988 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.458624373 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451546933 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.444415921 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.452128825 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.452764164 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519046625 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.67694458 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453362771 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.419505637 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495644911 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.66787523 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.452064835 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.468620738 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719757143 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.458177201 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.478244462 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396652764 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49024659 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.471116255 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455029743 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.450018406 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480135294 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528958129 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710136204 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.782084164 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.782254583 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923937975 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47078733 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455382271 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.468605752 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534816073 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455457645 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.457206897 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.456673919 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200690242 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408526929 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.218080656 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.783722601 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.460496333 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453744231 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455946603 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697631451 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455027956 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732129226 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454840973 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.445221238 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49846288 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455298683 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471782398 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673656354 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730697195 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456134925 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461202746 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461118611 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.455818751 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783557249 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.674228335 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048130728 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099960907 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459691721 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.467557611 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.000682727 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732406384 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455973959 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45632288 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456045613 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.461517184 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.489611558 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.465491224 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458009734 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680696416 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779957625 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958453655 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.776737574 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.484131167 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.328555126 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47133655 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.709734052 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293806447 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.714851888 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222720505 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344585761 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.71909294 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532837107 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717396582 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.462964772 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694713176 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.462755924 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.464110549 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457379622 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458656155 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.457934994 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.775552852 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216265117 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.719083792 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.464753029 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.461660671 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49434753 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.713567798 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.691474747 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.345160815 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.681527603 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782803381 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.471361074 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.459023561 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216234872 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.788839431 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464248898 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.465988412 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724748359 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.4656611 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495844949 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.35843309 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.459168695 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108857225 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.674896063 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482011852 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461414933 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352411981 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221679823 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.470557829 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051864009 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463471815 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465244979 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.743063128 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.469119032 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.477776995 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.753108685 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.467404424 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.473814526 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.724411449 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.198389915 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.405154476 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.475609299 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488426348 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.467691385 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463749217 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505174862 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463129412 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472878625 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.911344163 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.485515161 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463160949 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476747964 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.467220383 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481525181 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.467372774 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462891904 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.470817317 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.449889593 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.430768997 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49792606 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581682455 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075193301 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46591446 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.080522144 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.801672094 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.713356134 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47867928 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.436581878 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.47051609 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464452882 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462791914 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463140595 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.455334903 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108557498 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.480142298 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.791606967 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.475049102 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.677538884 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677192775 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.464513956 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.724306082 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470099039 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.512863931 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.43239689 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465019028 seconds)
  done (took 1023.597280035 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.468521557 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.511217495 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.477175613 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.540540216 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.483896588 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.595951631 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.560588482 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.567114451 seconds)
  done (took 21.517277818 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.454465399 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.464121178 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.472115867 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.466801211 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.47017021 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.035338198 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.473273206 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.465958732 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.482648882 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.47361248 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.475215683 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.168959219 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.468020932 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.471016602 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.471492802 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.466546378 seconds)
  done (took 34.099795867 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.679347749 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.66951273 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.158741723 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.463275007 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.522217315 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.467782047 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.872404916 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.497097414 seconds)
  done (took 28.643459362 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.470916521 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.474168079 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.475891541 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.474182011 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.474747384 seconds)
  done (took 8.684003191 seconds)
done (took 1280.487932782 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.474018911 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.473999103 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.474117268 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.473712527 seconds)
  done (took 7.209639605 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.434835883 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.436865794 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.436992064 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.451484472 seconds)
  done (took 10.074596954 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.896197429 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.095114006 seconds)
  done (took 5.30582831 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.467726439 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.233805623 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.218843453 seconds)
  done (took 8.234614293 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.769750574 seconds)
  done (took 3.084231561 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.911883815 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.965579119 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.460624337 seconds)
  done (took 7.653320711 seconds)
done (took 42.8763666 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.464953025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.226144138 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.615779971 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.459879088 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.62270179 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.617803895 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.734386958 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.476754698 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.47413024 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.470092348 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.461764082 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.623830242 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.724534548 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.225873899 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.723763698 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.231585321 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.625744152 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.473416868 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.468287995 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.476429762 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.736119813 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.460219728 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.463055181 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.461749049 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.627193895 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.606333624 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.459645275 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.231352251 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.462285854 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.461111283 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.60803754 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.465694045 seconds)
  done (took 85.555666321 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.462490055 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.461084977 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.485472748 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.480820946 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.488775531 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.46430678 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.483159967 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.462002789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.480900719 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.476474985 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.463074253 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.477549904 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.46471565 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.462406702 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.463104283 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.463242131 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.484268861 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.463034212 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.479541498 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.462890063 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.466763403 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.463741502 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.462385768 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.481053799 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.463515687 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.464719795 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.464595082 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.463801063 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.463902323 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.490431932 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.463972269 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.464130283 seconds)
  done (took 80.359991336 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.481747891 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.462803026 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.464810248 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.486568407 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.483744937 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.469349014 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.488874062 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.46574033 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.480368394 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.48567192 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.478548522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.478050697 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.464405919 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.463361019 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.464304713 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.464851385 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.476576559 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.468970665 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.46488901 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.485088838 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.468074653 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.471851606 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.46640695 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.472273562 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.470141205 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.464862165 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.464851042 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.480911881 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.465274327 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.465797428 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.468181841 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.482536418 seconds)
  done (took 80.439996663 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.709749525 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.481428367 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.48456593 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.475281581 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.484313074 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.482077854 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.476525042 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.759575781 seconds)
  done (took 15.673641866 seconds)
done (took 263.345048758 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.474065242 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.474824059 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.504646351 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.474638235 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.496657157 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.504440659 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.709008918 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.503142822 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.699071748 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.478772195 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.493091558 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.47779374 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.437472555 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.623951403 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.470905856 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.498234302 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.495803835 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.469207861 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.479267992 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.732990916 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.505899086 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.488122978 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.478030923 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.493784047 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.445850607 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.574858971 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.555002016 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.646521513 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.607389002 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.550870848 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.470706758 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.478435386 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.479720614 seconds)
  done (took 69.594943096 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.474832166 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.485346362 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.48594965 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.485321489 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.485792233 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.485138878 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.476791906 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.485484343 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.486482109 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.486421036 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.485261888 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.486262187 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.486537629 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.486508923 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.486745194 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.457304667 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.476127637 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.48635813 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.476247261 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.457675343 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.486194212 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.486103466 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.487860963 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.487379919 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.487062589 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.486676262 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.487390303 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.487922814 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.487689297 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.487185037 seconds)
  done (took 45.818805636 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.486875227 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.474067502 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.472472811 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.485122914 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.479987269 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.483338021 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.844816724 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.493261488 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.48378823 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.482325086 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.472745509 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.511106756 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.534803118 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.474491066 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.481612438 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.489692865 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.488355243 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.48051996 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.487613302 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.495897448 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.841045393 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.490445706 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.835181362 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.49658992 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.48399858 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.482581906 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.485369786 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.475154841 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.484415241 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.493310198 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.475136753 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.834596558 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.474999589 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.474340188 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.506451972 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.496133559 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.49047223 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.474772579 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.482538282 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.483323011 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.834125574 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.481831672 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.478253074 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.47536966 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.485083582 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.491586501 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.475864504 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.497314713 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.804127457 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.489757249 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.475884493 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.485256306 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.492960942 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.484402587 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.782868053 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.484436994 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.484423612 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.478465095 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.487797526 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.838698934 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.492221506 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.484871768 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.485666362 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.484143588 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.480994635 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.485496952 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.499507717 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.485904258 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.484706971 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.486279576 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.477734515 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.484301674 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.492942396 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.497308547 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.481066307 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.478637435 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.507278357 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.491651184 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.483351226 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.836221711 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.489632669 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.480646981 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.869144062 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.490960122 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.497498178 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.495563513 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.493894996 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.559790029 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.837625953 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.436606913 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.49965481 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.480224932 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.84246609 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.494202202 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.487974047 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.483808627 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.493932941 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.495547177 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.484148472 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.479017149 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.486632005 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.499706708 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.479326746 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.489725606 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.843387247 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.492848448 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.48068684 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.487926573 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.563585146 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.497304166 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.500076944 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.491045361 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.851563555 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.491097557 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.496555447 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.480568337 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.482857488 seconds)
  done (took 218.311030205 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.479749474 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.484817775 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.483928745 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.481946304 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.480002126 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.490396352 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.482462006 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.486088627 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.48779266 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.482900718 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.482711529 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.491370727 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.488724492 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.482831844 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.498202752 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.484630772 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.483035216 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.508353137 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.482531622 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.482547514 seconds)
  done (took 47.058346833 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.499603555 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.176025246 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.148798942 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.498931745 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.498927257 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.490301473 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.560712718 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.503520166 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.498544876 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.855278308 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.709702588 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.504882783 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.498653093 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.498915332 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.149415275 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.469593976 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.857126249 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.177695029 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.499253162 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.179343997 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.471058188 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.500384945 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.488206505 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.176366781 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.866655032 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.845815175 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.566691125 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.184107654 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.501188991 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.4999946 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.179861268 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.501831431 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.49200032 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.159652178 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.502245747 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.512945359 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.499799141 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.559578637 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.566391241 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.861108017 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.181878054 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.857075138 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.511907285 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.668063066 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.503890248 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.471367978 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.1894564 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.502326376 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.47011354 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.502152042 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.506224191 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.163948652 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.492313639 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.163756811 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.502235786 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.503138187 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.182896392 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.164751202 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.155158002 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.712382219 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.497085282 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.847515199 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.503119722 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.191593026 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.503425384 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.501811151 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.50271835 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.714672114 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.188489951 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.850237838 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.862472445 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.861648755 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.503120329 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.573277377 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.506527965 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.862173404 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.572760942 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.912275317 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.863974689 seconds)
  done (took 137.772614076 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.802851397 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.622822469 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.940623034 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.132077466 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.063957023 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.64766999 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.623558315 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.765964372 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.498809832 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.604549404 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.271604977 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.599382885 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.319342637 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.573320054 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.613138223 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.632269414 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.964012139 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.507572863 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.235281278 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.245684123 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.496868147 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.618406974 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.31620659 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.908889709 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.491117193 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.320863332 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.51076729 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.088095725 seconds)
  done (took 57.755065843 seconds)
done (took 577.632040216 seconds)
SAVING RESULT...
DONE!
