cset: moving following pidspec: 22789
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.218684204 seconds)
loading group "string"... done (took 0.548017808 seconds)
loading group "linalg"... done (took 9.011436879 seconds)
loading group "parallel"... done (took 0.166875233 seconds)
loading group "find"... done (took 2.580657654 seconds)
loading group "tuple"... done (took 1.965939281 seconds)
loading group "dates"... done (took 1.389804636 seconds)
loading group "micro"... done (took 0.199558359 seconds)
loading group "io"... done (took 0.509284151 seconds)
loading group "scalar"... done (took 47.689384164 seconds)
loading group "sparse"... done (took 13.37481851 seconds)
loading group "broadcast"... done (took 1.1459119 seconds)
loading group "union"... done (took 9.005315924 seconds)
loading group "simd"... done (took 3.00134108 seconds)
loading group "random"... done (took 11.775273696 seconds)
loading group "problem"... done (took 2.180586279 seconds)
loading group "array"... done (took 23.291888524 seconds)
loading group "misc"... done (took 1.10389556 seconds)
loading group "sort"... done (took 3.719488216 seconds)
loading group "collection"... done (took 18.039118455 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.741545713 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125935518 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.206782685 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.225042776 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.262156092 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.170602982 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.166696121 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.163848086 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.607851241 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.206808792 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143094678 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.38272306 seconds)
done (took 6.085515621 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.308514982 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.064571489 seconds)
    (2/2) benchmarking "String"...
    done (took 0.200309221 seconds)
  done (took 0.894809991 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.083710864 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.166344965 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.114164137 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.100757414 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.100565787 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.114476224 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.098657691 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113664839 seconds)
  done (took 1.43718013 seconds)
done (took 3.350120276 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.50081368 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.881468953 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.507154875 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.192507498 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.308138777 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.311132025 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.276237039 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.236771694 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.095342056 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08841174 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.263709733 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.429254547 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.429777484 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.941129763 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.073852313 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.100906912 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.162801182 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.783830611 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.085219711 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.12666082 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.512574409 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.222185853 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120442767 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.111466092 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.19127577 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130802946 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.142912237 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.108098894 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.671837197 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.137603485 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.211692131 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.089521623 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.143703828 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.174045873 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.223391106 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.114386729 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.756357854 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.205508954 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10140068 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.105802838 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.731160389 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.129202466 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.217027608 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109349958 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.072945488 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.17450629 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117263224 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.084595355 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098478465 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.105040985 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.174987403 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.513017755 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.110294689 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.200547079 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.098377082 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.768704024 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101731997 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.281002957 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.13522085 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.115059711 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.085745965 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.097688965 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.17358573 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.10032154 seconds)
  done (took 20.716874518 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.195700969 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.211942338 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100474153 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.149848079 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.146255357 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086783079 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.094118231 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.100651421 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12092315 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.199562985 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130940093 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.218056548 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082694208 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.113145214 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.188303359 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.241915468 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.116985607 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125900244 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09603029 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.115979509 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13334691 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10147471 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.116139661 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.102296719 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.175905824 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209067857 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.117386256 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127502678 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096087713 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.104465515 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147144388 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.154086165 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096164543 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094209671 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.194902783 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111994659 seconds)
  done (took 5.56785965 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.237734875 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.108107018 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.248085655 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.194290206 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.135376308 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183734237 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.195537404 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.304405899 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.24090683 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16857831 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130443665 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107899888 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084756704 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.101921857 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084819445 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.844463759 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158042208 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.163462917 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.191074159 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101700796 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100771864 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.21992253 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090735783 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.1083985 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09922928 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.125324822 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.680416812 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.229337155 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098561206 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.472489756 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089458292 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.118930411 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133177989 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196045648 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126967972 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14040696 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099058115 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.10512094 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.196591166 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120265192 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083186666 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084410114 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137734485 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134407479 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097293 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.124608775 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.138178264 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.091217215 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11276309 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.068446602 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09351954 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201675747 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.185523363 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.091305692 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.28217987 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111435373 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121168989 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095996797 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.804403679 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128169646 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101502684 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086407343 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101581197 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.1018601 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.830105263 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108010138 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.612694248 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.100300152 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.14906941 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116522942 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121740655 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090767992 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092950003 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.127546621 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.091345612 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.086519868 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.10826987 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08770664 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.111963718 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091241045 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.120600135 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107151509 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.087042803 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155000466 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.11916486 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115962904 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132152673 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098947302 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.092686024 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13647976 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088239342 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.108469295 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.208967417 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10259556 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.13240359 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101523175 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.148660724 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093383069 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.285929965 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.090142299 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.092002138 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.146395671 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09200811 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131143865 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116813854 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086635145 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.091187152 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.101303031 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.087523596 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15219974 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.106790709 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087538552 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.09405371 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.116104175 seconds)
  done (took 28.808394471 seconds)
done (took 55.719678906 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.812829557 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083452112 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102095641 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084152731 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082466536 seconds)
  done (took 1.858757921 seconds)
done (took 2.534144896 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.188830048 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.271194791 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.203344858 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.132772611 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.154615414 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.174590912 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.157079531 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.173872346 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.154496853 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.173988556 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.173719743 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.110499183 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19744371 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.171998703 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.126148032 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.192878423 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.108522293 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.153643513 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.109363931 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.177748985 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.107681176 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091802477 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093353378 seconds)
  done (took 4.297171461 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.109774927 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105448216 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.111058779 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.127966376 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094711178 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110222327 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.127543482 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115506576 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109570789 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.12247235 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095560535 seconds)
  done (took 1.915659218 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105650187 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1061558 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100751661 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.125250606 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093050343 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105817511 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123344908 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116093819 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107951097 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.120036291 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093753505 seconds)
  done (took 1.884571909 seconds)
done (took 8.777278354 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.191599552 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.853516608 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.186583014 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.253163656 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.333331898 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.303927327 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.621147424 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.209522383 seconds)
  done (took 15.74484317 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.123061648 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.20844675 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097632437 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097611139 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.119208446 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101096189 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096982743 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.114395044 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.1032308 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101008951 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.112218855 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101916138 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097061083 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.113563927 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.097538376 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101920412 seconds)
  done (took 2.529466485 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140136566 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122415837 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.120045838 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.104291976 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100655024 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.120774914 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106865236 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.10562657 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.115586785 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100911795 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.123649704 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104552002 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102917072 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.115903595 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10360132 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.123260361 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.116449605 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104965509 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.12354196 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.120784257 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105542344 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103755635 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.119438884 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105322089 seconds)
  done (took 3.466390744 seconds)
done (took 22.426624916 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.155792057 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107368407 seconds)
  done (took 0.960215019 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.171833965 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.188281448 seconds)
  done (took 1.059022123 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.118506383 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096609837 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.144997487 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108950509 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.112994914 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09731542 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123059122 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.113880661 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09776072 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097457093 seconds)
  done (took 1.817033851 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.099821083 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101789518 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.127112855 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.163752476 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.12268763 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098883486 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.100761519 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.117885878 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.102865524 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.097206535 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.117447275 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114282258 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.10158999 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.13094624 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101152033 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.117847054 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105957122 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100455568 seconds)
  done (took 2.725533654 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.096064094 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097511992 seconds)
  done (took 0.898604698 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.098595403 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096440908 seconds)
    (3/7) benchmarking "month"...
    done (took 0.099988002 seconds)
    (4/7) benchmarking "year"...
    done (took 0.112918017 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095977619 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.097270498 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.111629633 seconds)
  done (took 1.417937157 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.524266885 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.240093181 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.373629828 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077700701 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126880689 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.330973612 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.107557161 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.077768419 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093871637 seconds)
  done (took 2.683380525 seconds)
done (took 12.264947897 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096597662 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.211385709 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.604772516 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.133860643 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.096981584 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156488138 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.34666797 seconds)
done (took 2.357141564 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343906566 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.182198532 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087804385 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098402772 seconds)
  done (took 1.416986158 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.087896779 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105864591 seconds)
  done (took 0.90898125 seconds)
done (took 3.037435625 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.116001706 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099383269 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.117348981 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099556733 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101584684 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.116481717 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099673019 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097902007 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.117379878 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097654245 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100983699 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.117780972 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097292529 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.101502872 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112869759 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10001691 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.219859492 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11310302 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09716316 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100363826 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.116634736 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097891414 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101102104 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11491288 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100392718 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100654772 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.114974655 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097174453 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101312556 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.116228496 seconds)
  done (took 3.993956523 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.10128359 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093022729 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.096341457 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.119817991 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092926101 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097738732 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.109123869 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096029752 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098018665 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.112333303 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098434942 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095810702 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09533099 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.112843648 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097168707 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099158229 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.120665559 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.096054401 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09544336 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.113843617 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098403423 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.099846594 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09665828 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.112318139 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096266133 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.092982558 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.111896532 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096231125 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096898266 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.112200491 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099054559 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.098618289 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097216809 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.121509605 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098429526 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096282525 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.1182298 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092906293 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09915274 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.108688871 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093892693 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095408362 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09708104 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.118208831 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.097721428 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096741989 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.111794825 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097282392 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.096323251 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.114761648 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.093380822 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096004602 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.114382471 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097168366 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099028696 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093416732 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.112064732 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.093156054 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09684036 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.112101325 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.092133101 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093933649 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.117257706 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.096644297 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110619209 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.117850441 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096280224 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.097870129 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097076443 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.116936705 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098927267 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106314923 seconds)
  done (took 8.069749536 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.096571173 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097168315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.095753964 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.112152853 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095366459 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096600604 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112198818 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096530289 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096604062 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096853938 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112581076 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096305723 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096177753 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11257651 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095439971 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095966123 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098329809 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111943655 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.097007448 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096462532 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113515124 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096435733 seconds)
  done (took 2.942516748 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.240150292 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103257524 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146197433 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12612527 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113367939 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.12678967 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102531032 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102423662 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117223212 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105537528 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106317704 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117271244 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114164798 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123784869 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105637924 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107523363 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117571649 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10726047 seconds)
  done (took 2.907018234 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096450099 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095372379 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097838342 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.112497674 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096421628 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097096386 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113023939 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.097029969 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.096477338 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096580209 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.114123121 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096456596 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.097802723 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114030567 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09693775 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096450006 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097302954 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111441869 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09695537 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096252495 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.112984259 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097193232 seconds)
  done (took 2.951763245 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11063547 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098914971 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.133494886 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101534899 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097812404 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.11413151 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104094781 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098692595 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.122521285 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099047424 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099060419 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.11407183 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.112194953 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097901254 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.121064528 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098647076 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097868621 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116024653 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100259853 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.097696827 seconds)
  done (took 2.862126257 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.189564889 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130888252 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113512451 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12260632 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130615663 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.114614445 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.139997715 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113953828 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.1155243 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140472714 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11420358 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.130715877 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122177822 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119641033 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129829242 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12134661 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138592363 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121028639 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114434392 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129792176 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125342668 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130305256 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121821188 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114741134 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130104179 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113576368 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115021248 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135857279 seconds)
  done (took 4.269529263 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.109051635 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107122114 seconds)
  done (took 0.944808662 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099642108 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10068604 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.099873506 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.115364631 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09944663 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10032103 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117437105 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098837808 seconds)
  done (took 1.562558471 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.190759832 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.211250694 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.121399303 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109231386 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.21259017 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.191509663 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134172499 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.105900328 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.114893568 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.090166802 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.205438567 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.089745504 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.115358015 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095140765 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.098513931 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121868361 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098772656 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.110522866 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.124708525 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100930013 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105293087 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119479323 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098911022 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.108884231 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.110058864 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.100207911 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.101620822 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.127431422 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094583204 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.100082529 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.11396783 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099468851 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.10261491 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.11990389 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.100371527 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.212866476 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104692365 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113167735 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.099038073 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103670602 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.148619002 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.0990431 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.100361038 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.115125969 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101228319 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103515476 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.121102988 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.100369332 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.090897452 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.094880047 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.116105404 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093080286 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.099170841 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115811492 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.098293149 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105771495 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.117995771 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.095486608 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.096058407 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.111869086 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.097280369 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.096587781 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.118220545 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101314072 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099566588 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.116272848 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097943456 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.100225817 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.117236324 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099388618 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.098014486 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.130725449 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.100091564 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10489138 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121377904 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099914443 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097272328 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121940462 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096567341 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.099798668 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.119975786 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126384948 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101318831 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110902959 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.094352956 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106497316 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.117688009 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101958167 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.092102256 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123936635 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101667682 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102978627 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.11168602 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.097487494 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.097584629 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.122666347 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.092588632 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100458521 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.115886258 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104046724 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105845676 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114186901 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099330223 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103508648 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12264331 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.098363541 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.149041868 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113198842 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.094975147 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100265332 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122964281 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.09297798 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09837151 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.116201634 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095453669 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.096128166 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.122686479 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.098116946 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101533607 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.12074285 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100255142 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.101764715 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.118735633 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098371908 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.095703679 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.120867743 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10848313 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.100769087 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.11934488 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.100655915 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100032795 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.099090839 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.119624401 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.096577676 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105981166 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113377792 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.098863724 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100399741 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.123378963 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.099234319 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.09546856 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.114926021 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.099575496 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.098915434 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.119642845 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.099544747 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.095699142 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.108805732 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.098305234 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.095313752 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.118769969 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108215421 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.096157518 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.119466107 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.094754996 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109244068 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.113735261 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.105145703 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101645153 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.122180721 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104430491 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.092983598 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.114099747 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.101736125 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.101073578 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.113431545 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100100529 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098756418 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10619437 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.110394626 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106357793 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.091457957 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.114338793 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103658596 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.1028129 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.121995076 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.094876411 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.137258632 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.129898574 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105093201 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.098720003 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.117655367 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104206603 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.098801972 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.122530954 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105806059 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104612281 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11637914 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.097368024 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104759298 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.11375666 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100097287 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098633355 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118275065 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.091486555 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.102254483 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.108585431 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103426347 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.1012003 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105181142 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.122437464 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102420241 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099223518 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126851503 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.096302662 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.10414626 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.111150594 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.103703169 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.109648819 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.123786983 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105769261 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.100900561 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11500384 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.100395396 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10799156 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120302876 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.099208117 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.102395131 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.110780635 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.093795164 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105249543 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.120678386 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.096252627 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.100100097 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101663953 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119658995 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09706514 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.092902821 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.122501242 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103655189 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.096090969 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.120083022 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.096021385 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.097944082 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124947645 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.093000023 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.096781444 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.118215688 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103615756 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100611433 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.118155597 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102605077 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.105806998 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.120647833 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101748221 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096968613 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.126338778 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.096798682 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.100134932 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.114185181 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101955096 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.093235314 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101462596 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.116013101 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.095721317 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.095473568 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12069421 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105773453 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.124741568 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097015192 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10462601 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105519796 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.123778642 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097790004 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106215847 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.113534928 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.093087052 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.096534878 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.112330251 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101360238 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.095549591 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.124276177 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.096950042 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098383222 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.1222309 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101273098 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.097620034 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.124412514 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109508468 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.095730114 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.111602748 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096868338 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100026016 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.11522211 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.096854553 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.10120665 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119333025 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10470806 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102281492 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.115476844 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.102847745 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105853111 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.115790139 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106638096 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.106677464 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.124794071 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.095276435 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10436755 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.097545094 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120736659 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.095055021 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11870484 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098365846 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098589294 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.117254321 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.098263317 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.096167632 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.093736761 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.115505324 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106043769 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.099455476 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.123207975 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.098730995 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.098382247 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.114748943 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095767576 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107155592 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.117356083 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107510199 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.100851188 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.111862157 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.093042689 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106728942 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119615029 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106042606 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.095105563 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.124390909 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106397177 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10407108 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.103620276 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.137072765 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10968405 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106998103 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122610151 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.093251807 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.098865813 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122402875 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.100703958 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.103608393 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.121197909 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.095063437 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102505439 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.125949317 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.100368942 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.098460993 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.112592813 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101263898 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107115683 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.122105058 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.102590723 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102524232 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119926535 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.096338796 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103632274 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107448524 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.118150349 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106891424 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101093487 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.122224839 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.097067677 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107786644 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.120522464 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.094795806 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.094758367 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.1168147 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10680734 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.095478033 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.124906682 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10468841 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.097568074 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.118311019 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.106182369 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.096454214 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.122810385 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105415645 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.097585235 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121368411 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.120731316 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.099134395 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106007663 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.124648613 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.09404846 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.099250729 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118502954 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107773811 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.098590831 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.124610716 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09986416 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1058243 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.121746752 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10555921 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106294473 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.126013997 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.093988341 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.108233536 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.123993695 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102634108 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.097566105 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.118635885 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.095744306 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.098914774 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108312782 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.11717408 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10996368 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107343949 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.117054852 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.097676538 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107655204 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1178101 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107134168 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.097948301 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.122537767 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.094685047 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.103214364 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.11819918 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10796061 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.097295889 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.114398511 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105458567 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106773458 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124607271 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.102808607 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.108327093 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.113644592 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.094500974 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104480724 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.116941672 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11000705 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103814468 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.117854795 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099219132 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.102863498 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.10363112 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125237429 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.094892962 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.098904334 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.11982252 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102065444 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.099955918 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.114887468 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104548918 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.100149772 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.121289214 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.099772194 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.095835758 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.118505003 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107434382 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.099833919 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.115357996 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.09869117 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109145662 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.120273217 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09752012 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.096194948 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.126381067 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.102279172 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109230416 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.117338671 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100693971 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.098575139 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.123603731 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108505005 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.099217828 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119975822 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.099639408 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107261855 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125264013 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.09408151 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.098436021 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.130298268 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10616984 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.102286426 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.123730519 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101737794 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108726868 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.129079473 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.10472226 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096493975 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.096005294 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.118939483 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.095683686 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104455705 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124830356 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.099866731 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.099178489 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124932013 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106137409 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.104769842 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.123136936 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.095959322 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108897106 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.118189445 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.103677149 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.095616556 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.094885399 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.122505278 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105837636 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100659453 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.121058155 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102941626 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.104062986 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.115847767 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.098507224 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.104137333 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.125057539 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107426106 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100941218 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.118842183 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.105486348 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112404347 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.122664422 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.101106226 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109659628 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.126481814 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100699862 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.100790795 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.124594947 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107567337 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104078731 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.126988031 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.098397815 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.100568004 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.128311778 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108455452 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11040818 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.120921036 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.095979985 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10579508 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.11890904 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.095624604 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.105223523 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.129418356 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107652645 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.100867397 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.099277995 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.129963679 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106815994 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.121747924 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.099459821 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.098687242 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106824995 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.118163486 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105399468 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100003733 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.12939558 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107815803 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107351412 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.129863961 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.095451747 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106874713 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.12366966 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.11039172 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103859946 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.115943942 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.095700837 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.106294159 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.128204253 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.108555116 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105867143 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.106758604 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.124424052 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103196871 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102753311 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.11870875 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.11038941 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.108597259 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.124014959 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.102814999 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.100665278 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.12158889 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103045627 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.108174842 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.12843046 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.101928988 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115728572 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.125736564 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.100621491 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.100051674 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123182045 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.1054404 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.103297017 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125616336 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.099421002 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.096499113 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109807658 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.129497895 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101742769 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110685253 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.128884863 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.100005093 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.106437111 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.129802072 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.105521984 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104813986 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.121683393 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10469421 seconds)
  done (took 65.539708642 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152410158 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110987608 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123851136 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105801694 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123669551 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124519724 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10470162 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105945119 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12578325 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114184241 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105207684 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12393566 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119697967 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144949261 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120645065 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115227951 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124249509 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106069616 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106098256 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124196302 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118878465 seconds)
  done (took 3.290397762 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10698778 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.104153265 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104983788 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123598308 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103645868 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.104385099 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.123746628 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106089394 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104073169 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105433102 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123452312 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10430163 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104937212 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.123479048 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104249237 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104332535 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104688413 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122373106 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.105686043 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104246034 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123980837 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103917623 seconds)
  done (took 3.20384352 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.133211639 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.107813248 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.102827475 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.124239985 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107243053 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.105650242 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.128388378 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.104575325 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.113122983 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.119130417 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.095429768 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.100573829 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103709293 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.123279152 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.098977752 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.105181776 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.133003493 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.107699946 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110036992 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.124324558 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.095440966 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.105255379 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.124911347 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.095576351 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.109429911 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.110687938 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.12722557 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10859197 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.096111587 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.128239152 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104756508 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.099261341 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11468563 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.094942328 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.095914603 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.109084151 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.126406194 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.104790849 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.105890786 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.115267377 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.106001753 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.109350213 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.115167239 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.105541262 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.106034448 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.11888085 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107321826 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.105984515 seconds)
  done (took 6.081510639 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132920899 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163097457 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.108575757 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.134743319 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.140072615 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115087674 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.110389763 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.155211664 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106532818 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.130048576 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120630272 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119915374 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.131462004 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.111942767 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.11273548 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.130004047 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109849982 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109030611 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.132450059 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108556997 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.115079872 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.131130382 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11870295 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.139124733 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111162291 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109415882 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.129825828 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112436918 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11893767 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.134134238 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113304102 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.135423752 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118604243 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.112258793 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.129525382 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110247796 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122754974 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.130552974 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111236266 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.109634311 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.13044377 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111739039 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111879572 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.140888956 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110518037 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.134123941 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110466119 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106468033 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.139454807 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.110353023 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116470719 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.141145775 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112615418 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111308175 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.133069156 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.11875067 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.131729652 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108713545 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111861889 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.139795817 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.106976368 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112843803 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.139859568 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110088748 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116644598 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.141223813 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110948648 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.133443946 seconds)
  done (took 9.167762016 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.13885661 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114102497 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.142608784 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120324346 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.361504394 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.132932263 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112243135 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.134421377 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111863004 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119261392 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13382383 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.244134439 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.109656928 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118545083 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.13577179 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11258748 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11349659 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136219722 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112523883 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113688232 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.133706419 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121863933 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.134353611 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12167162 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125720444 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.129875233 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113297856 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114697229 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.141132316 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114076431 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145625688 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.1124655 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114722779 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.142878013 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125150668 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.135597118 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107900669 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113261712 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.133253705 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113697967 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110069736 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.141853344 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113113419 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110749532 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132972549 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113881432 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.142048117 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125372009 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118855745 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.138846282 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112962997 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.143073309 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112715659 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113847502 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.142375384 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128132364 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.144894091 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120443931 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114388957 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.144157895 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121132955 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.150711368 seconds)
  done (took 8.904867744 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108265624 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.108538728 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.108299097 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.128109 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107932505 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108763835 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.128578878 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108386283 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108749264 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108831338 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.129188857 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108414014 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108767674 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.128992504 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108289939 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108809474 seconds)
  done (took 2.615052985 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.125226559 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.126710549 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.206465867 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.112028928 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.131005852 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.114831971 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.109722301 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.132168927 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.106422252 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.115255131 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.134414195 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110146661 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.125484455 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.13025495 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108544661 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.111443608 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.127522944 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.113023493 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109345559 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.208036128 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.112511796 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.13323938 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.109580163 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.113446269 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.132612868 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.115740982 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.116362082 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.13002181 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.110567797 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109840258 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.131717722 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114698172 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.109524891 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.134773392 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.109727604 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.111640114 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.129847239 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109688086 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112001029 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.129874216 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.110635173 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.11124962 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.129423569 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110742315 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.108032454 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.11072732 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.1268614 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114316021 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.110514514 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.131547752 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.108439382 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.114834549 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.133770108 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117119792 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.117330151 seconds)
  done (took 7.493927655 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.118985141 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109791722 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.142724592 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106468831 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11002261 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112583894 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.131317984 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110926578 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1119356 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.128824542 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110963443 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111883491 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.131679843 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110773374 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111913572 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.132863567 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.108707969 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112231709 seconds)
  done (took 2.921988632 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108428325 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1064494 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107419547 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.127683755 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.106829401 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107866278 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.127822793 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107348534 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107068959 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.108060235 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.128833584 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107030702 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107419495 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.128035258 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107041488 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107053652 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108469801 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128195963 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107557971 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10836644 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.128649406 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107323815 seconds)
  done (took 3.298216537 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.118372475 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.234882595 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.113924461 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.242825234 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.129386598 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.104874612 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.115585431 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.127618994 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.12246344 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.105419954 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.126664826 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.103781451 seconds)
  done (took 2.455890959 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136847885 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14749342 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132333886 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110758105 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11872383 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13548354 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11397987 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115701575 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143035015 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125806492 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135616877 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123147008 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122776972 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142248769 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119301844 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141036874 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114834336 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114476382 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132183024 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129017889 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135982813 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121810545 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115639899 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135122326 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113478791 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123403929 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142529753 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126321121 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136215693 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12225001 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120118137 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136098368 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122378782 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148304603 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110531688 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122453884 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135194043 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128537888 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141294421 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121873684 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111203838 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140715537 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121541619 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142433054 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120765616 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114978828 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141941845 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114462082 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115323208 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156557271 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119450459 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144097814 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119444776 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144489017 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122006115 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136570305 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146919413 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124013833 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140495959 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126337766 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145887317 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118888129 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124444358 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146673385 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120439839 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144372402 seconds)
  done (took 9.333892724 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147670557 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111792564 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136762897 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126055454 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144638767 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114429126 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115266104 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137026348 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115498552 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111884377 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.178987833 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114693899 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145021565 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122046766 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116163292 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13490506 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1148103 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145107419 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112144776 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136999582 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135799517 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121724344 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145816458 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123043578 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127234203 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139734972 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114622249 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136053253 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114677052 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11518369 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141772775 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11489681 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123599087 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.133222918 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12278334 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115077846 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13590614 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120483433 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13640919 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120229403 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123546078 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.151785434 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115582449 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137591314 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125487274 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115755099 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135725862 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111493438 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116363083 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134050219 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125704552 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147515492 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125990927 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145272367 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115259852 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115112331 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136169093 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11492393 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115594599 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140054803 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124116486 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116127378 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156321897 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115495129 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137378733 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12252266 seconds)
  done (took 9.257053541 seconds)
done (took 164.782902402 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.180169572 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.219992125 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.203807281 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163420824 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.100399462 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.166424184 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.132659435 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.205961365 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.099474078 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.100899373 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.122568774 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.102553817 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.19345472 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.121456411 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.099443646 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.102968039 seconds)
  done (took 3.128921939 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200550028 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.346154431 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.139540305 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.103145805 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106696621 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.127795371 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104395051 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10633539 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.106354046 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131751585 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106054592 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.121368668 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.111262429 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.101530757 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.125996641 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.105403976 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.111070515 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.125434674 seconds)
  done (took 3.206840006 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122363814 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156523312 seconds)
  done (took 1.103450992 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.133262488 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.221912753 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.2999755 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.174464952 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12738432 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.144742351 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154809499 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.139062555 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196081262 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.139010511 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11828876 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.103699042 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150235005 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.111237639 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.145088368 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.102895152 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.13284426 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.141237474 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.119872231 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.106937772 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.149679776 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108516989 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.132033486 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11965392 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185690891 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.139971566 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10884464 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.130042327 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.108948509 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.120244827 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.133694951 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.121028144 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.140387127 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.162866741 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.130257503 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.160280306 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.132788492 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.106393272 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119562779 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.126242888 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.109041643 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.129856885 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.119652446 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.104070958 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.128780092 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.112023066 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.109731822 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.130205604 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113830567 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.113765806 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.133970556 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113639163 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.17817937 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.112723891 seconds)
  done (took 8.135454921 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.911864196 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154667145 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105533364 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.065872532 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150331302 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119573736 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.937864385 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131328775 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259144463 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.9081828 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120885411 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.135968902 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.249148736 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.287188967 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.258858755 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.367467772 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.769943961 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118577048 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.159736402 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.149948047 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134399719 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123926356 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124205815 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.462226472 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10654056 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.12718902 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110369474 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135379395 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161577423 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.128215873 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108820917 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206941878 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.300364669 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220523424 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106555086 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10575727 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126189779 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171984919 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278553873 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.246358387 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.174798975 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103634679 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.125917916 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110038959 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.143159236 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103125373 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.187979105 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178229194 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.199504331 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.131655471 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.114951238 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114212562 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130239308 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.18906292 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103263073 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.365640384 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.369303717 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.126353367 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111777344 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.140603312 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27419071 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107333931 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.244268106 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14923959 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220648331 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.103884724 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813406113 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.194137641 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.105222833 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111274491 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.131044291 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11141097 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130616392 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166768163 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.437873374 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112687316 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.132057239 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106246508 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23775735 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106193789 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107337221 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18764007 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107227847 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132853908 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114458457 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133479393 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175886183 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.277682896 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13454883 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111102479 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111846712 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136855909 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.106401538 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.237521642 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.238742006 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.185736649 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.237708367 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110112 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.192086348 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.194176743 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11004586 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.197731523 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.112398659 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118198732 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130704397 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.236836094 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.166615915 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107698838 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112196412 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13434776 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.145670075 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.131554335 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111542483 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.197155344 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.500863834 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.173653392 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.124308477 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110773935 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112915415 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185820099 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135791698 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268575659 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115060482 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.195131254 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110890567 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.103932933 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.132737837 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.19199856 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11438681 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112727091 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131222948 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115201881 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.286752265 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232126184 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115415436 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255155378 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.201817962 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111890775 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200092581 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133988313 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171296918 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137408589 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10995711 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108201196 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.852450406 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116731175 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.112670006 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133380788 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190462666 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127881651 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108388836 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106224363 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104947492 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.8528025 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110492746 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104964724 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.109851367 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132240269 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112474173 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134831735 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111741781 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188623997 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256490875 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115825487 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132934855 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106523365 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.185993786 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.107632997 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107341873 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12760333 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107208648 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.113366926 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.13315013 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110184949 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19623071 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.188317718 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.241844018 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577011812 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.106613951 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.128557051 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254946571 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107473184 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.33654245 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134276759 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.24817234 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192135962 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103734634 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.371265583 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.191723751 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.213093732 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109478891 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.199139025 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.104914985 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113538843 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.186095626 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.106789388 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13633623 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.186742831 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116010566 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115264167 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.284331882 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106132333 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256006723 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.104577386 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.198368983 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109201081 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112888295 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.357539465 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106386088 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119461041 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18657512 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134351446 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10726185 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.982333368 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107484452 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116217622 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.132349508 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.245093444 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.190557469 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11294954 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13597411 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115735384 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.191406598 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.235816802 seconds)
  done (took 48.189409288 seconds)
done (took 64.585143512 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.262302108 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174853972 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.356383047 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.153067895 seconds)
  done (took 1.844099583 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.263030044 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.168547955 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.246470877 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.102802055 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.25379934 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.103237082 seconds)
  done (took 1.995832892 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17635084 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170486104 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149079444 seconds)
  done (took 1.354425998 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215904917 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211720407 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.351994681 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.24224034 seconds)
  done (took 1.938023701 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.278055827 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.128533315 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.134290441 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.23006846 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.247491129 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.21218705 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130588852 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.179316507 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.136945102 seconds)
  done (took 2.568037614 seconds)
done (took 10.551708341 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.224249785 seconds)
    (2/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.14318738 seconds)
    (3/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.436926282 seconds)
    (4/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.244751665 seconds)
    (5/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.126451587 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.116741136 seconds)
    (7/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.336371928 seconds)
    (8/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.168944951 seconds)
    (9/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.228372614 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117058186 seconds)
    (11/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.279342338 seconds)
    (12/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.202899032 seconds)
    (13/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.215352295 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.271588628 seconds)
    (15/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.237793803 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.13268132 seconds)
    (17/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.210361845 seconds)
    (18/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.23491455 seconds)
    (19/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.105477964 seconds)
    (20/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.26329106 seconds)
    (21/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.310668752 seconds)
    (22/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.112100523 seconds)
    (23/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.33265787 seconds)
    (24/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.209732729 seconds)
    (25/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.225705551 seconds)
    (26/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.108295401 seconds)
    (27/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.330384175 seconds)
    (28/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.148108615 seconds)
    (29/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.148981654 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.133360948 seconds)
    (31/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.230462571 seconds)
    (32/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.322632272 seconds)
    (33/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.207108112 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.156459407 seconds)
    (35/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.09006915 seconds)
    (36/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.343667065 seconds)
    (37/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.26992715 seconds)
    (38/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.140572517 seconds)
    (39/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.134904564 seconds)
    (40/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.347033597 seconds)
    (41/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.20639342 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.137373604 seconds)
    (43/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.220792574 seconds)
    (44/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118259513 seconds)
    (45/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.143801793 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.150512628 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117955819 seconds)
    (48/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.220003638 seconds)
    (49/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.116567542 seconds)
    (50/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.184643038 seconds)
    (51/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.229199201 seconds)
    (52/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.173401772 seconds)
    (53/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106563856 seconds)
    (54/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.268778449 seconds)
    (55/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.23538997 seconds)
    (56/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.136047246 seconds)
    (57/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.097345632 seconds)
    (58/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.130729114 seconds)
    (59/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.085960296 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119301664 seconds)
    (61/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.084618002 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.131576062 seconds)
    (63/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116804631 seconds)
    (64/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.090892879 seconds)
    (65/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083803082 seconds)
    (66/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.111216542 seconds)
    (67/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.095025599 seconds)
    (68/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.08621778 seconds)
    (69/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.158998709 seconds)
    (70/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.110695687 seconds)
    (71/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.139650944 seconds)
    (72/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.181126183 seconds)
    (73/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.13917571 seconds)
    (74/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.114024311 seconds)
    (75/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.144146127 seconds)
    (76/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.084953613 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.157951298 seconds)
    (78/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.089202105 seconds)
    (79/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.143230981 seconds)
    (80/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.082019024 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.135453997 seconds)
    (82/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.090366505 seconds)
    (83/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084604383 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.158282524 seconds)
    (85/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.201640644 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109708401 seconds)
    (87/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.205668648 seconds)
    (88/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.184586325 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.137986382 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.136210649 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.127979612 seconds)
    (92/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.17289419 seconds)
    (93/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.082703954 seconds)
    (94/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090127614 seconds)
    (95/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.086386217 seconds)
    (96/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.089934848 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.140359357 seconds)
    (98/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.175685919 seconds)
    (99/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.089406784 seconds)
    (100/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.156704169 seconds)
    (101/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.090499821 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.120165528 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.130178219 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11731288 seconds)
    (105/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.135830213 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.140875791 seconds)
    (107/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.083403692 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.140141073 seconds)
    (109/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115458776 seconds)
    (110/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.110984141 seconds)
    (111/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.15512111 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109938281 seconds)
    (113/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.135920598 seconds)
    (114/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.13393524 seconds)
    (115/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.147263729 seconds)
    (116/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.088203236 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.129087944 seconds)
    (118/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.083502922 seconds)
    (119/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.091177456 seconds)
    (120/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.084360797 seconds)
    (121/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.14185111 seconds)
    (122/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109773631 seconds)
    (123/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.088395033 seconds)
    (124/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110124822 seconds)
    (125/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.198654174 seconds)
    (126/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.084574887 seconds)
    (127/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.085468865 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.113342078 seconds)
    (129/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.139549717 seconds)
    (130/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116993972 seconds)
    (131/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.137444068 seconds)
    (132/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.129986781 seconds)
    (133/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.198326026 seconds)
    (134/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.113263282 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110085819 seconds)
    (136/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.086984918 seconds)
    (137/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.086624059 seconds)
    (138/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.141963204 seconds)
    (139/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108203214 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109000145 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.151674063 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.13016157 seconds)
    (143/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.091139333 seconds)
    (144/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.082853016 seconds)
    (145/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.138290006 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110189934 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109044535 seconds)
    (148/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.105733165 seconds)
    (149/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.084267596 seconds)
    (150/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091279284 seconds)
    (151/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.109618487 seconds)
    (152/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.110794779 seconds)
    (153/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11849696 seconds)
    (154/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118223622 seconds)
    (155/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090997227 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.141523717 seconds)
    (157/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.092042108 seconds)
    (158/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.08410744 seconds)
    (159/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117073582 seconds)
    (160/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.108359645 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.11128205 seconds)
    (162/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.143505335 seconds)
    (163/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.089081267 seconds)
    (164/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.114294981 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108209678 seconds)
    (166/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.089243365 seconds)
    (167/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116360147 seconds)
    (168/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.142406371 seconds)
    (169/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.084489328 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117357469 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.133730713 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.131819857 seconds)
    (173/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.085277364 seconds)
    (174/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.096261016 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.132725358 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110921171 seconds)
    (177/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.090052434 seconds)
    (178/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.083545066 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.131608836 seconds)
    (180/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117329923 seconds)
    (181/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.087387677 seconds)
    (182/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.139980007 seconds)
    (183/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091486385 seconds)
    (184/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.138656658 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.129340135 seconds)
    (186/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.109700093 seconds)
    (187/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.086722563 seconds)
    (188/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.087125061 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109505235 seconds)
    (190/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.110323991 seconds)
    (191/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083733158 seconds)
    (192/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.08744912 seconds)
  done (took 28.272503215 seconds)
done (took 29.134643083 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.229929441 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.133175733 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.116962164 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.117832649 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.237172572 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124224359 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.158399024 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.118632292 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.126813723 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.14170597 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.107154094 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.130020125 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.14105351 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.251326416 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.121242639 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.110011924 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.132476953 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.129420997 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.133591965 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.158012562 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.23843989 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109945535 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.128139673 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.109179422 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.23741468 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.134178887 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.116605832 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119429049 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.154998356 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117835419 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.118296043 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.13239544 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.134890199 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.134220467 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.130523835 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118184911 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108466412 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090117382 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.14211965 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.12083763 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.130939965 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.14016924 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.117424982 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.109485043 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.141488082 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.118537777 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108720413 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.143946377 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.107966103 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118669238 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.133419191 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.133454516 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117580893 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.130237787 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.108070213 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110569703 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.150978185 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109112063 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.132081991 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.130544014 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.1093916 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108687163 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.141852221 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108048326 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.117724786 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.109533903 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.141231974 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.119924486 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.116992733 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.13304063 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108507415 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.117446465 seconds)
done (took 10.439223667 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.115493288 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.15310231 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.251777592 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.255425186 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.162043258 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.125884622 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122765262 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.156281288 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.122354024 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126313176 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.168078245 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141854916 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.258309691 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.150046127 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.126166184 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.12078124 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.143858862 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.116437978 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.256112323 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134577639 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.157068593 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.125107082 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.13352373 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.149689605 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112777952 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.168551238 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.116465862 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.121971265 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.135093601 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.121791303 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133566086 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.136484398 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115578483 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.130066406 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.153374682 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.124043846 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.125329971 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.144928564 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.113788625 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112666612 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142649084 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.130189087 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.112686835 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.147396859 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.121858204 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.150489816 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121022781 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125207644 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113471569 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.143781818 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.114157464 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.160978252 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.126232381 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.128197168 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.149311504 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125847208 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125465071 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.147256714 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.117368004 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.125741872 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.136182823 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.113093316 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114994437 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.156433256 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.115643915 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.125205378 seconds)
  done (took 10.126717056 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.133598353 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.142201539 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.146933574 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.123138783 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.117636994 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.128442019 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.107127393 seconds)
  done (took 1.806622216 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.111946375 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.273017904 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.262868881 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.264178074 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.252847146 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.271967033 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131794268 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.108263613 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.168294876 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.120377193 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.271371158 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.354155962 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118637382 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.125409317 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.264336213 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.108308435 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.266946349 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.134299341 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124161891 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.265681268 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125952412 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.164457829 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.122378786 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.134201901 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.239677857 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.137234543 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.315204504 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127219369 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.14305476 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.123027948 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12375656 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.210823606 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.268689903 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123736975 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.142510753 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.261727325 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.22978587 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.149866596 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.315192845 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.113563251 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.252037711 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.151393186 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.124670661 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.12479527 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.149028796 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.251716406 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.129343476 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.125066137 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.148526554 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.276284382 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.120653752 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.270165324 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.121289884 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.149487955 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.121343351 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126026371 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.156107296 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.12455444 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.275866614 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126743732 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.261277173 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.263344254 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.259688032 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.263568206 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.159037489 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.270428184 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.219445811 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.14929216 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119279948 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.124460394 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.264066783 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.149568638 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.122306289 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.255248787 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126091512 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.267035927 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.267495144 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147509387 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.122640824 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11232251 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.147826246 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.111456918 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.25617279 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122793284 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146936243 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129931149 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122536094 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.149847692 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.115334815 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.132992401 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.14904325 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.121769987 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.15356178 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.12483295 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125603433 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.266249915 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.147503693 seconds)
  done (took 18.258726248 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.113301172 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.111461131 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.115327344 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.13517611 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112138055 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.111062318 seconds)
  done (took 1.63376182 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14999026 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.124459912 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.156754085 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125439998 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.197583377 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.23063139 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.263095536 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145813944 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.144060662 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.136159531 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.257227428 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.260812754 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.25882857 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.128110488 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.260189521 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.15377157 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.238177829 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.149981627 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.134133369 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122293537 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.149891701 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.128761552 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122205418 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.246078893 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.152369449 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.127126514 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118793603 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.159882724 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133313537 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.118473858 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.153419165 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.12573029 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.14099074 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.119392599 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.263773079 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.117563618 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120731743 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.152452633 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127340382 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12555937 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.260343094 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.148772388 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.131370177 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.127269194 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.145077539 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.117470049 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.153705953 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118591375 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.266736349 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.129597912 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.127747306 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.153321634 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.12751007 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.127695379 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.116864841 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120176749 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.15148682 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.237876289 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.154856127 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.117164114 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.150942525 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.125857696 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119508367 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.154772086 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.127956093 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.127696993 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.141577123 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126505613 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123030955 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.149794162 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.128710368 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.125359587 seconds)
  done (took 12.141081001 seconds)
done (took 44.867808152 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.540697831 seconds)
  done (took 2.472180154 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.088270661 seconds)
  done (took 2.023585292 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.71076316 seconds)
  done (took 18.678794775 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.421076907 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.35290834 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.019819085 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156011431 seconds)
  done (took 2.891637588 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.075428159 seconds)
  done (took 2.025688229 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.417920953 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.280014779 seconds)
  done (took 1.640638011 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.70932091 seconds)
  done (took 1.651448852 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.885963004 seconds)
  done (took 2.827300219 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.277603509 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.253220214 seconds)
  done (took 1.481971582 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.677240662 seconds)
  done (took 1.633344341 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.689759919 seconds)
  done (took 19.649076377 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.262154234 seconds)
  done (took 1.219919605 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.297940216 seconds)
  done (took 1.258215003 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.511715314 seconds)
  done (took 4.473391988 seconds)
done (took 64.874909502 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.125376384 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129234723 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.150789295 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126763448 seconds)
  done (took 1.474072834 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.129006774 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12507298 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.152442526 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124397506 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.130152072 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.123598919 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.148981977 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.127478289 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.1223434 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150539009 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124699623 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122680666 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.150666438 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124412284 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122465813 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.15114041 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128280231 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.124552399 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.149116979 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.125375223 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.125287879 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.150168717 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.148558337 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.127784357 seconds)
  done (took 4.173524202 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.121052809 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.115567025 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117269036 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.137279481 seconds)
  done (took 1.458303177 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.132233417 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.136700563 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.160059191 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.132121747 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.136648477 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.158415144 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124125837 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.122872637 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.149201955 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.133396002 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.140617407 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.162058756 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136485357 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.15142028 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.135950131 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.1205414 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.149948624 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13600907 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.132288134 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.157527783 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.125709517 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.13122972 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.154924355 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.134520431 seconds)
  done (took 4.321033013 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.200551709 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.137212693 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.176625452 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.172456735 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.180464299 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.123853834 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.152779826 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.15417891 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.130427954 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.132124952 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.150390904 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.172763941 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.15525871 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.127126757 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.126376973 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.15463935 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.134182671 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129134854 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.191367425 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.128489147 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.155041573 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.136338612 seconds)
  done (took 4.291603226 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.127704895 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116345186 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.13893554 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.135678197 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.128418138 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.142664423 seconds)
  done (took 1.761177032 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.11417506 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.109117031 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.109376978 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.134076903 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.113806145 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11045361 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.133330989 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.111200994 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.110064877 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.108879841 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.134535933 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110039645 seconds)
  done (took 2.365271162 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212336538 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152919249 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258309964 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.417609991 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169951769 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194606645 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.28660836 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189484865 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208516498 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143031079 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2141054 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167816091 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184696135 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193300837 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175166617 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.163731934 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205298921 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215273701 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175074051 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24528246 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161699348 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208718745 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195787334 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18068159 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146521309 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195831897 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.126119762 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161316191 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174267294 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197075216 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207210575 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156690327 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147417311 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217954107 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265322517 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212735172 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.300969281 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139561872 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.202348426 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.22183871 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236100204 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17334633 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22416195 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159060614 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161693042 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199537642 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182929838 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.192684439 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.165642169 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151817736 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214997776 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211735391 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.177230001 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167982671 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300591186 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163606069 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.149305757 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2088574 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220042622 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207204254 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212558807 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12948707 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204589861 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222519587 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246908518 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148813809 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.196549427 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130979756 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196067866 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212086803 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214654244 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164327265 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223366885 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162905692 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180087165 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197903256 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161433314 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239362994 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205164457 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.125094555 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156981798 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164778652 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133238861 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.221202299 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128218493 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248991173 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137615514 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.214424334 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182739286 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185096215 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166758419 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193116589 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193741872 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153574236 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.106670979 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176859992 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.164184307 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189615487 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134422428 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182423663 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145620815 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131559431 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18465952 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.127770894 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203661996 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.139244287 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191948946 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176988457 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.165205984 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184572794 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178940874 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.167733754 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201238223 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226581798 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136697223 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137117498 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250478509 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202514621 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141978749 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202290549 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202057863 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.182641789 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140387214 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199827291 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226734639 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152415548 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233113067 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143956819 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168488098 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.145389153 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205531961 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16399443 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.192890548 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133422972 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.198861512 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193600062 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.158924106 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145198891 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21656375 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139267215 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158516092 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143321035 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142696666 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.174328701 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.157960781 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.171144079 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160139386 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200266231 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172381283 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190047621 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141196423 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206273005 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137445195 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.202773498 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155375944 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.151297347 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.180547021 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23270139 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134767769 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214577202 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.193650037 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184685963 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204852341 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13451738 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216105231 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133806964 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.154066307 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16766705 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204249401 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169311971 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.222793137 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209749847 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.169172302 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.19562208 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182637516 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174441234 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.216494972 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16310584 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.172781653 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178573975 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205139667 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126459504 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.1561473 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133961745 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143153487 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164044433 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142671688 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215542157 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170380377 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207944015 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198609234 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144846753 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224584246 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131088517 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193927211 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.182173042 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174664753 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.193906334 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222274707 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212777956 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145701329 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196354981 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.126694485 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132573997 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.167476916 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165867318 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169761135 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145002512 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174339631 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200019092 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203781898 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15464317 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221105491 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196550344 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235359172 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12806242 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166694446 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198563659 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174727607 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.214802864 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138724197 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.191759982 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197843094 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174336002 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225380626 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174105071 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21365751 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196990668 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.1973715 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13616327 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17671287 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166203885 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172355254 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16608166 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17584582 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137870819 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181295963 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.143773224 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145638975 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21976914 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177600119 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180933507 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.18640808 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175783006 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157787559 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147923144 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207158684 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151417078 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.135694438 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170402687 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225710512 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15513663 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185084776 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175083612 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162569283 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.322792357 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211843108 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204159751 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143117588 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144364099 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205318053 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162336716 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192280626 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218471289 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147729072 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243815679 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176505694 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.17223486 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136776058 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179802678 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155378521 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.171343755 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.157230702 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.197124085 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.148502844 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221770621 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143092811 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203723297 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182720513 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.177991666 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.154237538 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174450899 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233724278 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201680598 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208129196 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.170741645 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.19738706 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188282599 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15886689 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132792361 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13824911 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217525849 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134530574 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213794506 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195344348 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210321928 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180492678 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196722462 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146687818 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.132563991 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199738631 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15391634 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214914747 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165952769 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.143424168 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220532812 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131332585 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165706592 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164424089 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3167015 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152714905 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200748384 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111524158 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.310418249 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136000225 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164219797 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163436507 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201618584 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139013084 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188301095 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203930841 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144689715 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192162795 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141151975 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210176419 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212267613 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173226243 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208785015 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14986725 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195128752 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189139128 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177139031 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178490293 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.152499973 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164422869 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228052396 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.208484349 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.138491849 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202605557 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176320409 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205245644 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177364345 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172328023 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187878255 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161899836 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172406165 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1716631 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130973704 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19245278 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.169736293 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162362319 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177786626 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206302515 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137026584 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160466459 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153658264 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200470312 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146845578 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.135488635 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218805699 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.164405211 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188210167 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244656817 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136880922 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200941304 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149200126 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165179946 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144623903 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150118226 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164457953 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.180626085 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20855186 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137406415 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208336246 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173360203 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197638372 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159800474 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17652274 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.271158629 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.16257055 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196924159 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184107638 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201244746 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182952092 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209962138 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174784743 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155303609 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200575514 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17991153 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.227189939 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199554493 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.173469174 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164568592 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14970561 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143167248 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.167651341 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157286258 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206277824 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147411341 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.170988151 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.175335599 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179040337 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.152673754 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146300123 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233656378 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18467403 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192904146 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218644476 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143512659 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209350745 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210617606 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134636623 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.197623883 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177730801 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179023814 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158705511 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.167888072 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.142238405 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252312255 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.131913477 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164619394 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208527411 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203795094 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17859485 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.167888604 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184274002 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173310016 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182685226 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161309914 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157080264 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201178665 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139476525 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13294341 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205414565 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167855798 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.197845596 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146851906 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.205842541 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202232006 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.1571699 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139910291 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314672019 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168052343 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229226723 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137905463 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172138814 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152628524 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194966089 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.171075146 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205803821 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136407312 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134619451 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.17829883 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.164714166 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.165876687 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175510274 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214573845 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161598202 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219306086 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.139639601 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.290104483 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147123342 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207225052 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.121439168 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.165344632 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147997534 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140086143 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176151628 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210920698 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223091997 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.19691043 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.152823532 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169013073 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.13362893 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136790815 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195133458 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156429234 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204986067 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182455939 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108532988 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146444163 seconds)
  done (took 87.808675871 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177699605 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.176594197 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.189662699 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.242333045 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21590813 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.311232638 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.25209687 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264225765 seconds)
  done (took 2.885515715 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125712464 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.166392057 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.148303587 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.149700489 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.116329568 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.51437488 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.169467725 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.126593177 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.197725285 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154526817 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.117070114 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.574290472 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.125789792 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.153865339 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.151974255 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.115430225 seconds)
  done (took 4.156987057 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.060575212 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545558088 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.012352647 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.311848027 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.243057805 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.215515759 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.798098153 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.202523556 seconds)
  done (took 12.44502357 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.176853721 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.175200993 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.980413369 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.34712397 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.220361369 seconds)
  done (took 2.961180699 seconds)
done (took 131.048015739 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.130555548 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131203768 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.129400045 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.160923246 seconds)
  done (took 1.600385192 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.199122524 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096365112 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.12764624 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.095268498 seconds)
  done (took 1.579231349 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.398463344 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.095076255 seconds)
  done (took 1.575478102 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150007954 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.141390212 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.169766121 seconds)
  done (took 1.531631632 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.142448646 seconds)
  done (took 1.202710598 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.12265029 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.123062908 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.283070359 seconds)
  done (took 1.594299314 seconds)
done (took 10.146962519 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149521463 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.934241851 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.453830409 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140284411 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.74766728 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.40600048 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.433199204 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.183597918 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189750932 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.145419088 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138863736 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.701725505 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.446345567 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.88246416 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.430510732 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.885594736 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.702029118 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146872168 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124866458 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118027792 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.439689922 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116227125 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117891301 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.147116658 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.698048698 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426735212 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.145717478 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.896546957 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116565062 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.148959372 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.407588382 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117052558 seconds)
  done (took 21.197408607 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157697595 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176114716 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.166516842 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118378697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122111018 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.146702982 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127905348 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.157692743 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.193283273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.145829052 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138721582 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116220387 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151952964 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118287605 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141868403 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.146459297 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.121719083 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120136254 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.152739039 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120090241 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13877523 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.145672544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118951164 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119334021 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.144957099 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138729454 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11782417 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.157393676 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118440704 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12247202 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.151536621 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118303364 seconds)
  done (took 5.508173391 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.165727375 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184436776 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.167630585 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.155966474 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.197501986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119264583 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.234352727 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155112263 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.223982428 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117117678 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139514441 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.145219097 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15824492 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.147545817 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14361405 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118366845 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.149913422 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121019458 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125970022 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.147574891 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141983455 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116745359 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.147715832 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120916077 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117807443 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.169574841 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118626639 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130390815 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.146637531 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123434026 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.152046623 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119651695 seconds)
  done (took 5.798705632 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.133388223 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.134493241 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.140875327 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.17165186 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.128574586 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.133084858 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.160679889 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129176724 seconds)
  done (took 2.209815748 seconds)
done (took 35.784410538 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.141065554 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.134403717 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.139086776 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.163455191 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.279434437 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.125422715 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.137254804 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.155618372 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.132957782 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139573568 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.146654121 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.12691482 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.138647079 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.129846084 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.278387064 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.164465115 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.284942096 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.283035677 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.126342391 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.13380575 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.157188997 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.252730505 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.164133086 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.126056197 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.275411818 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.121216335 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.272375124 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129984208 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.159864084 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.117714465 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.282950439 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.128578467 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.157882029 seconds)
  done (took 6.772615909 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.232448292 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.15825011 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.127114374 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.129009392 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.128726341 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.15591466 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.268379939 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.127179856 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.127335807 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.127069321 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.157672553 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.218234635 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.162915956 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.12311152 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.128892462 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.14599603 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.23696604 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.158562196 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.11907681 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.098758182 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.122850071 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.156869846 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.250034999 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.155544909 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.126705804 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.12752877 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.157798732 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.13312856 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.130537361 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.158986813 seconds)
  done (took 5.738517196 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131668368 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.139560002 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.175462121 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.195168583 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.157963101 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.168927611 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.14401529 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138177406 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.178897467 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121919826 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.135855493 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.185924978 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137402897 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131239808 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.149150592 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136298791 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136065108 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.150417692 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12943227 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139969628 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.168444729 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.137576183 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142860171 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.158372128 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.119451469 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127637043 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.159744606 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.132063491 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.128383337 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.16490299 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122269837 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.122617873 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.152373477 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.156293272 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.122358853 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.162655402 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14191841 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133368106 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.162860879 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.152908425 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.122848746 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.150477029 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.147290395 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.207205979 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.123252566 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131925304 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122405353 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.164387818 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118998638 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138358331 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.192790867 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.119954383 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.170831959 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.119057484 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11874068 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.128085066 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.149204209 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.123973583 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.134977173 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.150534808 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.141625 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128719082 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161435947 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122645892 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132167278 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.148553478 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.119780923 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.124384933 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.176749608 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128685966 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158187134 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.148797912 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.134148293 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.134255097 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.161574433 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133236031 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.119637579 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131562131 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.165563591 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124501055 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.133252486 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.153178371 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.121761509 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136716984 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.169696264 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.135749446 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.132096832 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.160392217 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121696921 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.122559158 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.166564495 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.123225589 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123052988 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.162069992 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121160852 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124404231 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.160543474 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128521307 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.118644283 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.175414565 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124031665 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.120041365 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.175742281 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123855601 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123364427 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.129296628 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.189891301 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121490226 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.158219074 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.131458362 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.120344871 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.127876087 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.150012597 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.119298602 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135705646 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.165747735 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127786825 seconds)
  done (took 17.709737766 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.376236641 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.367772144 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.217478449 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.412210264 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.164745891 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.256467221 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.398895199 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.372998253 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.121337354 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.185425278 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174422801 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.334039179 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.153122828 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.1488393 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.37424997 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.447644836 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.150466775 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.190909912 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.155008677 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.164928901 seconds)
  done (took 6.269040215 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.129415688 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156653715 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.173021872 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.138850502 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.131704719 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.165269127 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.121192614 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.143115506 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.161402671 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129369608 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.123966357 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157701325 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.13441881 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.135896843 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.136144525 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.183196804 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.130427233 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.125146861 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.172929224 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.126693975 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.108193487 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.175459731 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.130080447 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.171591359 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.138719482 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.131326065 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.14863931 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.125970921 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.127607693 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.129402744 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.153497028 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129309338 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.12742835 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.138732603 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.133313785 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.135644762 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.155854414 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.123517166 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126258106 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.12309591 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.16388849 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.13307625 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12885275 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.133438439 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.139452654 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11484536 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.134744397 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.161830101 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.112276489 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.140602041 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.163869659 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.135922784 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128112494 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.173680059 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.128448223 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.13823715 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.16137748 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.13546282 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.125565541 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.14777098 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.118988484 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123008863 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.157572079 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.135106096 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132577247 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.157518725 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129077893 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120935216 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124900587 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.15191118 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.124239072 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.134027398 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.170158692 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12957956 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.127323707 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.160389642 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.129841072 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10029636 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128215913 seconds)
  done (took 12.077099071 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.146444548 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131768247 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.166112967 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.155882116 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.133330626 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.126835181 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.161881677 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.140556625 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.135404891 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.168961126 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.135478331 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134366258 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.174132259 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.132158887 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.129434029 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.166581944 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132804646 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.188738044 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.133384367 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.147654724 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.166075952 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.125519687 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.134099061 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.162207141 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.148569771 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.131938184 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.17809323 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.134073705 seconds)
  done (took 5.240199718 seconds)
done (took 54.885109736 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.269099306 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.445670601 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.220718066 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.220446468 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.241510262 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.226171807 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.220255162 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.223672228 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.714626048 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.192297829 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.220570318 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.217342284 seconds)
done (took 28.518839815 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.322090544 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.359799997 seconds)
    (2/2) benchmarking "String"...
    done (took 1.534356189 seconds)
  done (took 4.004759266 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.20991338 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.20999423 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.476584004 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.210667133 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.210750424 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.20921161 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.21623961 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.216337404 seconds)
  done (took 15.850449658 seconds)
done (took 25.489179865 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.206474149 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.461585687 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.466984854 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.190900737 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.213625846 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.211445384 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.213452985 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.256215697 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.223602259 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.19568403 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.627658653 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.510420113 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.212265477 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.607778611 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.190153078 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.221197472 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.227676518 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.542483716 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.212732451 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.194698708 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.191236805 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.192602843 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.231471336 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.233470078 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.237573855 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.225315135 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.238713991 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.212393011 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.479335517 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.214424027 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.241447368 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.229889883 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.233628338 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.222936149 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.215325786 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.214779424 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.487156161 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.222337175 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.196243434 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.222129488 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.491894019 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.231367355 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.220634768 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.217108798 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.197705274 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.203579933 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.199769393 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.330648118 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.237319809 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.213606383 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.279065577 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.597624571 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.23137869 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.233731517 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.224242857 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.517053177 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.242013881 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.298784829 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.237239893 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.250514747 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.220131201 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.213077408 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.262071993 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.224135245 seconds)
  done (took 144.807673502 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.215594881 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.214224515 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.215558848 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.216940943 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.219917063 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.216439385 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.21382566 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.214703143 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.217367502 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.242060077 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.217121231 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.215797007 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.21921427 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.168114783 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.224876821 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.239705128 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.221254779 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.218267013 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.225778916 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.216114706 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.226034221 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.218796288 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.216881766 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.2160487 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.218678865 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.303345326 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.222938008 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.226635977 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.229255343 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.217903721 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.218462158 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.224385897 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.869641499 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.090729676 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.229595252 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.247283751 seconds)
  done (took 80.636232096 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.217876727 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.217051076 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.217095367 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.252158437 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.215499548 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.822445208 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.811195398 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.277647882 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.349891117 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.697036916 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.463578303 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.218500446 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310795487 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.23114484 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.223305867 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.312683572 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.244287802 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221526264 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.2178947 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.831304662 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.235422237 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.219833743 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.397168502 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.232482642 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.251006281 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.612497981 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.781723028 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.218258123 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.252649889 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.557461563 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.269552906 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.218949765 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.595705698 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.330876945 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332815492 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.221995366 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.253874711 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.219641204 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.506796746 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.220020649 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.220791336 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.223261869 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.883530075 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.223761057 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.830098169 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.224905212 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.19964057 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.221222008 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.220564373 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.188072317 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.226064371 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.991701379 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.225808287 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.221181865 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.222252611 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.220653522 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.219912765 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.253746087 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.210616587 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.1020539 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.221156474 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.222749756 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256241448 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.220319731 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.815469957 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221713273 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.461521879 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.28696765 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.323011631 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.836237155 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.2260402 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316894045 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345023079 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.221251092 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.222676393 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.221373286 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.22252756 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.334098673 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.22309459 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.221710153 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.941292276 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.401556853 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.239704059 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.703256681 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.323429917 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.221991971 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.593442203 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.224934414 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.222003547 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.947203397 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318842727 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.223418793 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.222693431 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.221396501 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.937051521 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816529201 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.510459147 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.227375097 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.79940885 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.227866021 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.221919062 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.110248465 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.80731607 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.896475217 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.2273407 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337010101 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.40490717 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.240294519 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.223741935 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.706928226 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.228430681 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.281280984 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.228561729 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.625487665 seconds)
  done (took 380.008947029 seconds)
done (took 606.555710937 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.202550696 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.205915711 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.205613433 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.205841159 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.205908907 seconds)
  done (took 12.139946004 seconds)
done (took 13.252833321 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.434737641 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.423321058 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.422936969 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.289572922 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.441923222 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.444966765 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.349143643 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.297907743 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.419884731 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.445308148 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.425797665 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.262068372 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.440199359 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40433899 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.241528631 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.340559085 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.369299928 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.36805871 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.311264302 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.346108682 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.45948543 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.262908123 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.261587166 seconds)
  done (took 32.576971349 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.531508015 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.237679327 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294850574 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.513613215 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.273313148 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.521421155 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.567961333 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.237640254 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.426450126 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.273614097 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248445079 seconds)
  done (took 18.24135559 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.525456268 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.238150405 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.312399087 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.498976637 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.272817153 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524863748 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.568521077 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.240344189 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.422524652 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252215659 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24938678 seconds)
  done (took 18.221021006 seconds)
done (took 70.153291678 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.265841016 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.332847707 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.266410452 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.246298397 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.244981293 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.245915993 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.249174309 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.247183207 seconds)
  done (took 11.216084222 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.244544076 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.244017546 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.244811724 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.245574708 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.24491265 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.24510147 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.243118735 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.244098384 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.244777708 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.246079952 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.244888441 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.244545834 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.244911961 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.244909834 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.246572275 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.244563982 seconds)
  done (took 21.034733456 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.24812474 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.245233185 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.245612081 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.246157988 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.246298524 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.24649352 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.246403861 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.246591032 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.245171479 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.246414317 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.247690022 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.245612392 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.245752483 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.246242945 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.246236621 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.24757473 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.245372521 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.246051893 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.249135495 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.247152103 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.247474922 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.246904146 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.246323633 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.24639274 seconds)
  done (took 31.035485601 seconds)
done (took 64.401820312 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.230880856 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.231064373 seconds)
  done (took 5.580461228 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.30697499 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.305512949 seconds)
  done (took 3.732855684 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.249372397 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.246935499 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.247863262 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.249082966 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.248171901 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.247787624 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.248163003 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.247930819 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.247717181 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.247730304 seconds)
  done (took 13.599954976 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.248091571 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.248629221 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.247809381 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.247751227 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.248274407 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.248272551 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.248447475 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.24802631 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.248647701 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.247655575 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.248457706 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.249585743 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.248884927 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.249892379 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.249778476 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.248495504 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.249010389 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.249419186 seconds)
  done (took 23.594725872 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.263718594 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.266983072 seconds)
  done (took 3.650718634 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.37661561 seconds)
    (2/7) benchmarking "second"...
    done (took 1.290929944 seconds)
    (3/7) benchmarking "month"...
    done (took 1.353673545 seconds)
    (4/7) benchmarking "year"...
    done (took 1.346417298 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.291525487 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.269837698 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.291295142 seconds)
  done (took 10.340183372 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.239515536 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.535037174 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.724039871 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.393564462 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.22872288 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.255204895 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.214767729 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.257464231 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.262761307 seconds)
  done (took 14.230758519 seconds)
done (took 75.848292945 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.235550447 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.263212302 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.261112033 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.256133428 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.58903159 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.27678083 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.239635951 seconds)
done (took 16.244587098 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.218717371 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.219119949 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.218611436 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.2487175 seconds)
  done (took 10.027170774 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.23838834 seconds)
    (2/2) benchmarking "read"...
    done (took 1.563031086 seconds)
  done (took 4.923009489 seconds)
done (took 16.072727825 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.252519936 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.251346328 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.251656774 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.250897585 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.251728291 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.252352695 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.251933182 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.252688177 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.25271737 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.250951153 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252156618 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.252370856 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.252863087 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.25219723 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250667287 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.252053179 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.252016632 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252646105 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252749089 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.253326197 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.252412353 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252767124 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.251840328 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253005086 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.252067134 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252605516 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.252972738 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.25382886 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253357612 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.253519379 seconds)
  done (took 38.694608511 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.258351122 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.259494791 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.252785021 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.253319818 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.253666026 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.252389489 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.252501891 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.252653169 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.252872415 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.252594687 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.253218067 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.253758134 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.255175307 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.252961773 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.254827994 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.253763202 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.255009377 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.254261303 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.252538828 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.252892005 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.254772446 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.254362052 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.25395723 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.255284888 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.255178657 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.255424199 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.255461377 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.25337631 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.255353271 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.254570655 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.254926388 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.254791908 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.254717422 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.255590652 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.255820802 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.256294815 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.25951949 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.261682518 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.25614358 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.25647282 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.256941833 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.255755612 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.255464776 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.256322412 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.255758673 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.255867887 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.256505589 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.255406819 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.25596951 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.256884775 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.257144771 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.257142122 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.257589802 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.256259408 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.258094195 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.256657005 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.256527069 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.257368268 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.256121102 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.257551303 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.257064579 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.256869468 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.256918534 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.256937901 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.259193685 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.25805997 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.25875031 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.257453126 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.255989546 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.256801135 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.257832279 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.25720973 seconds)
  done (took 91.540255767 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.257881673 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.259505757 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.257063362 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.258542582 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258652962 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.257876408 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.258735318 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260080859 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256981819 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.257653295 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259174166 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.258950982 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258761818 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.258224828 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258801659 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.259356381 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.258770069 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.257663858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.259603036 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.258747845 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257948554 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.258675895 seconds)
  done (took 28.817806597 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25940983 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.261655159 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.259224864 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.260469257 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.261374329 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.262030169 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.260202113 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.261165969 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259527752 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259669277 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25888115 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260502728 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.261445243 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260422504 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261082304 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.262493675 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.259571443 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.262566487 seconds)
  done (took 23.821773004 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.259734136 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.260259525 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.259191179 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.261657182 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.261179336 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.261429267 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260962889 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.26262534 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.261022968 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.261172535 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.260701358 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26097588 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.262127271 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261841434 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262127331 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.261655363 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.26115283 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262179064 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262300245 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261647856 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.262079179 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262578182 seconds)
  done (took 28.880543104 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261054261 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.262034244 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.261034407 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.261256741 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.262078443 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.26221853 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.260658532 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.261398525 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.265017436 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.263082839 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.262409086 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.261626981 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.265009198 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.262558073 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.262460063 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261347525 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.263383041 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.262311217 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263929305 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.263378655 seconds)
  done (took 26.381162157 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262258593 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262724796 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262515563 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263187396 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264657517 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.264332585 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263861734 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.263531374 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271015589 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266303654 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263758744 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264111458 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264909376 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26597972 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265837476 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265977034 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.264999686 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267802005 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265500904 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265125303 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265573481 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265640609 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266117268 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.268240327 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.264604945 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26551228 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265702695 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264747687 seconds)
  done (took 36.558441287 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.282781732 seconds)
    (2/2) benchmarking "in"...
    done (took 1.282969837 seconds)
  done (took 3.70083594 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.265769487 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267703349 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.265988832 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.266384831 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.264449242 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.266101347 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.265546212 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266836018 seconds)
  done (took 11.262932642 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.256420581 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.267215205 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.266137761 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.266178945 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.26664809 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.259572749 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266610166 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.271431842 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.259057489 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.260886595 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.265637313 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.26658362 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.262539739 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261210731 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.261330598 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263294995 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.270899225 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.266783499 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.267817942 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.267801007 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267919228 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263325403 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265788324 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.271891303 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.262023376 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.273099073 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.269963065 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.274229348 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260976869 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.266411263 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.263918244 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.271807495 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.268311171 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.268181041 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.268779242 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.269481594 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271436558 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269107367 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.270783673 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272972388 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270266237 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.26824124 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.263222397 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.265794783 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268689724 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.272685905 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.270075061 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.269960536 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.260751559 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.266332991 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.277237445 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261023898 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.271580035 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26730993 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.266730098 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272846384 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.277508457 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.264512657 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.270827648 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.276064123 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.282131239 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.280874813 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269261911 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.274431583 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271224399 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.288701691 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274902677 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.279514836 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.272480939 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.272115412 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.272586551 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282780978 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.284056068 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.276696476 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271579396 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.271609374 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265781535 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.275724846 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.274373732 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.275684568 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.27802589 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273979439 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273707535 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285707651 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.267269786 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.27798316 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.273693649 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.271977596 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.264771633 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278449441 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.281994783 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.273366558 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.263861804 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.268670007 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.270297425 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.279301544 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.265490314 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269399691 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.277217694 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.274074008 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.272928787 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268771162 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.277774024 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279743624 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27367571 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.275557402 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.280676697 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266076108 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.279703194 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.281327558 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273756537 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.267032779 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.272165383 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.276730973 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267886138 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.275924151 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.280213011 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.270200458 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.280397016 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.275537913 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275220226 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.294610729 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.2808646 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.274559094 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.272472884 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.286169852 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274863211 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.272895475 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.281507202 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.274246937 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.274729847 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.271431627 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.282523738 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.269376519 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.278702169 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268788884 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.280679066 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.27419956 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.276535777 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.272025587 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.275864603 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.272974107 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.276179579 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.278532139 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.284109247 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.274478651 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.284484252 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.276655277 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.273940944 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.277619428 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.282290683 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279719151 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.269682477 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.280525344 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.267997734 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.279775722 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.269680547 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.280700672 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276451722 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.276468397 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278701782 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.269052937 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276618868 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.281400663 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.276168185 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.27625633 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.283151967 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.278070561 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.277984672 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.270665583 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.279664572 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.269089757 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.274931465 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.287053967 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.279809716 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.276992198 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.276169034 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286929097 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27803041 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278237822 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.269872437 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.281521094 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.285350285 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.283791989 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.287068378 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278934463 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.278904876 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.27396952 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.27462672 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.281217027 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.274072905 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.288734807 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288941315 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293607406 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.274906892 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.284720267 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.271403511 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.28383456 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.27936169 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.287143183 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.281156147 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280043456 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273447961 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284524659 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.274762756 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.285384109 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.271996538 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.282410502 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.281988994 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.282802585 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.281696361 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.274735418 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27863484 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.284820381 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280936165 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28001567 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.274157919 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.285036964 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.272913777 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.277871335 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.286595643 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.283446357 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.285333329 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.290800319 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279497856 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.287151291 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.282981578 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.277319292 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.284238122 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281166846 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.282009308 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.286577672 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.285302431 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.278036166 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288779817 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.284834593 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.275018973 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.28262369 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.291951457 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.283587914 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.278789813 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.290916548 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.285492291 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.282786732 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.284703054 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276056001 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.287999867 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.288530138 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.293429118 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.275786255 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.287421875 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.278096054 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.288738513 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.280872952 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.286746091 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.284204168 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.286682318 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.293909726 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.286350148 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280173087 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.287661272 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.284705304 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.284455473 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278830953 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.291595296 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.287577093 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.285789507 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.282771562 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.284240474 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.288444876 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.277448535 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.285442149 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.278352228 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.297234785 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.307422876 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288449513 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.291291204 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.291073387 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.290031121 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.2890198 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.282186876 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.280238731 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283020805 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.28161766 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.281462321 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.28882835 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280659514 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.289303717 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286668273 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.289637095 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.291083314 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.288446018 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.279880569 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.288900115 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.287095767 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.287868622 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.278076805 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.288720249 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.280997064 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.290903182 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.288378874 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.281069616 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.293621043 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.293283209 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.285348154 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.284779646 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.281972632 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.280834263 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.283822748 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.293272998 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.281110333 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.29436606 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.281441534 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.288118872 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.28418456 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.296433962 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.299368256 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.283280274 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.296143703 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.288074611 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.280752338 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.282852259 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.290082612 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292654542 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.300427737 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.282431708 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.292653162 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28772892 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.289243443 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.289209848 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.290360938 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.28869211 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.288968978 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.293587277 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.295719982 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.286767421 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.292728451 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.300619588 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.290750503 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.288704979 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.282427419 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.290207603 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.300335275 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.285072233 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.287727058 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.284703624 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.293167925 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.29152176 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.290678021 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.291245403 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.289627838 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.295108465 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.296123967 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295351754 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.289732875 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.297046053 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.302697641 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.296292868 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.304006484 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.286046422 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.2970428 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.290496662 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.284910832 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.286700501 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.286534491 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.296022745 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.285013635 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.296436438 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.292066796 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.287957014 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.294002499 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.300252963 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.282340973 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.294656544 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.315547852 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.285173805 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.296436031 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.294075223 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.284591034 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.294357014 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.293106887 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.283371366 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.288628959 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.294972413 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.298897941 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.286228974 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.295696785 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285589099 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.297191466 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.292882493 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.294290904 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.293145425 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.291932265 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.284925873 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.295484071 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292949541 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.304932755 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.288503616 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.294226537 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.289849126 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.30324022 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.307192822 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.289673914 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.300454894 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.295732846 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.287295666 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.292275923 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.30015703 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288476988 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.298781255 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.28763733 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.292356267 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.292510079 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.296876893 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.299591304 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.29790944 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.288037355 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.289289769 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.297643207 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.295436126 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295892257 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.292617978 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.303803158 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.288784084 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.288287618 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.299309167 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.289262608 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.302300508 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289544826 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.295147737 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.293630407 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.300855922 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.296387267 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.297704632 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.287721028 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.288915132 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.3048808 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30261993 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.298016505 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.296859286 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.300980974 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.291581369 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293167744 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.297602469 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.291288726 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.290796884 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.300676849 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.290737053 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.294639114 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.292674741 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.298780019 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.303615944 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.302305249 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.292317161 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.305604675 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.309721086 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.305650095 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.289723848 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.294689857 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.293169824 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.300144485 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.300457194 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.291971051 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.3071618 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.306412072 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.302010482 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.298319796 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.301153695 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.291101969 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.302300707 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.299142031 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.29617641 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.305900716 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.295727921 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.307110579 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.300070199 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.298578384 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.292298486 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.293572186 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.295617858 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.298557342 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.303155855 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29935212 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.302738272 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.297725166 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304903818 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.301052069 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.298193892 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.298870269 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.292634784 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.302668735 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.290701381 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.302865033 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.302173021 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.295175838 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.304186877 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.302086018 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.295224259 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.302169644 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.308118785 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.300067245 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.294292465 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.299307102 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.307108544 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.313962849 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.301426419 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29415741 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.298509285 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.305852083 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.302233878 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.300904817 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.296445199 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.31584463 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.31673962 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.29497589 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.297953034 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.305361287 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.312855273 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.302556802 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.302376601 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.299231369 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.301814839 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.310487106 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.303142238 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.30728717 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.310087284 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.298763957 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.307230802 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.297166526 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.301763198 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.304994111 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.314794814 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.302865928 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.299396501 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.317853078 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.314288788 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.304768815 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.331936054 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.311886449 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.30367135 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.309873031 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.295837541 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.304979477 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.299336633 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.308768061 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.304134007 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.303061097 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.304163323 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.295216369 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.307282942 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.313490391 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.314768889 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.303506243 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.296801013 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.299253542 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.307099975 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.30504852 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.306029172 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.30582134 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.304365954 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.306016911 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.299641249 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.318149322 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.326349462 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.312054821 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.3065946 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.306254892 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.304922683 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.311394456 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.307469366 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.312279466 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.304608421 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.3054692 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.3040606 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.316058306 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.305661633 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.300511366 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.301475696 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.300428897 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.310091777 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.31774055 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.330856262 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.312525884 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.312389114 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.308819753 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.307542052 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.300496987 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.31230687 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.306559432 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.302431433 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.303399526 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.310988747 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.307696844 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.307688622 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.30298011 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.314508147 seconds)
  done (took 768.622302119 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.306982777 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306390948 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305904387 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.308681793 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.308346385 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.307543649 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307733053 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.308022676 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.308226345 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.308056849 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.307210482 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30939363 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.307535669 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.308473245 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308345885 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.308088929 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310033879 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.308533966 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.307587892 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308345125 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.30743476 seconds)
  done (took 28.638009269 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.308262879 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.309141359 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.307554708 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.308529263 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309676722 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.307496772 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.308192428 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309084025 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.309248881 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309902127 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.309075277 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309224066 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.309051844 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.310830513 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308707396 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31029612 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.310892656 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308512787 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.310147187 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.309256725 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.309946004 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.309942888 seconds)
  done (took 29.975459314 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.311445972 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.310984876 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.303845257 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.31394796 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.310768663 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.310363659 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.310656452 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.310353046 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.3113189 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.302888661 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.304279179 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.304611521 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.309007316 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.317403573 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.3068154 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.315954875 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.311962056 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.312120854 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.311406487 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.311078197 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.313281668 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.325635142 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.310625236 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.303544833 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.31472961 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.311709668 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.311439056 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.311720696 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.305263175 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.315149564 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.311365017 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.305577551 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.3149676 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.314854377 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.306460232 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.315645939 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.312032487 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.311818507 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.312797343 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.314319749 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.335732316 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.312423358 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.316763699 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.326631741 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.312438112 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.308385199 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.321073767 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.314112348 seconds)
  done (took 64.165773191 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.313896104 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.313074995 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.313760962 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.312099602 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.314285876 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.314031942 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.313888621 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.315143796 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.313538434 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.314022237 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.314648516 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.314689962 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.313837178 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.314121585 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.31491293 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.313620918 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.31548562 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.313032213 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.313796022 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.316596329 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.314338652 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.315025029 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.315991883 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.314120538 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.31586574 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.314941993 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.316915617 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.316061773 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.314619117 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.314261761 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.315788886 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.315084103 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.316134164 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.316700569 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.315553366 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.316092505 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.316818537 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.315386853 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.316790422 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.315663093 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.315565144 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.315291168 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.316043578 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.317183151 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.315578149 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.315425532 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.315152692 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.31757231 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.31708937 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.31736178 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.316871443 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.316658834 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.316180986 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.315841174 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.316810521 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.316215171 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.31611199 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.317028326 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.317060174 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.316688396 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.31778447 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.317039495 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.317728308 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.317635077 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.319690751 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.318508044 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.317895439 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.317480485 seconds)
  done (took 90.644612061 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.316223693 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.317856319 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318485404 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.319263669 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.317479955 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.318634295 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.31849119 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.317743787 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.319378479 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.319417719 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.319328927 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.319285128 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.318882395 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.318593672 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.319106174 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.319464654 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.318791665 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.320115118 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.320230773 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.320958567 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.321071746 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.320519685 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.31904212 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.320376742 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.319276852 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.319323655 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.319309702 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.321020928 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.32029865 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.321252339 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.321320916 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.321536412 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.320560014 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.320101236 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.320988878 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.319470038 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319105604 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.320189836 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.321261567 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.321493418 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.320853599 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.321108217 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.320554406 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.321338176 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.321673421 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.32266037 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.322640008 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.322457455 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.321757116 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.322414923 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.321642984 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.322278073 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.321933513 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.321366485 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.321355551 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.321711824 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.322374462 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.32349691 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.321735437 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.322960818 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.322541032 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.322051219 seconds)
  done (took 83.051521789 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.321147443 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.323134886 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.321804287 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.321767825 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.322961247 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.323495779 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.322392553 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324935143 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32207668 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322601773 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.322909326 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.32288429 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322260929 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.322912849 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.323411091 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.323737513 seconds)
  done (took 22.347471972 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.323155636 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.322472576 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.324632806 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.325076902 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.322535855 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.321911714 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.322454054 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.324624903 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.323065146 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.323818324 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.323197706 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.32368387 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.324304031 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.326345506 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.324972033 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.325418361 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.324756263 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.324465653 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.324974364 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.325121572 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.324619208 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.32480131 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.324719821 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.325577594 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.326143221 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.324553782 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.324483005 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.324918237 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.326331986 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.325530044 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.326818596 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.325662281 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.32491492 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.325832281 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.325692106 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.32587639 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.324831905 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.326419748 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.325108471 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.325553259 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.327319225 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.325025823 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.325770567 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.326096656 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.326002827 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.327366336 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.325502392 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.32720259 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.327402049 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.325483645 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.326991501 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.329034795 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.326376054 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.328837226 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.326007592 seconds)
  done (took 74.076453495 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.326287688 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.327086216 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.325864225 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.32688774 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.32793798 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.327261291 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.327980831 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.330041268 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.326369616 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.32753242 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.326426617 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.328114881 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.327594119 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.327542434 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.328564208 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.328352745 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.329087485 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.328120533 seconds)
  done (took 25.084750874 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.327783135 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.328707187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.328358644 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.328720865 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.327665845 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.327886506 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.328653304 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.327893424 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328018193 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.328759022 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329545422 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.328340615 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329281369 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.330227938 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.329022941 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328705003 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.33040106 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.330150106 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.328377813 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.329187995 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.329430227 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.330827164 seconds)
  done (took 30.424639727 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.319020596 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.31841518 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.320046843 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.337760237 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.33941446 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.320306825 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.321008686 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.321072541 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.345769415 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.370604478 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.363023631 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.338123957 seconds)
  done (took 17.205057794 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330160192 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330033394 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.332913202 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331868983 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331168741 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330509381 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331223885 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330668145 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330059022 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332052818 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329781012 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331787422 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331117121 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330432322 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331284714 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331481321 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330482372 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331861329 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33291538 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33216568 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331794425 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331944312 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331283848 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331768834 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331809115 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331485941 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332626666 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332755358 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332117916 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331898531 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33269844 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331732562 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331606032 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332740532 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332763072 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33456651 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33288037 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332874641 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332115096 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333789422 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.334127146 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333189837 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331452566 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334193985 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333574788 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332934126 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333363167 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333329507 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333899689 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333622161 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33362382 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332687176 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333777588 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333941346 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334625777 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33501155 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334792205 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336134743 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335462054 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335142729 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336247002 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336247139 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33493163 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336547367 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334665133 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337275594 seconds)
  done (took 89.158690236 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334510398 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.33606535 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335693804 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335426103 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335456259 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335538483 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337326395 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335299228 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33603815 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336306858 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337342205 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336490237 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335938914 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336912718 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335635317 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336635284 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336866625 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337351691 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334999907 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336771003 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337722511 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338001501 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33671441 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337497672 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337007733 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337683555 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335704115 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336580756 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337620662 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337116288 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337050227 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337638253 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338321333 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.336509306 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338701105 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336260923 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338121868 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337201585 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338220889 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339384256 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33745832 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337345076 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338818344 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338407608 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339758699 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339253764 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338466809 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338047171 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337412229 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33814473 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338302002 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338978709 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337090915 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338443126 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337047143 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33812456 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338778269 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338931827 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33805787 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338396859 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338803222 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339027303 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339138771 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338553772 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338129183 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340586071 seconds)
  done (took 89.46871765 seconds)
done (took 1703.644875091 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.498636632 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.452681302 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.328998749 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.359105284 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.32970305 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.348922364 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.344840155 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.330603075 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.330370056 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.330226699 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.33089172 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.523740452 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.402729047 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.330410763 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.330643597 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.431731357 seconds)
  done (took 27.201961938 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.359156914 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.338395198 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.464772094 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.339841401 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.35845464 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.545697263 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.400370516 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.337185042 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.534700694 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.361099529 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.328477292 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.363389703 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.335746817 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.328412979 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.360130679 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.542531077 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.627297709 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.347371456 seconds)
  done (took 29.472933434 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.861095385 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.374128605 seconds)
  done (took 5.435092495 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.356918472 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.336783377 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.33850032 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.335018417 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.327080166 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.32734651 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.333774829 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.330061043 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.328058654 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.481921605 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.343068937 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.350091727 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.335510685 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.337861269 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.344347869 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.384141684 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.489293741 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.346450593 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.346229757 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.342722427 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.336439598 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.436505576 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.384077267 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.348565589 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.48025977 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.337836226 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.344583479 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.345042878 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.468203036 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.347011107 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.336357355 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.337392237 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.338554503 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.330847684 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.935188004 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.355033453 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.363835325 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.34518329 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.346583595 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.494100711 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.339231173 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.344221245 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.337735163 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.906639407 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.452881061 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.473514656 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.347402782 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.345834234 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.33973914 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.408466839 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.344235711 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.340065162 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.400557739 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.23074 seconds)
  done (took 85.947322446 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.340155166 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.331456086 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.51498778 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.356878505 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.332104083 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.356794519 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.358670518 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.672171265 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.381202504 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.332695745 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.674556911 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.999875652 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.343049334 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.374694966 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.367791929 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.35960677 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.332904628 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.332778265 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.33220164 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.332449897 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.932462474 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.350155205 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.337195501 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.531354235 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.376279029 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.926301446 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.332623176 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.333858464 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.340206819 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.33152689 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.974905574 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.338765283 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.36927016 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.336544757 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.642850351 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.778803888 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.735768024 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.338569876 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.350772695 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.33449848 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.336258901 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.927635286 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.759125612 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.334060167 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.335607022 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.930408481 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.335539724 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.337515264 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.338738787 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.606169269 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.338500079 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.338100998 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.335341192 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.334039766 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.335184996 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.367100437 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.358625367 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.930307906 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.335559761 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.335071542 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.381940877 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.338397677 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.340661859 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.33592775 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.338771718 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.76137372 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.55316102 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.337462432 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.760807927 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.972207141 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.341498384 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056105122 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.340237459 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.362977533 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.449499329 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.338378338 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.336566613 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.927817722 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.340302682 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.337389063 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.740352911 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.338435352 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.662768324 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.357084465 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.338628806 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.949672078 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.351884195 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.379213157 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.337297448 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.356982851 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.336709776 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.33905311 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.650110462 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.401542384 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.337425768 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.338401127 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.338977098 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.337924795 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.340571031 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.348328707 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.040931194 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.347075625 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.336653885 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.339329984 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.350276745 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.339702215 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.339997968 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.339230505 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.61857417 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.338943651 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.368150472 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.34240085 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.33971169 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.360528217 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.53865165 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.339836632 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.696560428 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.340564395 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.354058779 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.342830834 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.340004489 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.367622167 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.339635203 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.347479908 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.295711643 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.710916822 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.375723774 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.340645917 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.340491251 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.340831511 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.340453681 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.342010617 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.372730606 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.345007687 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.167268151 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.366126703 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.370681735 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.339884391 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.346011358 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.341928718 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.346492678 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.344025553 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.654227501 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.654920144 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.520006492 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.344984874 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.342539705 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.181611733 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.38633559 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527247255 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.364418629 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.342912496 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.645458465 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.547328081 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.344840319 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.343604171 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.343639555 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.623874389 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.343863938 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.688874323 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.997941966 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.348287805 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.344049647 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.16182049 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.1132962 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.34804641 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.3441767 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.663480872 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.362680012 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.344308481 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.343323995 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.344048378 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.343385275 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.347411661 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.348615218 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.344068589 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.344453308 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.416260399 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.542618654 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.363267232 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.346296524 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.933003844 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.356347323 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.344568012 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.374243697 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.3463267 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.344013215 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.371104638 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.34592609 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.371922655 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.347260104 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.351466989 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.008680942 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.344733598 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.348585932 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.544825052 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.127658239 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.350550014 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.344897427 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.345440981 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.381622821 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.966479019 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.411335162 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.706181221 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.354298975 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.388868277 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.345986543 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.353372237 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.967570008 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.349338293 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.344089201 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.122181846 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.350066411 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.120942522 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.344915934 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.347197519 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.051595024 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.35146634 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.348458001 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.346726776 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.34818849 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.651602116 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.350861683 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.373427981 seconds)
  done (took 501.544042691 seconds)
done (took 650.798932391 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.346557915 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.34582767 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.351811272 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.352559599 seconds)
  done (took 10.612217981 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.365499551 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.354372478 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.364363889 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.35238282 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.363070209 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.353448524 seconds)
  done (took 9.370865379 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.347026499 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.348667364 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.352278095 seconds)
  done (took 8.264398774 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.588206791 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.381883624 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.761956334 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.355945287 seconds)
  done (took 9.306667549 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.363732513 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.368760217 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.364918771 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.364931546 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.367166528 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.365325113 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.365576944 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.364528476 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.366255512 seconds)
  done (took 13.505899721 seconds)
done (took 52.276177336 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.414285656 seconds)
    (2/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.383535337 seconds)
    (3/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.651484862 seconds)
    (4/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.437636825 seconds)
    (5/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.350904799 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.443844299 seconds)
    (7/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.357833797 seconds)
    (8/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.513492473 seconds)
    (9/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.518727084 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.389602463 seconds)
    (11/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.584921437 seconds)
    (12/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.334272213 seconds)
    (13/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.478686007 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.51963695 seconds)
    (15/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.417425881 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.513342947 seconds)
    (17/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.639518071 seconds)
    (18/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.329166225 seconds)
    (19/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.492772354 seconds)
    (20/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.489894626 seconds)
    (21/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.330135136 seconds)
    (22/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.493573258 seconds)
    (23/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.333679728 seconds)
    (24/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.338047784 seconds)
    (25/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.330812715 seconds)
    (26/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.385387154 seconds)
    (27/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.924407303 seconds)
    (28/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.370878628 seconds)
    (29/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.405321377 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.438522168 seconds)
    (31/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.625189327 seconds)
    (32/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.641199487 seconds)
    (33/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.480448986 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.623542098 seconds)
    (35/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.653626647 seconds)
    (36/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.970288897 seconds)
    (37/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.742916505 seconds)
    (38/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.386199866 seconds)
    (39/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.521641449 seconds)
    (40/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.907399373 seconds)
    (41/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.33538817 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.434076669 seconds)
    (43/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.148824345 seconds)
    (44/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.535433691 seconds)
    (45/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.463075977 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.356863555 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.441993746 seconds)
    (48/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.694123468 seconds)
    (49/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.384253573 seconds)
    (50/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.788757308 seconds)
    (51/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.337346425 seconds)
    (52/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.333649883 seconds)
    (53/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.469996728 seconds)
    (54/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.332229542 seconds)
    (55/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.653325012 seconds)
    (56/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.495840524 seconds)
    (57/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.795443659 seconds)
    (58/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.493473957 seconds)
    (59/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.742835834 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.459453828 seconds)
    (61/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.333140821 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.525590474 seconds)
    (63/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.389471716 seconds)
    (64/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.331493977 seconds)
    (65/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.341070831 seconds)
    (66/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.694569266 seconds)
    (67/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.337247514 seconds)
    (68/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.745152017 seconds)
    (69/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.677588739 seconds)
    (70/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.630486537 seconds)
    (71/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.576749204 seconds)
    (72/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.795608325 seconds)
    (73/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.39675224 seconds)
    (74/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.56191173 seconds)
    (75/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.443109964 seconds)
    (76/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.335839986 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.44328785 seconds)
    (78/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.870682012 seconds)
    (79/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.422775096 seconds)
    (80/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.33793316 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.481845635 seconds)
    (82/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.335032057 seconds)
    (83/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.341620945 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.450370685 seconds)
    (85/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.359828158 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.620447292 seconds)
    (87/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.334895282 seconds)
    (88/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.335717296 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.478838172 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.439206127 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.355548602 seconds)
    (92/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.685148242 seconds)
    (93/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.339726764 seconds)
    (94/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.711246455 seconds)
    (95/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.784445188 seconds)
    (96/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.8694256 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.524684802 seconds)
    (98/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.466604569 seconds)
    (99/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.973570412 seconds)
    (100/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.451842731 seconds)
    (101/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.162391892 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.481084047 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.490701516 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.391428808 seconds)
    (105/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.430417412 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.461234003 seconds)
    (107/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.337340657 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.392463428 seconds)
    (109/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.402739166 seconds)
    (110/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.506121678 seconds)
    (111/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.510829219 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.465457237 seconds)
    (113/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.44334359 seconds)
    (114/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.438574678 seconds)
    (115/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.444455929 seconds)
    (116/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.57623237 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.455827219 seconds)
    (118/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.347722773 seconds)
    (119/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.365304417 seconds)
    (120/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.33795916 seconds)
    (121/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.394556406 seconds)
    (122/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.358652903 seconds)
    (123/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.5108927 seconds)
    (124/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.360587139 seconds)
    (125/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.765407951 seconds)
    (126/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.465053448 seconds)
    (127/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.446443361 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.87541556 seconds)
    (129/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.466612649 seconds)
    (130/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.398590801 seconds)
    (131/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.484569449 seconds)
    (132/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.479188528 seconds)
    (133/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.435141372 seconds)
    (134/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.741236037 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.370597452 seconds)
    (136/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.679570824 seconds)
    (137/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.683395173 seconds)
    (138/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.449797116 seconds)
    (139/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.584586271 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.459803046 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.493878047 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.448180402 seconds)
    (143/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.342497071 seconds)
    (144/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.343139142 seconds)
    (145/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.402649559 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.485560571 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.515706214 seconds)
    (148/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.501556705 seconds)
    (149/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.338242904 seconds)
    (150/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.345988049 seconds)
    (151/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.433256005 seconds)
    (152/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.391775384 seconds)
    (153/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.437407451 seconds)
    (154/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.399450429 seconds)
    (155/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.338440403 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.463266902 seconds)
    (157/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.984313574 seconds)
    (158/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.45134041 seconds)
    (159/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.397656041 seconds)
    (160/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.650142661 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.489633383 seconds)
    (162/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.390502448 seconds)
    (163/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.580434033 seconds)
    (164/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.992442475 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.434335427 seconds)
    (166/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.51385894 seconds)
    (167/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.394430777 seconds)
    (168/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.436299428 seconds)
    (169/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.339948841 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.417776693 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.634070183 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.477949341 seconds)
    (173/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.580248439 seconds)
    (174/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.641338462 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.472939037 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.362640036 seconds)
    (177/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.661569096 seconds)
    (178/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.397643661 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.527799019 seconds)
    (180/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.408508932 seconds)
    (181/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.339841366 seconds)
    (182/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.452464454 seconds)
    (183/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.914423379 seconds)
    (184/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.544821885 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.566341505 seconds)
    (186/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.341262631 seconds)
    (187/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.451683126 seconds)
    (188/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.538593866 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.47637955 seconds)
    (190/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.762741382 seconds)
    (191/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.346062689 seconds)
    (192/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.587073472 seconds)
  done (took 338.113936126 seconds)
done (took 339.332658547 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392918817 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.457369564 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.372319646 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.37201224 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372754305 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.374435231 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.399033362 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.3726321 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.386623159 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.387047345 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.373277975 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.385695843 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.387390718 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.382416438 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.405787463 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.373101211 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.373631357 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.383432184 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.388966097 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.389881534 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37420229 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376867294 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.400455422 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.372379383 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381304208 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381513935 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.379651145 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.364048554 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.383911943 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.387663738 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.365571991 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.38613002 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.390723541 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.386363677 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376170313 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.384830025 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375769697 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.46136154 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.394901309 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.384281923 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.383433306 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.391864644 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.378829107 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.378302393 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.385512113 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.401457147 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384195763 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.389156375 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.364905438 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.376262896 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.400348171 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.387423366 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.383841933 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.369749927 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.376892043 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.396736157 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.38538768 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396629538 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.383397088 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376793386 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.410686757 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.395247025 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.387759206 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384265785 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.384564069 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.391879929 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.385751919 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.392638281 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.382977302 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379866086 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377512019 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.383157487 seconds)
done (took 109.019517067 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.500282576 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.376210831 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.533151688 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.382805561 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.547471395 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.501392919 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.384689385 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.383223491 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.382584056 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.175936085 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.384774661 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.383796773 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.376437817 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.384569382 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.50037136 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.38522154 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.384504118 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.076690257 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.385183375 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.511601967 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.37765974 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.384251113 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.385938598 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.178780464 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.374425722 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.373374326 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.514752454 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.385181471 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.080124118 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.372425077 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.375055948 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.077829348 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.512454915 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.402333393 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.395860979 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.393879464 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.54905367 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.388269985 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.502770693 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.502247351 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.535742097 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.422824694 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.371686631 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.379630558 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.388198602 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.388333431 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.386878606 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.41518734 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.37721107 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.38740956 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.079083833 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.396632708 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.388456951 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.388176909 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.387111822 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.416684717 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.387728107 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.388157007 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.514600781 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.388383129 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.502028441 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.181726821 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.181607651 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.387860228 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.377799837 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.387675655 seconds)
  done (took 111.5103034 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.449521697 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.457074416 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.501316998 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.382546784 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.430107627 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.503086354 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.382424095 seconds)
  done (took 11.342396379 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.386737475 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.388604263 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.427947539 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.426879019 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.389253422 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.55360119 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.389669488 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.391838504 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.389499016 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.431212474 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.389972715 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.389868158 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.399051959 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.37973018 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.427732017 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.392051407 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.498594842 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.384969 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.390281467 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.533314585 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.389145139 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.400587159 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.43167384 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.392938997 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.390282186 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.393711446 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.140122697 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.391404733 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.38995645 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.389949899 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.393216511 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.448525103 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.392206516 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.383007588 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.39092866 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.497002155 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.39146308 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.390508154 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.392532073 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.384487266 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.392063243 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.39114091 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.392199553 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.391281828 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.390682459 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.407274532 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.393040536 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.391581834 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.392438866 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.392522627 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.43228905 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.392743186 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.391689598 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.392809299 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.438757816 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.401706776 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.392013364 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.391261097 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.392603341 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.394226016 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.537534789 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.431657344 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.393359739 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.431676466 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395587745 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.393168085 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.39505368 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.394150353 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.476429565 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.394516678 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.432965312 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.395988631 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.565125996 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.409958454 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.396971012 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.389565402 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.387571497 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393939089 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.381229555 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.391247723 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.393708356 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.387385382 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.392093341 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.394124089 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.394301724 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.544650516 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.495836054 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.393291638 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.402563665 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.392880218 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.394627088 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.43663387 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.39563626 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.395117683 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.437291044 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.504735486 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.43730707 seconds)
  done (took 142.91199271 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.399297546 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.404781855 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.39857752 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.422288209 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.394107219 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.388021959 seconds)
  done (took 9.652235829 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.390741028 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.403114231 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.396695161 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.399875912 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.39909909 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.40005608 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.405191955 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.392752218 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.402514487 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.402273153 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.399118387 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.40416167 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.40918139 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.404329616 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.400157649 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.398482179 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.398692015 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.397786678 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.39889782 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.400008024 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.38831436 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.398116844 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.400879485 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.393822424 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.402656383 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.404004548 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.41638509 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.398254134 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.398484905 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.39480848 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.40185693 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.40365068 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.397541434 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.398788605 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.402804648 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.392691764 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404548663 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.402761356 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.403401676 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.403331328 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.405493635 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.405362137 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.402129853 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.401979718 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.399055728 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.397833295 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.404253545 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.419750611 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.400832327 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.404719214 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.407381355 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.402460094 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.40202295 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.406097325 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.400088155 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398124712 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.410724803 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.406217141 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.403095339 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.39131611 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.403081364 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.401350558 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.394152945 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.407042676 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.402343273 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.40636459 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.397360062 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.403672107 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398980793 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.401277832 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.402970134 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.401470469 seconds)
  done (took 103.147037693 seconds)
done (took 379.798317348 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.838347797 seconds)
  done (took 4.086148634 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.608922562 seconds)
  done (took 3.856057139 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.188484088 seconds)
  done (took 26.449669571 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.41618539 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.389922985 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.395002822 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.385791397 seconds)
  done (took 10.835148955 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.983722901 seconds)
  done (took 4.232050891 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.402811269 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.397016927 seconds)
  done (took 6.04998584 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.669304244 seconds)
  done (took 3.919059052 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.319559367 seconds)
  done (took 4.579921826 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.410585903 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.400269569 seconds)
  done (took 6.070361464 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.365161077 seconds)
  done (took 3.614333236 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.4689458 seconds)
  done (took 21.719197432 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.404065616 seconds)
  done (took 3.65539091 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.433292563 seconds)
  done (took 3.680666158 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.552307054 seconds)
  done (took 6.801258993 seconds)
done (took 110.796497844 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.386590646 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.394942154 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.389000035 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.393573941 seconds)
  done (took 10.813026341 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.46618469 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.466772078 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.476870412 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.458364827 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.460168511 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.467292925 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.426675921 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.427448816 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.454933007 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.454607698 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.469624319 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.462969601 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.471133214 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.427278022 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.452944058 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.46905921 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.459583643 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.472825891 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.427439873 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.45970176 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.402894281 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.461064748 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.455214299 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.402786432 seconds)
  done (took 36.106513161 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.911693027 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.463056054 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.544339315 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.446213375 seconds)
  done (took 7.61452028 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.509890169 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.50897209 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.529201061 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.567435918 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.610655304 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.523673957 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.434811781 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.428831635 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.416862612 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.51703089 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.590553044 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.514579482 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.72522088 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.410145571 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.725076561 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.407222406 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.407597368 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.517630307 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.563241254 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.593999203 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.411816547 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.516802418 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.521377468 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.516167732 seconds)
  done (took 37.717077973 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.421473361 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.429864012 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.413545277 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.42557459 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.411488211 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.414168613 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.41581785 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.418575028 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.414967436 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.40865488 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.414819057 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.429847227 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.415414035 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.416206598 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.423225183 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.416338517 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.416468099 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.423173567 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.421190219 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.417324243 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.414329294 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.422223366 seconds)
  done (took 32.462168585 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.399033423 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.399060396 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.752961388 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.656312358 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.399674727 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.39678623 seconds)
  done (took 14.260103711 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.487458934 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.637741625 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.403625901 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.824669945 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.907043487 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.403740669 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.407620238 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.680469114 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.041837851 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.067515332 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.470744469 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.482669612 seconds)
  done (took 21.07632391 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493326283 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411673005 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.412289306 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482088591 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407663834 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408689474 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.465807467 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.927625501 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.411678842 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688014314 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41852926 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499224573 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.659778036 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419793324 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414823864 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.383332745 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64398103 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993667544 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417954097 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413549525 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447542447 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412129958 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409014321 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.664428566 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415602569 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409675548 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.676598877 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41195602 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.745338017 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718798217 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722799203 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420057883 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689232087 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907159434 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52163323 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657758417 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409293218 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.431958881 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.406388572 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.430829814 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435600115 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.43655016 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716012903 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418089091 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414958494 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415743799 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93622178 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.420731736 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.413157278 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416967908 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721752091 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501749776 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.419643255 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415688472 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420633678 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4187938 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.420838614 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537337143 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060635354 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413111994 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423503519 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.412089541 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420819432 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430700309 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136645964 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.425335923 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.421242004 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420500096 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414342407 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.41497517 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442571693 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413732766 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.43447769 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415580271 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379522642 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420085022 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422885431 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055838171 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431942027 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.414964803 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645001488 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412603959 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418959623 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.417236684 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.418097181 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.311374502 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429503252 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.386320367 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454975022 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.939977263 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665728441 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437783215 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447337362 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.642843905 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.387341706 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41912077 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.42212125 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423806764 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437244806 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.940240539 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416826911 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.422594624 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67018542 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.630424055 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422053462 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.386423632 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97961216 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426313321 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.443533531 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.424728117 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.664641465 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.11142554 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.734404297 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423798035 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459762726 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418630787 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393321718 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436147266 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.421975986 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.418325049 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733993658 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.386850575 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423504166 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493643428 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431144825 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420352102 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423189478 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419337957 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422150986 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.643599118 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429073337 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.725464979 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.42541404 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421496457 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.418609577 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42033298 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.426462216 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.645668835 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428372652 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692309578 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419945305 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421813679 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419146546 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.639250218 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.419958825 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.453457445 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.759382814 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426065752 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.425258067 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.725589635 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459753373 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534485966 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455463547 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.424936844 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.669371493 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.425174902 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.430746687 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426339296 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.427566712 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423489724 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.432940953 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421117302 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143374165 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41561367 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.426807741 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.421828885 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.436546319 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496036381 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.431832 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.670845216 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.427521522 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446394976 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.429516391 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.431143118 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648983608 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.729166933 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.428094921 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596594497 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.947738116 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.128347504 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441939961 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.420405842 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.423922905 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.423707617 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425231388 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423406396 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4242044 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.672104545 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.739584546 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.425272435 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.124552387 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430247625 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.425268584 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.431017042 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730100212 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.439358544 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425102597 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.42969274 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423181356 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438910565 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.729795485 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65085146 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.441894841 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424949385 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.947455924 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.431414131 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.429769828 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.427027765 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455491475 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422054441 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079604628 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.768153225 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421449022 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753485373 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432469648 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.448366305 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.422551873 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428583681 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440449458 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.429484016 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438146191 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.674859387 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.436629988 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428359353 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065140368 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39680873 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066485244 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432187844 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.427401193 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.429870167 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.98884674 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430755073 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430003317 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70681497 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982519305 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428489808 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95123679 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.433847966 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31571246 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.732462022 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661314986 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428655311 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.427526605 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.73773654 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646819546 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456325918 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.445499239 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43300939 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.396565052 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040344554 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436000499 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610322877 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952611856 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429693464 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.430324346 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.484998862 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.445098886 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906536528 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433102978 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430298566 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.43643952 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.43327967 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033361194 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.43431183 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431465876 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169148114 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.451363147 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.996341193 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433121542 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.681117757 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.744369329 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.716926981 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.435250464 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.432559577 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.675262495 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.741441407 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436828776 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.434163418 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081441133 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.298461255 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.441348356 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434109919 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39088437 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439076392 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.771055181 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.453086738 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.44758263 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443891972 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.436314921 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433605037 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.434972931 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.445034441 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422232548 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012120158 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.426909396 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445609853 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451598335 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436752721 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.683300004 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.451917895 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.142920078 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664612046 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445780426 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467034385 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.44378103 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435969208 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.404837186 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.438885597 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434898509 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50599082 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.655925573 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.441899165 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.405670419 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.470524777 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647322703 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.436639789 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.43664905 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691563524 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.438757759 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.450895806 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422436296 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470095337 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.437972022 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43787461 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.440111605 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465730664 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511721263 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.687070553 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.749874646 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.74896303 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916911855 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43959813 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442510677 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.452724651 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516965079 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442677057 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.453309085 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.440392132 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147273873 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413641957 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154579454 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.748989821 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.441726634 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447776096 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436829397 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682964266 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438108771 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713846443 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438015849 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.428324998 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45818815 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444982434 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450687161 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654355941 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715872861 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438477371 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454946939 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440602831 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.44008459 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.753927741 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.653973642 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025608376 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092179479 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443058427 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.451835558 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.976917402 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713493327 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440426979 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440031006 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440422081 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.462273073 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.441783343 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.473508404 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45027112 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665500485 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.751564709 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952246404 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.750021779 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.468510376 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.316106051 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447745472 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.685801736 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283934506 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.690355184 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153048673 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.287613201 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697624285 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514720122 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.693637129 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.446118173 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679100151 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.439204826 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.443751253 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441150945 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442467396 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.44078951 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.751560443 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160059428 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696823331 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.449135233 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.44937037 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471124603 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.695773035 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.668549187 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.346084747 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.666832691 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.759444965 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.452254628 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.44295461 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164443125 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.755684061 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448439567 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.445313245 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.703948892 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.446216235 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4783606 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.319914005 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.443719179 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0951493 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.659827556 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464994445 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45844593 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.289783081 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162519878 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.451969457 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034887961 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450794948 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463517576 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.72400329 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.452320553 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.446396629 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735780658 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.452448716 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.447544607 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720489665 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.157977856 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.310526226 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.456083075 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455316657 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.444396955 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448429911 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520454573 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446283126 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454491812 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.909432312 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.448322964 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447984874 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458292511 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.462731502 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464918293 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.445615403 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447368294 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.451188344 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.429043265 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.418037643 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.462368506 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.579371027 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110954502 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449806166 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.086259924 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.785398234 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.693918175 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458588372 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.418413344 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.455401914 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449216137 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448280489 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446720467 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.448146636 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097774303 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.461766432 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.763477086 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.458573002 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.662010157 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661161334 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.450759006 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.700508894 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463600772 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47224934 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.417130509 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448650152 seconds)
  done (took 1013.525951211 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.477382335 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.49210284 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.489305956 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.480094501 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.492505058 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.453317855 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.496058492 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.563246135 seconds)
  done (took 21.234444466 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.44409846 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.450949308 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.456836914 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.452040202 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.448516905 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.973379926 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.447305188 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.449333289 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.46263347 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.457075692 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.443722751 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.130592664 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.450471164 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.453893227 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.442304308 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.452668214 seconds)
  done (took 33.717391055 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.63015973 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.637678604 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.987556893 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.519198167 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.460349158 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.437221358 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.829990346 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.45651773 seconds)
  done (took 28.253762774 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.457300188 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.454042828 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.45594577 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.45673797 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.459552327 seconds)
  done (took 8.574446165 seconds)
done (took 1266.60408138 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.458776521 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.459889323 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.456758966 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.458968418 seconds)
  done (took 7.125305756 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.421025639 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.423585828 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.423435028 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.437461084 seconds)
  done (took 9.998209237 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.849362431 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.088575852 seconds)
  done (took 5.231944844 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.452080372 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.216330046 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.204250299 seconds)
  done (took 8.167953417 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.75161368 seconds)
  done (took 3.046004244 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.897430649 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.95880501 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.444089355 seconds)
  done (took 7.597164789 seconds)
done (took 42.458456317 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.457720362 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.207025193 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.609710182 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.45357065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.614091292 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.612568479 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.692775869 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.445087896 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.449056648 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.456485177 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.452437884 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.64061509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.681558326 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.213062498 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.681035443 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.21279704 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.618373115 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.446783708 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.441010052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.443610201 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.687943727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.449959928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.44843758 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.442625401 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.616897557 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.604040301 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.457808446 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.206194458 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.462747319 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.450105809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.59926234 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.446655913 seconds)
  done (took 84.995896944 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.462600977 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.449868523 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.443438 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.457376406 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.466320744 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.442239898 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.45679962 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.440615663 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.45941989 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.445685131 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.441617355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.473620577 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.444581825 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.439610073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.461022767 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.443022916 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.474918999 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.445113188 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.458174312 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.441617043 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.442326769 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.440579593 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.45369618 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.441705137 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.445980168 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.463382329 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.453311837 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.441983233 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.443143418 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.462704457 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.448239502 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.447170873 seconds)
  done (took 79.727820656 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.450611828 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.44350261 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.442956376 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.464499993 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.443751978 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.44378226 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.461205476 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.445405834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.445323298 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.4448304 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.454178194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.44477544 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.444681468 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.444646592 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.450634605 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.443666849 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.443440169 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.453104973 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.456610932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.445335922 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.448464487 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.448883698 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.443713168 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.451642856 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.445745777 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.447937641 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.46343353 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.455687809 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.441609516 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.453920401 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.443940366 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.462261588 seconds)
  done (took 79.675264644 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.693625344 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.46764216 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.468810556 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.458647267 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.468414474 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.466306607 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.460571114 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.698812767 seconds)
  done (took 15.484394479 seconds)
done (took 261.181150873 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.456651664 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.475222091 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.488263516 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.460495967 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.471031419 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.487544243 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.700046382 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.486624559 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.689438239 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.467748107 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.471352189 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.470537947 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.397640664 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.606047752 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.454123712 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.481021075 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.457968184 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.466900406 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.46011842 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.727363912 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.483729563 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.454284515 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.457034952 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.458682036 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.427952631 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.533071975 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.530122143 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.623996769 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.595523314 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.535752629 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.455481808 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.458799142 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.479490989 seconds)
  done (took 68.97053286 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.45921158 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.470635181 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.47085689 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.470398358 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.470901341 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.468629596 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.459580177 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.46704266 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.470203184 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.470374662 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.470726461 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.470966787 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.471904563 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.469636727 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.470265791 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.441182516 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.458953009 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.470179822 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.460694086 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.444649823 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.468447896 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.469852414 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.470153903 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.472127671 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.468970948 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.470329935 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.468199337 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.473120059 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.469176524 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.472350226 seconds)
  done (took 45.317168709 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.472504085 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.457291261 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.450686261 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.465784319 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.463452187 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.468718912 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.825781522 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.475416562 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.467489324 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.469097171 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.46774043 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.475103661 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.520849808 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.459813488 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.466420336 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.473105137 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.473312345 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.463846753 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.461412308 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.482341329 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.830952842 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.473441725 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.819516122 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.482337697 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.469564855 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.463855758 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.469081556 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.45951208 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.469043779 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.469049729 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.406275764 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.805693632 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.473701315 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.478884595 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.408437275 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.476294798 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.473265971 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.48092383 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.468111362 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.465500616 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.812535913 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.466347709 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.457527132 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.459465727 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.467701744 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.475251289 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.458643486 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.474082697 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.754458629 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.472835338 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.460246124 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.488869582 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.478108065 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.468409684 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.750668449 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.470541937 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.4665764 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.457491643 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.47320805 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.81396938 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.479118538 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.467725997 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.459311246 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.470051031 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.460064003 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.470147656 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.481573184 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.470654271 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.460018164 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.471976669 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.459141774 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.47160935 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.477082151 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.4694152 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.460986282 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.462131773 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.471321317 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.464880295 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.462400756 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.810154055 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.471533979 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.461211314 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.828374679 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.474213892 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.479230708 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.480357136 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.479728322 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.5920128 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.807928479 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.441757342 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.483916643 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.465127791 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.838769707 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.47894263 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.472209615 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.461968717 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.480679691 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.478244845 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.462694909 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.465196704 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.469975692 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.485183169 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.466834651 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.474840605 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.821217464 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.478436202 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.464860251 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.474858978 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.549754799 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.479815666 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.483141282 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.47734738 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.829044471 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.476372882 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.480307105 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.465921137 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.46710959 seconds)
  done (took 216.190049765 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.469507177 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.484417927 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.465242209 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.484260489 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.46275029 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.474161747 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.469272449 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.464512645 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.470382846 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.46603727 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.467454721 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.478203923 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.474724718 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.470199574 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.466509378 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.491940264 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.466238492 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.493517169 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.471656812 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.466153185 seconds)
  done (took 46.769705294 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.482157963 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.154443238 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.101195448 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.485154972 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.485449885 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.473967292 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.54335705 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.48675484 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.482655778 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.842247081 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.686492748 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.486745166 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.48392276 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.483719715 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.101095714 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.458229772 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.840395563 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.147541256 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.486634215 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.143034288 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.457412357 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.486385314 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.475681453 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.146771369 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.854374916 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.823656829 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.549916986 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.163044097 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.486640356 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.487400899 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.159825265 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.489574452 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.480180248 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.135808597 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.488530533 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.499224589 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.487423115 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.550470499 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.553660484 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.840859311 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.153455977 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.830085724 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.498845624 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.665251826 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.490065366 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.459235092 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.158359875 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.489457808 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.458760364 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.490862958 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.492659583 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.115102031 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.479504805 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.115661784 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.487930512 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.488883197 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.147933184 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.115271463 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.106665108 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.684170886 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.4794651 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.821492199 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.487892561 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.172043657 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.490281669 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.48707963 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.489457861 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.690350912 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.164311055 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.828529677 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.849774677 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.853182344 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.488956315 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.56247877 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.489792612 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.851866038 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.55914828 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.91938176 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.854192893 seconds)
  done (took 136.256578364 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.789190639 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.607379748 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.9395562 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.129081036 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.068977816 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.640877509 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.607197783 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.751127166 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.502742277 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.587366398 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.265294727 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.595493344 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.358372402 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.563392858 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.598472665 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.625463052 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.965828192 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.477195645 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.226915831 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.216540848 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.500719589 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.596588837 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.316268134 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.900314656 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.484154512 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.261111897 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.482531885 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.081798285 seconds)
  done (took 57.460180042 seconds)
done (took 572.26248669 seconds)
SAVING RESULT...
DONE!
