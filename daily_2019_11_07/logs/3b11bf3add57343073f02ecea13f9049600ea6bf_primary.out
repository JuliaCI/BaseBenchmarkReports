cset: moving following pidspec: 28304
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341958337 seconds)
loading group "string"... done (took 0.544958544 seconds)
loading group "linalg"... done (took 7.25622944 seconds)
loading group "parallel"... done (took 0.153207209 seconds)
loading group "find"... done (took 1.110600766 seconds)
loading group "tuple"... done (took 1.779714003 seconds)
loading group "dates"... done (took 1.223580477 seconds)
loading group "micro"... done (took 0.214275073 seconds)
loading group "io"... done (took 0.906960212 seconds)
loading group "scalar"... done (took 36.160842276 seconds)
loading group "sparse"... done (took 11.452710681 seconds)
loading group "broadcast"... done (took 0.894827905 seconds)
loading group "union"... done (took 11.688827986 seconds)
loading group "simd"... done (took 4.274123951 seconds)
loading group "random"... done (took 8.76202898 seconds)
loading group "problem"... done (took 1.847450403 seconds)
loading group "array"... done (took 20.235508361 seconds)
loading group "misc"... done (took 1.615612701 seconds)
loading group "sort"... done (took 3.239819861 seconds)
loading group "collection"... done (took 16.67191886 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.486018763 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122336928 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.1139122 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117985621 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144640846 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11387131 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121748927 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083563491 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.763346789 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153402441 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117381823 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412832233 seconds)
done (took 5.054041821 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.171074652 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082831085 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080707134 seconds)
  done (took 1.299562105 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064702903 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120914122 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066306281 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066394949 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065989288 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065240033 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065614082 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065851065 seconds)
  done (took 1.654206113 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072740063 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06754007 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068810657 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068510862 seconds)
  done (took 1.416086953 seconds)
done (took 5.75165839 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.76025386 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200085567 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182273229 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.394661789 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127882584 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.156429304 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.635034733 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.333657676 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182406578 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080889493 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103660563 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315459414 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106567555 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641488805 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073496306 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089811748 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135701321 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.439559039 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066815963 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08157039 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088213721 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12777963 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084561533 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074142061 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144847251 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068050413 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134452294 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079310336 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066564639 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.20623256 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171439467 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65991119 seconds)
  done (took 10.188877735 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095873141 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097238378 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068436227 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13642494 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099134565 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071341223 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071483435 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067276744 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087368816 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127241329 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088265449 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101464197 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065135601 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068282937 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083939227 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202373332 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079585378 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080812492 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070114444 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07460974 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118516491 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078670076 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077970763 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076808897 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12768974 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180178186 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098832642 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099222258 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06885185 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081094201 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115000968 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127471419 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066931238 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067443704 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126360379 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095608063 seconds)
  done (took 4.615169029 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.299603985 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139198019 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090270413 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131538378 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064507006 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105996986 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064839755 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080011127 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199229663 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.300425426 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.572272322 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110601099 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103172792 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067505759 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067873825 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066681172 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.318034389 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107129306 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103340618 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080069381 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069539649 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067959242 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.339971078 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067044502 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063079987 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067423836 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05739334 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122429638 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067326075 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.919473715 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.128971304 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069060673 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101133233 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168215609 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090231126 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139177811 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.197845266 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066012408 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150264957 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070259324 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066440998 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08314374 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103237059 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112875982 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065625702 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06651236 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159842544 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064338759 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07877762 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.973584855 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155110493 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09410785 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063962064 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.248367689 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085072334 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068969144 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064196288 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064391457 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.175585442 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13378609 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067436495 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065923732 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067349017 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069083933 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349102997 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065443609 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.723945519 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070071704 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077113891 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068914709 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069134214 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07305237 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071901822 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087423257 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065913337 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075060017 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065360759 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06542996 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066027766 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083376236 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.350570956 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066219811 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067981925 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089138523 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064006443 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085395792 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09624011 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065927517 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06461375 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099272188 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067300573 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.064995169 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.209420399 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068917424 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085567345 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068745827 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063914689 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112888011 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066210227 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.085624925 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067566186 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103776272 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069224657 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098161919 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081061935 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067707568 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.392814342 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063581877 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064658686 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064357099 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068373984 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065444793 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067037819 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065910579 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081668259 seconds)
  done (took 20.747760719 seconds)
done (took 37.988428036 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.234015767 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074889237 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074924967 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07487514 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074638023 seconds)
  done (took 1.763617938 seconds)
done (took 2.974893797 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119196555 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098047491 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064709793 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094917903 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063725627 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099157621 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098283552 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080508398 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098641684 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063457397 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095092179 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06393392 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063650304 seconds)
  done (took 2.334617112 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081727145 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08326303 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069395089 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081717701 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063111044 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081425772 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080491923 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087784651 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079931203 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071806173 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063302525 seconds)
  done (took 2.049642911 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080853481 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08319831 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069201303 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081110011 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066222922 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082318725 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082589157 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086999908 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08067834 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072784839 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06328968 seconds)
  done (took 2.048626936 seconds)
done (took 7.632902619 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077521986 seconds)
  done (took 1.269409292 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.588062364 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.096139532 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080753004 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112029036 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183007541 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118895858 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278197635 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086367762 seconds)
  done (took 8.918510198 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101967982 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069218256 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070783781 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072115324 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071174051 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071535248 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068582436 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071642078 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068054906 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069098769 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068480228 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068186828 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068979132 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069580066 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070837375 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07072615 seconds)
  done (took 2.418783001 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092003964 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.08974994 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073818786 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074392496 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071514024 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071707787 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074184818 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073034389 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.0703258 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071728554 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074097914 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073411941 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071383988 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065238714 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073895822 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075487322 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070457952 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073230842 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074577383 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074266602 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074521235 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064356721 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071194814 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07391778 seconds)
  done (took 3.073515736 seconds)
done (took 16.880010692 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113475233 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072312204 seconds)
  done (took 1.388574179 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.0817454 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08286413 seconds)
  done (took 1.372727247 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083788707 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065910141 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092071304 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078728795 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065853441 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065571219 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089215604 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066067568 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065449349 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065635631 seconds)
  done (took 1.948360747 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068685172 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079386702 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071450459 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080853496 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073932257 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064075141 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072366577 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067847253 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078225049 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062643292 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070917612 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082432852 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071368421 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084212657 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075288772 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070532294 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073220105 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06898792 seconds)
  done (took 2.526089133 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065965112 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066937469 seconds)
  done (took 1.345176551 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067248336 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063707897 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067066649 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066852402 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06479056 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064538098 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065328392 seconds)
  done (took 1.668356306 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.378835846 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109028044 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.295010928 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072190798 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083726678 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252856266 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06633032 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071583558 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071625102 seconds)
  done (took 2.657457782 seconds)
done (took 14.123239777 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078510076 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08478507 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094808431 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.358698097 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090759996 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065239833 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113377145 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190768603 seconds)
done (took 2.300399634 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211239527 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.611204707 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.386855259 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195932021 seconds)
  done (took 2.411139439 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326710256 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085641573 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058110346 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066110546 seconds)
  done (took 1.760203359 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066290298 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068285756 seconds)
  done (took 1.355282979 seconds)
done (took 6.961384414 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065823977 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065457295 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084454442 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063075751 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06526671 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065156933 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062876594 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062903862 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063308766 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065480795 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068495172 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063057915 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.065424752 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.065636819 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065385435 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062888451 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063070397 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065693552 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063031733 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063139643 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063141416 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065168565 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063014483 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062940263 seconds)
  done (took 2.820070912 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082498835 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067432992 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071563345 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071023678 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070948484 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072513383 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072491525 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06777568 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073413194 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069739079 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071834944 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071263964 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069836284 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071559112 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069713631 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071445163 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072644546 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067758645 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069453282 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071579917 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072553753 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066403544 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069649618 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070569002 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069377352 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071033189 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067237657 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065939984 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070644284 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069060159 seconds)
  done (took 3.349977315 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069860609 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06285296 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064165388 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070879539 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062745384 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064513205 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063093409 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063425537 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064010571 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062979716 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064367583 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062997439 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062809146 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064233271 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063618035 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066389519 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078402282 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063558601 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06307275 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06393631 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066319456 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064836886 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064792442 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064788896 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.178985697 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064806355 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065464566 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064831111 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06597456 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064445966 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068112637 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068371112 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064483663 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071383348 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06824612 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064670309 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067324883 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062394081 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063313578 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062491614 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062304325 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062779075 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062641279 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069620878 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063167428 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064657103 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063185495 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063684731 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063177115 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065301543 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062226138 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062547097 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065233923 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064397421 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066360071 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062549386 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063831986 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062561316 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063721575 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062532142 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062318848 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062512531 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065046378 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06365895 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076912246 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069424798 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062465789 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06420073 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063731211 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065025096 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064501478 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075662568 seconds)
  done (took 6.033644723 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089745849 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086507912 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064826165 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06470651 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061787158 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064556124 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066880224 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064161063 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065060631 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.06923851 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063637446 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064819255 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064866075 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076044429 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063984604 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065019279 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069017494 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061622049 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063628911 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06660534 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064129834 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066811817 seconds)
  done (took 2.730846442 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154299977 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069056366 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105050409 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072781191 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06729788 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072601471 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069712259 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069408725 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06948223 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067660478 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06731399 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069235456 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067511856 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06773722 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067776774 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06795048 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069533167 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067555281 seconds)
  done (took 2.601565557 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076506087 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065474021 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085176139 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066204021 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066146467 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06775771 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070081098 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073653272 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067417772 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065479647 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074257094 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067291734 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067624518 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06508785 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067540401 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065392001 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068026494 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066023229 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074666388 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072015671 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07197162 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075998719 seconds)
  done (took 2.779843254 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078672014 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067632166 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082924359 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06855774 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061967958 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06414514 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069640631 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065381325 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069520573 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06712249 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065761566 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063995583 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068802934 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065225805 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069058864 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065354641 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067261538 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065376609 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067013105 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061388981 seconds)
  done (took 2.596034614 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086162447 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067310371 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067379121 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075867647 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066942052 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067166849 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074906785 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06697171 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066801657 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086636314 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066751707 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067041844 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074900728 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071777271 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066950443 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074413266 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074833394 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074223688 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066898504 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066876383 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086636971 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068120193 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076602777 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069334334 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068755449 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068900756 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068423718 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073529772 seconds)
  done (took 3.25514245 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066118132 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066957115 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065623242 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064988561 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065048998 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064875496 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065072958 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065001963 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067438323 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065039221 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067104973 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067264961 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067028721 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066930321 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065900461 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06536606 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065730281 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063322925 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062949459 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062989426 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065704622 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064995864 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065420727 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063989828 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064677417 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065328032 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062870516 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062930667 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065798507 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063051479 seconds)
  done (took 3.201241813 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075249687 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07352229 seconds)
  done (took 1.396239065 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062587894 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079451158 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063258206 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069464158 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06989677 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066037926 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073243439 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069251641 seconds)
  done (took 1.797123776 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080899554 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076769314 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067422372 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080694572 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076382928 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082262816 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131320938 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066825348 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072309543 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064175369 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079096132 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064913014 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071638062 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066710368 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071446757 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071710193 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06387272 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072117133 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.0679441 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064381221 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067178319 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074164899 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067971199 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061466791 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06736725 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086963118 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076271821 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065705414 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068783051 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072963199 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071596311 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059990644 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065616529 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066411509 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063877438 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07565859 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080625478 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068833816 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074479313 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06698182 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077107086 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060908994 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070727933 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072168169 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075541199 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066270793 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066563089 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060733299 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063515437 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067780691 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060895196 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066031636 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060521181 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075251797 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069049325 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075807669 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064718062 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067648281 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068536411 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068672601 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07213924 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068396282 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069780836 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067587876 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076984945 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072236215 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076920191 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062442302 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061619511 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065492202 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076723344 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088684314 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072034627 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066649839 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066784112 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063703986 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068611276 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067377522 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071352681 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072015116 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066316124 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071441456 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07283155 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065872082 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067972067 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073930555 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06390528 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068781269 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.0633784 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081890852 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064479474 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063776268 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06392016 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076010915 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068964764 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065477117 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063671982 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072330226 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059904675 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066449206 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066265885 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065782775 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075221218 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069268677 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070391867 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075759671 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073965885 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065557779 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06747744 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06143212 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065266632 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063851647 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071736722 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059133354 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067685971 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065936204 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065156252 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199610472 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065490703 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.0668994 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074045332 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073158422 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065392844 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063703 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069287813 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066855627 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070304928 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073986771 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065751412 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061852692 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061175999 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070463009 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066537938 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070209044 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071494251 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069845203 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061403214 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064715279 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071787354 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075014323 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066778909 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068226828 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072649349 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068099773 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065953301 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072995378 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069417558 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066256351 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072071539 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06769163 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061470466 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069484634 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069461336 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065849309 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070215547 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06973062 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069072653 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067323674 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065389693 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074460865 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06794167 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065743843 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066074029 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064978796 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076914985 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069092274 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062334784 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063393405 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076053606 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064232044 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066786403 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065314441 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068927487 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067276436 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064484271 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065699966 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068189391 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075903858 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070063895 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067711988 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072098789 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077134987 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066640664 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068499859 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066935491 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069546275 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068699837 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076738408 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071580076 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070495938 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068167143 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063229845 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071328614 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073256857 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065243362 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064402491 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065203452 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070508879 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071671841 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070588877 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066371696 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063827842 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06675376 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069208226 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068265773 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065567469 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065276827 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072746761 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064139752 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073066482 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066925784 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075625299 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069188548 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061302145 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06871105 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063823195 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071416934 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060820183 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063971784 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065334401 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067288974 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064377195 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067604409 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059544446 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071330944 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071582536 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065006196 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063941016 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064604166 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071269966 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065897443 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06838335 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068017563 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070522646 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074840768 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064059485 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06789504 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07483272 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.193748932 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061326382 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072375055 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065192894 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065615451 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06482468 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064412628 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069424015 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075886802 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072778004 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060023919 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069073689 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064900622 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065515962 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061567374 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070233891 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069785526 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066991531 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073231603 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067334636 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067433138 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070086285 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066943072 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067496372 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068155853 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069511319 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068063993 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068388613 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06659929 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069483284 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065713601 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064427519 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068095716 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066568121 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066530743 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072301043 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066119227 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067279282 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06922686 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068237118 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067324405 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066934471 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066000563 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069133046 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067314136 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.0669039 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068988452 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061557396 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073275729 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066687305 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073731137 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067604046 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063494694 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074098844 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068573145 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072852534 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067306126 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066870891 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068068992 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065845305 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069373703 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073455821 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06496653 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076133449 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073570761 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066893894 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069279201 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066510316 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068034162 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064799753 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067641729 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067503774 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066656854 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066609124 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071095107 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068449537 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066182611 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068040021 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06665837 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066232036 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067040076 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060378601 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065087686 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065730653 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065845444 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075750022 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066632074 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065651322 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064707884 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066803235 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064795945 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062943322 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07427119 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075604609 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066422902 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073108542 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065289135 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067575996 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076899476 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060462656 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064638751 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063829713 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064126911 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073176221 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066851892 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074941243 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065336221 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065155201 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062635855 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065923614 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063866503 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059863533 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062454462 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068489401 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063994033 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063945706 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064580634 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.0667148 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06581072 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073840504 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064257024 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065708356 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064700774 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061723652 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.195268313 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065504621 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069882026 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06759797 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06440125 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063914609 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066443543 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067601902 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067846158 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.0664034 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067704303 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07574966 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066279927 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069697583 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07001368 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061829085 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06877063 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066889661 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066175594 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065671232 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070409222 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069506406 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068034792 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075471413 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066075296 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067340332 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066178654 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065230296 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066485378 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06609265 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066574004 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066078434 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068310809 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074226559 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.0645161 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069252989 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066444087 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066957322 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073184242 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06762329 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069463734 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073242221 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067000668 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068272717 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074248906 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070205519 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069705636 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067081095 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068006669 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072432624 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065720818 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072556846 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067281015 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067525856 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068251913 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064552675 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066051 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066460025 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065607264 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072054392 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067268714 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064891503 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065648038 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064131457 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067598236 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069679089 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074336116 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068105786 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069588423 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061060334 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063046578 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067298986 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064097395 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068512604 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068862316 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071594242 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067967419 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066387505 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064885942 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074787675 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071998199 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069639154 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064178028 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069964759 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066970119 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068636388 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067445742 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066423272 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067835465 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.06985719 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067848747 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065804882 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073159984 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069418673 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068200501 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068262713 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067234796 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06663503 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06196398 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06684084 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068337019 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071257729 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068881742 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066452837 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076651412 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063928033 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066729953 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069326315 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065135819 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070042094 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061025236 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066926091 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066460674 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066257639 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060992318 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064247172 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06313732 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067005078 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064126629 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059769716 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074406449 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073502664 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067884754 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063895345 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063620598 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.192248855 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062230961 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065992262 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068579097 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067872799 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076735797 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065751486 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064987777 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062059384 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067589918 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069927789 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070393268 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064066574 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062215081 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06589104 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069697729 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071846901 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064959855 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067023847 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070041174 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069349488 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064011449 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07027133 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063928517 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070752901 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079838088 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068084149 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067820592 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072839797 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074460118 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068438203 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062267417 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067429885 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069314118 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066722924 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067507234 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067814118 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08176435 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069653079 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065385395 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065553431 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069315167 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065713805 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074670191 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067528829 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067873044 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071031089 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068750122 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075664599 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069454212 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074024199 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07004515 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069295994 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065994148 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067744224 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065001586 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065739426 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068023385 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067464946 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071982497 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075134831 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066865461 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077359442 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075254446 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068004647 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063090009 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06543153 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065707651 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062917799 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067465278 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064528446 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06448152 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064458677 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06475076 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067330598 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07125993 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067059688 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066953692 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066299831 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060589866 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067784589 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068474905 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067574096 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062780951 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066017899 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06648341 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069735625 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069388336 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064246728 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067579697 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067930263 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066875583 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061214645 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072379023 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065082914 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067771446 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065153762 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065970733 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066494876 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0694718 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070738412 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067086744 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068005044 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069463906 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067935036 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063601623 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063328984 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070706687 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063412912 seconds)
  done (took 42.43245118 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099831426 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063117936 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061276169 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062096736 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073707126 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062709807 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061566804 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062554868 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062938574 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065004883 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061924145 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061612593 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070608273 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077503314 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07361942 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066362486 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061611663 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062778154 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061564387 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062730476 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070702407 seconds)
  done (took 2.744759081 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073390529 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070319174 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072674798 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075757818 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066707841 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072014403 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075040796 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072679731 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07799423 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068959515 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076546723 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070404937 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066780788 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066845496 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066922044 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070445879 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076058454 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066806309 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069961887 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072238739 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070365388 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072218453 seconds)
  done (took 2.887053392 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066680529 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065845038 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067534365 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061041526 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06611239 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.069281689 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069370367 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064336091 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069062446 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064890228 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064646142 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064233911 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067118675 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060915215 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065430962 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063741374 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107856847 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068371977 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065430463 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066119067 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061041089 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067420155 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061224218 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061947737 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06416877 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069346514 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065987311 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063966888 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065151173 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064495488 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065377826 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063479433 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066886869 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066050313 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064516083 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.0647047 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065140947 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065388434 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061213955 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063686512 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065891579 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061762495 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065614722 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06678995 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063436365 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063613292 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066631987 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06553407 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060959019 seconds)
  done (took 4.548262802 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079394593 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108544301 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067701201 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08775527 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079573849 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075488686 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069132926 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088516885 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06315719 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064571961 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081075708 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079182818 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065395846 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070230566 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068808286 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065023751 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06663776 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064202226 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069508192 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.0649199 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069444835 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071928103 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07978729 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078176402 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069360062 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064533807 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06486839 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06943067 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077907288 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069760215 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06953311 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070360327 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079763893 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070801245 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064683796 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067087724 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08110838 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06526109 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067918581 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062801176 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067292345 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069098288 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071250568 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081435202 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065512295 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070379029 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065127471 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062282249 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078072147 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067268335 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073009867 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079363977 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068655125 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065376048 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069468543 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080108381 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065048729 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063296469 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067989578 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077281168 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062830307 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068965395 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078516625 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066723552 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07196475 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07923212 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070137595 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068646012 seconds)
  done (took 6.323806076 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074006742 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072355828 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080534465 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081260898 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073954095 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074576486 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074064181 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073804661 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073466345 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078822028 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074548593 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.094896944 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067598927 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074544211 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071927497 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071644164 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072199875 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072036313 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071611895 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07180516 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071848899 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079746491 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072255525 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079494269 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097532552 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06689642 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071890478 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072009394 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080355991 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071751075 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078561473 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071900207 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071708841 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079665163 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078755172 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071756918 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06444311 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071446773 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072154103 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071381212 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067015498 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07970565 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071995303 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066879382 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071941644 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071728281 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079846545 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079051638 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074166936 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076275874 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071688993 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08013439 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071178985 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071759209 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079531294 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103819439 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079556862 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079377907 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071453384 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079338727 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079010435 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085664768 seconds)
  done (took 6.027914484 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082978774 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074293183 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075982522 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061349483 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064183646 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070629676 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065698082 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065820392 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075948565 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074456438 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076300399 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069644319 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07236373 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076270581 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069602112 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071949305 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069288728 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06948182 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073873563 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069016744 seconds)
  done (took 2.771546229 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073530654 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083167019 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066559951 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071159438 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068992984 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07172559 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06775164 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068750276 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06665246 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068378459 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075553373 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075443286 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066839059 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071249856 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075700336 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071014724 seconds)
  done (took 2.477518849 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074444701 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070788858 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079459892 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065623327 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063769393 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062107454 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065525296 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06109076 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06197116 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077201625 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065547557 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068019954 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065468599 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064184103 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062458818 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068280322 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062166507 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063253575 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065051176 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077784403 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075977075 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064267647 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06586549 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065411428 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066059718 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072498831 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066406135 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064939709 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064757789 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067671023 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067513041 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071127487 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064483923 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064951306 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065834831 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063448672 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065458066 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065847779 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068237134 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066209229 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064605232 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066422358 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066972487 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067898879 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06337064 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068065751 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063619554 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068882848 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064960047 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06736461 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065567917 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069168724 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067458011 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07393528 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06900017 seconds)
  done (took 5.024690345 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07788753 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068863203 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06168014 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064003716 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068783135 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067057493 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06908276 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06731117 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069138104 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065947076 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069309325 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070076959 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069252941 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070774095 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068986405 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070882919 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063450127 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069267464 seconds)
  done (took 2.579340642 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0703404 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065543747 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072028667 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065914296 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065564592 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067508959 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061688718 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064271471 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064508213 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065727059 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065974179 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067703934 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064219821 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067512852 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065324579 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065101056 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06728842 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063933741 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065145101 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061554701 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06743109 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064449295 seconds)
  done (took 2.789589341 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09203154 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080551812 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.136964297 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078098562 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08236984 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071323994 seconds)
  done (took 1.884165742 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089657802 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078800171 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065682193 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087208053 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073308491 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066964875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067160059 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067298725 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075941921 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07608019 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06701461 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076038431 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075599764 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075001596 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073191217 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072590142 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067074721 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067250896 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065818848 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083498677 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067857984 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075341416 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067114478 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066689856 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067072148 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074924176 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075210879 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075346008 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066735337 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075356315 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072436161 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066882704 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075373395 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075516368 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068772431 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075586044 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066801657 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083720375 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072395602 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075021583 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069050804 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073152247 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075689726 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071842719 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075668243 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067532629 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071750371 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066997939 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067448923 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086229359 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073167423 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074791825 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073137952 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075704565 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075391712 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085402086 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075342059 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074763341 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073372794 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077925594 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074831943 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072867729 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074834877 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075886875 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072990105 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074977493 seconds)
  done (took 6.190695307 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080272857 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08606507 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067348242 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076066591 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075009262 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067021187 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067151157 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067306645 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067154855 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066857515 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106394257 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0677588 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07545343 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075228379 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067330415 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066905151 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067507053 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075045468 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066882678 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085714251 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067353642 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075500947 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074916806 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075046982 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075920354 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073066711 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067144001 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067094267 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067059148 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066828398 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071936711 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067343494 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075568083 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066864006 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075382873 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067724971 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067159608 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071823556 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067313366 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072872599 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075421181 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083847478 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067460998 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066842443 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076044928 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066937547 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066957332 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066715999 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067330677 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066931976 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075840533 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075548197 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07575766 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074808446 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06727811 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06752036 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067248139 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067500502 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067454043 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072916109 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075556424 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067608193 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085436554 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067238531 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067607233 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075608467 seconds)
  done (took 6.103377694 seconds)
done (took 128.566128605 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181685913 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165357015 seconds)
  done (took 1.68436738 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067584455 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096219952 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076722902 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129070055 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066611378 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100474211 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098789217 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078014881 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065469281 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065533294 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06597957 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068048051 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130846963 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065788837 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065773472 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068799844 seconds)
  done (took 2.659895268 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096372085 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156586352 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099029399 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065140698 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096429103 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072648201 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06418709 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074707084 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070507668 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064590431 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072595021 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070202777 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064719356 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070178394 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070776288 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072704939 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064809546 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072284292 seconds)
  done (took 2.77196302 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100395086 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09121075 seconds)
  done (took 1.54721407 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155147786 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105085636 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142910933 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341144935 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167359217 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.227733519 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131421275 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126745903 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116516324 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123269343 seconds)
  done (took 2.990412515 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097165422 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151359695 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255503532 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114211085 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071849399 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09484512 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115690235 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077094902 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080202874 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08013031 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08007709 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075842669 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098077128 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073109271 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072639428 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075473082 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102274511 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071817596 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073600418 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076299664 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098891797 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065233442 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073295255 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071833002 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077256442 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077180034 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064946937 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064979186 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076138932 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073898396 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076141824 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093361784 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076838233 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10667466 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069754634 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107600483 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076020958 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073325512 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073971938 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07358854 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078285882 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078226246 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071655833 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075510366 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064796071 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075927725 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064813777 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065153359 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077593762 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066481148 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07769441 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07632606 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106722577 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066924996 seconds)
  done (took 5.931019428 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100816294 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10377889 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070738395 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110035888 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099566292 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071744341 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100580108 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092975066 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102207329 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069847238 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068133814 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069844307 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082391037 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082830006 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111560859 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106040172 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073393987 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071121328 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103303804 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102521884 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068047563 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094097153 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088856011 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101477744 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067120666 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070607362 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067927857 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070403372 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07690323 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078160362 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069953832 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080867438 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084997443 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078350165 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066863017 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067641716 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067874078 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079963352 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079254416 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078719324 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077364802 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067618501 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067452711 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068940286 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069798536 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067296078 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078848601 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08035619 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07848444 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069117009 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069919877 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067605072 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068862045 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080311837 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077821179 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080814084 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080135523 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067745815 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068185441 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071861671 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.0804581 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079057871 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079090686 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068960375 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078734222 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068044262 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079777053 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084259548 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06805248 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069618772 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06802613 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069680805 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069579936 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07813109 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078290766 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069488816 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06931213 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068337903 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080473493 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078985123 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068100391 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07753129 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067165046 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068032568 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069524476 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069632957 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077793921 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080664253 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069455614 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067840708 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069144186 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067810654 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066245594 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075757879 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079277866 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076907427 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076812709 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06823842 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07776851 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077230163 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068298224 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077618483 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06677776 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068269428 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.196520162 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079594347 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079017046 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079999645 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070152243 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068384317 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07852755 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080696161 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068640527 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079132623 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080913915 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079908136 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067955809 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081537393 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069279441 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079714929 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069510783 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080137505 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068534096 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080020876 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068965891 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068589531 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0687158 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08017321 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070502624 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068658152 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06953738 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069475659 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082064345 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082174966 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070172048 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081940397 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078677157 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070991238 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079565948 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068758272 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079842892 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069383196 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069827698 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067741275 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082217139 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068599662 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068267952 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069371171 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081334524 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06903371 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079888268 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077702043 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067684256 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082034898 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080479405 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078107402 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079701005 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070492242 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067851773 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067876618 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069641018 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.0781598 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080371827 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070348918 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068713483 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079104617 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079626761 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067433622 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078377806 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078255988 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079112202 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068310702 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069258679 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080703889 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08048689 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078559161 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077830553 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077910339 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068000069 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077321037 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077993742 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06786835 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084605503 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067688032 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083050911 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07867297 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077038409 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078488549 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080427766 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080467668 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.0804567 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082811839 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06807772 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068195787 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080542598 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068243067 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069753748 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078266417 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.0692077 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068572509 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082317943 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067634676 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078244412 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06664261 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077475576 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066591788 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0688582 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082415961 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066778724 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068382163 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.211382009 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07054076 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079384308 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081690102 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079521021 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068497792 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070985517 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080951659 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07994895 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068124245 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068579956 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071442575 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078676404 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079098881 seconds)
  done (took 18.612982536 seconds)
done (took 37.560177384 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207858063 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153613741 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.19727843 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118292565 seconds)
  done (took 2.131255041 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121077671 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100419691 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094711626 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064549804 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101869985 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064855924 seconds)
  done (took 1.941010028 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310750954 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210765826 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182102532 seconds)
  done (took 2.094194803 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198634686 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186909533 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.390737363 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252304047 seconds)
  done (took 2.527145325 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143063504 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088730196 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066608681 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082528301 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136236584 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165602657 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101900842 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125664127 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077638259 seconds)
  done (took 2.431808115 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14629144 seconds)
done (took 12.661979741 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092994335 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.195161237 seconds)
    (3/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07652219 seconds)
    (4/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.106441663 seconds)
    (5/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.232886198 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.120166934 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079233412 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08123009 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.163313952 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093971049 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077029966 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.10525934 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073026398 seconds)
    (14/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188337966 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.102493513 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.09005828 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070811955 seconds)
    (18/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.219708733 seconds)
    (19/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073930742 seconds)
    (20/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069553344 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.198946946 seconds)
    (22/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.224929724 seconds)
    (23/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.196775355 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088560802 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091201592 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.193490365 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102766917 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064738588 seconds)
    (29/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.201094431 seconds)
    (30/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.097207447 seconds)
    (31/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070857083 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.219002854 seconds)
    (33/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.194767817 seconds)
    (34/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066196795 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.148784455 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.086873036 seconds)
    (37/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.18404718 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071711609 seconds)
    (39/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.196459676 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071648811 seconds)
    (41/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089696915 seconds)
    (42/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.170574202 seconds)
    (43/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.184817577 seconds)
    (44/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.169727058 seconds)
    (45/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.116161239 seconds)
    (46/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108584577 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149239335 seconds)
    (48/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.146865574 seconds)
    (49/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.095353869 seconds)
    (50/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073009248 seconds)
    (51/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.140382418 seconds)
    (52/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070490195 seconds)
    (53/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108849723 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071947612 seconds)
    (55/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.142142236 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071981517 seconds)
    (57/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.150400828 seconds)
    (58/309) benchmarking ("sort", Float64, false)...
    done (took 0.125220095 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090367176 seconds)
    (60/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076946512 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072615116 seconds)
    (62/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066252669 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067431949 seconds)
    (64/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099871117 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065284235 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.139030661 seconds)
    (67/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.155860687 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088533966 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072882491 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091533213 seconds)
    (71/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.096651369 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05047633 seconds)
    (73/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.148425158 seconds)
    (74/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06382133 seconds)
    (75/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074924656 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050228599 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051443715 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.192122465 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.203400725 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050144485 seconds)
    (81/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073902857 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.278218871 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075016453 seconds)
    (84/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.334484169 seconds)
    (85/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075911075 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.066524081 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089602926 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051411505 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176011467 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051609878 seconds)
    (91/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081629067 seconds)
    (92/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088579204 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065702921 seconds)
    (94/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053654638 seconds)
    (95/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.062526098 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076917705 seconds)
    (97/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061073098 seconds)
    (98/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060685266 seconds)
    (99/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076433458 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113623966 seconds)
    (101/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069008273 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164062421 seconds)
    (103/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05166713 seconds)
    (104/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.110832828 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092067798 seconds)
    (106/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079972258 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.073823504 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09365119 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051166237 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051299937 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073437268 seconds)
    (112/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.073125525 seconds)
    (113/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.149829171 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093612399 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071869019 seconds)
    (116/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084008701 seconds)
    (117/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074070148 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087210872 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137858764 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07172149 seconds)
    (121/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075141914 seconds)
    (122/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071965206 seconds)
    (123/309) benchmarking ("sort", Int8, false)...
    done (took 0.139619055 seconds)
    (124/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075616407 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.133745338 seconds)
    (126/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052223273 seconds)
    (127/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.158651058 seconds)
    (128/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103139683 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064777598 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.132707111 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073010155 seconds)
    (132/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076646739 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071538645 seconds)
    (134/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061296493 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070029399 seconds)
    (136/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107745482 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070684057 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.171862554 seconds)
    (139/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.18425872 seconds)
    (140/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.164469612 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106280824 seconds)
    (142/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078745594 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072012969 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090701162 seconds)
    (145/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070560331 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051985555 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068062444 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06476292 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072054406 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050813261 seconds)
    (151/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078788862 seconds)
    (152/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.148882988 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051038189 seconds)
    (154/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051431161 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089375728 seconds)
    (156/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075076963 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088829614 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050926604 seconds)
    (159/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106382936 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072487213 seconds)
    (161/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06547051 seconds)
    (162/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071880606 seconds)
    (163/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050567258 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.0511204 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064776267 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065256092 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.156666527 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173697848 seconds)
    (169/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098106467 seconds)
    (170/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.158102121 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065079803 seconds)
    (172/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.18498959 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166270859 seconds)
    (174/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054297674 seconds)
    (175/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072169277 seconds)
    (176/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067650693 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066611417 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118223493 seconds)
    (179/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070166942 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133252771 seconds)
    (181/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054108592 seconds)
    (182/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.156706257 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.106100325 seconds)
    (184/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074289775 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071161812 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086557275 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064395409 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.107876507 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064156237 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065869062 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.228562197 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.10062193 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087356245 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051977018 seconds)
    (195/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.150178832 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053153557 seconds)
    (197/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07003852 seconds)
    (198/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051200397 seconds)
    (199/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065119371 seconds)
    (200/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053370678 seconds)
    (201/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067689007 seconds)
    (202/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052553546 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051322277 seconds)
    (204/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062277845 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063641074 seconds)
    (206/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079112112 seconds)
    (207/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072755716 seconds)
    (208/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07453046 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.091510425 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065265499 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051164583 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087975705 seconds)
    (213/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07291794 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065832265 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066239781 seconds)
    (216/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053016503 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074462219 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072516313 seconds)
    (219/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053567375 seconds)
    (220/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052517131 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065273747 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053163608 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120135781 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.138015222 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065871818 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.132209695 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095285615 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070656098 seconds)
    (229/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.147060172 seconds)
    (230/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068851585 seconds)
    (231/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065693836 seconds)
    (232/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051544302 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086251199 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063898496 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088877756 seconds)
    (236/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065694681 seconds)
    (237/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051271722 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066344327 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131532442 seconds)
    (240/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068252399 seconds)
    (241/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05162834 seconds)
    (242/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051710453 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08632729 seconds)
    (244/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072174034 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135935523 seconds)
    (246/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071677446 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108560515 seconds)
    (248/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07039863 seconds)
    (249/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077585181 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066290884 seconds)
    (251/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051473856 seconds)
    (252/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072643563 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.123698402 seconds)
    (254/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.059937507 seconds)
    (255/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077896548 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05348278 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053261129 seconds)
    (258/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06560399 seconds)
    (259/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050497006 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149180832 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087135624 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064915642 seconds)
    (263/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06535073 seconds)
    (264/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061859947 seconds)
    (265/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.05164785 seconds)
    (266/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052114754 seconds)
    (267/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051442227 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086036079 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071185096 seconds)
    (270/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052516359 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064724521 seconds)
    (272/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051351698 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064423062 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072530519 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052588272 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067790347 seconds)
    (277/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116172013 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064935181 seconds)
    (279/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062748473 seconds)
    (280/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063630736 seconds)
    (281/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06865992 seconds)
    (282/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051385822 seconds)
    (283/309) benchmarking ("sort", Float32, false)...
    done (took 0.126242187 seconds)
    (284/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072955453 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071361361 seconds)
    (286/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051111432 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07253634 seconds)
    (288/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066199118 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063438641 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06311331 seconds)
    (291/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050981889 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05198418 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071730415 seconds)
    (294/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070926537 seconds)
    (295/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066373464 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162653524 seconds)
    (297/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052026991 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070456062 seconds)
    (299/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063769721 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065933067 seconds)
    (301/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053184778 seconds)
    (302/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069892672 seconds)
    (303/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067212726 seconds)
    (304/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086401969 seconds)
    (305/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050905431 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066853094 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070054875 seconds)
    (308/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064387947 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.090095634 seconds)
  done (took 30.245361432 seconds)
done (took 31.648959696 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08543021 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093065771 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075309986 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092895696 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080833431 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076794034 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073007876 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078688864 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08006089 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081774224 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078661865 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055074687 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07404538 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074100984 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074367142 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091001009 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077988828 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072526877 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073341263 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06462807 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07280412 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066167776 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067297812 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054610319 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077669749 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072232495 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072491359 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074044622 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065402922 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065631922 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069030215 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072972972 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065376688 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077856722 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072245648 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073155914 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074878095 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076376198 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067592213 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06603416 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074635264 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066016249 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07280968 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073447517 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072389318 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071507126 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073036018 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078131858 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091733505 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068325429 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074181049 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07572349 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076495292 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072681477 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069733838 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072906793 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070541562 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091301996 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073725414 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068097498 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073857247 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073788911 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071037481 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073029039 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072937997 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075453082 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075086912 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071040733 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074829056 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07099615 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06521064 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072661001 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069140423 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06577449 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075426774 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076287964 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064359388 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071143309 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072536344 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071091369 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064619948 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067239418 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066912076 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071227033 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067399022 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054297956 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069228736 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071250887 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064347471 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072726095 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07113399 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071599308 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066803066 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075078952 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064634659 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070319561 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065452716 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065428609 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06686611 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068937821 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06519537 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067330442 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074268855 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066611878 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071109791 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07873485 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065596553 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071287464 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064190855 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06484997 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079240767 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075132796 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065375318 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06728424 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06418048 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071697275 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063950207 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064579411 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064383721 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064550207 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070157286 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064591981 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0659707 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07046244 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075728958 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063577412 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067167191 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065742869 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063707357 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069138203 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063860676 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063949629 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200343485 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062179348 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068191447 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066209383 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072714415 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067988383 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073861071 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066494671 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073108802 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070442636 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071102138 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071767074 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064515139 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059617314 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068585967 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068012347 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067688967 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065841 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06707859 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065766414 seconds)
done (took 12.434399882 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067080441 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143500106 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098836105 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095067366 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08621219 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066587321 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076016579 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102255915 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068184041 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102575282 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08826463 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084948591 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112459768 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06503824 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066217194 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069706634 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067479713 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081931605 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101128677 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086632 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116146123 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065316594 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094624376 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090634923 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087017688 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101430282 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066620398 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070443262 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069959869 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091041761 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086570079 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069953936 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066527411 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100587255 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092656538 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083285266 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066449422 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082341601 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.0667141 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066121308 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067604853 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097872967 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080064113 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080099336 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.0699974 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069027933 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067307886 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083301491 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089030753 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078593652 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086664727 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102885339 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068726421 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065664895 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06489692 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085087408 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065270203 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068435157 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066318329 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068224085 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066079864 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069078025 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080953041 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081819039 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069961828 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080134633 seconds)
  done (took 6.803103279 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083514212 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089491566 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082580478 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083396616 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065846122 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066659161 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066268107 seconds)
  done (took 2.036477312 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067397715 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088304072 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088864072 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088606256 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084346877 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08729453 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075813302 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066820771 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080460158 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06763033 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087259328 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102266477 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067135699 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072877321 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090655553 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066562041 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090524457 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066897686 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069420767 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090326739 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068692884 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08229534 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069703279 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066837336 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080800973 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066982704 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113199824 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070565657 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06819376 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069539505 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064445489 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10721662 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079989702 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075528426 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065925094 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080434331 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080489055 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064560016 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082159502 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070973629 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079267192 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066151524 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06726551 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064415975 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070558705 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07649569 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067474572 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066821423 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068802317 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086165527 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067775357 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08010444 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069593037 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068760419 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067522354 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070172847 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075702826 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066738988 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085180064 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06776099 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08312877 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082334851 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079771214 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081968233 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06849881 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079423003 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079490862 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068341604 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067960178 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069563219 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082066945 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064569431 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067468084 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076432607 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067863673 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089104157 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088841215 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067378482 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075318614 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06677874 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066384037 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066250679 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088803501 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06870952 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066183745 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070554824 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069309585 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064710974 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065488541 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070333813 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064359183 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067478303 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068617556 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069565792 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068767288 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082259622 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068602562 seconds)
  done (took 8.741235013 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069165255 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068573703 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068895671 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067590076 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068101082 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068304524 seconds)
  done (took 1.93337342 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093859251 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069228496 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08019301 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072159109 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104376181 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086522395 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086897886 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078857133 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083472513 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079025121 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086465815 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087930882 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092653077 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072903219 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.0867474 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072650896 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087542214 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075594081 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078036253 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073103151 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086408223 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072541193 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073156091 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081897067 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075433741 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072158529 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067458229 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078715889 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078530706 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078611001 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072246669 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075549711 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070498469 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077974581 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086814606 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071059801 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071861227 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077393533 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072209369 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075572964 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087830256 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073171076 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074804199 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077508202 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078422228 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070866701 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076985015 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075657794 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085712363 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076709453 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077297517 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071356876 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074975181 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076718967 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070079856 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077968703 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077191372 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08623621 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072237076 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070468914 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069167445 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075254713 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078045164 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075234746 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079087677 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076718349 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070523386 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072208641 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072434457 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071533092 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076443593 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068837269 seconds)
  done (took 7.082993484 seconds)
done (took 28.082925595 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542737285 seconds)
  done (took 2.032833746 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.601876784 seconds)
  done (took 2.116138857 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.56259294 seconds)
  done (took 8.07328377 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.390675808 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472184006 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.688965075 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130428257 seconds)
  done (took 3.237000829 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.672278309 seconds)
  done (took 2.193923768 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207851759 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195417516 seconds)
  done (took 1.935842679 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374111018 seconds)
  done (took 1.886117612 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.105983113 seconds)
  done (took 2.618682368 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261003679 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167016885 seconds)
  done (took 1.94173199 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457857478 seconds)
  done (took 1.972787579 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.846228422 seconds)
  done (took 6.363217825 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206331819 seconds)
  done (took 1.765126131 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238392571 seconds)
  done (took 1.751638001 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.682393825 seconds)
  done (took 3.198131706 seconds)
done (took 42.604503061 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080183728 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081943616 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081453432 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078379767 seconds)
  done (took 1.824953588 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077509499 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072790634 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076650208 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072370219 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077197994 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072258616 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074627681 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07665779 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072719163 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073219586 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073075041 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072386456 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074870515 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074111729 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070919379 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074909207 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075885165 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072119861 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075975259 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072696438 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071113887 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074580627 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075281252 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072306766 seconds)
  done (took 3.295555025 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077290653 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073477554 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07489856 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072723978 seconds)
  done (took 1.823792981 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077186408 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.0918936 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089136241 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078089809 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09234026 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086478954 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06915339 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06908086 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073627554 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077537966 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068075596 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096600526 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088221071 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076842919 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078818634 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066416922 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068505437 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087320518 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077274039 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077679964 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07020489 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076883554 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068084689 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088218717 seconds)
  done (took 3.415215475 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07714248 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103296513 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077916184 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088130209 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090352065 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065687365 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074712361 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089233177 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122968507 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065708978 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070048217 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065351647 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072475501 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065256007 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076326328 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104622213 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108329241 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068881809 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095904981 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065399464 seconds)
  done (took 3.178238298 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073348818 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069783064 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066066014 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068776946 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077147665 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072581358 seconds)
  done (took 1.960140295 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068477829 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06787805 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068042571 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066881304 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07141734 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066971151 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066506888 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067464477 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067496191 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067156991 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06658062 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065761853 seconds)
  done (took 2.338672866 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.180057088 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068997166 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070706792 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065808144 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070977513 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066683385 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080147136 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06808961 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090810664 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066556682 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066714839 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068340887 seconds)
  done (took 2.495027539 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206367959 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076662432 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236951291 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137343981 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11192391 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115944242 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104113869 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1136676 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144304291 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102075387 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168081446 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16589543 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107303659 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136963707 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08898903 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097603263 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155677521 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162408187 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103697401 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165744032 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144065859 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124885463 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146834422 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101176265 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106069719 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12247497 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07110255 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080046981 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170616311 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131732678 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146862396 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110928309 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094019744 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176257889 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171125715 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142473752 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133847758 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083709591 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102212063 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134528185 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202706289 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087741059 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161247696 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10606927 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07935923 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129123145 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115881382 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116554326 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102491402 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088150627 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141304413 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174745953 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.133602033 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084815933 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109248697 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116838925 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112180051 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100288041 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17441051 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150886658 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12082252 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069734999 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095501195 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144532644 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125316479 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103917135 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.118823821 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087941544 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126357817 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145822452 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111612105 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135083815 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.122632543 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085092181 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113484626 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13249878 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119993429 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159712699 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118260503 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.069726975 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11817192 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09779316 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077527626 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.135381748 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072604535 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164787732 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093775358 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.102438567 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107620776 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104512339 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103369259 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152260422 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136027408 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.354445718 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067850506 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107653641 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123192908 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150944287 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09008523 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111099109 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119596159 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080004653 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141859958 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076747129 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126643665 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076570167 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128439003 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135829861 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077938688 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123889323 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103488342 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102043077 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135539956 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162047941 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090804982 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083761541 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169217565 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124469265 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106024316 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146200754 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157503615 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100660743 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103970967 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151112061 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182312419 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089979804 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165563933 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108286072 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085336588 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088066093 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124903113 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113814914 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122763474 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082484685 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11888099 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169381101 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075318929 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095317012 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133681408 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079702831 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080800076 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102835722 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099958749 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094807935 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100238032 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103910164 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136997841 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123077743 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104899945 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272745847 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098923211 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171595856 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089525164 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100507531 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104618976 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070276443 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138767689 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156884264 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079905336 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165454807 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123596228 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105541181 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119378561 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083939775 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140603285 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079243053 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070865388 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145336628 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110463307 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110280557 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150896742 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104661516 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128629564 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1205 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135061951 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132761376 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129051844 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105713304 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088500936 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111986377 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126179357 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07339151 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091946758 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080341424 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10430896 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095979818 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083423425 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142595309 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125285904 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100721944 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111737264 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097333476 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147344246 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076988393 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130141865 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119916853 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094560708 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151254803 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152137583 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132280786 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100919396 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144709982 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07037636 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073979082 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089283394 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.268226772 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08400621 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084425048 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117985238 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147340381 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130694137 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138296823 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11193417 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121551902 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155114988 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070367024 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115975266 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148110785 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122689315 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104716538 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090407457 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098849954 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142287559 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108403851 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182428724 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114166584 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126586666 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153393378 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099807764 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080097809 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103166726 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135700573 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105198426 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145515153 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099916944 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088412326 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110203968 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074407536 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100588906 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128052593 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120314543 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135530275 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115095447 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133809102 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077236538 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11742308 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120499484 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123221043 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064173197 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120257129 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161261955 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093654163 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118717063 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15315425 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079643135 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124621181 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321458623 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146496401 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086047089 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11106152 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118971646 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128115302 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120621818 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141414483 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109941709 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135425834 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108764058 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085767159 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088414079 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097420167 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105440387 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094790365 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.1098698 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115419362 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.0953723 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132905002 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103540267 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110327753 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117315944 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097894753 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089096362 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097186183 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175275469 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120339532 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171539204 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099098824 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145686228 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164732568 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075058565 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079356197 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078478385 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140264084 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084378432 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131514961 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098249584 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10664544 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1246002 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142767025 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095580731 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069053261 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108763851 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134897438 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112843031 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098837118 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104825006 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162216932 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100169741 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079316889 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11349731 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105129 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102088699 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172691878 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.204113016 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098364082 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076077143 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081899866 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127704013 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1544632 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080808642 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103324382 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119732244 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111641647 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128593107 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102216178 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099828737 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11470208 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149763423 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130159912 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090942552 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11280862 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129899901 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156929032 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105478615 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096407177 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171219637 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154306567 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160992221 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088749596 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1148823 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114709329 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108608349 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139805854 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083716772 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1644981 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081748328 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136927539 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10461179 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090739524 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130762339 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.116539879 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088426557 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148603991 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118399732 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082750945 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077871081 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11838589 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121051401 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107261167 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075234818 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138670585 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072840108 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131902075 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168459893 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081120945 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104513768 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241739503 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080137554 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108772933 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103276838 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090661345 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098975937 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174439649 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089565026 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150362131 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141919699 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113315911 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138203875 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100707583 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636483024 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077908578 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152576334 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116457484 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173448426 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097951011 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11886383 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109972581 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124652605 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144238891 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105532606 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174985641 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132073824 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116161445 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079912263 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102704006 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102978883 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089298282 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105144358 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113710308 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116784104 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094526225 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11660043 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123837795 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082037277 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095223925 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156328894 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117337009 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144870742 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140242521 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085224095 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117804688 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138240666 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079672836 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121620293 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1518464 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105874928 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097855948 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080042125 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.247020461 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170590878 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073654435 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163866489 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120335091 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110771993 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114434608 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114744802 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131804798 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108833173 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123021683 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093988035 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110585848 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112901015 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082820692 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077376028 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1063256 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115031664 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097619345 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099590491 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099382941 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152097146 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071217477 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096492403 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103612447 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146268748 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175693953 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088142288 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082919332 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119150426 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113423397 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113660201 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120994321 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079481683 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082742102 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082718429 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077630079 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10852874 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112694095 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104611829 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111540412 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164595235 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082792404 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.219715663 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095248527 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104900698 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069916977 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078753315 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095976225 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09807289 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108637079 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100573599 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170578148 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094349881 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089827595 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092633456 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073309929 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082713335 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12753729 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256090503 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120113237 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098837676 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063224562 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110079179 seconds)
  done (took 58.787383282 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.118919704 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08326256 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096999869 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149890002 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122578744 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212855309 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157926488 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199641279 seconds)
  done (took 2.815695162 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068936666 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094012672 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100659569 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082724313 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067328565 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068243284 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225886355 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080362804 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066643722 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088464048 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078656209 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068248658 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.423615365 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.0676925 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067564285 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061820113 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06757421 seconds)
  done (took 3.44538584 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.369898497 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602306895 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.37521244 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07384539 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.871873937 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093415795 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.059365631 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127591937 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073739303 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.527595623 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.697108467 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125614257 seconds)
  done (took 18.671748219 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077168187 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071206307 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084738866 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084405298 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072914033 seconds)
  done (took 2.065986795 seconds)
done (took 107.69310782 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080806388 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.402613358 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053986061 seconds)
  done (took 2.161138265 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082896164 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08510862 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085010594 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082919333 seconds)
  done (took 2.019513378 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07418955 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076560127 seconds)
  done (took 1.827659337 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22534694 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158736612 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087200603 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082452866 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078134188 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078478047 seconds)
  done (took 1.920007957 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072316813 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075588724 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07234117 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07675481 seconds)
  done (took 1.97446836 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076000982 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053254424 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055579093 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056461605 seconds)
  done (took 1.919312077 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086872652 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078531713 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078446659 seconds)
  done (took 1.920777981 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101292067 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085473788 seconds)
  done (took 1.864220435 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082483349 seconds)
  done (took 1.762793935 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099129936 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114919977 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130859376 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110415956 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138727722 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10911073 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085904809 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087306314 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077246398 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088229107 seconds)
  done (took 2.721542406 seconds)
done (took 22.318076741 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078490928 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364818598 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360589705 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090082956 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66973565 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356871936 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990772403 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092256546 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113681204 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068145497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084558885 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650609008 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978854838 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323627904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970663168 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324341401 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649112099 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068580854 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068145013 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068204906 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976902238 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067712472 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068267326 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068627656 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65054855 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371617719 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068214249 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323402632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068041733 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070028451 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35518791 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068197966 seconds)
  done (took 16.195714093 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071357882 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117880995 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074058219 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084299716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070446367 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06996715 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072039198 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069008198 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11954805 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06820775 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08466079 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06805103 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072480932 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06910012 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087319727 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068403001 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069159121 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069006703 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068434609 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068569647 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087655925 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06783913 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068422026 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068814076 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068054465 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079594527 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068358881 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068542215 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06848776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070389593 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07142138 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069443547 seconds)
  done (took 4.088346919 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115770946 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125997986 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074153326 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103634528 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113017528 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07191279 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144023353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093267296 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128276897 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068149615 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084786663 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068240216 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101009113 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069044816 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087596917 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068682896 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069914027 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069073655 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068940202 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069233246 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087810159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068284408 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068716814 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069303348 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069156993 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082248847 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069067108 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069145486 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06873146 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070838721 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072106367 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069697574 seconds)
  done (took 4.351298416 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072050877 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075191447 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083062212 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083854838 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070381592 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07231928 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072916116 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069789402 seconds)
  done (took 2.294051981 seconds)
done (took 28.615350126 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078861135 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069249067 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072451314 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081343008 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073180151 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078502107 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067807775 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074700512 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072292746 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073271829 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075456158 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067924127 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071125739 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067864391 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074216569 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06819797 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079475353 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071998525 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079544591 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079610203 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070259684 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073501384 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074304042 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079286833 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079507649 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079451602 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07778862 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073283797 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069465665 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070823062 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07669509 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084224529 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069389606 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079648325 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068301487 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068573161 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071605045 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068506534 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079920378 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076934855 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070168788 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076747967 seconds)
  done (took 4.791107791 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08758412 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091391379 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085106557 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061936548 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067581676 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064730287 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088819044 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059945836 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059935288 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088083332 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055940696 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059464119 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063100971 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054489406 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059934663 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057073024 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061578504 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055972855 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059241925 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059728105 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088603271 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054280591 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077484221 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062929921 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059148655 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062402092 seconds)
  done (took 3.449404104 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074295053 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08481278 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089299972 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127228722 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103442663 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077814768 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080181605 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092902282 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085498398 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066711794 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071473377 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093542389 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088177573 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073800866 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067497317 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085207409 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082656387 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069061018 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074172997 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092923714 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085671506 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085524954 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093059231 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081079088 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067705645 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070448596 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071336643 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081419861 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072395746 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076480846 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072019932 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071076244 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.0696989 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079311635 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071328535 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069604274 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090543796 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077342103 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078276412 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068149642 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070915793 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068614694 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091495671 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126818586 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067115814 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074705717 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075665432 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076920561 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067848142 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086209127 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078856026 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067314209 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070872383 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066615976 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067919519 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080511151 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069471713 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070472942 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076794894 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070496715 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089362018 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071170335 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08301021 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06681801 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074791254 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066648727 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068364649 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066508868 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092746892 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069338956 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.10834438 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068768715 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068466243 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076654599 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075317197 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073437131 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067920015 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083021986 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077663466 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071316706 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076455289 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071119803 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070356519 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088067472 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070076345 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069590427 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068792536 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073956177 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070385624 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069018682 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080268723 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067814838 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070703688 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084093104 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068149374 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06937591 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07390343 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072288105 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067252108 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078779221 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072529609 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068257137 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077046346 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06799973 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070517077 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079476833 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073857887 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067251552 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072819711 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073778322 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068657957 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069354558 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070533143 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069240963 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076270691 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074484328 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072266672 seconds)
  done (took 10.649718883 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160829844 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.166557997 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071204391 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145801003 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076781332 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079356735 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148448766 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094639208 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068171679 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069406953 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069350938 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110792412 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106376482 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115789109 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079289523 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067859373 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083805624 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114338167 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149489929 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144266899 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084511409 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077364604 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070619688 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069687562 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071798595 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079013945 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085991284 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07715823 seconds)
  done (took 4.476428797 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081337434 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097489716 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074928251 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089754011 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092158102 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068373325 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070811299 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069792328 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080790573 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079769034 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067868397 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073901147 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075244691 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071945826 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069683249 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075606965 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07528331 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069509037 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071779495 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073738446 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078348592 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092405616 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072620487 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067729054 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073209014 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06801503 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065007035 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084994078 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068555032 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090819415 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066265124 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075581207 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081845781 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069103622 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068419197 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06855148 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068234922 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067949249 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06967373 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067210131 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066612703 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05765359 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067045385 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080371666 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074298822 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056859664 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072596161 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073096924 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073340936 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065464897 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070912375 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070893337 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070949918 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075621132 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073113146 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073322993 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069086297 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074289324 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075561728 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068066266 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064954634 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066733087 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.0725946 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066306847 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076079605 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072911023 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066918511 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068062848 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070103088 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074284535 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067817333 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071521949 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065744835 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069886761 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072569027 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069822199 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069422233 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066657776 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068041854 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068420933 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055968025 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067668459 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054096431 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070846089 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066141298 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066706565 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067433584 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072852273 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080253651 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069134904 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073321663 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068727317 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066885226 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07056816 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060495386 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070775372 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082887845 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082918036 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067842134 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066008295 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081728 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072384868 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066674217 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056396696 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075336733 seconds)
  done (took 9.254838295 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09023231 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070067138 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083864948 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091915179 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086762427 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075772903 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076892648 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069442791 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08284304 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073982666 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076874408 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068771043 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077737146 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077697495 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070692628 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077623354 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072459722 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083361435 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08223226 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068748488 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076548014 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080608633 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089386741 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080679107 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078733839 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080403294 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089679417 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072515532 seconds)
  done (took 3.953938249 seconds)
done (took 38.265369292 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.787625795 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.026402577 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.775591244 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.177642747 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.867527056 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.992943853 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.828308838 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.771635124 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.942948772 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.811247646 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.037476872 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.831899868 seconds)
done (took 65.567711829 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.838357474 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.912440283 seconds)
    (2/2) benchmarking "String"...
    done (took 2.041273063 seconds)
  done (took 5.662018848 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.076801311 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.533198255 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.002229681 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.769508664 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.775807663 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.004276965 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.580825793 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.301949602 seconds)
  done (took 30.678378531 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.90429246 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.001442587 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.450660325 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.486792001 seconds)
  done (took 15.601868194 seconds)
done (took 63.647707966 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.782170814 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.80129265 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.792260662 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.754960532 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.829399427 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.790577939 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.992206595 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.81207607 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.772371524 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.764420272 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.773169994 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.205488307 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.776301089 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.957730689 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.771778425 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.779896884 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.812820951 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.21655009 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.928711195 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.780052743 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.788838566 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.832755783 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.772040226 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.78301062 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.806651056 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.772504608 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.208565375 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.776171193 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.591989992 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.772956008 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.816708034 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.132776838 seconds)
  done (took 203.859768665 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.771547423 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.84344402 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.920990203 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.820581667 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.303737935 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.955092172 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.892888941 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.347290494 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.776850212 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.79639246 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.02312154 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.771339081 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.042096444 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.761323494 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.801711097 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.855718276 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.970920758 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.04127797 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.807844116 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.946321617 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.793020938 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.887930221 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.868833922 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.010106446 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.79807025 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.874913923 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.802831579 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.795325506 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.970835254 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.948991727 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.798558132 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.781634228 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.981225594 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.646744614 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.787873826 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.804711538 seconds)
  done (took 170.714227214 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.939960507 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.77311478 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.773295118 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.773335933 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.77920008 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.773141402 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.904068045 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.905183426 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.243656495 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.158690548 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.827291502 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.586777646 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.772462119 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.840231681 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.78524634 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.774226169 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.789630882 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.80153663 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.772830126 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.77337872 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.903713717 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.786580651 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.997725011 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.780856365 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.77396064 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.778386389 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.143181678 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.773643284 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.779331122 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.017181536 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.774081201 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.774890916 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.663197722 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.156664636 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.865140739 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.776364476 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.78015251 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.775205301 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.994712465 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.775244384 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.77520162 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.778118053 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.946891765 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.776245874 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.902576754 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.774881771 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.266275955 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.774658139 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.774190771 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.537727208 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.429954386 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.777855144 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.774956546 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.777320186 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.774703078 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.77528759 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.781563203 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.775634846 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.45528092 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.84995362 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.777505855 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.779362361 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.781546925 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.775922209 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.91136318 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.778892779 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.08711804 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.827455889 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.887229608 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.89831754 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.778858601 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.843700037 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.870399722 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.777624956 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.775455065 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.775762737 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.776580833 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.857720404 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.777243542 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.894092171 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.783840517 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.778101552 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.827378841 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.776835754 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.846107299 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.777826765 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.658820482 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.780694761 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.776983955 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.077880465 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.843779156 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.778111892 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.777099046 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.778296191 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.896525495 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.90110839 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.780814938 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.551320039 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.7816818 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.429849668 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.780379133 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.913552416 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.779140664 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.955762827 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.781200051 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.859575076 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.783661261 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.777879197 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.779121176 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.779633615 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.811118448 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.778564085 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.837350464 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.777996311 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.148456763 seconds)
  done (took 402.861471209 seconds)
done (took 781.143709576 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.455293157 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.413675865 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.527497445 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.436126313 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.409914362 seconds)
  done (took 13.960186605 seconds)
done (took 15.678634658 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.864963221 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.870273426 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.803941282 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.86743607 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.799451741 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.867404193 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.848769679 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.805798523 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.835201257 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.805387818 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.837649469 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.805588667 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.791501417 seconds)
  done (took 25.52186562 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.005389972 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.015037762 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.849258131 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.014494412 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.825827124 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.008648222 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.943620031 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.932372313 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.933916251 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.795683196 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.794166831 seconds)
  done (took 22.838871028 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.013934101 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.033297968 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.856605207 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.021664436 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.829688565 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.013663288 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.943920708 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.932697607 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.932327919 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.795705312 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.794919714 seconds)
  done (took 22.889132353 seconds)
done (took 72.968177838 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.789142821 seconds)
  done (took 3.509593415 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.809213503 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.950584348 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.795804368 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.792241128 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.790070538 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.789635498 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.793168554 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.788975028 seconds)
  done (took 16.230857794 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.789156842 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.787506609 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.789249643 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.789133422 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.789406821 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.788278825 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.786772012 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.789103754 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.786963208 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.787804817 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.787684403 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.787726656 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.787600531 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.787084749 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.790386524 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.790000712 seconds)
  done (took 30.336335852 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.789188647 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.787937335 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.788144236 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.788816574 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.788725697 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.787710458 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.789160187 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.787793246 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.787755224 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.787428879 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.789006318 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.788333466 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.789054996 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.787668109 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.788855928 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.789189508 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.788048518 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.78821703 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.793196285 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.787926889 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.788914973 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.788061692 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.789399828 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.793511469 seconds)
  done (took 44.657054674 seconds)
done (took 96.454643382 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.651667606 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.379689721 seconds)
  done (took 8.753834151 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.793012411 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.791713493 seconds)
  done (took 5.349652319 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.791376906 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.792580554 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.791667052 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.790632943 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.791372675 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.792156128 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.791884298 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.792395297 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.792177593 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.791861294 seconds)
  done (took 19.641861244 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.792379277 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.792131902 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.789491894 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.792553707 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.792782025 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.790559511 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.792555064 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.792828993 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.792468768 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.789575269 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.792808747 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.790422415 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.793191725 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.790406681 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.792409284 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.789617378 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.790071491 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.789342827 seconds)
  done (took 33.969940958 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.793419612 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.793181874 seconds)
  done (took 5.311132583 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.791115604 seconds)
    (2/7) benchmarking "second"...
    done (took 1.791098538 seconds)
    (3/7) benchmarking "month"...
    done (took 1.790131382 seconds)
    (4/7) benchmarking "year"...
    done (took 1.790558121 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.78995886 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.790247633 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.790759334 seconds)
  done (took 14.259037321 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.793503023 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.973876424 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.039974177 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.454811734 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.79436185 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.796976324 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.732174375 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.797241018 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.7991976 seconds)
  done (took 19.907422434 seconds)
done (took 108.915236243 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.646034602 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.790935269 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.151386121 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.851655939 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.843890363 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.130365389 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.815949446 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.014350025 seconds)
done (took 42.969742426 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.791036509 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.342557666 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.374717961 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.167364226 seconds)
  done (took 12.61136351 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.774034091 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.319107488 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.828435473 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.39227194 seconds)
  done (took 20.06196864 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.156497496 seconds)
    (2/2) benchmarking "read"...
    done (took 2.152693978 seconds)
  done (took 6.041061777 seconds)
done (took 47.232987809 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795456322 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.795199128 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.795748759 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.792531404 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.795480818 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.79584507 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.792451071 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.79367923 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.793321562 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.796147468 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.79569741 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.793681466 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.795837901 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.796118759 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795058125 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.793370522 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792711511 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795267725 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.793016361 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793271506 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.793278662 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796717844 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.792945973 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.793889015 seconds)
  done (took 44.793737433 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.797162359 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.795673142 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.797294222 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.797386125 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.795360838 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.797333539 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.797678917 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.795091874 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.796940776 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.796882595 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.793492163 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.795035938 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.796835909 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.79470797 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796775976 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.795214855 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.797913669 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795626529 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797713316 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.794751774 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.79695643 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793865603 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.794844238 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796997269 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.795522534 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795329216 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.797679132 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.79576166 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.797560021 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.795194431 seconds)
  done (took 55.61338319 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.802169184 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.806627676 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.799088008 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.797707887 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.798898836 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.79774199 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.798676695 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.798312423 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.799062901 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.798791346 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.79824695 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.798262696 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.798012136 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.799148036 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.798716891 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.799043044 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.798918085 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.79806348 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.798571971 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.798189317 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.799026848 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.799395626 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.798685086 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.798395065 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.799622198 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.798856852 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.799049317 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.799665317 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.799249912 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.799669568 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.79929704 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.799272591 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.799512932 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.799650559 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.800063269 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.799784392 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.80519787 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.808672958 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.800701208 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.800456135 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.799498771 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.800120043 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.800120949 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.800374534 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.800438416 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.799465196 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.800499125 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.800196361 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.800549329 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.80098729 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.800400902 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.800656579 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.800061071 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.801107846 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.800091182 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.800587784 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.801003417 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.80069047 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.801431373 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.799585655 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.801841016 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.800223791 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.800754681 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.800610138 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.801896897 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.801293951 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.801182244 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.80077327 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.802061998 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.801860967 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.801668989 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.80201278 seconds)
  done (took 131.342936698 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.801149584 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.799362944 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.799117425 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.798794941 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798950224 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.801560032 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.798502169 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802695801 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799307429 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.802658034 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801583778 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.800930868 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800254169 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.802568972 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.802315166 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.800419085 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.802857259 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.79987848 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.803369549 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.803193841 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.802826798 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.800091279 seconds)
  done (took 41.356325233 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.80269594 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.802837044 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.800744854 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.803633048 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.800526589 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.803650085 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.80409895 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.803353972 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804056969 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800724861 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800286184 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803448036 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.800429328 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800403088 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.80034851 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.800466879 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.804027155 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.800915705 seconds)
  done (took 34.171098139 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.80069505 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.801395574 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.803151083 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.801870249 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.801621707 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.803877417 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801290474 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.804557553 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.80388859 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.801474399 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.803897108 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803268348 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.803642693 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801681931 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80434332 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.801870203 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.804460095 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801641269 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804990347 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.802158262 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.803320546 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805173844 seconds)
  done (took 41.399868563 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805117511 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.804692831 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.802847469 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.802617915 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.802255506 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.804140792 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.805399373 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.802727611 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.804481742 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.805473277 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802194732 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.805459888 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.802191802 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.803775318 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.803313176 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.804163997 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.806154395 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.80343494 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.805725314 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.803307819 seconds)
  done (took 37.81598905 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.806377286 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806581715 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.806740187 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.807336436 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.806813332 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.807329036 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.80688766 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.806519427 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.808254427 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.806645406 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.806747133 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.807589977 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807253612 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.807742287 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.806325414 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80711754 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.808034435 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.806986019 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.80694513 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80750749 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.807945572 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.808399293 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.807559818 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.807719579 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.808292233 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.808631478 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807658527 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.807766981 seconds)
  done (took 52.344161214 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.807130451 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.806854086 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.804823877 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.805170959 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.8055209 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.805032596 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.80560651 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.805462433 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.809114506 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.805839523 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.808482528 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.808605878 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.808901779 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.808569666 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808217824 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.809124826 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808206355 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.805802885 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806135418 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806603684 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.8079017 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808829844 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.809387622 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.80586782 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80600393 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.808785785 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.80621337 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.806280745 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808221283 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.805434197 seconds)
  done (took 55.951138645 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.828327663 seconds)
    (2/2) benchmarking "in"...
    done (took 1.827057285 seconds)
  done (took 5.395884012 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.80551005 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.809292822 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.810020066 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.806936742 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.806765223 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.809479162 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.809612495 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807252724 seconds)
  done (took 16.204979388 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.808868893 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.810327582 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.810297428 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.810011678 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.810644483 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.809578246 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.815068226 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.809670495 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.810502418 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.811622328 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.816899014 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.817893776 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.811605457 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.809429296 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.809520424 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.811686712 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.810059356 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.811822892 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.811854193 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.811369508 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811942429 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.812712431 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.811785499 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.808507835 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.81258759 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.819964312 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.81505523 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.811245833 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.810580982 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.813848104 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.810868832 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.80882147 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.811561807 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.811810435 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.811230644 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.812475759 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.818327306 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.811470917 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.816175837 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.811579993 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.811062012 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.80899944 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.812098592 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.812348615 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.812703626 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.811929311 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.812610086 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.809467527 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.811499767 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.815126658 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.817021074 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.811171865 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.80961561 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.8147623 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.813139398 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.817565996 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.813014245 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.815373713 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.822448998 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.821425181 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.825005705 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.8202104 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814070233 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.813604038 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.822610216 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.838094158 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818594732 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.810171346 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.810371643 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.81259945 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.818879154 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.827051686 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.822340586 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.813985846 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.813601929 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.81340454 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.814174555 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.814404117 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.819351645 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.815223607 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.815330085 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.813690013 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823210218 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.837217123 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.813839212 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.814352869 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.814941085 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.814192856 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.815450282 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.825068763 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.815632636 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.814639113 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.81400004 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.813490282 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.816042637 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.816055652 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.813512824 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.815501891 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.812246757 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.815110269 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.81504444 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.817525148 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.82417707 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.815513929 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.813745244 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.818823279 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.814263142 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.814845807 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.821201072 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.814945201 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.816373325 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.816514538 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.821435802 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.813066148 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818404101 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.824403328 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.816176717 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.815921435 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.815978613 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.815316676 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825805213 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.841958013 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.815803101 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.815436392 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.821096922 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.829287587 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.81669256 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.81877368 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.816634962 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.813994014 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.814225103 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.817789588 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.817545043 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.817246509 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.818265616 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.817336555 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.814674554 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.816822779 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.817405958 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.817667059 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.817949362 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.816841824 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.817763337 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.819252846 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.818268454 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.818916611 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.821550195 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.816982109 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.817158006 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.817457533 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.815469999 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.817633061 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.817691164 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.81879434 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.817067186 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.817992902 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.81698779 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.818971542 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.817427992 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.817524094 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.817846171 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.820005436 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.821858632 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.818857946 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.82112974 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.817760706 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.816737701 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.818922675 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.81856772 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.81835883 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.818720899 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.816419259 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.820925252 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.82641253 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.817694379 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.818584099 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.820256129 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.819947997 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.820044777 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.819781844 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.822104093 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.826637541 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.819660542 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.824845885 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.818693818 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.820574272 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.819517941 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.819460475 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.818255698 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.821358522 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.823013951 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.828342456 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.832099019 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.830339207 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.821759321 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.82566512 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.821881169 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.82410424 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.824999131 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.819846491 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.821403715 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.820856699 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.820446012 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.820221042 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.821003276 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.820975989 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.819603178 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.820355283 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.819798522 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.821242251 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.820108483 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.821507313 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.821044253 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.818461104 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.82081143 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.821186564 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.81955239 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.818299854 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.819380574 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.820394625 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.820764441 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.821774752 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.827913708 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.81778942 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.821948548 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821676735 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.8211253 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.82057146 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.821526912 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.823230806 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.820714348 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.827129476 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.821549586 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.821617951 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.827352206 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.821239686 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.821212463 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.822963391 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.822159353 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.819717319 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.824780227 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.831335476 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.822455407 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.823800814 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.823490665 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.821981131 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.823722634 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.828881223 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.820766108 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.822364705 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.824075047 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.823441707 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.82145956 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.82376486 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.823298582 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.824178897 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.82612535 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.8235484 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.8237219 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.824603558 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.823712157 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.824754202 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.823886818 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825945389 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.831452286 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.827705867 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.823281041 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.825561563 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.824524225 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.828026092 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.823916724 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.824388711 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.823175297 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.837292751 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.832857247 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.829138877 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.825788674 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.824805694 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.829223909 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.825266516 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.828853564 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.82351047 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.824421079 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.824055303 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.823545744 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.821666102 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.825133402 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.82526363 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.825866635 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.826447327 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.829503888 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.825292272 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.823560925 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.826587103 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.82562747 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.826228298 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.825100775 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.825642043 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.827320066 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.828645714 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.825319921 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.825667007 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.831072633 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.825396575 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.826091073 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.824850063 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.825533105 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.825548551 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.826533354 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.826461687 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.829266539 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.835008105 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.829442652 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.836030458 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.827843807 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.836910573 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.825964325 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.829486267 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.835716609 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.823737189 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.825540315 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.826431244 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.827369109 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.833104473 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.827745472 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.827837601 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.832355088 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.827976407 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.828822399 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.828544409 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.827435335 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.828005924 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.827526654 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.834217886 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.828762625 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.831095954 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.829316743 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.82504428 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.828560417 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.827342254 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.827671035 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.830234396 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.828741184 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.827452437 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.827294143 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.827271642 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.828054677 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.828162333 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.828358585 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.826023099 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.828732508 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.835162476 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.829560291 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833387603 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.829684269 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.835932534 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.829021199 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.834751825 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.828783837 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.829431756 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.830443802 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.829099576 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.830485051 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.828580235 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.829774748 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.82943673 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.829685959 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.833704521 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.830570391 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.831213181 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.829568891 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.829839107 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.829111304 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.840189838 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.85533151 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.832374382 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.8341099 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.827290574 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.830822857 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.834294305 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.830036229 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.828699998 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.832562474 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.840654024 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.839364774 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.829681766 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.831472148 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.830666951 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.83087917 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.829539399 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.831672237 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.831587716 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.830868793 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.831689447 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.831325293 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.833609811 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.830273118 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.831999652 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.832096811 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.831451509 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.840501005 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.831617686 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.8332333 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.831045744 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.831624575 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.831319759 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.831252372 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.831353751 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.831811502 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.832047645 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.833671916 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.838442694 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.839084719 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.833937399 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.832167575 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.832296072 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.832112939 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.832195905 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.833089401 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.832892159 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833789668 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.833573257 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.833003394 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.832749069 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.830136915 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.832810045 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.832287883 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.833692798 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.83476496 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.840040241 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.831942466 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.829278988 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.833402268 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.832904178 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.831849897 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.832542013 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.83964078 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.836621099 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.845093814 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.842188959 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.837536664 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.83303864 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.835731669 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.841915714 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.831904103 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.833911416 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.834328522 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.834225272 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.83398503 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.837446817 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.834626446 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.839667172 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.83348219 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.833065221 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.840746906 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.834261785 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.835139171 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.835569784 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.836780857 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.835035643 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.832134339 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.834894869 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.833439083 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.8402769 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.836595485 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.83486102 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.835781787 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.832007269 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.836525178 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.839452769 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.834630726 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.834963115 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.832465321 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.835295664 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.835593922 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.83491738 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.832817502 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.834719088 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.834784256 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.838034023 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.842232507 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.832523892 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.8372987 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.835126155 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.835346968 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.836579844 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.836843397 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.834029984 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.833407852 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.835385657 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.83682002 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.835657657 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.837777718 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.836335483 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.836842901 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.838564086 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.83733466 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.839465756 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.846839829 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.844710559 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.833945027 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.835898561 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.836549372 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.839686815 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.83787738 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.836244006 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.835779823 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.837764194 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.836104011 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.836124028 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.836408019 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.839540997 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.851710738 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.83701365 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.837001078 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.837308211 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.840108421 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.837014445 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.835223612 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.837151784 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.839640668 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.840539384 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.847287559 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.83888892 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.844453784 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.837409757 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.839599994 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.842720773 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.840897513 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.84591774 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.840578923 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.839409914 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.83842974 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.842733417 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.854429329 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.837943338 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.84756548 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.867367123 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.838167142 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.839509219 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.838471585 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.837243827 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.83951151 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.839511215 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.838738391 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.838151303 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.838861464 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.839145518 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.838552796 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.844638288 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.840249648 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.839094329 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.838946371 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.838964929 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.83972901 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.836967962 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.839458118 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.839109942 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.839370162 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.840144893 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.839704008 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.83935117 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.852182255 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.849969331 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.840323388 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.839866152 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.836970002 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.842345725 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.842675689 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.851588872 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.849132979 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.840994078 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.841068818 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.840981189 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.842673011 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.837797683 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.840621961 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.839807096 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.839851928 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.837897644 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.852890438 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.850245033 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.84415207 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.840421022 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.841760903 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.840827455 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.841047958 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.841627448 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.841094805 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.842564847 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.840719939 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.84483068 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.841159275 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.84128847 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.844951979 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.849837266 seconds)
  done (took 1090.822605544 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.838608162 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839171694 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.839977992 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.838911345 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.84018378 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839006801 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.838720418 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.839394147 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.840056398 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.839931592 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.838665986 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839642055 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.8386083 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.840001086 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839223228 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.839431657 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840317991 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.840321663 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.84060484 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839268578 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.840139179 seconds)
  done (took 40.402745021 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.842152963 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.839863357 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.841364685 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.842771808 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.839986099 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.843539039 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.841242895 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843650231 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.843403049 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839959623 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.843362698 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843111803 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.841261355 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.84005533 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841383633 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.844538882 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.843163129 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.84141718 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.84356434 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.84057417 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.843399914 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.841415708 seconds)
  done (took 42.298866538 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.845326344 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.845599734 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.84202017 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.841720593 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.843844987 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.841100072 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.843907191 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.844681737 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.843536017 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.844646704 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.842596379 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.844824246 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.852148 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.850465864 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.846397365 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.844132053 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.989135024 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.845550922 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.845296473 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.845338523 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.841663315 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.848835937 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.84113855 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.841594824 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.843698562 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.844327229 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.843511677 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.843600316 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.846460421 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.845130885 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.849913253 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.844642509 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.842531765 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.845452807 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.843773637 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.844694982 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.848687452 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.843717268 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.841558912 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.844825049 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.854304393 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.867618806 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.844126049 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.848602431 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.8443674 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.843057422 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.847865804 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.853018703 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.841322932 seconds)
  done (took 92.351904948 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.844199563 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.84616897 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.842224964 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.844982848 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.84447999 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.843837595 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.843990202 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.844584202 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.84043341 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.83972146 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.843409508 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.843521326 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.840337238 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.843335858 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.843283315 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.84059116 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.840686784 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.840687587 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.841351934 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.838093652 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.838639668 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.840676053 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.840887298 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.838827552 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.840055992 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.837169008 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.838274755 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.841346396 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.838673735 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.837951544 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.840129837 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.839636109 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.840369124 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.837295415 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.838777049 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.839099883 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.838558377 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.836653763 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.838273636 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.836612126 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.840492265 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.838570463 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.838736635 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.840969913 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.835735176 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.837258816 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.836059644 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.835768691 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.836446272 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.83985007 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.838761088 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.836882779 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.839094429 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.836554704 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.839210062 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.840996369 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.837428225 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.837394792 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.839303877 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.838248235 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.839043624 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.839916734 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.83744358 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.839126309 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.839453666 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.837210438 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.837352124 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.84001822 seconds)
  done (took 126.878556163 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.840132101 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.839826814 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840906144 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840193508 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.840438596 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.839567229 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.840617376 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.840607729 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.840652289 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.841790126 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.839832538 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.841552043 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.841163002 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.840186497 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.841248718 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.841377622 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.841136938 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840424788 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.841333062 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841983612 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.840986515 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.841089672 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.841534948 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.841296195 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.841792673 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.841822119 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.841086738 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.842142161 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841246755 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.842501958 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.844852302 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.841619751 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.842299506 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.841962234 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.842766615 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.842203456 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.8431389 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842452405 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.842041586 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.841733574 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.843294789 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.84278031 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.841824759 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.842977027 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.842072989 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.842651917 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.842454055 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.844157804 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.842176028 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.841681792 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.841507472 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.842274661 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843551756 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.841761598 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.842825072 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.842133664 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843462419 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.842631599 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.843151291 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.841612399 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.84262223 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.842103682 seconds)
  done (took 115.963949561 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842823512 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.842096214 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.840006982 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.839488919 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.841925355 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.842318911 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.836700816 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.837209 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.83788809 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.838447115 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83939145 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.835128479 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834076389 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836444983 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.834776246 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834191728 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.836223279 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.833238924 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.836087381 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.833079055 seconds)
  done (took 38.524929552 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.833665681 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.836672158 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.833163083 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.832851091 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.836446651 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.833524274 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.835762222 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835070456 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832338948 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834486699 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.83492264 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.835438413 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833687734 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.831954296 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.834435443 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.831883634 seconds)
  done (took 31.113012036 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.832695706 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.834091308 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.834560698 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.834533584 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.83235735 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.831582156 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.835013568 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.832600923 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.832098264 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.835017997 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.834153657 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.8354819 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.83385356 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.835341436 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.831995738 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.834105222 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.832537197 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.833130248 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.835002692 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.83576096 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.832871784 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.832554663 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.834820841 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.834428981 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.832589112 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.833292767 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.833326637 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.832532214 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.833430636 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.836814275 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.83232404 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.832655999 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.832713333 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.83327201 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.835652989 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.832948748 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.835747158 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.836964693 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.835675831 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.835711302 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.837397597 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.834199968 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.836028449 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.836165839 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.835948544 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.836058668 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.833424519 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.834732881 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.833748626 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.835978648 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.836259827 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.836111757 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.836931284 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.837020106 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.836572015 seconds)
  done (took 102.658636221 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.835269043 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.834940065 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.832139977 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.835384089 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.836466594 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.832795285 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.834363703 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.832898418 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.832298376 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.835112868 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.834686568 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.832884296 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.832450644 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.835074747 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.833528767 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.835312712 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.830669076 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.830516758 seconds)
  done (took 34.773838904 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.830549507 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.831940889 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.834653218 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.830463624 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.830949032 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.833370549 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830585192 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.835655154 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832698452 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.831846313 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830946633 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.832657576 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832859826 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.833603107 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.829365499 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829672323 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.833848429 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833248657 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.830150296 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.830033621 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.832895667 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.832196172 seconds)
  done (took 42.068724959 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.832689703 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.829544782 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.845413962 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.849961937 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.851027881 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.864557942 seconds)
  done (took 12.836199713 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828658118 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829659286 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826897331 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829742518 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830719677 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826373684 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826085167 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825814652 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829010336 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826961208 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827144933 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828967004 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82960857 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826683079 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830292515 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831543508 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826318443 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826868975 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827243375 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830007505 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82732923 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830787781 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825731476 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826966217 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826141014 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825823513 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830866739 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825831405 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826390637 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829235382 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829715928 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828629232 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8296975 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82669145 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829934914 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829028519 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826929005 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830233572 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829345263 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825763534 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.828418441 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827621 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828982915 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826123122 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828258784 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825813867 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826000115 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826826863 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827130443 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82888523 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828618629 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82643882 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829745563 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828141135 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829539837 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829118522 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826891332 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826751466 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829256438 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827275429 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825072155 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828609604 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826482382 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826367319 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828411987 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826609389 seconds)
  done (took 122.406625249 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825794906 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826477411 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825521651 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828123031 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825082249 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826716946 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825435462 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825553746 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825566689 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827175679 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827773285 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825223624 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825865906 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824964527 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827738498 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824749482 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824945715 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825866202 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825029391 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828845261 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826003961 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825017532 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825712344 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824831697 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825888668 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828105404 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824186726 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824340392 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824953051 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825236178 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827179366 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82497531 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825718384 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.825284535 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824527588 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825207476 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826369167 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825276781 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825843694 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828575221 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825188475 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82966283 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824695136 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82502957 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825535736 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825037427 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824831397 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825961742 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825133119 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825981724 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824969769 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825175008 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827026414 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824654803 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824917529 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825845755 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824645953 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824938747 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825814648 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827188223 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825065097 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825165529 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828090507 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828444673 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824712918 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824874048 seconds)
  done (took 122.265759857 seconds)
done (took 2533.483430048 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.847622216 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.891644784 seconds)
  done (took 15.497522117 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.985947727 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.941535505 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.825178403 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.857323252 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.825556994 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.843898447 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.847575436 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.823360718 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.824451223 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.824082023 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.823863913 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.015841212 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.817217066 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.822604916 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.823873162 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.916498281 seconds)
  done (took 51.57955156 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.827113031 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.828141986 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.840851324 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.828402182 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.825213844 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.837584824 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.859124309 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.829207083 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.861056852 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.837357463 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.894726927 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.83545845 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.824856377 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.876631504 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.837666331 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.839730398 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.911300194 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.901838242 seconds)
  done (took 35.052010164 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.904865397 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.830109276 seconds)
  done (took 10.498358205 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.849261027 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.821716123 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.841570836 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.845874515 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.81965969 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.834867907 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.849025633 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.844183115 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.833327812 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.853801632 seconds)
  done (took 70.153114903 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.830624492 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.826430023 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.826467754 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.824456691 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.817215016 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.822250438 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.823686226 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.820428371 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.515316227 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.863204746 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.831334876 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.830500928 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.824859738 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.827204549 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.823099169 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.848654719 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.944580432 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.823351467 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.82553121 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.831628641 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.826777707 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.883341848 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.839134681 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.82672373 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.856886712 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.5110187 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.836507392 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.831826875 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.981476956 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.825495581 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.825226612 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.826023618 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.827540043 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.207369287 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.109209884 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.825295585 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.836149482 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.834717578 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.823888859 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.97065686 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.826999893 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.832315474 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.793112433 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.085740013 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.932042972 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.869775975 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.229055505 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.830433066 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.827864192 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.856720069 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.829035591 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.826624054 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.839163604 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.343858218 seconds)
  done (took 130.370793364 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.822600451 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.125595652 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.975255641 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.823618341 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096270558 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027034791 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.769678588 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.871895695 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.824017683 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.025238705 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.985515089 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.932676155 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.823463343 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.821354016 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.824638883 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.821332036 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.981095939 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.890504412 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.824669032 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.821374326 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.850929841 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.03096081 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.952169652 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.824620699 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.844170935 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.033761757 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.944426176 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.931100558 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.114201786 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.820982943 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.8888951 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.825020917 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.821827933 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.822868192 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.980263997 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.920380843 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913302673 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.825304445 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.822263729 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.822409136 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.485128265 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.019456489 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.921878691 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.96646778 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.070719082 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.028862264 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.473361949 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.823245238 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.467186797 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.986225334 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.038247925 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.030292729 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.950131501 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.825273264 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.062316793 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.82247582 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.823296533 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.061670247 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053618587 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.931342456 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.826229877 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.822449913 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.822908146 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.067483959 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.825872138 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.922798592 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.826936334 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.82419168 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.924089827 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.933128372 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.056152553 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.038673549 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.859846286 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.122154683 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.303884098 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.039512754 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.894884938 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0612444 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.829141223 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.824682436 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912239554 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.58158685 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.984255126 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.072709063 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.046492563 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861122784 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.42727694 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.824270062 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.020472278 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.012797593 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.021281572 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.067261132 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.978703183 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.948219008 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.82526 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.825314365 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.044115684 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.965065096 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.829348066 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.187075267 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.060620181 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.39469442 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.856721533 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.122940227 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962287331 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.141825739 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.451613516 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.824630001 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.993967338 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.867078819 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.826862 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.825535603 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.018805234 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.637058061 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.827352948 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.569786393 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.891065541 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.831076182 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.030798858 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.830496948 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036961804 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828770915 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.064233406 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.912481467 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.861371886 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.002580164 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.068066279 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.617398229 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.077567935 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.072906401 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.947137474 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.098823809 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.560204362 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.829351623 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.103384481 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.829985919 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.826891705 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.996574232 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.829617454 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.005965884 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.832028647 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.057146826 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854998372 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.985377041 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.829992456 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.06158805 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.865592468 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.881226298 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.831133161 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.951967159 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.830932205 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.70986926 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.984852186 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832387374 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.828051669 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.264566248 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.830222856 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.976990984 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.060901223 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855354899 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.898702301 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.360206901 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.828680782 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.918170427 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.856970376 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.304023574 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.830310907 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.987226936 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.80575531 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.269095311 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.829819024 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.069483225 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.063183836 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.831989215 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.827804538 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.570419481 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.526247165 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.828914998 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.988871575 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.064360287 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.485264804 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033028614 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.83355993 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.959586818 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.832249383 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.914149722 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.177581625 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.830573996 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.829334387 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.830654321 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.831842383 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.830664426 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040557318 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.861997501 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.344994087 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.967284614 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.047731725 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.140108675 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.05034861 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.879440794 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.835324028 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.097364877 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.833048597 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.897230395 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.834493467 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.855143003 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06429895 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835546279 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.045535641 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.085126441 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.75958315 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882262185 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.833901603 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.831348306 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.831595071 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.984378761 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929326237 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.834568039 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.831936044 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.944033147 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.961216348 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.026313346 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.427184991 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.910808839 seconds)
  done (took 889.563430685 seconds)
done (took 1204.472413812 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.83161207 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.832667271 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.822629062 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.838140929 seconds)
  done (took 29.094659406 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.844036856 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.841661677 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.843697146 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.841942349 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.844176271 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.841199213 seconds)
  done (took 12.829211879 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.876260416 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.836976287 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.839061108 seconds)
  done (took 21.325683349 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.910624351 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.255127053 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.953023295 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.288676368 seconds)
  done (took 10.180856761 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.84461923 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.843547642 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.844859667 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.84498834 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.846221131 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.846996732 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.84473753 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.844454775 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.847012289 seconds)
  done (took 18.381937785 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.163582464 seconds)
done (took 97.745036533 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.86872175 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.837798017 seconds)
    (3/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.939104971 seconds)
    (4/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.853826343 seconds)
    (5/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.136734458 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.805855357 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.847758542 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.022541398 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.943749941 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.888363712 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.879041668 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.157441163 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.867954589 seconds)
    (14/309) benchmarking ("sort", BigInt, false)...
    done (took 6.839191576 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.234617986 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.138707417 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.058248629 seconds)
    (18/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.037952377 seconds)
    (19/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.956944878 seconds)
    (20/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.962359575 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.179104455 seconds)
    (22/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.825681855 seconds)
    (23/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.879222143 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.139434426 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.980342602 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.140862178 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.845031584 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 3.713832401 seconds)
    (29/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.202578196 seconds)
    (30/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.512081882 seconds)
    (31/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.248911581 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.124896145 seconds)
    (33/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.983347527 seconds)
    (34/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.999318089 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.006381036 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.904577226 seconds)
    (37/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.183682371 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.174461338 seconds)
    (39/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.36012094 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.949318812 seconds)
    (41/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.870031849 seconds)
    (42/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.937179117 seconds)
    (43/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.208138489 seconds)
    (44/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.945092983 seconds)
    (45/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.012485518 seconds)
    (46/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.051893015 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.869178987 seconds)
    (48/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.025085577 seconds)
    (49/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.976960148 seconds)
    (50/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.929208289 seconds)
    (51/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.982670353 seconds)
    (52/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.986376755 seconds)
    (53/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.095557736 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.958607702 seconds)
    (55/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.008261227 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.106738735 seconds)
    (57/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.04984031 seconds)
    (58/309) benchmarking ("sort", Float64, false)...
    done (took 5.669797752 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.10654931 seconds)
    (60/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.930701407 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.111017055 seconds)
    (62/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.928758766 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.899696333 seconds)
    (64/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.174991478 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.086065273 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.189121627 seconds)
    (67/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.435906276 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.227775779 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.322936064 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.57571088 seconds)
    (71/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.004330023 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.204705867 seconds)
    (73/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.949422828 seconds)
    (74/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.248302324 seconds)
    (75/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.869903485 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.919727411 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.054943793 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.688600744 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.902378045 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.446152417 seconds)
    (81/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.94195515 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.843259863 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.874006306 seconds)
    (84/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.441235701 seconds)
    (85/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.266473631 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.662526374 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.118526453 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.137697921 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.85097732 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.105025074 seconds)
    (91/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.660580273 seconds)
    (92/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.937110647 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.131031327 seconds)
    (94/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.830759013 seconds)
    (95/309) benchmarking ("map", identity, Float32, false)...
    done (took 3.362661799 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.846263725 seconds)
    (97/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.123027254 seconds)
    (98/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.353458012 seconds)
    (99/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.845308906 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.026215211 seconds)
    (101/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.313849544 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.934825782 seconds)
    (103/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.976808234 seconds)
    (104/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.046679158 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.995278762 seconds)
    (106/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.409380118 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.839427698 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.848149985 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.149218152 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.031921491 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.464160398 seconds)
    (112/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.157847994 seconds)
    (113/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.150877815 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.908435678 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.012182947 seconds)
    (116/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.668496637 seconds)
    (117/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.856243046 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.897271741 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.964862257 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.083848756 seconds)
    (121/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.846275962 seconds)
    (122/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.914556468 seconds)
    (123/309) benchmarking ("sort", Int8, false)...
    done (took 4.839950609 seconds)
    (124/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.857704983 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.845555025 seconds)
    (126/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.155406499 seconds)
    (127/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.135949592 seconds)
    (128/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.832017719 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.20438009 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 2.297693395 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.871040704 seconds)
    (132/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.954074308 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.100358064 seconds)
    (134/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.147407344 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.065045364 seconds)
    (136/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.137010334 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.127306142 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.845891079 seconds)
    (139/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.45313427 seconds)
    (140/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.303664759 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.836370653 seconds)
    (142/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.033163932 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.949081308 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.531065192 seconds)
    (145/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.982468525 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.241311197 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.915812119 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.067014732 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.876663356 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.029458872 seconds)
    (151/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.779073669 seconds)
    (152/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.835512116 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.748439715 seconds)
    (154/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.976944657 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.527439725 seconds)
    (156/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.865344082 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.65185823 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.743380587 seconds)
    (159/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.785479802 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.872175358 seconds)
    (161/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.846919032 seconds)
    (162/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.950999881 seconds)
    (163/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.939817043 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.024748162 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.206355343 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.505121671 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.141490007 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.849544171 seconds)
    (169/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.996541321 seconds)
    (170/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.434283021 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.101178542 seconds)
    (172/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.836773255 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.901803975 seconds)
    (174/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.196067289 seconds)
    (175/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.951232082 seconds)
    (176/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.912951197 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.972847544 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.569052553 seconds)
    (179/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.971407531 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.848709516 seconds)
    (181/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.83486135 seconds)
    (182/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.409552546 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.925302251 seconds)
    (184/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.934629465 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.875776183 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.735863458 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.242772847 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.925390952 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.069409645 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.868836707 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.894484211 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.923046888 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.765139999 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.023884822 seconds)
    (195/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.162006024 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.439301143 seconds)
    (197/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.329770791 seconds)
    (198/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.218075701 seconds)
    (199/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.950047616 seconds)
    (200/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.038562952 seconds)
    (201/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.918529855 seconds)
    (202/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.335349671 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.152069905 seconds)
    (204/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.144971484 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.908377841 seconds)
    (206/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.534539674 seconds)
    (207/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.887732793 seconds)
    (208/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.935129848 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.44701001 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.089577364 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.23642505 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.852986747 seconds)
    (213/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.916454213 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.187765779 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.852823162 seconds)
    (216/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.435616073 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 4.098099733 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.062046429 seconds)
    (219/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.890921626 seconds)
    (220/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.237318519 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.183193355 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.337239217 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.8826326 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.850802405 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.517886055 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.85175309 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.254626789 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.958335138 seconds)
    (229/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.929309055 seconds)
    (230/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.87238481 seconds)
    (231/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.851836718 seconds)
    (232/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.08463908 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.873995343 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.89229297 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.657108764 seconds)
    (236/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.859125299 seconds)
    (237/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.93716983 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.933181042 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.827152385 seconds)
    (240/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.707502929 seconds)
    (241/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.957404694 seconds)
    (242/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.993163173 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.769167296 seconds)
    (244/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.891596719 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.851991 seconds)
    (246/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.882318858 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.838661197 seconds)
    (248/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.918265032 seconds)
    (249/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.361483967 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.003784744 seconds)
    (251/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.153939599 seconds)
    (252/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.867955187 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.949508364 seconds)
    (254/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.023987102 seconds)
    (255/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.377476013 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.845157971 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.843631352 seconds)
    (258/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.582390524 seconds)
    (259/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.953588278 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.929032397 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.11399577 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.952112671 seconds)
    (263/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.857118413 seconds)
    (264/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.194062503 seconds)
    (265/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.834198634 seconds)
    (266/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.460183913 seconds)
    (267/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.001092006 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.778729728 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.891742562 seconds)
    (270/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.238831505 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.186892851 seconds)
    (272/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.014003728 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.233842078 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.244648507 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.838323925 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.921336154 seconds)
    (277/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.855850183 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.51307386 seconds)
    (279/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.839679571 seconds)
    (280/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.001735743 seconds)
    (281/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.980385443 seconds)
    (282/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.988694454 seconds)
    (283/309) benchmarking ("sort", Float32, false)...
    done (took 5.617580497 seconds)
    (284/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.886229311 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.880417928 seconds)
    (286/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.087156807 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.960017929 seconds)
    (288/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.965105391 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.018656481 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.994314802 seconds)
    (291/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.475425301 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.49954812 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.600475195 seconds)
    (294/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.961364503 seconds)
    (295/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.962652871 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.855573433 seconds)
    (297/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.362563138 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.907496749 seconds)
    (299/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.938284706 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.855758334 seconds)
    (301/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.924904364 seconds)
    (302/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.958091376 seconds)
    (303/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.941855559 seconds)
    (304/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.095630445 seconds)
    (305/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.246402764 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.861519469 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 3.253615828 seconds)
    (308/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.044124757 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.922954351 seconds)
  done (took 1011.767731818 seconds)
done (took 1013.602117943 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.888555382 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.883529486 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.865715661 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.887716868 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.979418877 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.901558187 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.877531822 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.869432929 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.913786119 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.916249764 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.866107711 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.900433664 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.868574961 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.868376586 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.866859311 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.881333769 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.176070583 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.894768649 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.88495028 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.877242594 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.885218004 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.86783076 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.917486582 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.901333209 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.871584098 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.871152648 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.871726093 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.888917798 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.980906302 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.871052736 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.870288939 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.879349807 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.175734451 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.892923197 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.863695332 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.889516785 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.880787573 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.877068799 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.872359909 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.901848174 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.315300363 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.875653167 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.871042273 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.869122028 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.869707352 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.873195348 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.870259185 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.875478512 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.883086061 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.883377409 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.313613606 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.891624156 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.874066944 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.869411303 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.880851024 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.870321955 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.873445244 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.886423845 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.889700232 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.885331962 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.166216848 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.900267435 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.872072129 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.88727753 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.877437782 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.348678983 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.87183429 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.874153603 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.315307133 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.881540245 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.350874345 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.887254951 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.87141416 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.885436877 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.902960449 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.176923684 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.892731696 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.870135279 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.879931671 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.871047398 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.880397351 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.885683839 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.87633823 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.871971026 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.885576417 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.906046895 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.88062513 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.873442004 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.880647651 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.891696293 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.879909757 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.883985839 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.876159171 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.865988296 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.881509018 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.874738117 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.875839706 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.876247819 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.87689898 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.882924147 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.315449255 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.896105848 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.869218538 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.869102364 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.871082601 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.886861675 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.313481121 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.880245012 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.895783564 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.918719642 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.874330515 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.169311297 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.903117219 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.888915502 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.881703217 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.875656321 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.868231502 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.169307791 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.341925793 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.894501395 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.874884654 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.871793041 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.889730915 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.87596786 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.869477464 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.178847137 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.900946054 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888201997 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.994677923 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.883863601 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.905175859 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.873368888 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.87696884 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.907653499 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.889928501 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.906158196 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.87667711 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.8906396 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.891125792 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.87021028 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.885728972 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.884902398 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.875441518 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.881625879 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.868708821 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.909231904 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.887543493 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.887598707 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.89544076 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.996677232 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.872381779 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.171572255 seconds)
done (took 294.224682495 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.940467139 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.865115255 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.971188505 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.871315625 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.955967849 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.965240223 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.868674045 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.868726947 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.869329323 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.252156028 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.8694636 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.869819054 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.86596025 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.870161606 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.954129137 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.872545408 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.869069883 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.213822939 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.873190148 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.944675 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.869637003 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.870015033 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.872573987 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.254750302 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.864673517 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.873418916 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.949466159 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.872452745 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.220040854 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.871726777 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.866904342 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.244264673 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.971061029 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.891622238 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.882592479 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.880307507 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.965585789 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.878178103 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.96268557 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.954183433 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.972617557 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.913484617 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.873992324 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.870807641 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.875970674 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.875486229 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.871318794 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.902370989 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.866838118 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.870476287 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.21555369 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.884059365 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.882004109 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.872046517 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.87183998 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.896385171 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.871448043 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.875269667 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.965955787 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.87503858 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.935911717 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.255967043 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.25388124 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.873900208 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.874567304 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.873304739 seconds)
  done (took 184.619128125 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.941654935 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.948548392 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.357641611 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.878829425 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.924512084 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.947927067 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.879407249 seconds)
  done (took 15.681703495 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.880634837 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.874469731 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.924127216 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.924670594 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.87574312 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.026175129 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.875906164 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.886861665 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.872930185 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.927764203 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.877178227 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.876805821 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.88282655 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.870755199 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.923841973 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.886290111 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.991562884 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.876718337 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.875606262 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.029799055 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.874831032 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.883033502 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.930969128 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.887926426 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.878282668 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.882777948 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.472626834 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.87664723 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.873974918 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.876035627 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.873262862 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.920343298 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.877148571 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.872105355 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.873837813 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.992970398 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.876646436 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.874892379 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.877316211 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.870499835 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.876674424 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.877020292 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.878254318 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.874314826 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.876748379 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.901255872 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.87759298 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.877197831 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.877221866 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.878610417 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.928569829 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.877762349 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.874282923 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.875444627 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.933012923 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.885003193 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.878010289 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.875093919 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.877899665 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.87637963 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.031666253 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.925431358 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.877988489 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.92524212 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.878649404 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.878658606 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.877308399 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.879781294 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.973870613 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.878340549 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.927155325 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.876870425 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.035489701 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.90282666 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.880504821 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.88168441 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.882171965 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.881052932 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.874466262 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.885144063 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.877097535 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.880065956 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.88510251 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.87737663 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.87611616 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.991669326 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.987225598 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.877697468 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.891605595 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.886205539 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.876377465 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.933337253 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.879649388 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.877188938 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.934179269 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.995344761 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.934649266 seconds)
  done (took 206.60541322 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.884615092 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.887850693 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.880395803 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.895680536 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.879680262 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.878912063 seconds)
  done (took 13.11526098 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.882045789 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.880860554 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.881262846 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.883121397 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.884547179 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.884698052 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.884427933 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.88390299 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.887350944 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.883176309 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.88449708 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.88501582 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.885560009 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.884344086 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.884523701 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.882984132 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.885120574 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.881242325 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.884321358 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.883692993 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.026657627 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.883932335 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.884372762 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.885068754 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.888125582 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.883887501 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.891735981 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.88494091 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.884114736 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.892656358 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.888148006 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.886265092 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.884359546 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.888444077 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.888681232 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.885015644 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888576669 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.884988838 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.882450844 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.885534678 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.88494115 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.885031468 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.885726492 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.886238683 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.886728049 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.888405595 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.889648037 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.892759248 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.886295983 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.887044838 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.885716825 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.884643998 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.886350213 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.886025342 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.88670159 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.890283077 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.890022273 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.886206849 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.88685363 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.886778593 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.886210955 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.886433417 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.888326737 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.891355276 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.894814053 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.888043975 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.887587578 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.889575188 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.886977158 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.886157152 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.888804559 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.885208346 seconds)
  done (took 138.757814993 seconds)
done (took 560.595864637 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.100362841 seconds)
  done (took 8.914823331 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.97927415 seconds)
  done (took 8.867253796 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.501275005 seconds)
  done (took 10.315782312 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.888478093 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.899491927 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.889564432 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.883732678 seconds)
  done (took 29.385935292 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.219978036 seconds)
  done (took 9.035047633 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.891487001 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.879195104 seconds)
  done (took 15.641159847 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.940227913 seconds)
  done (took 8.755715129 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.966826057 seconds)
  done (took 8.789130755 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.886023832 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.908369971 seconds)
  done (took 15.621324826 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.86566718 seconds)
  done (took 8.680177537 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.546904131 seconds)
  done (took 11.371481539 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.892328165 seconds)
  done (took 8.719808824 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.893291497 seconds)
  done (took 8.709220929 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.964720696 seconds)
  done (took 9.779764307 seconds)
done (took 164.4020998 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.883077336 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.88124859 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.881013389 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.879617561 seconds)
  done (took 29.340978307 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.921389703 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.9216728 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.922506367 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.932523785 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.924450427 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.921701711 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.914638906 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.913828143 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.933061408 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.924886644 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.923325475 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.924165606 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.921555057 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.9138318 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.924715637 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.92423607 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.932248011 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.924010538 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.915003046 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.924289764 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.889716692 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.933665345 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.925162734 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.889384127 seconds)
  done (took 47.912463701 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.085975691 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.95930535 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.042549119 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.941448327 seconds)
  done (took 9.846163488 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.940454949 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.942215287 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.954518407 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.992215113 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.02502772 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.951781288 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.912532955 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.911097427 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.89737429 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.943859704 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.017891636 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.958956638 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.027759981 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.888936403 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.077141165 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.890860226 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.890269464 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.942087257 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.993657743 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.00703479 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.891582677 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.942405912 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.946210558 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.959024892 seconds)
  done (took 48.72317908 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.889170661 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.897175698 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.896209495 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.890229301 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.89042777 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.890856709 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.896525681 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.891316513 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.911398792 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.890826277 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.889282976 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.890333621 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.888914873 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.890477823 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.889902322 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.903287141 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.903217128 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.890742064 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.892826661 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.895269574 seconds)
  done (took 39.698513887 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.884668796 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.738473674 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.236377926 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.140639283 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.88501733 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.88852292 seconds)
  done (took 31.593236703 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.905032803 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.897587514 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.89139254 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.949276851 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.032163469 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.902668825 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.892005707 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.901810817 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.937670439 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.957478765 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.910794246 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.917588454 seconds)
  done (took 24.91537874 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.886663125 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.887898813 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.88883338 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.904945395 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.901268233 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.899332254 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.897986824 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.884249772 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.905539657 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.910607461 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.899479211 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.903297095 seconds)
  done (took 44.594959698 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977745947 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.93203745 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.903884307 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.587206871 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.266913088 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098394744 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.401321757 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.222819774 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.890818905 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160790357 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.785033661 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993643284 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.142579094 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.405832598 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.923243934 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.33403582 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172038519 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094933089 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909363405 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.511521064 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944216361 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.10107497 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.662634137 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.940466016 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098793632 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.022754984 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.14943176 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.888409666 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0185851 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918508209 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899429216 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.887657811 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162264916 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25757735 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990173385 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899844288 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.507656316 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.608206138 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.981672063 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.549765649 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.525880735 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.995122045 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900431385 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889566912 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.822969233 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.068278105 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274449542 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.895016272 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.600846975 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.890632103 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901480254 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977937212 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.894167706 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.705811082 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80898327 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.89209057 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.888187277 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899086747 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.464378395 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.942411646 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.087498412 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.868703944 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.981031295 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.554781973 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267936785 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.029352336 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.893746258 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.894056466 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825408333 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.590125159 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938195496 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219311539 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.912516541 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.541934919 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188094713 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.835965056 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.834929749 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157609954 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.432479744 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.868115103 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119460945 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891708821 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827132617 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.927479566 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.82569754 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152072088 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922341636 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.649351703 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92642216 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.224965292 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.903025294 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909755375 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915895173 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.116187874 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.775896178 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892785467 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.588957421 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.037434437 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913049481 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.231960072 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826853262 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.896578225 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148337935 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.105197884 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.994611781 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.377895061 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036422746 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.483352039 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.948576956 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.071189752 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.945791226 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.158043309 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94141767 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.960204896 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939571459 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.893892207 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197888497 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.489599052 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.034706027 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.797327732 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.022669176 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.199558714 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915274814 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957849498 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903012969 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.894035036 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.628221618 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.43901923 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.896002612 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.895228748 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.994489687 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.945755407 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.896291795 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844328016 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.515873636 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.837592497 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.911619356 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.118062845 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.502319166 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209995968 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829474937 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223813573 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.986864495 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.11618309 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.530554774 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.952854063 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155976399 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.993319679 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.037595125 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946280921 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914142692 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99358016 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918788762 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.060974282 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.193607382 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.89882503 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.900458208 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.633496283 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.925361186 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895705913 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.900923296 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.646358567 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165317864 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910950801 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.901676274 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.78594743 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.91018491 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961181803 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.901824028 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907400098 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.436623873 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.606933333 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.902895465 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.47960443 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123769324 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907570041 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.521666817 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001214302 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.97833324 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162981459 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947081067 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.83059898 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.60780179 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.590079994 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89791668 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.831875488 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.898753796 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907127895 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908431989 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.092050263 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.167610628 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932954942 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.523283283 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.932526248 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909120122 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.902903708 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897995055 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.408523695 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.952773807 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.109766262 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.948361693 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042057006 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.911901611 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.832894744 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.903143953 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.903179052 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.898905392 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.898707643 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93065358 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.527734557 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267574145 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159830777 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.507018762 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912452673 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.554161121 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.958138988 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.004886935 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.447620906 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.228909146 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.944243478 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93244139 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.910239511 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.604176903 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.588837899 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47119576 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210479858 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192613581 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323472929 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.134500843 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.932449189 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241559881 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834974993 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.458091077 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958794339 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240588189 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84496958 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984554511 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.536436472 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228434931 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914841301 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128208235 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275597748 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.52681988 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026889225 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113272916 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935888654 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.08455508 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.863843525 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.186261982 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043094107 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.491382508 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084043815 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232890749 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.455184201 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.010697629 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.900181167 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.571485902 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978545123 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.611277329 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.072834927 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.121481076 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.72776491 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35554999 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.908144281 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.127890373 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258740443 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.078514101 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.025988624 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838309063 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912709642 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.91361346 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.903360789 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.899377441 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.761749449 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.15958321 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91380519 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837198705 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.030899663 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194747597 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.806658279 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.910089965 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903908793 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208879586 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.466637401 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068082272 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.026673234 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.424225808 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911532545 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.837447826 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83714753 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.595935576 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.908702964 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.879317161 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107212634 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.998387623 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824605169 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.011372998 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986213796 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.15997476 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.918395319 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.169222164 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169660429 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.601189715 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931198277 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.004931348 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.45604331 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.998042073 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.904440129 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.140122699 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.656153508 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.132409354 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.926711629 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.847568546 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.904094324 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118406882 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.906251303 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.692418596 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117290552 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.626655785 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.917278098 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235900361 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971462763 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.684100832 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.934784851 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.997695619 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915360255 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986127373 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916334282 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.915946138 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.916064185 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95190873 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.700932958 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.013809718 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.919336584 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996938999 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.97946844 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.422502915 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.912433792 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173438192 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248783431 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.223556978 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955814245 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.90597112 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907043315 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841629389 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055234571 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.132807546 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180680458 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.037758013 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.023340219 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932360261 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.457651535 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.126020497 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149592775 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182766207 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.802700464 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.440925828 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.94969153 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.907916243 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918685288 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.119818809 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115438059 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197910066 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047058795 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.01138747 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.279064624 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182493078 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.909274115 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.908090862 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497985691 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.918517024 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.590114373 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.941867485 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.703948829 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167085146 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919016988 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283493564 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.929128486 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.064579619 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.42600573 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.544763559 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.191207926 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.886648076 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.956640315 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178839631 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.287788984 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214171559 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978427307 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92184705 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.01760042 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057110385 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.773777226 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.912226964 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909069581 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.95750635 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.620878905 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.919877431 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185551787 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209941057 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.907662126 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.774597601 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935950467 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.920493804 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.133794335 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177945837 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156767109 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919601683 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.916531496 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.726065685 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180279766 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959848987 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845287723 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.914055411 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006237398 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154942577 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931132643 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.363925554 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.621952463 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191079092 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.904385492 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933948339 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.0952636 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.277791451 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220721935 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.437685705 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117815374 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.498461009 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.508034341 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214672752 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.916570911 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.092193041 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216968377 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.91651036 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.019442271 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951658861 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.176111489 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215334966 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.923444172 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.564631478 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.87542913 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.254824607 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.474998455 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850602716 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.921712863 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.972733025 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.913275672 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.043666967 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924947511 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.777843315 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.098626762 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.675531538 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.185746315 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.918614385 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.902314425 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.528292836 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.221002914 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948158891 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055273583 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91500554 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.615633581 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.274202478 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.17043912 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.024001476 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.921844919 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.917734255 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915523738 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.900991366 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.113284714 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.111364889 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183128612 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.041504145 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.952180401 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91793301 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.130922699 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126113658 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.697629389 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038268799 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.021915514 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958662229 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.820413437 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.417618594 seconds)
  done (took 1685.63345145 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.926429268 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.957817495 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.943814143 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.023646661 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.929517868 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.94026769 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.947294371 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.925126264 seconds)
  done (took 57.442157927 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.913340392 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.108627213 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.923544627 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.915073352 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.924749778 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.915657111 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.084035595 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.929848455 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.925047768 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.926372792 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.915037089 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.915617623 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.227917715 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.939794377 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.915873211 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.904765142 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.924811589 seconds)
  done (took 75.170656171 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.916681723 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.010050141 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.94136516 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.932407638 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.877806274 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.932186024 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.800859009 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.953538133 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.919883486 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.147627126 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.545381646 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.934708572 seconds)
  done (took 90.763228473 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.927406075 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.923027174 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.923618031 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.923223623 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.924161165 seconds)
  done (took 11.475742686 seconds)
done (took 2198.948464543 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.161390877 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.127671683 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.141238074 seconds)
  done (took 6.119095854 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.063409663 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.112001176 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.230651687 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.251540355 seconds)
  done (took 10.50895087 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.196980057 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.281844731 seconds)
  done (took 6.327065639 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.302318937 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.926451573 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.294233145 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.9162339 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.918687011 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.917219848 seconds)
  done (took 22.606159815 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.919479456 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.922363853 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.918909226 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.921600147 seconds)
  done (took 9.530962001 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.900986309 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.631431698 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.900603243 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.912982389 seconds)
  done (took 21.194183069 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.668531901 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.679013673 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.663047516 seconds)
  done (took 9.860482663 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.340666862 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.804373313 seconds)
  done (took 8.99477449 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.18091432 seconds)
  done (took 4.030339449 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.050370327 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.226340249 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.446647117 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.433643604 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.511911186 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.620834053 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.237280671 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.171362643 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.315766637 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.34536524 seconds)
  done (took 25.209730787 seconds)
done (took 139.917054558 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.299512861 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.157265351 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.116398381 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.255280507 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.154091033 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.116961137 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.137642798 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.236184248 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.76526055 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.760933071 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.253163814 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.141149164 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.083283111 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.155655668 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.084124169 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.15230949 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.136994967 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.315855075 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.95206968 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.149216822 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.140726507 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.890704944 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.098580248 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.907221805 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.137981146 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.068995285 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.481818909 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.154981846 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.106676919 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.48300463 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.069855337 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.301526824 seconds)
  done (took 174.116361329 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.82744079 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.9175362 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.919788292 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.919247297 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.242550995 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.919291337 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.919702137 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.918773125 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.994885155 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.975271839 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.920106262 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.221208098 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.922925608 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.918967453 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.919408638 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.936373565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.107532074 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.862726338 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.919843281 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.920621549 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.919570166 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.128396749 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.919385465 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.126197784 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.08029167 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.91922037 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.919746664 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.928656367 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.918803925 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.9204418 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.921560875 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.919151518 seconds)
  done (took 208.679773143 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.920320022 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.92145063 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.920136793 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.921857695 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.921332344 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.92392855 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.92383795 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.921106834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.451322543 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.446032439 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.919996965 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.921456278 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.921379115 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.921813409 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.927652339 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.920732082 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.926443262 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.929539804 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.929042784 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.931533572 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.938819435 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.669609437 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.936689301 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.653098048 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.926373014 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.92733881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.922415077 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.930038888 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.931891788 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.932555802 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.933800256 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.922688408 seconds)
  done (took 222.002215431 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.116995405 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.928035036 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.929258521 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.862615974 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.929128963 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.928670287 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.924714475 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.124870012 seconds)
  done (took 19.613688508 seconds)
done (took 626.273858069 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.366031962 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.207217794 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.101775748 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.952715059 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.197694259 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.982705153 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.949971487 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.01115902 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.676152163 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.014927589 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.603964287 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.965403284 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.686064504 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.971286981 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.073532744 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.006091975 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.522214472 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.621530005 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.12739881 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.009788226 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.123407146 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.884063507 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.023198328 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.692798638 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.705400797 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.925750065 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.11938219 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.533278033 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.959866003 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.115322767 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.709022084 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.328048453 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.959388473 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.948155823 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.000008203 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.98248282 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.290085427 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.958520602 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.07337471 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.688573249 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.018680681 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.559708379 seconds)
  done (took 105.503439018 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.920657765 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.918778336 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.918047423 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.919394327 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.919667071 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.919152528 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.918781326 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.918922952 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.919627208 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.918076657 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.918186391 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.920125182 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.919149177 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.920149515 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.918432006 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.918559971 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.920221201 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.920768468 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.918417301 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.918562475 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.919053277 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.918382784 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.934291589 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.91895517 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.920707283 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.920042007 seconds)
  done (took 51.783368176 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.933146577 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.078661758 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.158097272 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.950259739 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.933453031 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.935406831 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.950181203 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.938950766 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.933809493 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.93457167 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.029079645 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.939473382 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.951794192 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.158231905 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.94732062 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.934534848 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.934447904 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.933519688 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.084519376 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.947046458 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.951000238 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.937316031 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.951909366 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.945091696 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.934799094 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.933497732 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.936288959 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.404637013 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.941885024 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.029604236 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.976656429 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.954572494 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.36895781 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.164700994 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.986283582 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.941822536 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.934592558 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.033457195 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.940811354 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.934795862 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.95279107 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.939295824 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.158984862 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.437597512 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.946942016 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.935931198 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.417231423 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.042453885 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.97596764 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.946746785 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.161064035 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.950085736 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.936978142 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.93566269 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.971727891 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.946781839 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.934730714 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.303741296 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.946100425 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.953205673 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.941046702 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.935914814 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.092819028 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.943249995 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.081142889 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.943674257 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.942319046 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.937198032 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.161699017 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.950927669 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.444925598 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.94839908 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.936442156 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.031368485 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.085040963 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.440266947 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.94755816 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.096425936 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.388278272 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.959195098 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.943485487 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.394916128 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.963977666 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.943543065 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.938043008 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.939045045 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.939020085 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.98143826 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.953253859 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.383607339 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.448239265 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.317318816 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.96303815 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.952706593 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.937120657 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.304951402 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.945287375 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.937832005 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.15563523 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.455051188 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.949229973 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.943850743 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.431395853 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.950909939 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.956590005 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.944634449 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.166267686 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.952254415 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.982522106 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.937714231 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.943784377 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.940999118 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.956284246 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.945389846 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.938379955 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.422906465 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.051963278 seconds)
  done (took 239.88726194 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.932112397 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.94234747 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.932194195 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.932208519 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.931561182 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.937915468 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.931206272 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.931746155 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.937235866 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.93154098 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.932785068 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.934737155 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.934861588 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.939097586 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.966447599 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.939456181 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.543837973 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.934423059 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.931882299 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.933396531 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.580208516 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.939918961 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.933194516 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.934070318 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.93342777 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.932295873 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.938590878 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.962203275 seconds)
  done (took 169.353769889 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.940465098 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.053703335 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.954791433 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.968945299 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.948208816 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.938514434 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.963287569 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.955150943 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.944127808 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.938685854 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.93905281 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.999863853 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.950834723 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.040277367 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.970117862 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.970879638 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.043324948 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.947499766 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.939460404 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.938833432 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.968949163 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.935197545 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.999983691 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.065064932 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.955390733 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.054997552 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.943209171 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.941934213 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.940558427 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.055898232 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.953230898 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.00096222 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.967691423 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.958606367 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.059000075 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.053233856 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.045852282 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.970815203 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.9445848 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.940292732 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.939102539 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.929410027 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.057424068 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.957143467 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.942748659 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.046869322 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.955884094 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.943424999 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.950004821 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.94128513 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.955432119 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.959322392 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.007526339 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.069774122 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.971132844 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.967037131 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.967451967 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.225355576 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.950710019 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.04221121 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.936186337 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.058499744 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.959461852 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.93063773 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.943450973 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.94684121 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.970551627 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.972691971 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.047019419 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.950357144 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.042214356 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.975703224 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.948742945 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.942873737 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.945139711 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.059721104 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.057097752 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.976551969 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.979119182 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.972924642 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.938727899 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.943453089 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.932353858 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.960320468 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.947196223 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.059800792 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.055960923 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.950671605 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.945981307 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.945888486 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.945489099 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.969524585 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.066428039 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.974291241 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.041379006 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.010331019 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.014721812 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.954832818 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.956942602 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.947076431 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.007242163 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.956014833 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.956086666 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.274169711 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.01184441 seconds)
  done (took 210.134285927 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.395098609 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.9963376 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.999440263 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.211854525 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.373869963 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.796472302 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.987888116 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.994191464 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.018239709 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.159425313 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.047831676 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.006563707 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.979798803 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.967400714 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.995322267 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.01318923 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.99682481 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.284878213 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.120504167 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.155402554 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.9698116 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.264969298 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.31487438 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.386761845 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.025091316 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.321295071 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.66713063 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.230857909 seconds)
  done (took 63.559736892 seconds)
done (took 842.077189608 seconds)
SAVING RESULT...
DONE!
