cset: moving following pidspec: 1679
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.362609999 seconds)
loading group "string"... done (took 0.657050061 seconds)
loading group "linalg"... done (took 7.862598078 seconds)
loading group "parallel"... done (took 0.168208475 seconds)
loading group "find"... done (took 1.180197854 seconds)
loading group "tuple"... done (took 1.912109103 seconds)
loading group "dates"... done (took 1.3155638 seconds)
loading group "micro"... done (took 0.229080657 seconds)
loading group "io"... done (took 0.972294783 seconds)
loading group "scalar"... done (took 39.002278341 seconds)
loading group "sparse"... done (took 12.343351964 seconds)
loading group "broadcast"... done (took 0.99813535 seconds)
loading group "union"... done (took 12.758642528 seconds)
loading group "simd"... done (took 4.70693869 seconds)
loading group "random"... done (took 9.118226873 seconds)
loading group "problem"... done (took 1.635697412 seconds)
loading group "array"... done (took 21.846083207 seconds)
loading group "misc"... done (took 1.804517304 seconds)
loading group "sort"... done (took 3.466580829 seconds)
loading group "collection"... done (took 18.230792672 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.571216773 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13512657 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136277097 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.129025013 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.156738489 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.124344621 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.136731415 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.094906137 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.912346864 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159046016 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.127539319 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.434588092 seconds)
done (took 5.696121668 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.183242704 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091051588 seconds)
    (2/2) benchmarking "String"...
    done (took 0.091295636 seconds)
  done (took 1.402915847 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.073813686 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133758354 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.075529889 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07544505 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.075330387 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074796101 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.075268418 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074122232 seconds)
  done (took 1.805051765 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.081148181 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.076892326 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.074609825 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.076398033 seconds)
  done (took 1.530447674 seconds)
done (took 6.227019736 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.810601086 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.2241536 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.196914528 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.421414806 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137472557 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182667097 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.654661527 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329240144 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197680532 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083941223 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116692914 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.352040783 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132086538 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.638362332 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.084490527 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.098440155 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.146206466 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.419002795 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.074696056 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089441309 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.096908604 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.136350655 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.095167383 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081276683 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.154341096 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075327695 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143573925 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.088600225 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074034809 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226526499 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.179769304 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659329318 seconds)
  done (took 10.660031944 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109493174 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.108648823 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077649065 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.133602395 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.106981703 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078096717 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082491853 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075324685 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.097804529 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.139618621 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.100095661 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111448235 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073677091 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076611379 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.092899843 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.21480247 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.090368798 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.089243646 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078206851 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085680241 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116138092 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.086283651 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088942613 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.087919381 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13728821 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.188457232 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106304043 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.104629298 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.073648156 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.090140168 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122526683 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.138304652 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074183239 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073257097 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.137999333 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.101581142 seconds)
  done (took 5.00690437 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.023004081 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151563186 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099097853 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141476613 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072827003 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115319058 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073272185 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088997703 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.218271211 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.352428221 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.633781838 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119474575 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112863507 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075146873 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076301578 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074984089 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.543977523 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104294956 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113668304 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088530754 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077256239 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.076290591 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363633696 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074741374 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.071769506 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075754299 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064843345 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130202674 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075507238 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.980244561 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168580945 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073998179 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107210508 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169358507 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.224648487 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096743504 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.150178559 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076887547 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.071978762 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163614539 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.078054299 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074261769 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092253526 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111210177 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12351588 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.074053601 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074331516 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.176432295 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.07315343 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087407336 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.11815226 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160814957 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08747748 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.072497108 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284879747 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09649926 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077192345 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073157638 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.188697539 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133022005 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.072650158 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.075204275 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074077618 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077848751 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.099609917 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076546845 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.375869031 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.076250071 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.136637727 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077404896 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084627809 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077626103 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079034986 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08057277 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079690803 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095256237 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074215294 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081897004 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073557904 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073531863 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.073815367 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.089741228 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.401276565 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074078095 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075726023 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.072554317 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097260357 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103391413 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073817057 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.072310307 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106984226 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074824734 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073725179 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118338497 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072869588 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.071308391 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.089040711 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.076782006 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.118949381 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.073951645 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.094969938 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073704306 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101580808 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076071538 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105369462 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.087020794 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076430449 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.440019334 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072247537 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075798581 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074137873 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.071681662 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.073885923 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.072952075 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.084570764 seconds)
  done (took 22.734744527 seconds)
done (took 40.645738218 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.266744608 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081437312 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081230404 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081313712 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080876925 seconds)
  done (took 1.903948757 seconds)
done (took 3.232171648 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.131927596 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109244544 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074008211 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106100918 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072284872 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109803336 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111586613 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085184687 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108955025 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072884086 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106278707 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072145111 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071883191 seconds)
  done (took 2.540831963 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092195961 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093329781 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078730267 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09171628 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071481375 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091657252 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090938971 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09768365 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092899018 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081011073 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071529417 seconds)
  done (took 2.236275824 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091108091 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093509935 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078250952 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091076122 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071613728 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090849475 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090606729 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094823993 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091526999 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081962996 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071655081 seconds)
  done (took 2.227590234 seconds)
done (took 8.282099494 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.086184317 seconds)
  done (took 1.361160975 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.583844884 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.000308542 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.090066915 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.117759251 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.202886082 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123865021 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.271115586 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.095162274 seconds)
  done (took 8.94075184 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.112078321 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.081220556 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076258585 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.079004643 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079592352 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076620436 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07606278 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079444203 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.080129516 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077681094 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078686963 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076809901 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077276939 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07780863 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08058908 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07683723 seconds)
  done (took 2.639107034 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.101524863 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.099974234 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.082849197 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.082626055 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.079847047 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079337467 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.082414072 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081252793 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078282039 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080211522 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.081899303 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.081546866 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.079373138 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.072215943 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081945552 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.083176508 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078758079 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081689056 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.081891169 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.083583224 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.082396254 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.071852622 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.078879705 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081770608 seconds)
  done (took 3.349332987 seconds)
done (took 17.574850003 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114373972 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07599138 seconds)
  done (took 1.471193039 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.089313526 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.090909455 seconds)
  done (took 1.470067404 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.090375497 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.074938005 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.096632328 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.085139591 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.074522918 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.073190301 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.093666901 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.074059995 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.07380514 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.074119809 seconds)
  done (took 2.096940906 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.076401017 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.085873005 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.078228291 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.088682031 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.081070217 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.07175967 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.079140476 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.075294518 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084458591 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.070328541 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.078980227 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.089933636 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.078307395 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091960693 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.079156653 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.075974408 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.077836918 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.074492957 seconds)
  done (took 2.726230925 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07386575 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.074906815 seconds)
  done (took 1.439843925 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.074199054 seconds)
    (2/7) benchmarking "second"...
    done (took 0.071104797 seconds)
    (3/7) benchmarking "month"...
    done (took 0.074324341 seconds)
    (4/7) benchmarking "year"...
    done (took 0.074142341 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.071518365 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.070141588 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.071189257 seconds)
  done (took 1.794739587 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397825093 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.126579467 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330205341 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079730061 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.089180536 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.273281479 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.075061491 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.079848222 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.079338832 seconds)
  done (took 2.862407238 seconds)
done (took 15.158461477 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088621226 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.094339313 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.10664485 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.389117672 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.098931235 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074473803 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121358454 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.196600786 seconds)
done (took 2.47080412 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220829246 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.704655325 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.450056771 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.220096442 seconds)
  done (took 2.665073644 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.362954714 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097592105 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067087882 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077912013 seconds)
  done (took 1.903701839 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074834192 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077851512 seconds)
  done (took 1.448563734 seconds)
done (took 7.534110876 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075304733 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.095477866 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075159764 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.0746243 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.072436964 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074794906 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.071579563 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071431293 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074428369 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073827992 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.073515471 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.073739952 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.074625897 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07421048 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071495875 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070915517 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071250753 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073898877 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.182027924 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071905504 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071250118 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074093794 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071773299 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07151305 seconds)
  done (took 3.214871039 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.095072302 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.074121217 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080097501 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.078927574 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.0775189 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.079551003 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.079534445 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.07369712 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.079790048 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.075834975 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077112602 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.077610835 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076658153 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.078076704 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075852091 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.077759505 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.078950366 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073573954 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07648508 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.077861934 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.079182235 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073944986 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07723679 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078759118 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.076950198 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077110615 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076075633 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.074411778 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079364493 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.077001251 seconds)
  done (took 3.638750333 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.077658564 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.070925754 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.071930467 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078164878 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.071423778 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.071878075 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.071435965 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07214004 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.072442166 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.071641802 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.072760047 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.071566206 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071619024 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.072405641 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.073099428 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.075138271 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087615868 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071590343 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07090593 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.071846752 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074455824 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.073228238 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.071159349 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.070797427 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.071595595 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071703601 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.071713323 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.070954721 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.071884192 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.071188703 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.075319924 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.075325608 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071070336 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.079019494 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.075740422 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.071010438 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.075401791 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.071521585 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.072194095 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.071695111 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071368929 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.071980773 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.072066483 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078531513 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.072059358 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.072808424 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.071095331 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.07227369 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.071420578 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.073561487 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071260172 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.071770982 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.073930272 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.072311255 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.075407424 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.070899373 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.072396106 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.071159826 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.072222481 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.071442908 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071213505 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07087418 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.074229388 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.072246772 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087113491 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.079070034 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.072049863 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.073140262 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.07276017 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.074338089 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.073345089 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.085916046 seconds)
  done (took 6.588023417 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.097332383 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094766821 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073678994 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07316226 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069467981 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072410001 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077491812 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071959471 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073062187 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089868529 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071714392 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073337654 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072854775 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075277046 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072088978 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073713886 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079447777 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069672099 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071489784 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075532074 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072498862 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077512986 seconds)
  done (took 2.997687931 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.16293532 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078979053 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.114143052 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082962054 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077559523 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083392458 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077555746 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07785446 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077800278 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075435255 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075448373 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077698578 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077968816 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075650612 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075370569 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075109671 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077361869 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075660044 seconds)
  done (took 2.829225303 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.084020452 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.074504247 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.095321132 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074037951 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.073501236 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076430296 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077524665 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081545569 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.076052927 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.073981664 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.081658384 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076955141 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.076569092 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073925197 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076822332 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0740394 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.076538755 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074180944 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0822784 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07785323 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077534377 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081128123 seconds)
  done (took 3.027878131 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088655122 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076928799 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089858522 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.076010746 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069752972 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.072268084 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077353734 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073337907 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.077811934 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.075684799 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073587765 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071924828 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.076283001 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073860313 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.076408099 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073583294 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075205457 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073349207 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075424786 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069631001 seconds)
  done (took 2.82994838 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094633744 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076635897 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07647362 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082657242 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075771554 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075979651 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082586773 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075567584 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075082619 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097051741 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075711273 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075686287 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082539663 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079547196 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077935567 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082228602 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081714109 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082141564 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075628075 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075735863 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096166896 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076139818 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082247689 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075967483 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076198132 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075570722 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075650757 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079658175 seconds)
  done (took 3.553438075 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074605123 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074571169 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071614647 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071518227 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07158203 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.071435223 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07144479 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071959099 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074054958 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0711469 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.07370435 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.07366109 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073693632 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.073629826 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073712316 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.074599821 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07354875 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.071596714 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070849814 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071389132 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.074120875 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074527119 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.074127215 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071407839 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07104659 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.073342259 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071156456 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072056943 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073402535 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071439316 seconds)
  done (took 3.499698845 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083290368 seconds)
    (2/2) benchmarking "in"...
    done (took 0.081252908 seconds)
  done (took 1.483924502 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.070729616 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088268652 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.071693187 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078309491 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07682696 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074483033 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080814784 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076871975 seconds)
  done (took 1.933532962 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.090125653 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.085077466 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.074436173 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.085194083 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.085504314 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.091955493 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145447062 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.074595682 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080637354 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.072118652 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087510222 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0727541 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08048179 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074543657 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.080630599 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080834326 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.071768536 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.079253529 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.075543209 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.072055711 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074341843 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082045716 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076824608 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06935444 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075156081 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097472871 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08463982 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072975458 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076986323 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081298471 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080391545 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.068091422 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.073839708 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.074143188 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.072289883 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.083957912 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088878484 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077239936 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082987383 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075011755 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083221603 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.068815095 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.078688898 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081525345 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085055519 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.074424075 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.074608325 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06883485 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.073024825 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.078570194 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.069124503 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074506199 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.069459729 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080794564 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.078089248 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084504542 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.072986234 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075945642 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.077263254 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076858745 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.080226713 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.076278559 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076475359 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.073445303 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084241364 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079649026 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082744441 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.069021323 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.068183931 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.071667881 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084278847 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097890375 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.080200766 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.074611117 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074630976 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.071336753 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077990961 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074322675 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079349074 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080637163 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.073913862 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079662637 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081202348 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074797529 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076547775 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.080866535 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.072498216 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.076475001 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.072295717 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090386622 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.073038182 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071773466 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.072373163 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08690035 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.078218698 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.072987187 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.07182842 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081401493 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.067585194 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.07405863 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074258442 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0747647 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.083748367 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07772338 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.078633602 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.083021801 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.081847265 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073895285 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.076126012 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.070083321 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073948267 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072620663 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.080950065 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.067212526 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076225355 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.074047093 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.073105701 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.081495934 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.071569881 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.072794686 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079951875 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.078749959 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.07132194 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.069557644 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075716799 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.073254089 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075662477 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080782522 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.071340469 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.068351619 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.067830668 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.076368998 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.072065338 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.076681452 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076093781 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075567844 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.066892116 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.070516148 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.076514042 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.081734073 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.073547704 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073352458 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.079297532 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.074351842 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.072121462 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.079488588 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.075031258 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.072072237 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.078662559 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.073587744 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.067432933 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074244051 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.075012885 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.071722158 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.076620926 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074950545 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.074634605 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.072659965 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071117517 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077820102 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072467044 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.072161795 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072921727 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.071313774 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082644286 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.074529654 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.067518075 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.069779424 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078745311 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070763707 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.071641792 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.072078222 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.075411465 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.073886089 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.070585852 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072062621 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.074827715 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080695141 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075482366 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0727509 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.077653596 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08483241 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072232931 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.075450132 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.072826488 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073236932 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.072986508 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081547535 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.078048937 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076097962 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.075279484 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.069118802 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077547684 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080097702 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.072648591 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.070013963 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.072129515 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.076205551 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.078003149 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.075884477 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.073129017 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070814308 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073473108 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07563957 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.075028105 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.072935604 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.072301174 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.077174807 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.070551984 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.078312499 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073313646 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.082574157 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075778232 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.067396924 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074644837 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071157129 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079016969 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.068592707 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.070956319 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072352519 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.073301333 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.072920992 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07519249 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.066573565 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.313641787 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084488496 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.077487631 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.077578196 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.07740395 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084587203 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07965888 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08135159 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.082115971 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.083739412 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089109577 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.076485453 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080514359 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.088641621 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.076900179 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.071295521 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.085128936 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.074879806 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.07503346 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.075935425 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.075144633 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079697633 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082962129 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.082533496 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07054615 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.078662139 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.075484844 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.075943722 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.071393971 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.080606982 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.079300342 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.076474366 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083476964 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076200964 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.076053483 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079666993 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.075405739 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.077093094 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.077541187 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079667508 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.076883973 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.077484131 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.075849998 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07906129 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.074798304 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.073652113 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.078402433 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.07529251 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.075982984 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081166697 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.07479427 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075342739 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.077355039 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.074480963 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075612448 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.075119063 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.074373732 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077408784 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075863096 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.075170846 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.077716871 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.069554956 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081793411 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.073687672 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08170687 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074843841 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.072078298 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.080141047 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.076894228 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07982358 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.074476402 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.074837351 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.075961952 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.073821065 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.077515752 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081460424 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.072639529 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084842601 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081780118 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075247039 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.078171102 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.075158569 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.075549805 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.073713511 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.075703673 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.07507801 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.074881401 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.074290854 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.078666055 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.076616574 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074617675 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076021943 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.07482661 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074638166 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.07580372 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.069453702 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.073918645 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073539158 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.073919298 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083938207 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.07519518 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.074188191 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.073092041 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074903576 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.072868599 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.070631648 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.080737164 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081109399 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.074114193 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08122227 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.073396707 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.075890781 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084057359 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067604834 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.072205156 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.206070236 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.074117582 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082352549 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.076316756 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08486497 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.075338433 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.073990885 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.072437418 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.075627396 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.072976754 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06961766 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.072728846 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078675344 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.07384688 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073967355 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.075219819 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.077841397 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075153557 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084472978 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.074439876 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.076550377 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.074891601 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.072361926 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.074109433 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.074168912 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.077979463 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.075034039 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.072380245 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.072212412 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.074663515 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.075269263 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.075431801 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.07527352 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.075925082 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081546406 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073972796 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.078915889 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077456628 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.069902684 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.0774149 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.074501822 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.07417535 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.074277488 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.078206463 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077592798 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075473313 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.083608232 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.074384445 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078027619 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074594599 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.072465946 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.073382219 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.074192354 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.073038471 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073851388 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.075359724 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081723096 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.072077116 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.077717599 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074246052 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074584461 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080982539 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.074618357 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077560415 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080269271 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.074640693 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.075957276 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08211626 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.077632735 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076902206 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075179275 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.075856063 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080481841 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.073442318 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.080913027 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.074408521 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.074786781 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.075633665 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072716294 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073609313 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.073845301 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07314207 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.080109702 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.074753471 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.072997341 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073477771 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.072188137 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.075331112 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076280108 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081842843 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.077215852 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077198017 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.069036259 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.071087629 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074322345 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.072243249 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075774485 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.077264079 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07972228 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.076657677 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.074567644 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.073222038 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082737624 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080356513 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.0782154 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.072203566 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.077179067 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.07493821 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075970975 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.074926178 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.073959427 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074507729 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.077812678 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.075193436 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.07295427 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079845313 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076653248 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.210288498 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.077151373 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.076410883 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.074782309 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.069792316 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.07473982 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.076540058 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080950087 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.076578933 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075655408 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085504676 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072044283 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.0760649 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.078187631 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073936553 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.079581688 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.069830062 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.076926099 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075207697 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075661989 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.070025757 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.073812329 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.072843508 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.077593605 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.07417364 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06935748 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08610436 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.084727354 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.077487746 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074351193 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073286057 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.069559136 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06984719 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073800806 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074935061 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076692356 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.084646719 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.073422753 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.073436882 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.069252915 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074713778 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077147207 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077527365 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.071139275 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.068912543 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.074370532 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077593543 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079383105 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073427819 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.073254342 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076907235 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.075977778 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.072027991 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076499658 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.071316475 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077793624 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086754722 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.074169957 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075417006 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.080650775 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082103099 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.07471509 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.069580364 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.074394556 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.077594256 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.075434224 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.074813206 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.075167377 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089068711 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077652813 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073625863 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.073210155 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076767168 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.074220603 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.081889478 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07515038 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.075128632 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.080943659 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075964652 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08141808 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077269151 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081153604 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.076969763 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.077670352 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.073373948 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074761297 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.072142917 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073736101 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.074579051 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.07426255 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078200915 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.081047921 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.073902205 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084710729 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.083428838 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.075999429 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.071208567 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073402187 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073955916 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.069252299 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.074835822 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.072091969 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.072341385 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.072616079 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.073589521 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.075490613 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078367534 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.074851071 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.073803413 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.073381164 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06810267 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.077113627 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.076803741 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07496139 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.070906353 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.07361695 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.0741791 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.212134191 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077863791 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.073238078 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.076947202 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.076442387 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076862165 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.070067503 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.081585603 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074237828 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.077213216 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.07403443 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075142726 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.074771483 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077689485 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.079203451 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.075842777 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076533048 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078239212 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.076572636 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.072207531 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.07160555 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.080023155 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.072284975 seconds)
  done (took 47.382786927 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10789569 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071298956 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069612196 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069707778 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079465973 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070853094 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069071599 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07029101 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070094934 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073075639 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06948365 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069850558 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077145091 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083947356 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079807869 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074176351 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068754141 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07027065 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069544245 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070180236 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077158285 seconds)
  done (took 2.982533697 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.082075563 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.085525849 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083827129 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088967785 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078535667 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077408515 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082882823 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07766637 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085446731 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080328163 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084764522 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077135371 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07965792 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.079407785 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079443309 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07772465 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084689752 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078353048 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.077276975 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082582409 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078269437 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081992418 seconds)
  done (took 3.196539137 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.075415517 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.07403899 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.075504301 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.069511103 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.073779397 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068838278 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07620155 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.07140744 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.076131754 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.07278467 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.072414084 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.072381753 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07561751 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068809301 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.07395486 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.071106988 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.115147755 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.077111314 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.073650554 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.074974217 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06893422 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.075336881 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.069040675 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06931645 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.072711681 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.076537744 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.074079127 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.072263373 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.07329661 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.073543424 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.074281401 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.071200327 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075210126 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07402219 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.073130543 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.07294427 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072700079 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.073687978 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.069769866 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.072168441 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.074100804 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.071346607 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.074409568 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.074962306 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.071765896 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.07161522 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.075101813 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073592634 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068788516 seconds)
  done (took 5.034038865 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086910536 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.119042624 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.075788361 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.096593352 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.087160931 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.079358115 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.077739914 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097844334 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070861984 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.071918029 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088087175 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.086153406 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072947233 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076861023 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.077062703 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072819251 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.074432361 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.073178301 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.076121284 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072252742 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.077047009 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.080756688 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086789265 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.086159607 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076741 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.072220255 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072515605 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076909165 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.085071199 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076673987 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.077598208 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077873799 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087506546 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075290878 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071822719 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074381089 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.088276993 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.072886407 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.075366085 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.070437112 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.075005246 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.076932653 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.080710901 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088339069 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072539933 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.077903622 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072983378 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.070722141 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.085176381 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.075379817 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079877902 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.086778882 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076498579 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.072636409 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076647506 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.087043188 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.072434203 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.071237639 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.075794907 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08465609 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070851826 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076329808 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085596605 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.075083022 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.079717841 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.086610196 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.078897222 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.077534767 seconds)
  done (took 6.940705875 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084213148 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103927077 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090601504 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090412384 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082921005 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.083336446 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083407696 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.083082252 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083654835 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08731623 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08338121 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123229863 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.079033286 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085593425 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09063253 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082768656 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.082849868 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083446881 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082998042 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082991756 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.082872096 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090271836 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082811855 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089985079 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086507657 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078582424 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082831205 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082680884 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089325407 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083063757 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086539075 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.083211421 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082670668 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.090253852 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086852044 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.082273632 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073111872 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082385876 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.083176861 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083173817 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078617402 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089910959 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082251499 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078766103 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08296511 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083214496 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089252431 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086325646 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085417612 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087542898 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.082902112 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089349965 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082941312 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082782076 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090818728 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.092489061 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089299935 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089986186 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082819526 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089169522 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089095496 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.091833628 seconds)
  done (took 6.773030909 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090245841 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.082222266 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09073207 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06955652 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071676788 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080059659 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071503689 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.072300875 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081707538 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.083687717 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082785421 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079080842 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082000702 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082575464 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079104253 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08153794 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079087774 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078921138 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080834667 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078910552 seconds)
  done (took 3.041495296 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.082456987 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090793047 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.074960586 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079189045 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.077381404 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.079105233 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.076395381 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077658686 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07456555 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077319356 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.083074382 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082783316 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074394368 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078590704 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082673225 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078768242 seconds)
  done (took 2.702514531 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09251939 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.080692276 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.087475177 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.074124085 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.074462428 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.070425934 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.073087979 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.068988118 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.070341313 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085856338 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.073216812 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.083873688 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.073397907 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.072930573 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.070528441 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078510485 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.069579699 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.070481388 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.073461673 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.086014409 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077921669 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.071732243 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.077008919 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.0733839 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075977248 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.078943653 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.07199504 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07461014 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.071183566 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.073688793 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.076884723 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076504537 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.071085716 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070970852 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.072596588 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.070572741 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.073065508 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.073521455 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078380656 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.073467907 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.071726999 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.076386749 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.073022272 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.074266458 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.069759521 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.073746015 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.069623559 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075442882 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070956943 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.075772823 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.073088882 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.07576284 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073687147 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.080343882 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.076010321 seconds)
  done (took 5.555675897 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088072255 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077529176 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069685585 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071867317 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07683133 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.075224659 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076631277 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074971796 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075174764 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.072036004 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074943506 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.0764022 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074987015 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07684438 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074853855 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0767977 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069144595 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075199711 seconds)
  done (took 2.80338335 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079968188 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073569997 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.080685064 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074761028 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.07354677 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076016452 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069209768 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.072958863 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071958043 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073782584 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074123538 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07612029 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072084806 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.076168735 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07317256 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07430198 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075928802 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072972368 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07332357 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069397262 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075891969 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072330703 seconds)
  done (took 3.069935953 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.102249228 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.091327186 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.152004461 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.088145806 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.09300473 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07999705 seconds)
  done (took 2.046057521 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09942099 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108498415 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074989955 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077733278 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082632905 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077154967 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077021824 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077406352 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085068239 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083572519 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077646017 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085391872 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085224588 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084594053 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083036311 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082507319 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077722514 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079634067 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073963488 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089583106 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078304174 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085727715 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077353913 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077050771 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077289784 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083952203 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084937647 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082211574 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076906679 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085146897 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082736421 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077399773 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085714742 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082427291 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076489695 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084575677 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077400604 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089854969 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082303368 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083804785 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.076863978 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08323119 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085287584 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081602521 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085251043 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077640824 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081584533 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078364498 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077788531 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091468199 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082972385 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084417646 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083288545 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084959546 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085118539 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09178174 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083281192 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083998647 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082823819 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082454044 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084648426 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082322488 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084305134 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082429048 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082852781 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084896091 seconds)
  done (took 6.902138383 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11263584 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075017006 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078049225 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082766702 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084221228 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078009877 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077652471 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077722621 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077433567 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074359601 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114960797 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078297029 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084359424 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084778174 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077475764 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077378276 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077241987 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083837826 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074520319 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092033253 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078339489 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083956573 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08440393 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083596746 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08342702 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082533547 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077596122 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077531649 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077540463 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077161188 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08144091 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077365576 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084012705 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074413766 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084987192 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077465131 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077868149 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081528678 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077569779 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082896103 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08415222 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089784409 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077340745 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077570131 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08249095 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077436647 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077664077 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074631673 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077365747 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074696243 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082323601 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082550593 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082475228 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0842173 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077854159 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078174504 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077483209 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077378642 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077633845 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082949644 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08429425 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077534928 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092340058 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07775999 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077629251 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084168702 seconds)
  done (took 6.819858088 seconds)
done (took 142.145821298 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.19562132 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.176592719 seconds)
  done (took 1.805866204 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076452228 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106937151 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08580423 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136574002 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.075045697 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.108295762 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.107190515 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.086203765 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.074049466 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.074123983 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.074533616 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076069054 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138518039 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.074512198 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073865098 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076356184 seconds)
  done (took 2.892657713 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107426687 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171509632 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110446585 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072668756 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106661998 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08006478 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073284081 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082833458 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078372414 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073184218 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080306217 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07751243 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072788222 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077359933 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.080249429 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080521094 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072582493 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079570531 seconds)
  done (took 3.027865054 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106685225 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.0990841 seconds)
  done (took 1.658468913 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162743813 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.141177452 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.211074852 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.355713918 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164903974 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.154436653 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149838459 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.148555312 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119818663 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.143883606 seconds)
  done (took 3.20034427 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.108159437 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.162576858 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278660202 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.126270881 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.080222006 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.1001085 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.1279004 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086093155 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087080516 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.087408456 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.087151486 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.084707697 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.107588495 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080180158 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.081511476 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.083649944 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.111903565 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.081291272 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.082365619 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.083030124 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.109454521 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.073656158 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080098488 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.081465674 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084533715 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084573077 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.074002685 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.074278164 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.083772911 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082348521 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083782242 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.099628208 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.085061077 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.112645958 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.079604538 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.113415865 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.084890702 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.082285795 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.083105012 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.080744526 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.085076424 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.085029254 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080322711 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083908843 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073637431 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.084471794 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.074067257 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.074034995 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.085368102 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.074759706 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.085749006 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.084177939 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.111457999 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.074968288 seconds)
  done (took 6.491976384 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111576956 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.114760129 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078230339 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.118795887 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110807931 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077396946 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111301474 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104324126 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112410887 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077884037 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075344671 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077549867 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086850108 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.087842403 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.123295996 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113968307 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080327166 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07673269 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114962668 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.113107693 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076046308 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106747475 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100584625 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111752526 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074972101 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07740774 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075904362 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077137642 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083410231 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08436979 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076055269 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085878022 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090407514 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084215366 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074476363 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075177969 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075862077 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08681693 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085790697 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085383018 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.084704 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075332021 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075634918 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076553531 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076955638 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07474791 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.085605377 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.085909951 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.085565528 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075700903 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077836454 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.076931682 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077361035 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085581472 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083400414 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.086508291 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085888458 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0759874 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075829927 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078679033 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086158941 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085912704 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085689227 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077566906 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086373654 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075824326 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086852803 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089546449 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076464695 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076859365 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.076833114 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075949216 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.079403378 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.084055009 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.084366971 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076940885 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075655212 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075779607 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08641914 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084465686 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075444992 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08337618 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074993564 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075592737 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076796755 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077370096 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.083473228 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.086073348 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.083900141 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076599611 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076138041 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075269993 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074832116 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.082994707 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085536684 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.0851591 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.083945398 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076422804 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.084629806 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083855341 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076768822 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.084931725 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075429823 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076918146 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076277323 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084083933 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.083543065 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085531924 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075143569 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07589541 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.083429449 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086318485 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075445395 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.083149528 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084503848 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083141766 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.073446607 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085925627 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075400249 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084298528 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074714722 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084484091 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074599567 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083477055 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074490645 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.074743757 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.074910614 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083834509 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076208653 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074216763 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075323691 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074561297 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082620557 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086492908 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076479015 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08267526 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.083508722 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076197316 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08220609 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074115236 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08323024 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074606548 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075247285 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073805658 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085136359 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074708327 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.074869341 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074538895 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084051769 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07492992 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084080084 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082076079 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073449569 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085765075 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084397244 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081621021 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08474282 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075673556 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07412398 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07389054 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074539468 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081557705 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083369782 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076768607 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074727462 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081692792 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.084128282 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.073331435 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08247226 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083029344 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082356095 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0741275 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074316698 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086485661 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084150528 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.082338865 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081974247 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.0828147 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074415738 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082112802 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082389804 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074607971 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086724838 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075116781 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.087150208 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082515505 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081382467 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082857135 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08340381 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083797839 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083908257 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086640272 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074456111 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07436525 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08278816 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074001268 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07407696 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.081891224 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.075835627 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075116757 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086290311 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.317266639 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.090121494 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.077671172 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.088382305 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078823964 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080445449 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093735147 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.079499424 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080704116 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.0894761 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078610599 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.088476731 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.090849258 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08764893 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.079368295 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079911116 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.088849639 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.088626237 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.081492099 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.078345806 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.079588108 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.086906176 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.086474547 seconds)
  done (took 20.181977671 seconds)
done (took 40.723140184 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21531549 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15936603 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179005923 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.12454889 seconds)
  done (took 2.242982482 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.124743782 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.110084853 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.099865228 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.074685577 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.106709836 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.07446747 seconds)
  done (took 2.092764217 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.304872737 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20929589 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188708863 seconds)
  done (took 2.204706413 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215107195 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.196950907 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.456031868 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.27991773 seconds)
  done (took 2.760697129 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.152299004 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.094680183 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.075906225 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.092139396 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137278923 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164249464 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105264847 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130223059 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.087516835 seconds)
  done (took 2.595888913 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.15198694 seconds)
done (took 13.553923949 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.111805943 seconds)
    (2/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.113402702 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.218187615 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.158850539 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092050918 seconds)
    (6/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.195090241 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.148847831 seconds)
    (8/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.217385009 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.090783291 seconds)
    (10/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.19556227 seconds)
    (11/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.091302148 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.086560355 seconds)
    (13/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.242452365 seconds)
    (14/309) benchmarking ("sort", Float64, false)...
    done (took 0.14026543 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.081641331 seconds)
    (16/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.121099957 seconds)
    (17/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.110715886 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110039941 seconds)
    (19/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.238423521 seconds)
    (20/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.232920086 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.146841948 seconds)
    (22/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.22421011 seconds)
    (23/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.08184385 seconds)
    (24/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.084637698 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.21245795 seconds)
    (26/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.085379801 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.081860972 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.099950557 seconds)
    (29/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.252657105 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.117781702 seconds)
    (31/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.096374692 seconds)
    (32/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.191108483 seconds)
    (33/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.292602815 seconds)
    (34/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091753364 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.079874377 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.108443449 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.097529246 seconds)
    (38/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.166920961 seconds)
    (39/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.1717368 seconds)
    (40/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.184826464 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.097976294 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.084810817 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.203912423 seconds)
    (44/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.115763697 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.099903204 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.081623333 seconds)
    (47/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.058573754 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093248974 seconds)
    (49/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.21372511 seconds)
    (50/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.100987856 seconds)
    (51/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.081806571 seconds)
    (52/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.08349304 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.192572934 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.097851481 seconds)
    (55/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.170779916 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193572457 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075979727 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.184059218 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.173491901 seconds)
    (60/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.081399019 seconds)
    (61/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.078745004 seconds)
    (62/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.115932504 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.174555602 seconds)
    (64/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.085694214 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.185698622 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119476202 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.100165218 seconds)
    (68/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.087816505 seconds)
    (69/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.084458722 seconds)
    (70/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.087318531 seconds)
    (71/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.081366641 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.211924414 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096942728 seconds)
    (74/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.058280156 seconds)
    (75/309) benchmarking ("sort", Int8, false)...
    done (took 0.151175311 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.059545705 seconds)
    (77/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.123604886 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.084380877 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.300353997 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.073821026 seconds)
    (81/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.157651685 seconds)
    (82/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.086382197 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.193429175 seconds)
    (84/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.086628649 seconds)
    (85/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07980223 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.158821839 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.075250163 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12431763 seconds)
    (89/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.082455333 seconds)
    (90/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080587172 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.133746818 seconds)
    (92/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.070791146 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.058254461 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.075872465 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.080077996 seconds)
    (96/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.060433204 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.192484879 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073647665 seconds)
    (99/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088570247 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.082767655 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.161322468 seconds)
    (102/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074932167 seconds)
    (103/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.079365249 seconds)
    (104/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.109624568 seconds)
    (105/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.060621962 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.100343463 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.184371157 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.08156618 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094514095 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.189935725 seconds)
    (111/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.110990226 seconds)
    (112/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.07122255 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.073617344 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.059764779 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139910276 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.097675581 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073434024 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.137724512 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.154934012 seconds)
    (120/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.071172256 seconds)
    (121/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074497159 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.156735454 seconds)
    (123/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.083652704 seconds)
    (124/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.20332105 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072090515 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.095930994 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.105913276 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.147714562 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.081884377 seconds)
    (130/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.170146903 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.081255103 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.163375508 seconds)
    (133/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.084898867 seconds)
    (134/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.058622278 seconds)
    (135/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.089727844 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.079657774 seconds)
    (137/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076407105 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.080870447 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.059047141 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086059547 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.080086981 seconds)
    (142/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.079703738 seconds)
    (143/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.058684102 seconds)
    (144/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.126506363 seconds)
    (145/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.154948705 seconds)
    (146/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.097726817 seconds)
    (147/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05834599 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073777062 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.081144618 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095255072 seconds)
    (151/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.080197721 seconds)
    (152/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.072874734 seconds)
    (153/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.211793008 seconds)
    (154/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.071629899 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159145891 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.081808573 seconds)
    (157/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.058859648 seconds)
    (158/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.077237129 seconds)
    (159/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.058755144 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073810905 seconds)
    (161/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.058855364 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.07314427 seconds)
    (163/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.107976623 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.07248775 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.080975378 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.059475521 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.074441182 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.072579844 seconds)
    (169/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.059467965 seconds)
    (170/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.122012411 seconds)
    (171/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.07864094 seconds)
    (172/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.057929267 seconds)
    (173/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.058327952 seconds)
    (174/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.058537231 seconds)
    (175/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.081762838 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.072625666 seconds)
    (177/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.11875687 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072224794 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.080069258 seconds)
    (180/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.080140425 seconds)
    (181/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.1609413 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.059315619 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.072688735 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.081726641 seconds)
    (185/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.058264719 seconds)
    (186/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.057789069 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.07299532 seconds)
    (188/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.199383337 seconds)
    (189/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.108870201 seconds)
    (190/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.187806858 seconds)
    (191/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.087515296 seconds)
    (192/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074679672 seconds)
    (193/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.072825812 seconds)
    (194/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.059150894 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071348704 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.098510371 seconds)
    (197/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.058941363 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.154121942 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.057658616 seconds)
    (200/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094220008 seconds)
    (201/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08769484 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.162044655 seconds)
    (203/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.058166458 seconds)
    (204/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.070732182 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.105532595 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.072753583 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.081256979 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.098529399 seconds)
    (209/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078103776 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.07638407 seconds)
    (211/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.080769407 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.081309877 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.079990594 seconds)
    (214/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05905779 seconds)
    (215/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.082425998 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092740668 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.095162147 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.116976292 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.071878286 seconds)
    (220/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.057932792 seconds)
    (221/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.058246232 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.097157659 seconds)
    (223/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.087808182 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071543594 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080463911 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.078158842 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071507272 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.070818166 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084387927 seconds)
    (230/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078988415 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.071540983 seconds)
    (232/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.075901111 seconds)
    (233/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073932944 seconds)
    (234/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.16334128 seconds)
    (235/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.107385799 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147415296 seconds)
    (237/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.069164638 seconds)
    (238/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079309715 seconds)
    (239/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.058105124 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059450284 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.191857358 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095644872 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.073399748 seconds)
    (244/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.082161094 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145438651 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123757466 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.059917032 seconds)
    (248/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.059233498 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071622432 seconds)
    (250/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073417948 seconds)
    (251/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073578313 seconds)
    (252/309) benchmarking ("sort", Float32, false)...
    done (took 0.140111394 seconds)
    (253/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.081648089 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.079022997 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.057497452 seconds)
    (256/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.070039247 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.058707328 seconds)
    (258/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.080225629 seconds)
    (259/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076852502 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.069053175 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093740213 seconds)
    (262/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.074433276 seconds)
    (263/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.058247466 seconds)
    (264/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.057649511 seconds)
    (265/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.127938733 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071624366 seconds)
    (267/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073542631 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.182976992 seconds)
    (269/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.070382914 seconds)
    (270/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080573735 seconds)
    (271/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06022994 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.104325772 seconds)
    (273/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.05769644 seconds)
    (274/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073960889 seconds)
    (275/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096465492 seconds)
    (276/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077434107 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.080421188 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099752554 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.070491307 seconds)
    (280/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.072526658 seconds)
    (281/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07829976 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07044797 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119396386 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.079404106 seconds)
    (285/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.057784392 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.073057622 seconds)
    (287/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.08022501 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096964916 seconds)
    (289/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.057462399 seconds)
    (290/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058694342 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135809232 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078343505 seconds)
    (293/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.057553412 seconds)
    (294/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074693647 seconds)
    (295/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079047798 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.059075451 seconds)
    (297/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078459181 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.097182109 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.071834304 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071882672 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.057499363 seconds)
    (302/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.068180803 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077196919 seconds)
    (304/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.061010298 seconds)
    (305/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.056954075 seconds)
    (306/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.057298272 seconds)
    (307/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071811824 seconds)
    (308/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058189584 seconds)
    (309/309) benchmarking ("sort", BigInt, false)...
    done (took 0.492706649 seconds)
  done (took 33.621615412 seconds)
done (took 35.138822203 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091499301 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10252819 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.085854838 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.104324726 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.090392874 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.085971373 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.082969945 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.088089135 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.090691097 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.092512709 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.087628379 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.06402942 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.085283004 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.084449758 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.085071102 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101879511 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.088765932 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.082622078 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.083000927 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.074061248 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.083283882 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.075070305 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.076467984 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.063224457 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.087956632 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.08121197 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.081679285 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.083703183 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.074717044 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.074827152 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.078405952 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.083366467 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.074356399 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08778886 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.081174962 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.082587974 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.083597315 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.085957442 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.076376248 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.074860307 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.083303723 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.074182992 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.08187647 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.082962586 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080912537 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.080238403 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.08190465 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.085816622 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099655702 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075680991 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.083560739 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.085155479 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.083804635 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.081282504 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.078704101 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.081061967 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.078664284 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099830385 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.081788392 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076040509 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.082933342 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.082554049 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.079232798 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.082044065 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.081539127 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.083793042 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.084367026 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.079479055 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.083100042 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.080379468 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073703272 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.081523732 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07720795 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.07345253 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.084776983 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.086157698 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.071985031 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.080081676 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.0810358 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078951698 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.072478462 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075922082 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.075541363 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.080650748 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07519035 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.064079525 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.077588436 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.0802478 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.072554397 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.081828171 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.080338573 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.081501258 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.075782258 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.084549931 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.072821956 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.078737074 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.074282974 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.073206503 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.075080887 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.077959672 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.07299019 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07582062 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.083044396 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.075020763 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.080394602 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086604219 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.073507238 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.080887577 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.072279257 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.072270887 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.087228651 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.082881635 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.073998813 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076090955 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.072453848 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.081209569 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.072141972 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.073185523 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.072832118 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.072914121 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.079138094 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.073104984 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075104606 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.080496961 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.222147085 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.073437816 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077974313 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076476978 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.073640364 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.0794839 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.074211988 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.074201614 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.075591527 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06921503 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075651143 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.074324894 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.081717403 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075383962 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.081958183 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.075939597 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.08313309 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.079144574 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.080224533 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.079274096 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.072680989 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.067277698 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076486646 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075909784 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.075068914 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.073800907 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07485415 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.074283562 seconds)
done (took 13.872404523 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07445466 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147308434 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.104798414 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.102694722 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.092629 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.074041555 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.082545747 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105297969 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.075769113 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.106799801 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.095851311 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.093634442 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120565877 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.072440042 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.073715587 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.077980106 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075263883 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089013814 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10677728 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.095248051 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1209706 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.073406278 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09928587 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.097032071 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.094804829 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.109846319 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.074080904 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07805115 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07778611 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099134662 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.0963524 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.077535862 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.074215039 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.105529645 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100909264 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090206356 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.074357405 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089859754 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074014999 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.073176896 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.075016088 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105351585 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087349609 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087581332 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.077641607 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084949277 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.074816568 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089837825 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096147856 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085682375 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.092399257 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.107974712 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.076238711 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.091305057 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.072257934 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.09281716 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.084271574 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.076413524 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.073661241 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.082428162 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.074318278 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.077046818 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.087873326 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.087640632 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.078223143 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.092232238 seconds)
  done (took 7.452170714 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.092285825 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.099960228 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.091808978 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.091437769 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.073116176 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.074326474 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.073693986 seconds)
  done (took 2.226852373 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0747085 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.096205091 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.097475387 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.097566447 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.089922766 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096550462 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086101077 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.074678856 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095974497 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.07564884 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.096177244 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108144758 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.077397613 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081219433 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.098999964 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074787585 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.099284575 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.074357963 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077426485 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.098807356 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076879314 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.104007201 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077656161 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.074231288 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088650224 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.074589663 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122277146 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078901737 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076466073 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.077908855 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072570047 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.114732143 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087904625 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081687865 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074445062 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088754331 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.089761554 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072754613 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.092458 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.082866622 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.088391369 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.074439969 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.075125221 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.072380171 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.078562397 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.085769459 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.075045946 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075232405 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07748517 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.094075548 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07577255 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08834821 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077549628 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.080012851 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075947774 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.081444081 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085465856 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.075692172 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.094606102 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076608839 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091228867 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091078993 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.088365842 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090453474 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076697478 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088352332 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.088575262 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.077632288 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076549935 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078501101 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090418959 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072590568 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.075845057 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.084807899 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076273751 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.097919431 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.097861309 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07601903 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.087718442 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.076102271 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.074805397 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.075218877 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.097556446 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079947474 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075217484 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.078617452 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077674884 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072726989 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073964498 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.078578852 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.072448392 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.076558543 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.077360589 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.077658838 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077610326 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091630489 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.076825052 seconds)
  done (took 9.721971469 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.077311111 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.076960563 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.077528071 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.076697787 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.076017667 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.075593649 seconds)
  done (took 2.114233749 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101789941 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.076227763 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.087501781 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.079649994 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111899348 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.095019746 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.094773385 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085654291 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.091300048 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.086696869 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.094680653 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.096742183 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.099504188 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.080009793 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.094425973 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.079270895 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.094976642 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081859612 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.085979322 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08012236 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09317097 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.079682333 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080617586 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089460137 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.08375411 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.079311923 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.085798999 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.086223437 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08571989 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085798743 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.079452898 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.084057531 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078237931 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085220774 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.09506203 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078545294 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079160874 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.084360548 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07995971 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083678286 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.095442883 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080338216 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081721471 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.084608102 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.08477302 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078204777 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.084409066 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.086860468 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.094615349 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.084512666 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.086737474 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.079048167 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.083466039 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.084733491 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078160242 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085601083 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.084498935 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.09533598 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.079886343 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.0787846 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.076501096 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.083588957 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084837164 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.083537728 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085270541 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.084348983 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077813919 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080970268 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080578317 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.0790465 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.084558183 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075525756 seconds)
  done (took 7.769879494 seconds)
done (took 30.901533458 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541980619 seconds)
  done (took 2.15712696 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.63235168 seconds)
  done (took 2.271614112 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.023563966 seconds)
  done (took 8.658223262 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.395961648 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.496290042 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.739161716 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.14057896 seconds)
  done (took 3.448133046 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.72785304 seconds)
  done (took 2.374562014 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232310561 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222463745 seconds)
  done (took 2.105828393 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.387739748 seconds)
  done (took 2.028618359 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.164822178 seconds)
  done (took 2.808130232 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259259914 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184602731 seconds)
  done (took 2.084292386 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.496307407 seconds)
  done (took 2.135687276 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.901913494 seconds)
  done (took 6.545689243 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224717264 seconds)
  done (took 1.908487029 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245571136 seconds)
  done (took 1.885234481 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.767936722 seconds)
  done (took 3.410556896 seconds)
done (took 45.471781679 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.091898272 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.093404564 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.093235223 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.089056798 seconds)
  done (took 1.997417505 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.085337378 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.080930356 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.085364674 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.081345331 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.084496538 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.080466329 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.081765936 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.083214193 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.080211368 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.080741999 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.080561521 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.080293793 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.083148462 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.081514087 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.078557256 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.082856449 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.086973168 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.080623326 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.083504004 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.080330588 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07798456 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.082668872 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.082298047 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.079643486 seconds)
  done (took 3.611543633 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.086966071 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.080840464 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.083033449 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.079812014 seconds)
  done (took 1.978835764 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.085849625 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100905079 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.097135561 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.087276092 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.100873391 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.094313144 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.076643604 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.076639383 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.078443985 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.085068267 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.075900518 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104073144 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.096394096 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.085407527 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.087402251 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073329481 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.076261186 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.096022365 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.085619126 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.085728846 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.077597188 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.085263916 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.075637642 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.096215459 seconds)
  done (took 3.729209273 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094283027 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109820887 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.089308627 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.097760286 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.099045447 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.072789349 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.095135111 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.098962643 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.134516716 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.072645927 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07841907 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.07359677 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.081406282 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.072809202 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08862074 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.115819436 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11957201 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.076488725 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.104581571 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.073164389 seconds)
  done (took 3.503568282 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.081423495 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.077123163 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075317022 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07361059 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.086127485 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.08022987 seconds)
  done (took 2.130220947 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.074973331 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.077490501 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.075206073 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.074590364 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.079611265 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.07477463 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073258763 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075311251 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.07495538 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.074253174 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.074430502 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.074125319 seconds)
  done (took 2.553714286 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.208102933 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.076092936 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.076788611 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.073655216 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07879255 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.074157269 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.089248247 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.075592054 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.100892404 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.073910245 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.074440128 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.075842481 seconds)
  done (took 2.729483908 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217656697 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083873987 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244305651 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159164705 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120167716 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123296443 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120215398 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123815079 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14976951 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107955481 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174003642 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174925105 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11521327 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144437284 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097457455 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106377197 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163024044 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171020757 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113051971 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172473379 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153785585 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13384761 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153945035 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109613666 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11266956 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129562716 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.078606171 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088334693 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175945571 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139710103 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151633704 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118574351 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100578213 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184959238 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178236919 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148335584 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156555992 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093142341 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.109897682 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.14134675 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206505057 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09755302 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170150466 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257066156 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08981751 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14131206 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127458528 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.127334723 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.112964694 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097911639 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155374348 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192432897 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.146951374 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096717672 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132877515 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122772967 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.123471909 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122172216 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188345359 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167627441 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135461748 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.079849269 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115978646 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157591884 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139622561 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.116145516 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.13116635 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099232769 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142144701 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161297534 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130565966 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150680766 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.125162031 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096416827 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126365466 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149051982 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135169942 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166455745 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130723443 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.080464637 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131275727 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112585939 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087721808 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.155916291 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082384319 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180282117 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106313425 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.112627894 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133140003 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116393541 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116104869 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167321561 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.293917902 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112089068 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073100691 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114728891 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.127931549 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156324381 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09554038 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116214677 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124312324 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.086175221 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146493093 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.083445727 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130793264 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082756493 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130728235 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138330758 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.085224254 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130868076 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11124393 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.107637236 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141135547 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164156565 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094757496 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090145988 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174258385 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128285044 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.109481488 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150861209 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163058641 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.106434918 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108472977 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157437235 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17903084 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096943538 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168316995 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114323549 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090979052 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.095006906 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129344585 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118182273 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.131965353 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088624218 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.12488162 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173717949 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.082593235 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103164211 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140247908 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086434412 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08759649 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112675921 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112348428 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.103580169 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.106982215 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.108580978 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143420489 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129275001 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.257090181 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133459683 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107665165 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181110672 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096248132 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10939724 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113387991 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.077884932 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.142300729 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165908829 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087053203 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169472262 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.131064903 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124747136 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12608053 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090647316 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146645246 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08698955 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.077223587 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15113959 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118104417 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117589319 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156393833 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123410657 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.131563448 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.125069526 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141038562 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136871032 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.135554612 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113148038 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.095178333 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11888054 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13450524 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.080326622 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097625509 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086917541 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11163414 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10274815 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090597915 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147618287 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130299267 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116164028 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118226881 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103365819 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153004202 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.083176517 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133882483 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.125603599 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102550352 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.157844318 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156910282 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138037532 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10516122 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143036783 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.221024965 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0825018 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.098168131 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128960874 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091954256 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091638645 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127127389 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153803594 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137378378 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145256415 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132150533 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1287762 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160814761 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07790055 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.126387324 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152494533 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127474972 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.111388926 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098098155 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.106720802 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148299559 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115142362 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187652495 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119332863 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130185283 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160378561 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.107977415 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087918819 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109402795 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141170164 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11203078 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148184063 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106098043 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094918065 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115056758 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081966812 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106102959 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133631774 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126114711 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140125783 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122029986 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139336001 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084575128 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123077624 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130049831 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129131863 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.071369253 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125793413 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1652808 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101795086 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123754792 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157157152 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086088682 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.286250327 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182850331 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152413517 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093321722 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117589658 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126917005 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135190166 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126983002 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147285983 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116550109 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144019463 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117879882 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.093714864 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09481406 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104151428 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111575021 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.1023257 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.113388767 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.120490345 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.103270405 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138526895 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110449109 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116636593 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123018208 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.107145381 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097970933 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103026079 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181834232 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124394479 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175390591 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.106095287 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148597136 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168053051 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081639282 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086419221 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.085320248 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146068494 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091168383 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135973863 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.114855458 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123802595 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129485047 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147926043 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102332358 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.075651829 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115142601 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140559836 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132068982 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105322168 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.110514953 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167828074 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.106893001 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086504602 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120192648 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122106632 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.254711714 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178505812 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.070259515 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113255133 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084904288 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089367011 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134146899 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1584472 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.088047198 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.106807677 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125369827 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119286229 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133067921 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112791365 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116049293 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133487036 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159299494 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134945609 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.096573179 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118199216 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135321696 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160253561 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109287684 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104483185 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178530668 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156607353 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.164101742 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.09544526 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120109359 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119516722 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116593261 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144162763 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090688266 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168118519 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089061311 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142169347 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111015942 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0949284 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136564215 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.115115866 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094704993 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152378002 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123298221 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090114053 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084489099 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125431106 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125798825 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112827773 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.082804839 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144078151 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080361564 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137716654 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311781359 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089062451 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113079024 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103411937 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087527601 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115484526 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110164075 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095052368 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.105450252 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177006002 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.093208941 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155038078 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141508652 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119765477 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141196861 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109237953 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.648603961 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.085363079 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156294305 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123661206 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178915228 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106958312 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123710753 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115975741 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129329299 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151895333 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110122649 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.191009443 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137835674 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.122925727 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087903448 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108894701 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11078236 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095078094 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114282554 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119628933 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122353795 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.100210322 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.122708446 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130343484 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.089301549 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102675593 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160684755 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123610276 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150261926 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147406758 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093467285 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124154965 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142139959 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086810802 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.125515756 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.303819273 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114352633 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108464025 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08894976 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109393813 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166072351 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.080730241 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170285083 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126458493 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117042971 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120120671 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118414367 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140312263 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116178181 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127857438 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100123014 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.115893087 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119818419 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088896881 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.085523557 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112186797 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116881065 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104634658 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10403078 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.105505763 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155968306 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.079171511 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10607389 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121691923 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151285525 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178507972 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09542537 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090182685 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125098107 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12239209 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.119188851 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127335113 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.086129914 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089795216 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.086755159 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.085649723 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115118873 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120042503 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121288807 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116493444 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168010878 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.090795088 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.243360042 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10249166 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111403768 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.078094002 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.085673394 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103141622 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105452193 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115834448 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116335553 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309228443 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.103060668 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09740854 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099727197 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.081749686 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091113474 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13424844 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117165197 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124872015 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110756019 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069807983 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116969469 seconds)
  done (took 62.567281805 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.114943896 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.089788356 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.103522691 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.15127261 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.129595157 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.207965728 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.161202372 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196956767 seconds)
  done (took 2.911807299 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075587185 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.103575776 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.111350031 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.090105865 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.073927887 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.075231128 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.236225552 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.088897502 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.073474105 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.103165667 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.084764904 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.076775684 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.439816787 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.073599341 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.074819209 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.068540179 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.074037369 seconds)
  done (took 3.670916244 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.408606316 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.632013587 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.357527762 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.08362722 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.928135608 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.098763809 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.138236653 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.142683447 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.086214826 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.531201749 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414777519 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135548572 seconds)
  done (took 18.718022745 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.089773461 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.08316448 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09837779 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.098531837 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.086664486 seconds)
  done (took 2.298343031 seconds)
done (took 114.078274051 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.090985329 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.62546588 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.061913617 seconds)
  done (took 2.472108555 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092392929 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.093823783 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.094645343 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.091433928 seconds)
  done (took 2.134530556 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.083346637 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.085280864 seconds)
  done (took 1.923888915 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.245750819 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176781194 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.104760288 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.091955937 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.087971316 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.088165293 seconds)
  done (took 2.032252902 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.08005243 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.08387329 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.080478021 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.084909029 seconds)
  done (took 2.089109462 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.085178833 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.059635073 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.062248792 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.065790313 seconds)
  done (took 2.033413317 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095908603 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087951101 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.086358264 seconds)
  done (took 2.028198738 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110212433 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094841655 seconds)
  done (took 1.962591498 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08964223 seconds)
  done (took 1.848322328 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10331871 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.109407325 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.140176173 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118362005 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147037474 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119329442 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.092230957 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092985555 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083700506 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.093442956 seconds)
  done (took 2.857447443 seconds)
done (took 23.754450295 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.087996189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.377693406 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.369096956 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098241213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.677871785 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.364525928 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.976380444 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101705913 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122757864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075209613 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092498386 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.656363522 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.967043362 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332382743 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.953260118 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332547153 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.657423117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076051746 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075394809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076039799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.959848603 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075237852 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075622989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076572175 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.657278865 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.380423447 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07683303 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.333288574 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076463572 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078435909 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.364286421 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077163227 seconds)
  done (took 16.450534545 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078913179 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144265429 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080917999 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093385177 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.078416495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076767869 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.079041742 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.077101641 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128780066 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074882547 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093525481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075913169 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.079273673 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075868399 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095290956 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075666314 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076473458 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076294744 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075633895 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076356518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094697585 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075813778 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076253479 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077501829 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.076274163 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089172868 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077065742 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076473661 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076556657 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078376264 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078964973 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07675993 seconds)
  done (took 4.441060774 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.126488556 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.134541164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082213646 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112260525 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119475078 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078329368 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151459632 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101202622 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.135109768 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075833351 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093066488 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075821066 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.111055499 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076355461 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096320009 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076026596 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076870532 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.077047111 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076356953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076718334 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.095763828 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07578084 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07625256 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076961874 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.076604922 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.090316988 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077131891 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07636787 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076934339 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078353449 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07967871 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076870445 seconds)
  done (took 4.686469241 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.080935525 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.084475284 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.091574955 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.093156406 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.077530343 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.079972918 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.080888971 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.077668728 seconds)
  done (took 2.447415695 seconds)
done (took 29.795524861 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.086941738 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.076720708 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.080938357 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090119762 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.081360688 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.086603575 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.074481125 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.084074448 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080454081 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.081597105 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.082757117 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.075372105 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.079764305 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.075490572 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.082075102 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.075834303 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.088583651 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.079925807 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.087304444 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.088132978 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.078728356 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.081244053 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.083851133 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.087263058 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.087662423 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.087509826 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085689538 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.081014733 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076632928 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.078838704 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.085706704 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.092619403 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.076480927 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.087454156 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.075622286 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.075788058 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07977099 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.075665433 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.087751423 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.084596944 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.078089087 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.084515059 seconds)
  done (took 5.210528655 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.096791673 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.101540015 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.09456409 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.069661144 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.074726419 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.073407999 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.096979847 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.067913342 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067550573 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.096332111 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063615821 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06762708 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.071686534 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.061934865 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.068389879 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064660568 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.069982449 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.063314164 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.068142231 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.068176419 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.096997743 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061640429 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086476767 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.071001416 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.064034445 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.069356157 seconds)
  done (took 3.748180065 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.082809335 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.093094461 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.099416397 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140290372 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113581109 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.087466225 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.087417661 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104055148 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097738446 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.074506261 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.079023406 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.101058498 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097675182 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.082555331 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.075218364 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.094675391 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.092384131 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.076714367 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.08158508 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102502805 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.094748867 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.093531613 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.104292252 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.090881284 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.074371437 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077650725 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.078947181 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.089718727 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078437554 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.085371808 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.077783864 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07877661 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.077267116 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.086639175 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.077804313 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.077190065 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.103309179 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087819227 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.086465362 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.076408002 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.083125205 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.077094298 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.100342164 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135531756 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.074741434 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081527308 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07992366 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.085815344 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.074831391 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096337554 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08688911 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.074543355 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.078615502 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07452684 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.074612632 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078901479 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.077019269 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.077808123 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.084562699 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.081607307 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.100888797 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.080307602 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.091804551 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.075381338 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.08330305 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.074394659 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.075878198 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.074449426 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.104129946 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076975741 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.119209824 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.076337054 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.076651458 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.086748757 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.083988501 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08334728 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.075565053 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.092175802 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.086340097 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.079237169 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.084680091 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.078905956 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.078151661 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099137587 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.078172364 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.077552733 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.076812109 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.08131498 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.078550871 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.076672038 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08875676 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.074848579 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07836727 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.092438991 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.074813287 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.076407814 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.081232597 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.079813045 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.074747332 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08643769 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.079202971 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.075965735 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.085484476 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.075393312 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.078761529 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.088092923 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.081918029 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.074195573 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.079974423 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.081315652 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.075901242 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.077280961 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.078489757 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.076764225 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.08412143 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.082024862 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.079560337 seconds)
  done (took 11.70197441 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.175950366 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.167017402 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.079472361 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.157526721 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084423025 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.086743714 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.159454764 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.102647025 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.075693519 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.076944633 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.077131185 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.118447223 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.114433685 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.123964129 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.086823515 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.076029775 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092268681 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.123177845 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.161545644 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.155572776 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092408473 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.085394587 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.078098658 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.077045075 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.078571775 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.087177487 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.094118068 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085146111 seconds)
  done (took 4.793592744 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08933388 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.114403915 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.082908517 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.100752893 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.097910901 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.075943724 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.078896678 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.077740901 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.089645445 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.085398368 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.075563227 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.080978348 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.082125132 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079112844 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.076303729 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.08268313 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.083042951 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.077915289 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.079224244 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.081369375 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.086954271 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100006213 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.079777121 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.075411379 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.080704552 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.075155042 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071100639 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091656211 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.076429891 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.103605624 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.073813092 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.082212556 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.091098538 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.076310716 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.075397975 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075417893 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.075549513 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.075755396 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.077688184 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.076054121 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.073915155 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.065226185 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.0745917 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.086389264 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082635938 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064008024 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.080957143 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.080637939 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.080755473 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.073170154 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.078614446 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.078552655 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.078461183 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.083412112 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07994186 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.081308402 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07709418 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081861466 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.085095769 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.075403214 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.072903627 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.073934919 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.080329463 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072377344 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085021635 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.080354871 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.074318577 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075551919 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.077647359 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08282913 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076116652 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.080475351 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.073398271 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.077671828 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.080336747 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.077609768 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.076965727 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.07417697 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.075780369 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.076061521 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063335149 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.075472814 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.061384634 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.078785435 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.074015462 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074327889 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075574107 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.080520068 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.086625182 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.077074172 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.082441859 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.077096188 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.074528743 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.078719654 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.067824672 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.078416026 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087419069 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.089901728 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.075762268 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.073554425 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.089418128 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.080219803 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.07474331 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063430754 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.080382104 seconds)
  done (took 10.151340371 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.099906712 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.078372571 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.093592041 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.099813427 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096329327 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.083438123 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.086311771 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.077263171 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.092080867 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.082144112 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.085406542 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075738352 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.086154919 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08577212 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.078243341 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.086158244 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.080082927 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.092612214 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.090886084 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.076203312 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.085209431 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.089154389 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.098724157 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.090818245 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.088869947 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.089970649 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099114457 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.086570783 seconds)
  done (took 4.282731227 seconds)
done (took 41.665977578 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.873217191 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.039688515 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.859553943 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.213365241 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.162048091 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.887450008 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.946863356 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.854124396 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.065251327 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.888459084 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.098499482 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.103149772 seconds)
done (took 66.916960999 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.89512539 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.994797567 seconds)
    (2/2) benchmarking "String"...
    done (took 2.093937851 seconds)
  done (took 5.873235393 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.140065303 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.422572413 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.107258559 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.85871323 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.865062196 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.176772759 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.654145547 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.371357848 seconds)
  done (took 31.24267072 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.051982384 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.079356031 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.562412934 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.591251265 seconds)
  done (took 16.120806822 seconds)
done (took 65.143628552 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.847034596 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.880250593 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.902019672 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.838626947 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.918525131 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.871466936 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.992262221 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.111080677 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.861190585 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.840450572 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.85958926 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.327325257 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.869325734 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.118314925 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.861092147 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.873033073 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.872909547 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.344360034 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.017499086 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.876542621 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.872091646 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 7.031139698 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.8659243 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.876290369 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.891597833 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.864714712 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.27224006 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.877497761 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.481263021 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.866975411 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.892805768 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.273807409 seconds)
  done (took 207.937231661 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.862764281 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.772330917 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.854029931 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.908400062 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.255471469 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.044987341 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.96872578 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.303694053 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.866908521 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.873379018 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.041234872 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.867360718 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.062031151 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.81685364 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.888599996 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.864450637 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.048784828 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.076825917 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.895315304 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.034074152 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.891240528 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.896406772 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.842756152 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.022257541 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.909593309 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.883426345 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.881882259 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.888446134 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.054249571 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.017445932 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.864456956 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.87456283 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.051253305 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.731478071 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.884302188 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.87005143 seconds)
  done (took 172.660946244 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.034247325 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.864102287 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.864471041 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.863562344 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.871216953 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.864701461 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.995127944 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.991249185 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.476525594 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.335920981 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.916660633 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.671336854 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.865323377 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.933238512 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.877393509 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.866146644 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.882482402 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.895936192 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.867733949 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.867349765 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.992936894 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.880978776 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.102292024 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.875864317 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.867701335 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.874037173 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.231765823 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.868757877 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.875026055 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.106772572 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.867740553 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.867125645 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.727632285 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.575844711 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.876723621 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.950497787 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.868851541 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.872951025 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.870273082 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.084588056 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.86923183 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.868449012 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.871216912 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.020314841 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.870491788 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.998925919 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.870177446 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.357591126 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.867824701 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.868758099 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.962498254 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.747100242 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.873921918 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.870311555 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.874351779 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.871214418 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.872161679 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.885364951 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.877341811 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.956147308 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.871770519 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.871436801 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.874476172 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.876217095 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.871140051 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.871611884 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.095485995 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.874648225 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.004742548 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.926873431 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.990771807 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.995129865 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.873931019 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.938260454 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.966429154 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.873816899 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.871977304 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.872783099 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.871195186 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.952465317 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.872025 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.029566759 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.879735887 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.874256734 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.925741488 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.94185713 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.874264927 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.718675192 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.874131245 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.873009336 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.170507398 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.940224613 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.873425342 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.872186988 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.872955477 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.87286068 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 4.005700511 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.997219748 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.584543331 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.876624986 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.763429684 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.882448897 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.019672722 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.874349441 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.027197425 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.876434837 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.955060362 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.878275707 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.876046119 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.87372533 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.906776543 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.87381137 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.934076237 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.875723859 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.247528695 seconds)
  done (took 412.212791514 seconds)
done (took 796.684624721 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.525099788 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.490871909 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.597689013 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.505383618 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.484661097 seconds)
  done (took 14.404382077 seconds)
done (took 16.205346455 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.963561065 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.970487991 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.899306518 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.966125778 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.896265185 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.965532218 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.948959181 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.899362621 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.93682731 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.89923087 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.935524398 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.899813737 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.887155121 seconds)
  done (took 26.869119806 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.107352213 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.111915106 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.940960004 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.112403247 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.918243191 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.106583508 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.035324265 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.024575508 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.023914773 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.887940284 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.884867238 seconds)
  done (took 23.956181303 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.130438528 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.128144697 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.949301232 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.114882637 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.922209378 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.115157079 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.036651695 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.027782536 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.022948558 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.888615911 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.884917084 seconds)
  done (took 24.023691227 seconds)
done (took 76.650779829 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.881222606 seconds)
  done (took 3.683156478 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.905979905 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.0750766 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.88824489 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.884407064 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.880738357 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.886377174 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.884090802 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.878791599 seconds)
  done (took 17.088408413 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.879072395 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.879525234 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.876801855 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.879918413 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.879891901 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.877385814 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.877144749 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.880833812 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.880639365 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.877897141 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.881524687 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.878099313 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.877932655 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.877940254 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.881389978 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.878108109 seconds)
  done (took 31.868072653 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.880692426 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.877697487 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.876821678 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.878773872 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.878719129 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.878107147 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.879366303 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.877072535 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.878392928 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.878595798 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.879483261 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.878288742 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.878012888 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.878214284 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.879684628 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.879204608 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.879014303 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.878759999 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.883192034 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.878918419 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.878831683 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.879111596 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.879024943 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.879970808 seconds)
  done (took 46.901253247 seconds)
done (took 101.343254029 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.607986992 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.520411107 seconds)
  done (took 9.935210383 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.885014116 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.881953881 seconds)
  done (took 5.637058127 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.882876065 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.882390752 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.880737849 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.881663196 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.881751848 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.881794278 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.882746386 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.882239098 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.881915173 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.883147037 seconds)
  done (took 20.62712717 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.882960139 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.884054578 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.879901865 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.882245823 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.882997524 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.879647654 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.883150559 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.883797984 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.881574848 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.880380311 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.882466611 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.879783913 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.882372091 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.880004286 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.883947411 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.879906281 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.880145706 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.87991392 seconds)
  done (took 35.675374651 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.883275745 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.884134892 seconds)
  done (took 5.57408354 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.8813089 seconds)
    (2/7) benchmarking "second"...
    done (took 1.880921155 seconds)
    (3/7) benchmarking "month"...
    done (took 1.880791801 seconds)
    (4/7) benchmarking "year"...
    done (took 1.880757806 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.880707659 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.881389202 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.882125692 seconds)
  done (took 14.974858542 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.885251713 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.04367538 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.120771183 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.512723914 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.885925003 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.887462794 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.865696219 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.888914599 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.889005871 seconds)
  done (took 20.786981354 seconds)
done (took 115.01645036 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.68535879 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.878813845 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.102539144 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.932351215 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.936338855 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.176308582 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.890001361 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.185277788 seconds)
done (took 43.594605993 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.952897625 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.601844614 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.661127787 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.908738367 seconds)
  done (took 15.980119572 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.862293243 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.404826873 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.915887727 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.465315538 seconds)
  done (took 20.46074901 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.25249637 seconds)
    (2/2) benchmarking "read"...
    done (took 2.227909366 seconds)
  done (took 6.293397002 seconds)
done (took 51.496454135 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.887091857 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.885316675 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.884918729 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.885079209 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.883500648 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.886135694 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.883568157 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.883297683 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.885893496 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.885897301 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.883664904 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.885156311 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.885261087 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.886087195 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.88264416 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.885444701 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.883872012 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.887156039 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.883805997 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.882696345 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.883731575 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.885820595 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.883102161 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.885225326 seconds)
  done (took 47.044917027 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.888487069 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.884609095 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.886171506 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.886330006 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.884066845 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.886944793 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.889117774 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.884183079 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.886292026 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.887238232 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.884289337 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.885547754 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.886908063 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.884456864 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.887499796 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.884500474 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.889723566 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.884786106 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.887934713 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.884155598 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.888087253 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.885038216 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.886598873 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.887525431 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.885759152 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.886473721 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.888503644 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.887628654 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.88821322 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.885371691 seconds)
  done (took 58.403217164 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.89314592 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.896125485 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.88846914 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.888841227 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.888288803 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.887638145 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.889584641 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.889236422 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.889352591 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.8892227 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.889227178 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.889256061 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.89009137 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.887857347 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.888726422 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.888993085 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.889514857 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.889680311 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.889186208 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.889159857 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.888927806 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.888718508 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.890755624 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.889396995 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.889772697 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.88887406 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.8889794 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.889661691 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.890718073 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.889080197 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.889186187 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.889672025 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.889652156 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.890784059 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.889972261 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.889768629 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.894782777 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.898090079 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.891226085 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.890968534 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.890125752 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.890973162 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.89012188 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.890191668 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.890222731 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.89007772 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.890907895 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.891102626 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.893183279 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.89113018 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.891186874 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.891432073 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.890829486 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.889961036 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.891006559 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.890735834 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.891508577 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.891980318 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.891516432 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.890847289 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.89110069 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.890428099 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.891839571 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.890138776 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.891071782 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.891493351 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.891413026 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.891178665 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.891720689 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.891753406 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.892088644 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.892646761 seconds)
  done (took 137.930861025 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.891278765 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.889411505 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.889585555 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.888511205 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.88925989 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.891506634 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.889032287 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.892567639 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.88877073 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.892716422 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.893250179 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.889995855 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.890527278 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.892678162 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.892826912 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.889738072 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.892454767 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.889586201 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.892754419 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.892893687 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.893209485 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.889913282 seconds)
  done (took 43.417500549 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.893085585 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.893307828 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.890771782 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.894077614 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.890637555 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.893449112 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.893806607 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.894792476 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.893737762 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.891501421 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.890598422 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.893487861 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.891738138 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.890371759 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.890439871 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.891266897 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.893114022 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.891732685 seconds)
  done (took 35.878111108 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.891385333 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.890410415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.893540901 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.891181248 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.890951365 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.893600274 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.890966583 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.89440309 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.893577474 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.891753592 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.894749723 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.894168156 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.894510268 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.890769647 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.893541993 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.892217361 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.895049533 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.890893785 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.894511376 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.892269626 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.89261175 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.895222488 seconds)
  done (took 43.459321148 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.894905044 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.895170844 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.892139587 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.893256333 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.892152055 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.896117204 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.895869477 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.891919787 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.896051238 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.895007613 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.893325892 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.8960145 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.893583892 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.894272585 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.893677838 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.89390097 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.895645415 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.896336362 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.895734581 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.892327687 seconds)
  done (took 39.705615743 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.897824373 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.897345618 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.896926381 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.897282457 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.898786944 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.897529157 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.897509049 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.898940389 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.896632877 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.897525861 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.898574196 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.897328951 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.897089041 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.89878656 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.899614233 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.897887489 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.899043582 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.897913199 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.898365075 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.897789647 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.898555596 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.898951921 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.897395425 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.898412573 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.898193334 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.89833846 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.89800733 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.898909138 seconds)
  done (took 54.965423499 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.897410898 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.898367756 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.89499026 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.894893464 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.895798886 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.894783749 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.895688617 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.896935924 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.897488956 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.894920479 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.897438217 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.898325673 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.89787446 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.89726951 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.897343785 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.899268849 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.898438061 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.895513325 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.896150612 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.894777642 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.899319225 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.898499573 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.90003829 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.896158246 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.896557163 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.900219031 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.897021498 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.895921326 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.897761288 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.895956799 seconds)
  done (took 58.73288372 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.917273522 seconds)
    (2/2) benchmarking "in"...
    done (took 1.917641009 seconds)
  done (took 5.657028322 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.895803884 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.899046486 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.897785981 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.896887742 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.897755296 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.898739539 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.899431569 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.896465635 seconds)
  done (took 17.003832439 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.903478801 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.89925776 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.900093299 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.900078578 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.900218608 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.903985457 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.910868748 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.900193356 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.90464373 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.905264251 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.910475325 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.912059409 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.907379459 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.904716305 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.904235739 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.905327729 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.900353624 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.900891007 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.900963808 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.901288934 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.901751982 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.906855514 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.907393558 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.898117375 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.907614198 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.915031653 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.911184504 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.901501269 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.90583563 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.909535472 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.905520213 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.898664804 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.901945505 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.902654758 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.901505854 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.902859142 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.914606731 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.90562164 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.912320172 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.902085931 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.902462734 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.898613626 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.906067076 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.907584448 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.908049608 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.901872664 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.90293259 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.898849413 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.904933156 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.910976236 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.906199222 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.906271584 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.900050768 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.910582991 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.909557685 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.913411189 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.903944663 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.909143265 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.914485891 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.916744855 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.919718259 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.913736186 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.908480153 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.903045172 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.916584455 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.92918997 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.913712295 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.89999724 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.8996416 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.903788676 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.914015805 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.922018632 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.917666872 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.904609075 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.904344817 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.902814747 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.906683108 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.903578079 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.915457442 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.910444179 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.905286857 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.905014435 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.917985848 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.929000523 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.908174061 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.904812751 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.904808341 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.905321953 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.909204999 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.918920544 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.905419808 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.90429603 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.907485107 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.907904835 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.910659037 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.905223504 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.907415133 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.908885627 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.902397383 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.904297239 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.904919798 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.912844219 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.917550231 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.905846504 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.90574981 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.916215371 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.905718784 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.909486031 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.915736901 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.905167215 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.90550879 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.910739296 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.916212159 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.902046012 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.912864247 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.918379624 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.905917079 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.911869175 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.906450846 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.906497656 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.91876584 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.934187312 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.906247122 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.905484805 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.915440757 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.916299772 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.906150474 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.91458285 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.907428753 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.903807471 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.904165622 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.913615301 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.90598939 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.912281351 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.907429043 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.911263033 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.903785813 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.907159244 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.90792695 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.911959963 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.913202765 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.912163368 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.914374367 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.914712686 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.907755722 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.913081882 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.916900197 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.912029162 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.914149392 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.913909647 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.905078359 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.907553291 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.913314986 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.909078324 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.912504836 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.908562977 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.912585859 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.90810119 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.908570715 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.907935677 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.90829417 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.912781808 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.915984902 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.909623425 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.916597894 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.911274933 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.906312984 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.90866738 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.908524738 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.912934088 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.907889353 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.911303246 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.91685017 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.915675875 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.908557074 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.910389868 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.916227171 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.909573787 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.910766482 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.912652638 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.916657076 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.920668373 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.90963929 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.920000371 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.909247507 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.910534157 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.909637934 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.913795192 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.913507744 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.909181634 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.916926861 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.916838149 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.926138384 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.922237805 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.914701216 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.913177718 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.914712764 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.914412886 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.918676235 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.910894122 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.909635778 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.910127597 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.914496341 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.911186151 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.916731374 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.911922254 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.914123423 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.90995685 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.910228952 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.910659849 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.911087633 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.915554731 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.91604842 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.907419403 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.91094488 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.910888707 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.915687455 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.907458434 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.914511982 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.915357593 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.911598482 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.911585426 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.923216691 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.908385105 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.916327849 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.916953926 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.916301107 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.915267211 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.911275906 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.918283557 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.915726975 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.923476781 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.917382616 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.9164011 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.922630035 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.916719451 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.915723179 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.919825287 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.912307343 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.9094598 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.919365682 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.920004973 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.911845842 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.913497116 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.913488397 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.916699102 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.91218836 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.923533114 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.909558973 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.916122916 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.913602334 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.920229782 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.910244208 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.919066861 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.91851797 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.917932864 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.920426356 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.912730235 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.913794186 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.916845925 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.913864093 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.913804001 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.9133851 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.919639509 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.921727461 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.923133945 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.918291937 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.922382083 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.918714679 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.917108764 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.919375201 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.91426411 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.917774248 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.931193033 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.922226292 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.924974383 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.920240877 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.914326078 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.922505384 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.920706228 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.922525172 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.919266882 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.919294614 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.918890315 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.917521461 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.91232387 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.919519082 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.915834704 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.920336352 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.92033906 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.917778244 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.915342528 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.918558241 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.915593517 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.916629512 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.916297034 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.919997599 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.915144686 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.922779743 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.921706267 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.918977258 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.919790442 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.926713424 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.919551925 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.921775173 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.919488791 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.919701017 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.918848273 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.92046983 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.916362089 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.9224336 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.922504291 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.924547012 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.929240974 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.921815519 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.929674467 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.916154013 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.924003925 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.924074519 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.912564221 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.919214219 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.921505185 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.91694226 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.927082424 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.917042397 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.921455383 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.92219867 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.91676396 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.91832457 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.916940017 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.917153931 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.918085217 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.917807174 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.930088303 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.922893547 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.925624466 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.923150713 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.915041517 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.917908413 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.918305326 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.921676787 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.926708205 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.919087388 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.924299584 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.922024293 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.923508464 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.91771573 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.919022788 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.918415162 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.916241765 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.918791525 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.928282576 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.92287293 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.923656436 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.918932458 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.931633059 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.91970597 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.929210989 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.920425222 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.923967953 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.919354576 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.919447103 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.924482654 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.922630993 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.924101263 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.920247504 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.924945714 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.923309805 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.919895885 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.925646733 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.923714846 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.920041975 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.923347381 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.932919328 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.941396986 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.925995724 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.923062687 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.916946197 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.925623835 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.923759073 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.919356001 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.922705295 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.926932343 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.934481556 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.926746506 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.924485468 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.920826927 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.925041954 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.921129654 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.91989432 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.920041714 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.921354194 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.92082347 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.925767293 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.921816643 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.928920419 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.9209046 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.925547897 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.927316146 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.926128067 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.934902053 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.922522465 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.926144621 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.921602418 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.920801748 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.925936383 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.925418541 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.922321309 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.92601245 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.92015278 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.926439454 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.932648395 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.932762745 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.927700984 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.925335879 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.922118575 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.9258431 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.927880755 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.923078177 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.922791269 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.923269207 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.928742292 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.922732288 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.927532593 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.925210683 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.920849011 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.9265903 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.922689914 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.928570533 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.932828281 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.927328015 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.919718269 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.922081686 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.922876391 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.926583649 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.928811571 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.93468156 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.930513086 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.936769772 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.935399805 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.927288111 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.927483457 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.93024021 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.935457854 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.925375657 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.927383608 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.923480954 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.929422613 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.928384424 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.931954784 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.92387791 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.934925175 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.928687997 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.927825144 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.936191537 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.930039279 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.924939286 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.92952767 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.932948778 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.928958871 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.920366863 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.92527891 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.929717872 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.933961089 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.930757149 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.925571484 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.931232778 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.926683608 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.930692134 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.928281379 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.924545671 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.930133812 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.920972026 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.929596856 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.925301947 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.92468498 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.921470936 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.928344571 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.929179017 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.931938659 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.935259906 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.922027334 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.931609956 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.928648362 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.93045738 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.926237365 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.924982925 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.922189394 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.922077089 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.930126883 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.925812219 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.930524145 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.932552852 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.930172085 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.931049354 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.928242355 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.92728372 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.932795121 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.939643 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.932871553 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.92335127 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.930101072 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.932522409 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.9349451 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.927789956 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.927773603 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.931349777 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.932635674 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.925640509 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.927794128 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.926668736 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.934159786 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.945896429 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.926475644 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.931293368 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.931822274 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.935231391 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.926849445 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.923291192 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.92802758 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.934240647 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.935352426 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.934531937 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.929298532 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.937820681 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.931112439 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.933228133 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.930615009 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.934194375 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.939494087 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.933839237 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.929059751 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.930490874 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.937177533 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.949284954 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.928866879 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.941116581 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.960058294 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.932677887 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.933503331 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.929246621 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.932154711 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.928130444 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.936533683 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.930253879 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.929440924 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.929741577 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.929091362 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.934273606 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.939035617 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.935543264 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.928128177 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.92831077 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.932849674 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.935404328 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.926127401 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.929834894 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.928594547 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.928445116 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.930509321 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.929934062 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.934280245 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.945742755 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.944785445 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.930229051 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.93096941 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.926275441 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.938023011 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.936121796 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.944971371 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.936531078 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.930376451 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.930919451 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.934918222 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.929836862 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.926605225 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.935157539 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.933836577 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.933573217 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.927118792 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.947341826 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.938727655 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.939425702 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.934484032 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.932002125 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.930401912 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.935367269 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.930577954 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.931881383 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.93704689 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.935846938 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.934829831 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.930440864 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.93114665 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.938288074 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.937623149 seconds)
  done (took 1145.955203785 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.927568962 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.92681601 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.928041735 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.927423876 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.928950828 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.928586708 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.928310106 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.927847318 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.928421297 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.929146717 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.929350329 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.928675171 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.928910837 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.929416692 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.928711973 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.928788791 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.928774946 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.928456996 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.929543143 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.928997177 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.929042022 seconds)
  done (took 42.352913047 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.9311594 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.928701926 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.929917562 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.931892305 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.928801576 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.931945953 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.92943183 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.932831827 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.932019233 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.929536934 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.932685628 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.932136695 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.928746187 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.930209684 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.929349569 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.932163286 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.933319463 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.929530654 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.933208265 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.930573441 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.93258383 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.929578131 seconds)
  done (took 44.334653743 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.933064278 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.933853684 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.937440551 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.930751923 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.933473145 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.930117936 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.933788928 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.93424075 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.934430756 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.939297157 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.937313471 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.940789662 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.943977406 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.938769548 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.940264638 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.933762661 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.07659287 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.934636995 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.934871564 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.935766327 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.930882082 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.944617773 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.931083681 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.930539148 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.938003494 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.934533421 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.935475219 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.9333623 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.934272443 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.940258462 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.939378556 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.934414635 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.938851126 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.940765478 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.938596029 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.94042292 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.939183747 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.935845407 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.931837402 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.935499781 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.949683514 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.954409159 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.936192109 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.947421421 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.934626649 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.934956084 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.942677797 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.943219472 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.932216718 seconds)
  done (took 96.916801914 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.935226983 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.935814636 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.932667841 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.935099849 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.936432202 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.935576412 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.935798653 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.937247099 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.932744285 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.934490675 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.935752433 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.933140351 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.933026961 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.936259518 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.93619435 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.933416531 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.932922974 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.932831061 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.932733056 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.932721041 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.932784866 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.936461128 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.936743998 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.934282627 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.936318597 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.933640576 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.9332014 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.935785415 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.933665527 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.933226999 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.936547245 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.937199342 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.936472398 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.935305088 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.933952251 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.937387938 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.937077505 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.934143998 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.937616151 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.934664071 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.93671708 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.936958075 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.937862084 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.937611973 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.934337882 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.93406296 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.935203463 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.935623101 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.935300623 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.938555877 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.93757907 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.935233273 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.937646015 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.935076138 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.93767899 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.93887124 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.936063166 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.935711175 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.938615116 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.935683951 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.935554451 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.937982963 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.93694991 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.938517013 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.939058095 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.936130921 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.936782698 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.939338904 seconds)
  done (took 133.486634443 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.938728334 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.94033755 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.940489035 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.940414816 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.94106522 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.940199146 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.940674936 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.941138618 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.94135069 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.940826959 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.939805719 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.940298135 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.94069301 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.940892231 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.941037881 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.940446413 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.941087181 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.940316769 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.940892504 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.940514996 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.94138849 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.94190422 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.940541939 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.942080974 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.940997043 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.940750908 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.942493749 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.941642284 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.942906537 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.942102879 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.942240973 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.941833167 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.942208824 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.941924779 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.94264922 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.941819446 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.940820919 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.941885655 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.942459981 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.941628991 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.943372719 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.942433602 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.942119838 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.942723806 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.943480062 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.942316327 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.94363353 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.94305583 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.9417575 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.943002042 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.942228354 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.941918644 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.942644674 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.942511081 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.943240174 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.942541488 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.943895288 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.944960513 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.942658493 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.943159914 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.943107008 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.942938202 seconds)
  done (took 122.254023041 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.942076723 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.942288202 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.940237897 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.939670183 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.94260195 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.939839921 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.941883544 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.94275647 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.941786528 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.94202475 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.94323183 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.939790994 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.940851513 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.943295056 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.939176606 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.940782365 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.939671827 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.940567444 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.94250684 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.940307295 seconds)
  done (took 40.689462786 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.940340802 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.942750271 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.941410052 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.940095177 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.943112806 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.940997525 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.94372654 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.943799576 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.940190748 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.943049616 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.94304578 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.944416438 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.941944193 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.941614132 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.945311816 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.940999435 seconds)
  done (took 32.941403381 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.941823731 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.943687894 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.945526758 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.945167037 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.942340487 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.94129024 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.944705658 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.941305508 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.941761117 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.944894145 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.945788783 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.944962794 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.945257328 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.945580147 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.941947811 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.946131551 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.941789641 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.941623242 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.945469888 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.946361896 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.943310977 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.941374925 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.945852677 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.946155804 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.942322604 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.943032838 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.942871434 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.94237244 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.943342164 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.945198259 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.944279321 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.946262959 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.943001176 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.943049842 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.946248788 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.944141113 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.94601721 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.94671494 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.945987317 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.945832554 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.946146426 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.942765591 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.945935377 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.947203991 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.944170155 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.946528328 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.943709007 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.94471261 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.944491583 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.944714719 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.94636706 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.94761933 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.94774256 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.948200446 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.947594952 seconds)
  done (took 108.820327612 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.947667842 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.946673335 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.944321512 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.946700558 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.947175365 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.944122026 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.947722927 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.944250503 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.944275021 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.946951803 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.94547215 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.948110569 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.944221852 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.947612874 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.945171231 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.946554424 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.945323926 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.944532752 seconds)
  done (took 36.895596866 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.94547107 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.94515822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.948269072 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.944284255 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.945042185 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.948179075 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.945374101 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.947765656 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.947146124 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.945775597 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.944757918 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.948332654 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.947511042 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.948744957 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.946671056 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.945080319 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.948868995 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.948731891 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.945417361 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.945206482 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.948559287 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.948243029 seconds)
  done (took 44.697853969 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.951838575 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.95350078 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.9697981 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.973925443 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.975268251 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.987237572 seconds)
  done (took 13.681498472 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.945962633 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.950004583 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.94657695 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.950185857 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.950135843 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.945983656 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.946982993 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.946821941 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.9498691 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.946572811 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.946811426 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.949173377 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.949316384 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.94769521 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.950721854 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.950592952 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.947328051 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.947966988 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.947306198 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.949713938 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.948404576 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.950099262 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.947230623 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.947811796 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.947728775 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.949353224 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.950753998 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.947498776 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.947840343 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.950498906 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.950131524 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.947289729 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.951033222 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.947927817 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.951316922 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.949753162 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.94738626 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.952186259 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.951074946 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.948419895 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.951433926 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.95191653 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.951620754 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.947543038 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.953203939 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.949695138 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.948555452 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.94927425 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.948654046 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.952457166 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.951925939 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.948803812 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.952049875 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.951250445 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.952115321 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.951957212 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.949988393 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.949118177 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.951996864 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.951235706 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.949718096 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.952251821 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.949547998 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.949878211 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.952212382 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.949327827 seconds)
  done (took 130.540256101 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.95010556 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.949969193 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.950716581 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.950042758 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.949903207 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.950197985 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.95010653 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.950616226 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.950205371 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.95045827 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.95312631 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.949817698 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.950089549 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.950991804 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.950499798 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.950924084 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.950577293 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.950871134 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.950290111 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.955008044 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.951328107 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.951026055 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.951414504 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.951839965 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.950966755 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.953543719 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.950792035 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.951475309 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.951875018 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.951304744 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.951458302 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.951237362 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.951505587 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.951495064 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.95099333 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.950866947 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.950867192 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.951193253 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.951436056 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.954533273 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.952523506 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.954327238 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.952665354 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.951349154 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.952977681 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.952264767 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.952100802 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.952732626 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.952721165 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.952121218 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.952690261 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.952846892 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.953307109 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.952674618 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.952385263 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.952479047 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.953808287 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.95238789 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.952401735 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.954944608 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.953525307 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.953431859 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.956629998 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.953035117 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.953644438 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.954384217 seconds)
  done (took 130.702097445 seconds)
done (took 2668.280174597 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.973892987 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.952933467 seconds)
  done (took 15.803743254 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.126357931 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.079973098 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.96347428 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.008310108 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.964788441 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.988256525 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.984168333 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.96379772 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.964740603 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.964432313 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.964984726 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.150620228 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.019644419 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.966050803 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.964836818 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.059231217 seconds)
  done (took 54.019112757 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.968426678 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.968745397 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.97900493 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.96993466 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.968111309 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.981334283 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 2.003384643 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.97146597 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.00257259 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.981992756 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.038039371 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.978758422 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.967196585 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.0178412 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.983185803 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.982944535 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.062549606 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.043966256 seconds)
  done (took 37.752533232 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.046775187 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.975525604 seconds)
  done (took 10.91232301 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.96431955 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.993060604 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.992678256 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.99494709 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.963320537 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.964414064 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.006942538 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.999970883 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.967946079 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.006762168 seconds)
  done (took 71.743973928 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.973924782 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.968967476 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.969710222 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.967060044 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.960950613 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.964189444 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.967832948 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.96543275 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.636541595 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 2.004591458 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.977931872 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.975769119 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.969358413 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.970081495 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.962058692 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.993006107 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.064155399 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.96308358 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.962199978 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.97509247 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.969230269 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.022155918 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.984067711 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.967747268 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.998952011 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.638851736 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.979672796 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.975930171 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.061236301 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.963021318 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.96912124 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.969737515 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.971093473 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.329349324 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.251330878 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.971016105 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.984053315 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.978133874 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.962443606 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.061211114 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.971145912 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.975794957 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.561041427 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.231276952 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.079691226 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.012784878 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.280291592 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.98769587 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.972197485 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.999174716 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.973218918 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.97277361 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.982987595 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.450482374 seconds)
  done (took 137.540623333 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.967666019 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.316359214 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.137665047 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.966304256 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.257329871 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.179491433 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.968324141 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.017328703 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.968089672 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.200460467 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.224178253 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.077407669 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.967190455 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.963281499 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.965139248 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.963724017 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.127850835 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.041319178 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.970378507 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.965517896 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.999632102 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.213178717 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.094540145 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.967609023 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.998849304 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.18322243 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.093170254 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.07721844 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.749802089 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.965755496 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.034677403 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.97004465 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.968178768 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.966252479 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.126482114 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.08160108 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.057951379 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.968418663 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.967998905 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.96725842 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.731550797 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.171172855 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.067814993 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.111247752 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.12082172 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.177947265 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.752657249 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.966482819 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.715841617 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.137636482 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.202653092 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.200931284 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.094522061 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.970939203 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.493524374 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.966455268 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.966534114 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.22122566 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.113548753 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.073116542 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.969743893 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.969059887 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.966924968 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.269354731 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.970601653 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.068229836 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.969687489 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.968635429 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.069704476 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.073374593 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.111863368 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.185912637 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.003057306 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.720352389 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.186016991 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.220458769 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.03842162 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.223644471 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.970217823 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.968445753 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.052176396 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.820843725 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.227918703 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.261349055 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.226971145 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.007688649 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.69856502 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.967592949 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.20574759 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.194110659 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.22393353 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.120710363 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.212997965 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.304666957 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.969454284 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.968645356 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.190869722 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.109490936 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.972525375 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.31723249 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.207763185 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.538286386 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.992734723 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.281790911 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106904482 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.97325526 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.613887509 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.972213111 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.19845046 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.015454062 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.971097711 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.970503415 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.195192436 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.949825865 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.97094877 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.636864073 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.036805678 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.974497482 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.21021938 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.972496522 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.236159023 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.975085756 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.218056398 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.495168973 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.007404239 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.20466084 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.119202721 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.973956687 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.22116315 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.221119358 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.091490327 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.199806636 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.662134981 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.972805333 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.263469617 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.973423862 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.970603931 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.14930211 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.972506349 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.121483902 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.972581315 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.259724198 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.000069393 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.215150945 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.97451198 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.231159691 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.010782169 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.026509226 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.975642511 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.101688413 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.975504663 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.887032192 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.134724723 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.974304753 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.973391156 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.724819187 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.973835411 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.132932937 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.209144715 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.998914901 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.049505724 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.647157606 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.971961388 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.058122953 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.00062096 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.373806574 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.972725793 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.231076566 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.97634094 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.972691207 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.972821919 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.27083145 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.16261741 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.975451611 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.974033804 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.87129993 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.972148192 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.973940254 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.158774986 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.308691761 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.973045518 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.184614079 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.978799035 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106812047 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.978786572 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.056229643 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.315575359 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.97338778 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.973559539 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.974532148 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.974648114 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.975338409 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.242046196 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.004328486 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.512206898 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.115400747 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.246618153 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.289607725 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.228473502 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.023070813 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.977369749 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.233892907 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.978794386 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.042738287 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.977393825 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.000066532 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.210519079 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.978772106 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.270592081 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.259873415 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.861686465 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.025762161 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.977552637 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.974892397 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.973712946 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.123918578 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.066470069 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.977499512 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.975130763 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.096100768 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.10318173 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.191326512 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.978132034 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.028778686 seconds)
  done (took 926.726974129 seconds)
done (took 1256.376689328 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.975548233 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.978375844 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.959223997 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.977499548 seconds)
  done (took 29.788147833 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.981451758 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.981088007 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.978751585 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.982653062 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.978371636 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.981942116 seconds)
  done (took 13.782598571 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.02188757 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.976637745 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.417138234 seconds)
  done (took 22.313476387 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.052928957 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.366720089 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.091015938 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.405713661 seconds)
  done (took 10.816409564 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.98141222 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.980007121 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.980311832 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.979856575 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.98355522 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.984004976 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.978758794 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.979529929 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.984035023 seconds)
  done (took 19.73174128 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.418426628 seconds)
done (took 102.749015806 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.707390597 seconds)
    (2/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.378396176 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.981567979 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.981005149 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.141754144 seconds)
    (6/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.130784924 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.981179558 seconds)
    (8/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.228409087 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.111586078 seconds)
    (10/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.961744449 seconds)
    (11/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.16782121 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.024475337 seconds)
    (13/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.256298458 seconds)
    (14/309) benchmarking ("sort", Float64, false)...
    done (took 5.728955731 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.002626857 seconds)
    (16/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.057108463 seconds)
    (17/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.066010153 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.981619219 seconds)
    (19/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.343571296 seconds)
    (20/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.413940129 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.054588032 seconds)
    (22/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.393482344 seconds)
    (23/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.983438955 seconds)
    (24/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.181021213 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.332816763 seconds)
    (26/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.984742404 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.317398003 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.983129966 seconds)
    (29/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.215619452 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.961250508 seconds)
    (31/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.094120828 seconds)
    (32/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.205752122 seconds)
    (33/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.044586968 seconds)
    (34/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.417955294 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.083702878 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.365339591 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.960509402 seconds)
    (38/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.081067748 seconds)
    (39/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.1536078 seconds)
    (40/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.435477587 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.159703137 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.118702161 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.329113306 seconds)
    (44/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.163063723 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.350479856 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.130339672 seconds)
    (47/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.536734849 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.229997103 seconds)
    (49/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.957104424 seconds)
    (50/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.531310536 seconds)
    (51/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.081906388 seconds)
    (52/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.996248814 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.170038866 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.362980872 seconds)
    (55/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.209715732 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.984722315 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.034860032 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.980132315 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.962283552 seconds)
    (60/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.070101338 seconds)
    (61/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.992737524 seconds)
    (62/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.962884569 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.079395723 seconds)
    (64/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.985042619 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.167921053 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.963676239 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.049896605 seconds)
    (68/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.678829437 seconds)
    (69/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.985957496 seconds)
    (70/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.754795011 seconds)
    (71/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.008251557 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.553694224 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.287205067 seconds)
    (74/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.603998353 seconds)
    (75/309) benchmarking ("sort", Int8, false)...
    done (took 4.929640504 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.952820264 seconds)
    (77/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.146543698 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.281085505 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.997303921 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.225161653 seconds)
    (81/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.274181164 seconds)
    (82/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.98918314 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.266177502 seconds)
    (84/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.995195436 seconds)
    (85/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.07458989 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.012083474 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.642497042 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.051834052 seconds)
    (89/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.060663334 seconds)
    (90/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.367240005 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.966355556 seconds)
    (92/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 3.380796913 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.145578452 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.363263947 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.291236281 seconds)
    (96/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.422685282 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.326732343 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.258848795 seconds)
    (99/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.06711332 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.982434365 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 8.170271902 seconds)
    (102/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.106220338 seconds)
    (103/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.035992195 seconds)
    (104/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.072980705 seconds)
    (105/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.284306415 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.742628533 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.892479094 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.081178603 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.168524704 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.287282314 seconds)
    (111/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.058605284 seconds)
    (112/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.143819862 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.688144925 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.457647754 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.079222831 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.996701228 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.308549029 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.011597393 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.98608079 seconds)
    (120/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.240303295 seconds)
    (121/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.111348919 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.807760075 seconds)
    (123/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.159562972 seconds)
    (124/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.153062759 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.174739378 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.944173857 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.006968062 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.21496244 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.002221562 seconds)
    (130/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.172821931 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.232715108 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.210161277 seconds)
    (133/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.003602413 seconds)
    (134/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.409291897 seconds)
    (135/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.842842397 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.211461148 seconds)
    (137/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.084363419 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.230338263 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.164710908 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.316980155 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.088434272 seconds)
    (142/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.458336251 seconds)
    (143/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.284055665 seconds)
    (144/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.969851735 seconds)
    (145/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.307138663 seconds)
    (146/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.161729226 seconds)
    (147/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 3.080826729 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.215864877 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.008588539 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.006358308 seconds)
    (151/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.392723475 seconds)
    (152/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.990249011 seconds)
    (153/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.055315957 seconds)
    (154/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.609536772 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.11994141 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.006738867 seconds)
    (157/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.079826325 seconds)
    (158/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.045731007 seconds)
    (159/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.229012827 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.989466745 seconds)
    (161/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.21151619 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.265943819 seconds)
    (163/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.053873063 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.369933062 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.010176949 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.963637619 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.049971469 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.981745606 seconds)
    (169/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.267931464 seconds)
    (170/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.211315676 seconds)
    (171/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.511454802 seconds)
    (172/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.118990345 seconds)
    (173/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.343439728 seconds)
    (174/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.070810035 seconds)
    (175/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.158557671 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.265241645 seconds)
    (177/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.125117865 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.387907506 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.014418631 seconds)
    (180/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.011605426 seconds)
    (181/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.164990405 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.413857837 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.372694496 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.018152045 seconds)
    (185/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.043852242 seconds)
    (186/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.29389023 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.328700275 seconds)
    (188/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.427016934 seconds)
    (189/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.22374532 seconds)
    (190/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.992371694 seconds)
    (191/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.904139693 seconds)
    (192/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.315874442 seconds)
    (193/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 8.037738715 seconds)
    (194/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.039121465 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.166721505 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.799029491 seconds)
    (197/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.970274008 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.272163905 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.296091621 seconds)
    (200/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.007180606 seconds)
    (201/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.174363046 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.21390395 seconds)
    (203/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.091795023 seconds)
    (204/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.176847452 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.071310755 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.679861721 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.08831938 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.635724088 seconds)
    (209/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.020906334 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.971387769 seconds)
    (211/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.185440523 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.811471963 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.183129119 seconds)
    (214/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.970895077 seconds)
    (215/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.173655582 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.920780256 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.18541638 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.979327936 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.413048162 seconds)
    (220/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.176684171 seconds)
    (221/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.327195669 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.810631508 seconds)
    (223/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.514603769 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.244767723 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.011512213 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.007496309 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.135621918 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.03529824 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.504584391 seconds)
    (230/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.026189587 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.316431692 seconds)
    (232/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.05542656 seconds)
    (233/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.036248589 seconds)
    (234/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.972627457 seconds)
    (235/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.856916334 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.867062849 seconds)
    (237/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.128699651 seconds)
    (238/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.023791473 seconds)
    (239/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.229104355 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.485852519 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.080595541 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.691007104 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.006297623 seconds)
    (244/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.195341872 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.995266839 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.082175009 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.972241535 seconds)
    (248/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.183873792 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.092299842 seconds)
    (250/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.07904243 seconds)
    (251/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.099437073 seconds)
    (252/309) benchmarking ("sort", Float32, false)...
    done (took 5.689284508 seconds)
    (253/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.1576936 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.015987573 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.158345858 seconds)
    (256/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.241462272 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.433633434 seconds)
    (258/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.344228893 seconds)
    (259/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.090986188 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.121905778 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.950111282 seconds)
    (262/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.134589487 seconds)
    (263/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.076367941 seconds)
    (264/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.34724105 seconds)
    (265/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.998462448 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.142083275 seconds)
    (267/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.079962427 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.995364799 seconds)
    (269/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.074973462 seconds)
    (270/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.999892332 seconds)
    (271/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.974283492 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.365294819 seconds)
    (273/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 3.027319392 seconds)
    (274/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.073970143 seconds)
    (275/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.015690108 seconds)
    (276/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.005498367 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.096125936 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.106333498 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.070232483 seconds)
    (280/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.993840661 seconds)
    (281/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.140174073 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.122307741 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.064348871 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.750119365 seconds)
    (285/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.059263599 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.355577298 seconds)
    (287/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.096525355 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.668913207 seconds)
    (289/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.072890806 seconds)
    (290/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.486125853 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.089608533 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.021542949 seconds)
    (293/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.094394282 seconds)
    (294/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.058481943 seconds)
    (295/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.015021164 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.975247533 seconds)
    (297/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.183802641 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.087392847 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.294177997 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.232226188 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.905379055 seconds)
    (302/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.437342792 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.017983825 seconds)
    (304/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.569858756 seconds)
    (305/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.192999873 seconds)
    (306/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.360114196 seconds)
    (307/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.000285108 seconds)
    (308/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.697869286 seconds)
    (309/309) benchmarking ("sort", BigInt, false)...
    done (took 7.001023032 seconds)
  done (took 1044.604414262 seconds)
done (took 1046.776417129 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.024931144 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.015413176 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.000636532 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.022262536 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.112443979 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.027957891 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.009356666 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.00207395 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.047415284 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.049537632 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.998964661 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.026559759 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.002232688 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.001164124 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.000011609 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.014989632 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.320406942 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.035707916 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.019383913 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.011005047 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.017809008 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.001197656 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.050867892 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.0279463 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.006535558 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.006624613 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.006298273 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.021915655 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.112584723 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.005556968 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.005650157 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.012688712 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.322055673 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.034202116 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.996776388 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.020830905 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.012404591 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.010358993 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.004805812 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.034024462 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.414860299 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.043140184 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.003620409 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.003075019 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.002987075 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.007061189 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.004220914 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.009818032 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.015473356 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.016084301 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.415737035 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.059374142 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.005768585 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.002515818 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.014103987 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.002969234 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.007450671 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.018599924 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.022800505 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.020035715 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.314140061 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.042623098 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.006335448 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.019350566 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.010922708 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.449130753 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.041530568 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.009215166 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.419123107 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.050054274 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.451563555 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.053382505 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.005278291 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.018761421 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.035986021 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.323953012 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.032023962 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.004980065 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.011474413 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.003743845 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.014799613 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.01719299 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.009180728 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.00597656 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.019752493 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.03294958 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.014502048 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.00519822 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.013869191 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.023982421 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.01323337 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.016550635 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.007307259 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.000777016 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.015019153 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.009475914 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.007538028 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.008336356 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.010684403 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.016665859 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.416976756 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.063563346 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.004410707 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.002422158 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.005747254 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.021337937 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.417511355 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.047600313 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.028285838 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.055687229 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.00911569 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.315832803 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.042461514 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.022175403 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.017135381 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.008809187 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.00216306 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.315703939 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.449602522 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.062288511 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.008405855 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.005397718 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.022179235 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.009201822 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.00476968 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.326578916 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.042393932 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.021127106 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.127906108 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.017998737 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.039896783 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.007321341 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.012080432 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.038315808 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.025204931 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.03906906 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.011178229 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.022889962 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.023489899 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.005749679 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.019874449 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.01775209 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.010668432 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.01335931 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.003898701 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.037648908 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.021374044 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.020636927 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.030644157 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.130128315 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.005600237 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.315898499 seconds)
done (took 314.785029635 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.08606427 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.00721967 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.112581944 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.006567493 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.098363197 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.09783871 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.003219357 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.005179733 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.003656666 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.38364797 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.003714327 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.005282153 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.003672751 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.004598527 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.101733683 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.007825573 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.004646512 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.346605008 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.008106279 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.085255221 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.011816448 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.004654801 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.006597854 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.383370793 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.006459628 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.007163581 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.085585742 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.006500957 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.349676954 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.007171645 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.009313201 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.350864667 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.104597677 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.025938959 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.017807158 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.014527502 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.094905635 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.012378267 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.095094981 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.094296526 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.113573631 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.049843131 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.011079623 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.011221648 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.012054568 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.012555788 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.005557662 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.036962722 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.00805856 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.006222789 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.349593951 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.019413074 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.01764772 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.006200724 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.006704488 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.032087002 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.006369368 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.012340983 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.105456688 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.010654914 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.076412012 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.38574879 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.38551983 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.009919558 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.014338297 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.006800449 seconds)
  done (took 193.704300545 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.079854289 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.090006226 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.081108869 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.019594065 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.065046049 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.08192611 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.019169453 seconds)
  done (took 16.363314684 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.020582344 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.011145194 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.066699819 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.06651471 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.011187983 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.167550962 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 2.009686724 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.026176813 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.007480743 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.068870781 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.009896328 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 2.01035192 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.017216917 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.017642959 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.065976788 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.028039368 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.135876703 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.017731764 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.012715633 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.170766374 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.00808765 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.018707604 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.069713803 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.028145967 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.01025322 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.022170007 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.623469343 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 2.012604741 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.007954796 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.01179206 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.008300627 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.05880214 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.01191791 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.014693596 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.009238039 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.133877434 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.011748227 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.009402825 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.012718212 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.012171172 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.011734213 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.013821245 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.013333493 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.008556352 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.012218248 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.040778601 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.013487583 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.011699865 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.013307392 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.011613379 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.069005978 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.013471414 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.009388198 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.009544888 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.072890755 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.018088685 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.014713214 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.009477275 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.013371204 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.009833393 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.172259374 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.067509099 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.012342843 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.068543945 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 2.013111447 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.015398102 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.013470125 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.01392744 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.116520047 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.012723557 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.068597619 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.011829393 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.177232748 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.042000632 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 2.014694841 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.022267764 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.021272403 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 2.013869079 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 7.012635408 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.02587007 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.011077187 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.019238474 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.025283871 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.011547425 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.010968981 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.134433238 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.150718213 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.011288769 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.032259985 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.026624367 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.011959101 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.072201407 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.01403305 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.011374649 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.077743493 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.138480492 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.07629598 seconds)
  done (took 220.111936174 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.024502846 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.02840234 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.020917069 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.03696456 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.021259153 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.020021108 seconds)
  done (took 14.084564613 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.023391504 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.015660118 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.015535058 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.015803385 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.016958248 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.01560267 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.016954448 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.02242225 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.020955732 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.01498265 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.015114618 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.017122918 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.017474984 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.016277899 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.01776558 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.016236983 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.0173776 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.012480906 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.016114051 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.017871962 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.179402173 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.016772353 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.01740708 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.022049402 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.020247495 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.016146281 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.029048574 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.016056544 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.016468106 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.030450078 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.021666166 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.016200685 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.02233112 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.028084814 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.022462267 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.023155648 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.021328255 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.017181601 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.014017307 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.016895198 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.017685026 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.018894667 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.017701001 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.017825021 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.024459676 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.027824242 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.023012406 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.03184745 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.018348019 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.01775572 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.019064965 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.018671909 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.016778857 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.017592137 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.026070114 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.02999226 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.023525646 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.018564469 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.017865296 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.024804718 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.019977667 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.017741444 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.025394439 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.023893275 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.01726154 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.01943313 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.024859066 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.023921194 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.019838381 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.01901984 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.019879773 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.015699987 seconds)
  done (took 148.521186628 seconds)
done (took 594.729363066 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.129907379 seconds)
  done (took 9.066022068 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.022264008 seconds)
  done (took 8.991545374 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.52751704 seconds)
  done (took 10.466036001 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.033342434 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.0631863 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.026417224 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.026315136 seconds)
  done (took 30.104318434 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.05070637 seconds)
  done (took 8.988201147 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.035512057 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.012518072 seconds)
  done (took 16.003408741 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.117027074 seconds)
  done (took 9.054288607 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.243827609 seconds)
  done (took 9.212813554 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.020609995 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.043479513 seconds)
  done (took 16.012896812 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.99553478 seconds)
  done (took 8.933197326 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.630013897 seconds)
  done (took 11.652759903 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.030561827 seconds)
  done (took 9.060196045 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.047449384 seconds)
  done (took 8.98447732 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.213483736 seconds)
  done (took 10.150234153 seconds)
done (took 168.61734805 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.036471337 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.017722736 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.021109662 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.018741118 seconds)
  done (took 30.031755374 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.053449043 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.053859426 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.054912288 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.063833986 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.056953402 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.054515929 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.046919125 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.045805573 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.063708789 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.057225732 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.056038489 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.056332082 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.055337231 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.046304374 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.056489813 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.056531626 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.06527133 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.055622359 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.047038859 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.057993568 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 2.021957575 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.065230875 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.059193815 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.022332126 seconds)
  done (took 51.210935778 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.225617678 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.101195984 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.180582707 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.079500062 seconds)
  done (took 10.52636959 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.073603595 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.07444209 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.08655412 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.126414914 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.148557589 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.085077758 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 2.047949209 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 2.041952721 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 2.02952762 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.075420648 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.149880418 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.070629304 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.160175376 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 2.022131017 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.209291314 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.022634812 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.021516348 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.073765234 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.125289353 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.138212551 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.022822288 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.07415903 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.077042322 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.076433853 seconds)
  done (took 51.974139293 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.020561613 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.029036698 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.027411851 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.021086896 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.021605953 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.02156071 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.027263429 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.021927875 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.042267985 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.022117612 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.020296805 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.021375072 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.021286195 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.022220918 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.021637453 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.034330947 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.035374513 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.023260071 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.024881864 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.028221316 seconds)
  done (took 42.448206601 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.022361929 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.877366909 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.374920879 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.277408602 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.022262064 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.022037048 seconds)
  done (took 32.537500053 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.041951459 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.034910635 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.028329453 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.087265097 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.171834962 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.039627184 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.029285501 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.043121191 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.078108431 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.097954963 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.051889659 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.059998551 seconds)
  done (took 26.706116356 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.026027219 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.029884025 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.024515033 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.046623287 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.040203065 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.037409657 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.035850608 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.023665291 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.042002081 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.04863807 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.037842081 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.042010066 seconds)
  done (took 46.381167753 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108833905 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.908769286 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.094826962 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729813077 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.553773613 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.230650082 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.54821892 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364349642 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.02343225 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29339378 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.995573122 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249796863 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.275494361 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.020970849 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.085067734 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.448117686 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314301933 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.234631898 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.037148188 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.642857703 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129143528 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.482515616 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.780569269 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.139933355 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.231734741 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.15247655 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.278062804 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.97513844 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145183981 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051037511 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025788936 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.013799854 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.285805432 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.385310835 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12491504 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018968506 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.669270782 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.726208656 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.99494709 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.70176298 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.838590427 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.141146256 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02717021 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.018598182 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.951344859 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4776388 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46591304 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.020592182 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.718589289 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.013090494 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024095309 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102932671 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.014956826 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.827955348 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.969267674 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.290227074 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.008036821 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022286888 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.578278268 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.03984276 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.576357051 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 4.059879148 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.118807531 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.680872693 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.492529026 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.175756674 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.024986182 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.025455247 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.955563328 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.655617813 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136775171 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.168161166 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.041034542 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.672182132 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318398901 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.069215463 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.092575309 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299822775 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.803431141 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.062475379 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25073137 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.981017511 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.95601384 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.881989211 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.954715366 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.26949213 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046817186 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.62943808 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053104485 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359974173 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.030458159 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042202415 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027670053 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.242880399 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.901186406 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.019673103 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.771667363 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295299311 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044846778 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364270558 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.95770622 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.026734918 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27919695 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.235139858 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.193166218 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.560004425 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181656921 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.026031867 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.11088625 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.881849507 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.137634348 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.300519353 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084606306 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.063190163 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15061028 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.981470489 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305315701 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.042072432 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.191051999 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.017129939 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277388804 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.321444339 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.268464632 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109623389 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.028358533 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.027469766 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.758551847 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.642077837 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.249602548 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.027300306 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44867841 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.141969594 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 7.029754328 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.961799504 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.692109898 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.010647927 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.123383701 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.253675602 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.924152667 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.408643358 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.960589558 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.170845661 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.13747694 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.248629343 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.665250705 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.101437162 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287705527 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464415723 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.303514033 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143394782 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044993025 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118160616 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046850511 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.397745015 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38388627 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.028371924 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.028563039 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.696859386 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.096759626 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.036072574 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.033015174 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832854105 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318775353 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.058415125 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.028247751 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.914053247 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.039812093 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093254898 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.032573776 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035462726 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.555062011 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.784388825 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.036985523 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.712176725 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263051682 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033041627 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.643297267 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213933794 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.113095142 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303851556 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094524901 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.963951456 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.731598832 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.732261139 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.030527366 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.965586153 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.030758491 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040196512 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041599218 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.233361919 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.309939508 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.080700386 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.757078594 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.137834465 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042515862 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.036475633 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.031045374 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.527490721 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.082993626 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.584761313 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.144938229 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168473318 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.046057624 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.965363244 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.035181229 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.0365147 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.032362625 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.989047367 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084154513 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.745661584 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479072476 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293039519 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.685484519 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048591403 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.774521682 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.152728193 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.062225654 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.794959521 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.054113145 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.137309881 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105234958 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.043906108 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.671321169 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794661143 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.602167253 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342664312 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.359684411 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473058399 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.465267031 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.358303138 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376384641 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268241987 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.562730232 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09486279 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380506192 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.980237857 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118290847 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.677772302 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.385714474 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048759821 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260881049 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417638543 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.864219179 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.183127887 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.244995565 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069050238 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.911368147 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.064657927 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.236796419 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188242774 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.755657911 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249286827 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372463525 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.800270736 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.125586831 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 7.039047065 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.733253011 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105183883 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.744941262 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.394635246 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.50888016 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.136390023 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518378626 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.044865266 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.480033398 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394455284 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.297334534 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.228666435 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.971289409 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.046926551 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.045825453 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.034756344 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.014202577 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.970017081 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.317300078 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047367179 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271357557 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.235647318 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.408365788 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.946668608 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.040712582 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.035934487 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317833414 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.742332099 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270628844 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.426744896 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.616856966 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.046566322 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.970529873 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.971568541 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.739729947 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.038290397 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.012353331 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.251625366 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.141447823 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.998122925 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.463478045 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351660666 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.292895717 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.051018795 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.316877198 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318875981 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.777657339 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066390331 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.137140692 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.803552352 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.735110112 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.260537506 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.273127744 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871969385 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.267804981 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.086466215 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.977002834 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.043525478 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25232246 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.261144651 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.033841638 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273293349 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.7614787 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.043160892 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409224111 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102773271 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.035338711 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.240046278 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.138068243 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054838847 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119129 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049249149 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.05064486 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.05034417 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087115531 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.041053635 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.163272773 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.053985508 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131421944 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.087831967 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.620381798 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.050011954 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322491357 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400544641 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375662789 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105079294 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.03948767 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.045784188 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.974360808 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17930896 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.486422376 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.313445062 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.172868557 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.187365701 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067447062 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.810446927 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362979334 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353886498 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.315581468 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.936799602 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.042976923 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.125695189 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.264856152 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050692584 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.25222976 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.482208609 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.337139682 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502567431 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.229089769 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484102083 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.316214381 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.41910873 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.042166053 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.632393336 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.045896047 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.800766587 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.070157866 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.053087738 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318511816 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053045718 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.420707761 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.062436167 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.236721783 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.559515119 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.679082038 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398474261 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.019463497 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.096302763 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325237142 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.447252758 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360728953 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110782349 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053465579 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.741943829 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181169431 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 3.00959048 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.308787083 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.043139884 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254243111 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.755805525 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.052664774 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32232519 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358381528 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.041430888 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 3.034180143 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099743369 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.054632296 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.267901741 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.295279674 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.286161679 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054104327 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.045559199 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.862721925 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319970027 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107095641 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.978912983 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.048562367 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138593143 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.29016113 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065228492 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.562697079 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.747530779 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.329595579 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.953660525 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066045307 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.50344975 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.490346345 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375381578 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.590619458 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.26691141 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.594169956 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.952247945 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.419023186 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.049780239 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.498158466 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.423492199 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.049282077 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.60411946 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15638142 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.322504 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.37199131 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.054951845 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820631594 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.083910474 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269880047 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.64923542 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.987463882 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.053219105 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.106228693 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.046765587 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.176530001 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057186408 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.056195081 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.972461908 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.884232263 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539084716 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.051949168 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.037478506 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.839830192 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.644305541 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157335301 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203035906 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.052827351 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.771156302 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.338491301 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.302820682 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.597687022 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.115258049 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.051026134 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.048502147 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.975957034 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.244588942 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.251596 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339859359 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.424854601 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.157493003 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.051767883 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.26349073 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259168301 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.035062984 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193944281 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471104267 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159852211 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.948210921 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.762702356 seconds)
  done (took 1764.780937089 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.057567587 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.066856807 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.055223865 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.090809389 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.073977022 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.069040977 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.083055533 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.14524394 seconds)
  done (took 58.613075907 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.052682229 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.273824009 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.063198805 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.050632376 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.088034301 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.067883735 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.260873011 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.063352171 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.078557059 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.059825983 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.048432342 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.048708314 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.380665668 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.071751833 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.054872566 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.048223448 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.063572589 seconds)
  done (took 77.75555377 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.045522355 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.233537235 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.054791007 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.058509315 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.92529544 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.041132313 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.121734886 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.067572601 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.041592069 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.208761414 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.366541691 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.042079262 seconds)
  done (took 92.171625447 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.052010196 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.041514839 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.040460828 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.042464376 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.042297115 seconds)
  done (took 12.18168812 seconds)
done (took 2299.34599865 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.277534178 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.25266249 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.259264002 seconds)
  done (took 6.466793104 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.177039306 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.224368343 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.343356116 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.351611212 seconds)
  done (took 11.047440793 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.3165853 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.421555502 seconds)
  done (took 6.685387987 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.348818569 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.050252408 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.4043803 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.019686355 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.022659533 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.022660197 seconds)
  done (took 23.01773449 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.024011214 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.026597846 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.026092116 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.026777989 seconds)
  done (took 10.048532655 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.00335455 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.76104428 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.005380534 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.023627192 seconds)
  done (took 21.738467784 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.774787888 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.42340201 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.76748303 seconds)
  done (took 9.910994375 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.604245591 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.978307276 seconds)
  done (took 9.527373263 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.290589194 seconds)
  done (took 4.259484728 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.077771021 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.320011355 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.576355596 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.581386744 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.672199898 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.88034393 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.350151817 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.284372657 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.494821287 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.501959979 seconds)
  done (took 26.709273812 seconds)
done (took 145.448643898 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.468058366 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.082038907 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.251073779 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.401911583 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.27669349 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.250600716 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.263660153 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.390999342 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.924201119 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.922876725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.405408863 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.272149493 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.209859324 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.060052312 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.217401041 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.055231963 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.264560788 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.47555629 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.118857171 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.320939127 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.266680205 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.048147704 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.239212366 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.070319538 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.269483087 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.187681539 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.609613468 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.068583976 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.291218433 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.66059779 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.21048492 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.508367558 seconds)
  done (took 174.033488795 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.036597646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.063193704 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.067015507 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.033648776 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.477000922 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.061845651 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.033478078 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.032630821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.183391459 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.156342417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.060364554 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.412476724 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.057995284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.031119362 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.064359394 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.029375809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.313925047 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.0555926 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.061888052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.062984158 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.063935804 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.232683011 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.053711632 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.265925612 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.277804238 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.0544865 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.025715043 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.055903414 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.057570206 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.056757733 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.060325633 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.024022 seconds)
  done (took 213.507074198 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.022725435 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.030168117 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.033763747 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.022284858 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.037338996 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.035279477 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.024483488 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.019870855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.554583452 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.558803554 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.039703406 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.029358235 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.03126653 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.017211487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.029306119 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.015444888 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.028935539 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.027823334 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.029233497 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.034258093 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.035500505 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.692467938 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.559958985 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.845204912 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.040617659 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.042158938 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.014541541 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.04247892 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.045237123 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.038743548 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.043340446 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.014412916 seconds)
  done (took 226.01703198 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.198730043 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.014942206 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.015574903 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.93807803 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.015158623 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.014914131 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.008875581 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.198365737 seconds)
  done (took 20.369250622 seconds)
done (took 635.903483192 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.578865332 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.351974613 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.201651082 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.040770955 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.306363842 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.082920965 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.035639611 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.112527481 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.795664701 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.108569066 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.723321941 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.067243116 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.802807708 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.068313515 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.159071439 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.098137526 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.605659723 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.694178416 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.218132362 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.125667096 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.206285732 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.019807273 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.120385475 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.81033602 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.816100999 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.054340193 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.208359412 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.604673453 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.050471081 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.196150504 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.792204313 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.423483791 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.054855809 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.039057499 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.091743882 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.069761952 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.385677713 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.053181928 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.162560415 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.798264663 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.118866595 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.666590485 seconds)
  done (took 109.856040871 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.004881405 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.003425858 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.00192252 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.0026125 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.00336989 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.002266117 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.003151884 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.002623477 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.003880497 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.003679216 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.002765285 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.005329882 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.003055663 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.003873218 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.003224334 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.003873782 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.003707242 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.004994657 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.004084995 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.002140398 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.003963911 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.003118975 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.018114343 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.003810593 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.004368889 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.00413716 seconds)
  done (took 54.05225827 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.018745701 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.195985022 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.260921178 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.045771554 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.023605579 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.027686607 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.043006293 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.02418268 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.027266741 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.026789285 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.133966578 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.026285674 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.044467283 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.26063102 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.043027445 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.019608061 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.020094506 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.025313673 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.203330697 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.042537076 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.045260846 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.024610757 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.046706817 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.040850038 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.027323763 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.02440922 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.028995494 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.521545223 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.035356171 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.130753716 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.103274318 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.049940029 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.466030055 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.269680548 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.087891131 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.032768992 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.02226801 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.134969304 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.031784052 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.026187585 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.044455302 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.030691928 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.257792716 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.532046606 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.042264828 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.022308998 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.530554004 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.146131181 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.069143779 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.038990519 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.26262167 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.045818847 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.02344691 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.027864076 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.063788841 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.0343111 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.027353823 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.372936372 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.039325158 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.044535208 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.02681826 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.026735358 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.204447137 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.03707313 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.190667167 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.038158203 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.033819131 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.027750569 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.261435865 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.046692505 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.535420472 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.044219604 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.022195655 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.134112619 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.197218021 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.558904447 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.042897209 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.204848801 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.484485055 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.054279697 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.034990912 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.511176708 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.057898896 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.035517406 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.025670502 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.025278995 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.023128871 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.067223622 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.045652204 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.461706761 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.540274101 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.396575288 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.055692489 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.043546115 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.029880266 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.376593865 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.032312992 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.024594916 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.256584064 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.544181023 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.044052695 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.036474719 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.526153391 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.045926079 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.049039598 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.038336486 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.266839416 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.047887126 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.068709634 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.024478719 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.036692048 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.032724179 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.04955119 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.037178518 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.024811738 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.514041828 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.161593148 seconds)
  done (took 251.026628844 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.025903634 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.047264949 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.023232585 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.048329067 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.023120017 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.030121542 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.024739535 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.025459283 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.030802485 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.024345574 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.023728507 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.024351802 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.027861801 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.033355519 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.140692279 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.033940396 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.639588877 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.031201782 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.050144727 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.034934769 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.797850762 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.037551309 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.028542192 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.027729814 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.027807554 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.029033186 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.032815641 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.130698649 seconds)
  done (took 172.401826191 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.031992652 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.151653454 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.049723333 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.063287601 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.039262895 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.027279723 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.058626615 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.051546682 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.040784347 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.027840869 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.027625623 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.096584785 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.042646004 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.131253196 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.066708186 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.063029692 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.140586968 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.037714633 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.029472652 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.028673332 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.065296904 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.025183428 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.097758168 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.16475616 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.05042728 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.15355226 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.034443356 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.03229026 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.03616309 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.155636401 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.049051766 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.090843344 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.066692423 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.053858439 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.158896426 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.154417418 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.13551158 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.059321268 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.042026808 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.029114412 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.029170113 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.016869752 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.15607178 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.050945477 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.037377134 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.138234767 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.051618928 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.033497065 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.040783185 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.029758928 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.050367427 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.055663421 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.106860349 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.171807796 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.066673342 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.056075962 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.06218869 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.311729456 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.040491447 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.13693865 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.022405834 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.151399502 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.053624638 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.017510707 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.031505448 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.037694885 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.060968627 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.064855659 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.142101659 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.044220608 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.137038802 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.066997526 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.038781447 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.031854026 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.035411079 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.155153061 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.158546427 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.06709742 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.075260021 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.070003999 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.02732284 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.039805778 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.019848708 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.054839245 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.036836241 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.149717725 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.158578764 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.040601585 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.034359205 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.034385946 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.035732245 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.064668218 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.164512582 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.077011102 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.127995003 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.106202829 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.115853675 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.050428579 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.04705683 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.037665026 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.104373343 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.050944199 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.045306528 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.361650056 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.110189854 seconds)
  done (took 220.014305743 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.485816561 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.087313826 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.0973251 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.352854252 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.458735689 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.840267521 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.089179735 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.084203265 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.11454469 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.273559985 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.158078532 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.103154708 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.076041613 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.064048526 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.084698637 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.110753312 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.093967644 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.404695027 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.225959106 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.208400164 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.071203823 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.35566087 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.40731704 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.491410039 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.125240457 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.415020116 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.761236235 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.222822322 seconds)
  done (took 66.223047901 seconds)
done (took 875.507973278 seconds)
SAVING RESULT...
DONE!
