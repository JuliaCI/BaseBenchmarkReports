cset: moving following pidspec: 27384
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.916985678 seconds)
loading group "string"... done (took 0.564970855 seconds)
loading group "linalg"... done (took 8.888802462 seconds)
loading group "parallel"... done (took 0.168928062 seconds)
loading group "find"... done (took 1.405168425 seconds)
loading group "tuple"... done (took 2.071702895 seconds)
loading group "dates"... done (took 1.366462143 seconds)
loading group "micro"... done (took 0.217373553 seconds)
loading group "io"... done (took 0.601669007 seconds)
loading group "scalar"... done (took 43.159821265 seconds)
loading group "sparse"... done (took 13.318005148 seconds)
loading group "broadcast"... done (took 1.085498766 seconds)
loading group "union"... done (took 12.231794259 seconds)
loading group "simd"... done (took 2.521116946 seconds)
loading group "random"... done (took 10.276092067 seconds)
loading group "problem"... done (took 1832.806700176 seconds)
loading group "array"... done (took 25.599537874 seconds)
loading group "misc"... done (took 1.120480036 seconds)
loading group "sort"... done (took 3.777916087 seconds)
loading group "collection"... done (took 18.998127762 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.684276233 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142127997 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.172617117 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.351479533 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.211074811 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.150978077 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.168628833 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.563914943 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.018692673 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.21665271 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.149041423 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.558959952 seconds)
done (took 6.093259922 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.270194195 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.451060415 seconds)
    (2/2) benchmarking "String"...
    done (took 0.13530606 seconds)
  done (took 1.238812011 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.082888568 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.186291562 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.101901119 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.120155951 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.119261424 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.119244707 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.117047342 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.100273335 seconds)
  done (took 1.520956443 seconds)
done (took 3.778072362 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.498539569 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.843102047 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.530989094 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.135498583 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.164356466 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.15356661 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.310177799 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.166116261 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.126781093 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.106617859 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176759093 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.37295564 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.489052354 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.992098712 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.111278349 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.136633473 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.087607545 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.717932865 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.088983289 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.136528105 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.529617936 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.116896982 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.124367663 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.14586655 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.206968451 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.122375424 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170030593 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105217431 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.668424807 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10799385 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.193170012 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.109670032 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.168846324 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.247610305 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.10170556 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.098285872 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687719422 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.185936247 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.118567113 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.105874511 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.692614978 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.086380834 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.193943407 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104064095 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113849277 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.194307645 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.11854071 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.10293729 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092183038 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102017657 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166084528 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.512806436 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.113708804 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.152634621 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.113583417 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.700450526 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.103197162 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.162567127 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.144752803 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.114171051 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.088654735 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.114623189 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160625029 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.120345627 seconds)
  done (took 19.989400628 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.12575927 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.147656137 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100924931 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144844273 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.144046262 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.103344367 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.104539565 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084961299 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.130587595 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.191445344 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.142146163 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.153522051 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081303085 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.103066307 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.107451803 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.255120343 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12670663 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.126122452 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087860834 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.112081743 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.145242941 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10260503 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.11386758 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.11478395 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174064587 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.210475726 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11640308 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129168491 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099036223 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.118735355 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133560462 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.165121198 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096771121 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084862591 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.18729332 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127208447 seconds)
  done (took 5.366856887 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.205655888 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121764899 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.195813635 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.18037454 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150266748 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183770037 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124195686 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257966793 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.203652501 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.14844536 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184691039 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134426354 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101980191 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099991504 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086667673 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.103426457 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.133536983 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.08447833 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.668595038 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.18453665 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152644661 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.130325638 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108527886 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087324195 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.400377685 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108128225 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085367149 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108625195 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.076942454 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.198013081 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090511021 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.296005085 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126486995 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114563839 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136508535 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205526535 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.138571403 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128402673 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108716431 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.103519162 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.217461868 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114595271 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082721976 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132661934 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137760122 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120980573 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.10582351 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.115428609 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.228828803 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.104840168 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125700727 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.070354841 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.205535271 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.101372968 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.103255059 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.35755316 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.121472843 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109028067 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.087737286 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.288224379 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.139422049 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.087758674 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100438461 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091651892 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.101138411 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.426127691 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115437012 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.001638845 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086657308 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161035371 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106063742 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.111070845 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10676761 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09227158 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.121763019 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085521527 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101451026 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084437801 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.101565668 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.089652229 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.120591728 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.104890842 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088446504 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.102711137 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15224498 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.12091271 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120631894 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130622045 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08987643 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.101318246 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11809733 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103110292 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.105122807 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134092541 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.110235943 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120258115 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105902361 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147916369 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08651428 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.188529145 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088382544 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130108196 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.106176005 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118551711 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.125931615 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103592546 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088655943 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.101011613 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08449489 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.169257839 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086676779 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.102314393 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086842357 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11752957 seconds)
  done (took 24.369671631 seconds)
done (took 50.382607362 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.460532898 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.099644483 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.118539596 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.118836228 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.117021196 seconds)
  done (took 1.653801134 seconds)
done (took 2.365368467 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.360447409 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.186571699 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.125109381 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186318516 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.110008412 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.190621834 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.175512545 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.12458631 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219006243 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.089209769 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.19896131 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089079784 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.110368358 seconds)
  done (took 2.907306973 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103290282 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.126290653 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089253093 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117820115 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080986312 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117577581 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098135541 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.143631183 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113776618 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092065863 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096773797 seconds)
  done (took 1.887559358 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09895087 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121892082 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088304996 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114968029 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083236046 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114488906 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097160349 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.125684215 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096643889 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111963324 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08029919 seconds)
  done (took 1.841572296 seconds)
done (took 7.338816868 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.045797899 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.172467335 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.12531264 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.171526372 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.345230055 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.196781724 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.528457914 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12015995 seconds)
  done (took 11.617406817 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.121650305 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.121904969 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.106247337 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089339492 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.103828034 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086557284 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104164512 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087282012 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104980279 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087699648 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.105350217 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087078537 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104619968 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084804588 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.103342702 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08804355 seconds)
  done (took 2.360139295 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.12528637 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122807892 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110382837 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.113554676 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089932272 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107417696 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092997603 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.109371044 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105121393 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.090527605 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.113223872 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110554453 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.094855436 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.104336798 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092684185 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.113771548 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.10595517 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.092854635 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109937232 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.109295333 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.096101383 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.106671143 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.09369248 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.11221685 seconds)
  done (took 3.346111257 seconds)
done (took 18.03634291 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.17984119 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107438873 seconds)
  done (took 1.002573568 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.111034913 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.127101191 seconds)
  done (took 0.959394812 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11590477 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.104079762 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.14140194 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.121075456 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.087878899 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.103142102 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.137386912 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.088222682 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.104598754 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.088711374 seconds)
  done (took 1.816438102 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09458919 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110338387 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.098152398 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.12819703 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117337502 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09040525 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.109041972 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091823214 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109399792 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.101589489 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095282222 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123584857 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.109993069 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.110306888 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.108673423 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.109663576 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.097401619 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.108574516 seconds)
  done (took 2.639573726 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089783297 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.107704234 seconds)
  done (took 0.922256272 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092574417 seconds)
    (2/7) benchmarking "second"...
    done (took 0.105356939 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092537621 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109301807 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.088005215 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.105371237 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.087373437 seconds)
  done (took 1.403980754 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.536953593 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.249621091 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.343550418 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.121873799 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.141128245 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.374910331 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.141281363 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.119987707 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.11964562 seconds)
  done (took 2.917313596 seconds)
done (took 12.383431235 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.100238297 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.202530357 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.552249981 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.125704678 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084267853 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.167887207 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.268143269 seconds)
done (took 2.230980736 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.361580154 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.130347096 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.096230289 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085171023 seconds)
  done (took 1.396718951 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.088484225 seconds)
    (2/2) benchmarking "read"...
    done (took 0.112342977 seconds)
  done (took 0.93075758 seconds)
done (took 3.062903998 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089513423 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.14060438 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.084330313 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.10318236 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082722439 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.101953653 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084545893 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.100852116 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08253528 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.101164751 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.208883477 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.102962416 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.086689263 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.1036048 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087271357 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101658735 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084887134 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104257913 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08529979 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08416882 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102805402 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086888247 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.102428067 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.084898524 seconds)
  done (took 3.166791572 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10962763 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.1068369 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.093278781 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.112190107 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.109872528 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.093482584 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.110703347 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.087521176 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112130583 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.107937463 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091544259 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109547616 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.090581435 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.110758841 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108282567 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.092504201 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.111412643 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088752695 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108731731 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09241174 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.112731197 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106101415 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092057795 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111599237 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.092158903 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110442157 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.107585017 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.088738393 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111493517 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092405311 seconds)
  done (took 3.809955259 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096936597 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.102175635 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086206265 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11463855 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085723811 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.106741723 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.084736518 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.104062586 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.086386032 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.102259359 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.088141723 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.103389691 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085350704 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086295484 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.106258463 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.110001435 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.102424431 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.101701404 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085099418 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.104277088 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.091389362 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.102697854 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08808216 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.102941022 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.08574191 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.102416332 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.086318985 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.102182628 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.086487475 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.085318231 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.109854403 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.109165559 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.086022314 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117623633 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.091121514 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.0999198 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092270049 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.100593608 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.085259685 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.100558187 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083376187 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.100886974 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.084189683 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.111277806 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08753208 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.102110787 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.083712485 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.102734801 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.084106009 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.103785953 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083536675 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.102555134 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.087507246 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.105073992 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.091875913 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.102915972 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.085939662 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.102672971 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.087013665 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.102921464 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086205986 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085272862 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111039833 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08574815 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.128457528 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11432774 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085740652 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.10493825 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.089591142 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.112358594 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.088761863 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.122589026 seconds)
  done (took 7.719837717 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091676212 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115477898 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087985483 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105572301 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084112857 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.104671925 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.092946582 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104971692 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088083431 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123189161 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102732811 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.087406129 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106090583 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089644576 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105809211 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089252723 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115121454 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084389471 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.105189438 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091131248 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105771915 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094289516 seconds)
  done (took 2.92012261 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.233196001 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.111945574 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.150679809 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122347847 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.121397785 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.102445845 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108626161 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092843087 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108802712 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111777231 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093868547 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109104303 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121550802 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094576293 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112154179 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112841478 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091439004 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112623994 seconds)
  done (took 2.861801487 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103037238 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.108127909 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.114269845 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.108785011 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.105369554 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089621656 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110516099 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.102856842 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.106762138 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.104634056 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098412676 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106944162 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.089421314 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105212939 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090679043 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105168008 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.089764281 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10526833 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115244729 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094189436 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.111194667 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11634853 seconds)
  done (took 3.028694655 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107198694 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109680992 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.136392566 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091365789 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101190639 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08541687 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.111912413 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.087602709 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.11311623 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.088635188 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105208722 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085655156 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.111979854 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105330365 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.093298132 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104933728 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088712034 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105311904 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089413148 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100981636 seconds)
  done (took 2.771119582 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134621727 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124714447 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123975574 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115109303 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121789132 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103055755 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132360059 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.120903516 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103144148 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135266751 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.121199603 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103911478 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132903201 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128590421 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121467839 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115350422 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13272804 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132884608 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104125785 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12334284 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134747333 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103997894 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132479616 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121853941 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103639833 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124366115 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122080818 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111127685 seconds)
  done (took 4.14054777 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089861505 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088986928 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.106365637 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.087731564 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.106264533 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.086359734 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.10399578 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.084201498 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104620033 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084582569 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.104223347 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08669137 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104731571 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086591098 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10453937 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.087192295 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104318884 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.084820006 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1019356 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085073788 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.104632381 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087317051 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087104147 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103117907 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084502676 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.105178425 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08465061 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102463614 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087402336 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102251999 seconds)
  done (took 3.598384464 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.099481125 seconds)
    (2/2) benchmarking "in"...
    done (took 0.115527791 seconds)
  done (took 0.968913626 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.088158446 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.130556991 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.086784867 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109929113 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093377946 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.106546507 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115877402 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093648158 seconds)
  done (took 1.582777426 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.116233247 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.128486531 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093688487 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.118076024 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.125939305 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.107908928 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172516694 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.11186008 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.094890188 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.107074942 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.107617127 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.106295454 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.097173209 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112741511 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.114441867 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102927993 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.103396902 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.098061711 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.113921073 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.089720285 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111898706 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122412178 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099406486 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.114179757 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.090515212 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.118565028 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.120351797 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.099756726 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111242077 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.100417868 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.113977686 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.081824178 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112356901 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.093763648 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.104576392 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.124697362 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105557151 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112131003 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097754415 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112764146 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116845706 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.083579972 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.118052856 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.096159095 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.118781413 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0940633 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.112353452 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.083560003 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.107339236 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.110072063 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.084424392 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109614479 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.083243845 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116511595 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.098386911 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12509131 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.090050082 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.111091668 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.111282445 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.092321647 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.113483321 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.093224217 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116832162 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.092099444 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.124336811 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.116361152 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096427343 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.101460224 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.082688722 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.103917639 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097550298 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.131859115 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.118806529 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.093981601 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112797847 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.087604343 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112561902 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094976662 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114469761 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.117407382 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.094066743 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114633504 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100085704 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110031995 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.093149825 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.114121426 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.090383412 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.110589526 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.089102289 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.128544247 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.109614064 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.086815805 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.107548247 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.099530886 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.112080767 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.092849285 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.108303367 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098467234 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.10055717 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.093135623 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113150752 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113947639 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.101851978 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112479741 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095138835 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.116843583 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.119454867 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093587341 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.110859287 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.086493161 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113684857 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.090900482 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.116032942 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.083485329 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112778596 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.092742618 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.11287718 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.117231754 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.090957117 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.111879635 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100444104 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.118874074 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.091939628 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.104249451 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.093315668 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.111730874 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115725055 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.101659673 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.110281645 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.085060523 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.102458124 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.098410364 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.11172981 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.095535912 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113194033 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112892169 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.083413619 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.086582136 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.112949966 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.118101316 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.092933945 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.114694468 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.098477819 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.115038611 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.11054057 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.098947736 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.109770475 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08899727 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.116245871 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.093446378 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.103217357 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116395272 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.093925734 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.109484583 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.094569893 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116571222 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.09441586 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.113563787 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091836502 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112606439 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094987165 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.107583124 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093703529 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.110368279 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.119057238 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.093227798 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.103316566 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.086595346 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.114182526 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.090590884 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.112242266 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.089542988 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.112888363 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.095388246 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.106650396 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.092124846 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.111491395 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123897903 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102828426 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113296273 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.097047738 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.119175593 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.092461321 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.115613233 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.093195206 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115003075 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.112894374 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.099268297 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.114854971 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095022173 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.112125086 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.086635611 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115072466 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099085683 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.109313488 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.086970961 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.108234197 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.111222704 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.101779243 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.112718816 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.094972898 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110677665 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097592138 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11780015 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.093208817 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.112102104 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.088732172 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.113209126 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.11797696 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.096536702 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11353496 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10103001 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11439285 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.085130948 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117248405 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091394257 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.117519985 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.084229075 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.11018051 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.108276329 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.097120614 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.111314119 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.093658514 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.102147342 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100044473 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119313023 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.095287072 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.109746481 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.094285466 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121811605 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.111107459 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098188887 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.112666426 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.097977099 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12780195 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.108154674 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.094869921 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.120513121 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.094715094 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.102241992 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.097235318 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.110930916 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.088814882 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.111694389 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.091598826 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114122702 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096284391 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.115228211 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.08283363 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.113326114 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.109872004 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.09052637 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.105039731 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.099611763 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.114211644 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.09414873 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122338483 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114484203 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.095683628 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114641534 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.094678574 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.114065704 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.096326387 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115010048 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097491805 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.111307332 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089531662 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.114289109 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.107214342 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.088633722 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.11121091 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.094572277 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.114037856 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096556456 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.112795628 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099575294 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.114004118 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.113571372 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112764282 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.111148775 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089684509 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11495532 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114827094 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.094573166 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.112727318 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.087403955 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118693252 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.094463114 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.119750631 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.093188492 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.105755535 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09469036 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.113315826 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.114583986 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.096524391 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.114010468 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.094269539 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.113054407 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.094544316 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123141822 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090767986 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.121297442 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11583829 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096892287 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.112848128 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.095510886 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.113375396 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08996427 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.113216973 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.095393936 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.115994962 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.112873573 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09768584 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.113977028 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.094502232 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112053619 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.096428386 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.115693212 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.096812435 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.104953714 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090008253 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.111053714 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.095491441 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118788562 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.114298769 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.093549124 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.111656262 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096902922 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.112526895 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.087488659 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.117909789 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097537039 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.115399368 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.123476462 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.091001419 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113539342 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106586467 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.103886746 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.092687604 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.108338892 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.091028767 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.119432369 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.096455634 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.120333205 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.11379883 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.091778896 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.106423008 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09769609 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.111782248 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.085963873 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.107391295 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098625368 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.111473211 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094031953 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.114809689 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09796515 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115873775 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097979539 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.114196807 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.114323395 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.096066521 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.106459438 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.091733756 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.109409859 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.096202462 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.114826998 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.091836681 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.107408447 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.095482876 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.113914123 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.096005455 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.113966175 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.094353204 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.12143768 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113400059 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.096364214 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118489987 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085764993 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.114767573 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.094844764 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.11427224 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.091496142 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.116120188 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096369031 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116675328 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.119196587 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.095426317 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116426541 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095756813 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.107416597 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.094403327 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.114729275 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096078758 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.111072727 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.096171812 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.121102739 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.088500901 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.114853804 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114684214 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.093222792 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.115647805 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.097014288 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.114647797 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099486013 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.115368216 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.095452005 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.119508993 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.114779919 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09776431 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117067487 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.094625878 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120350252 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091321214 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.122555143 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.095439527 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.117356778 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.11405151 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.092376696 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114491221 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.095813146 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113454514 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.101390149 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.117238497 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.091102443 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.11019513 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.089468274 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.114474428 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119069687 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102779284 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.115214257 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097343184 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.106499336 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.088967293 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116692145 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.092122673 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.113696696 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097799383 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.120461092 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.114717959 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.09280643 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.112730918 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.101811725 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119340377 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.097415413 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.111727755 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.097478755 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.117822733 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.114456274 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.093980607 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.113691994 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097111816 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.117398685 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094042738 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.111126857 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104086071 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.120509693 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116444146 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.094614946 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.117218298 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.095811155 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.106229631 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.096994889 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114770457 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118505118 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.097459305 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114834064 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106535938 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.110679589 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.095196959 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120809781 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094521164 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.122161356 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.106575216 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.097109763 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11677098 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097615576 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.106373586 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091800894 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.112510917 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.09674286 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.111529557 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.087226369 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12724573 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.119609264 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.096721619 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113828428 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095068859 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.107320468 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.087263697 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.111830702 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098542962 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.114410241 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.104380003 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.112407263 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091138521 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.108183229 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095571247 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.118124313 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.117476448 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08881762 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.106666982 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.094185902 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.115911302 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.103519386 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115194641 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.097079688 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118393915 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095684343 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.111216912 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121160139 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.088919969 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.116580728 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107660493 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.117337628 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098058074 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.120393089 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121900256 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.098206452 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.106891599 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.098183638 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.117560206 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097754181 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.117632322 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.098071341 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.132697041 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116886448 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091884118 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.114013308 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.095329658 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.112247397 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.102980043 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118456319 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.116418869 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.098471469 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.114021725 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098748946 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.123139369 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098428819 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.117950769 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115990896 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.094947212 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115518889 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.094155499 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.114716641 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.098648325 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.117123445 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096068214 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.119322648 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.092134874 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.127429055 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.122590633 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.098637929 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.108134253 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.093339594 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.11283167 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.088781636 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.11788363 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.090392852 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.11393912 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.094458023 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.114329174 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.099189731 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118245124 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.096209013 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.119920398 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.115225028 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.086934741 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.119010335 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.097187272 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118674911 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.08914178 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.116434463 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100611361 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.121045906 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100692445 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.115665545 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.116147699 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.095498527 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119009741 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.088733385 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.119077319 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095973403 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.11501288 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.093516424 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117111433 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.097769885 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118295453 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097329275 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120547494 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.116442191 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101284284 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119140663 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.090080288 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.109315424 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.099729337 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.11045471 seconds)
  done (took 63.796196657 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.166053517 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094633 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108387063 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088100521 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134449045 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108982853 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088639228 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108086583 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090183688 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122674549 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08771499 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108127576 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.13096728 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137049875 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13252928 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104067489 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108035467 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089534438 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108007991 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089710349 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130393333 seconds)
  done (took 3.158903488 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11902331 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.127680416 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124850097 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.130224498 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099744796 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.126790728 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.124744243 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106211095 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.13101454 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121892459 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129516129 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106641421 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.121936543 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.120573205 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120621992 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104400571 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.131676269 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118483049 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.107112875 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.126172922 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123258278 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.125203875 seconds)
  done (took 3.470805774 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.107242768 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.116177893 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.101297435 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.109797792 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.096506008 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.109507947 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.102224873 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.111850212 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.101145366 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.117055989 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.093667286 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.116500632 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.101157831 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.111022382 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093928463 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.112709871 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.100248068 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.11746119 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.097020112 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.111903813 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.137109751 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.090962286 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.111997192 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.09370403 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.126570277 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.096354432 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.118815836 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.095736536 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.115508937 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.095050848 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.114441636 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.11718767 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.100162035 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.113185189 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.093827225 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.115782858 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.096504954 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.111095801 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.093074429 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.119798537 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.092322946 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.116614068 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.102715099 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.114498435 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.092175168 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.119953528 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.095374918 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.112040448 seconds)
  done (took 5.957280409 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.135141665 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168666262 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099331603 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.163920163 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132364221 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.12985592 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102659752 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135734249 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.115673928 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.095062323 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.14158153 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.135946082 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.116923551 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.102665763 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.122136747 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121107777 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100599231 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.118966675 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107463688 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.117410687 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.122979099 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.101308097 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.138243635 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133192985 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121699899 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097324034 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.117890364 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105407079 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.133306756 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126521302 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.129374527 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104309062 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132665161 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.119071911 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10266654 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123037033 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.134003238 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.097420701 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.12125957 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.11390311 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.102971516 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126570117 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.1032484 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.1402745 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.119408177 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.098699253 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124748031 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.116781149 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108462032 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122010596 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.127396183 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.132700339 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104525715 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.12272398 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104647075 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.138614886 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.118678276 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.09544301 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.128598313 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.133810236 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.094262176 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12356547 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.131961373 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.09888568 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.132541606 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.135354285 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.121887728 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10812855 seconds)
  done (took 9.152142686 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110510742 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.142678754 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135018662 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113669839 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12517432 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.123195811 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101814395 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.123924704 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123106077 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109529025 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124090952 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.173860367 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.11587257 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108099316 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123249071 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122764188 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103411658 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122978954 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101793615 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124411501 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.12278114 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134035831 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103513547 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134839925 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136120542 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.094564376 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124795169 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122799237 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134454279 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102912472 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136644734 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.12389368 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10305512 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135075256 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136661916 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.123181179 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093943587 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123249326 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.102597959 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124389939 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.115711345 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115191136 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125151196 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.11657946 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103909916 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12419363 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.134419969 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.136975381 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108751452 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131274629 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.123627136 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134871799 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10371712 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12444547 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133745257 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142707263 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114064692 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136252422 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123653474 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.134636292 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134533845 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122753183 seconds)
  done (took 8.428019594 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100483436 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092714932 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.113890305 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.091059012 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115355343 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09047509 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114988209 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.092747814 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114340532 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094355646 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113998849 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091577925 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111678064 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093924081 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111500178 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091582275 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111408574 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091633394 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113544299 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092128453 seconds)
  done (took 2.889342901 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109118084 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.134706246 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.094028203 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.123491164 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.118696638 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102647023 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.117919264 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096955715 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115890739 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097549689 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.128057226 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128125718 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094181221 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.123905957 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127851622 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.122244209 seconds)
  done (took 2.682128823 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121553236 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.129433076 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.14115083 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.099477742 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.114299008 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.100989871 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.117319747 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.089177191 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.113461225 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.125072569 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.101666135 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.12585647 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.095489478 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.113203162 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.095122784 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.121946563 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.09040281 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.119352716 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.093131784 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.142482012 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.1210599 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.096733674 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.117015239 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.09554708 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.120066156 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.122181515 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.102029439 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.115631513 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.092423417 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.116985401 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.117799804 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.103019607 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.11213538 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.099929653 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.113292075 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.092276733 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.115994903 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.094550491 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.122288027 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.094006896 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.115826714 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.116997332 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.095834339 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.116278876 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.091083142 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.116699555 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.091191374 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.122783409 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.096290339 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.119544915 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.093188982 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.125948588 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.122700195 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.106404252 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.126106111 seconds)
  done (took 6.918491329 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116706179 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119776565 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099493748 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.113512776 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.096984111 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.12517131 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098153635 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098211898 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.117225457 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092312832 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11740877 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099621648 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117791546 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098189362 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118620969 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098597502 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.112240552 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116028072 seconds)
  done (took 2.827319201 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107028768 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114980155 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.102451881 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.115450505 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.094905253 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.118091655 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090779064 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.114108959 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093828399 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.11571635 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09440444 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.118414573 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092411716 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.118685529 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095009892 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116025611 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.096296202 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116421319 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093400494 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113150709 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095893016 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116039356 seconds)
  done (took 3.184773201 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.119878484 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.149022922 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.130533442 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.136850805 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.121945044 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097078172 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.131004853 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.120383316 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.116754292 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119788134 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097229982 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.120891603 seconds)
  done (took 2.319589233 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12736045 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154256011 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11351875 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098887934 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129545264 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100013944 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121381528 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121137894 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113295475 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134914089 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121624095 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133919108 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111553104 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133440068 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12930787 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129034834 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100980934 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121856759 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094310325 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142482578 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122388877 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13330071 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099807971 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123504111 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121144415 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131827004 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112173924 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135519843 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121720166 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133859913 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108525352 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122073309 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133171324 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135606915 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098544074 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133261583 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100146429 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144288509 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130940312 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132996891 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096856092 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131776672 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134027491 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129568291 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113162651 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12360245 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129304885 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09988074 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124025318 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150537433 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130284298 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133504452 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108333151 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135695436 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134143708 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150266252 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136615203 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134516949 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108129232 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137078422 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133511066 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129772296 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134197691 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114046379 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131936427 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134103827 seconds)
  done (took 9.092935364 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143310782 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117879392 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122288576 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11393496 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134660666 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122868252 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123158865 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101768572 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121896461 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09740892 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170067953 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122720023 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133856809 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133747525 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102531899 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122990768 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122845527 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112719448 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119269194 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150818088 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123025103 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112784707 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134109085 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133929805 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135770307 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130199889 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101997324 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124268181 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100683234 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124782579 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129271954 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101091001 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134970081 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11620489 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13383853 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10180153 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122958893 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129011526 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10245621 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131295057 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134148002 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143961709 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102177385 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123861333 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135845648 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101282403 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124742233 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11870296 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10273964 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119554795 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137308768 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136640396 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114887725 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134721816 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122996528 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101466421 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124485038 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122666737 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102452431 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131423907 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133650437 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102038877 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173068092 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102800062 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123710041 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134987177 seconds)
  done (took 8.992198757 seconds)
done (took 170.169511625 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.123349417 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.154705084 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.11036068 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.18273308 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095956945 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.153771049 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.150825117 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.113007832 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.117834164 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096809034 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.117266428 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.100285989 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183411205 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096484988 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.117187002 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099324294 seconds)
  done (took 2.880027091 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.196126063 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.298968119 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114153062 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.123590159 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.124584203 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099039274 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122488048 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102572548 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.118439833 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.108846899 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.120890678 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098475247 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131973719 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.120713359 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098304517 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119764736 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109102251 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.121214797 seconds)
  done (took 3.206721722 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.1304794 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.171924594 seconds)
  done (took 1.179502944 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.140912091 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.197575038 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319413658 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.175701785 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.125556788 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142038219 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.176072521 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.139747018 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205798238 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.140746108 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.140517215 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.103496412 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150325025 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.129708631 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.106430866 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.125512116 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.15139036 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.106397607 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.127294743 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103542279 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147705766 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.125880434 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.108215285 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.128067592 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.196182206 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.140582876 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103386936 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.128054353 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126457831 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.105574617 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.131681336 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.140191361 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.138526357 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182235194 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.130025668 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178277199 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.132764025 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102985027 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.364186875 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.101231864 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.129721794 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.129586968 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.141325616 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.105046885 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.126114361 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.111483803 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.126710553 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.125547188 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.111784048 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.135323184 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.13240976 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.111168295 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.197974568 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.111803485 seconds)
  done (took 8.587942486 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.847267127 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.169924906 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125410772 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.956615206 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.156607455 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140324837 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.845948408 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145797912 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257963523 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.863026855 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116094468 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.139345735 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.244578375 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.267815064 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.162107855 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.353144019 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.742198591 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11432533 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153109802 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.169205367 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130580506 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13070447 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144000186 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452428409 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.125386564 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100986056 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13018905 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.1363804 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177199544 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.123093296 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105424606 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.218668855 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.28164479 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217751409 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102275141 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122323582 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100987215 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183483367 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.285481266 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.234451185 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.189807347 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11966057 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101333019 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136146263 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.143300492 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098233948 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.20053913 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190039652 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190196677 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127384337 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135849991 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111901926 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134907037 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178490101 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121575475 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35254749 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358172693 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101185269 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132148937 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.142161829 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261949019 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124773627 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242851817 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149839089 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.208026094 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12374283 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.825624411 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185713097 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100846741 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.133216443 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130928776 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107528113 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135871637 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.185678224 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39806911 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139288329 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105287792 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124970359 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.262698639 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101951276 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12342875 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181871104 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102670361 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133528436 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140844558 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136701443 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188416049 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.265952013 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139735441 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.14219084 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107039722 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137195946 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.125822271 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233770056 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.235497471 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175112235 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231856256 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139106949 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.20386222 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184261067 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.135848589 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189261686 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131414855 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120530234 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137131816 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231288575 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.158162979 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101549992 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128918368 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131567672 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.162128438 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105216782 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131431318 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185900162 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.506744414 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.183311518 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097167107 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128600796 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13178418 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180175034 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131492348 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257065311 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13455558 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185430758 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.13236767 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097507413 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.133192991 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180836929 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139097258 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133649145 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136904279 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110224344 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.289148276 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214895503 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.14016532 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254472682 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.200831483 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11133602 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.21472116 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109620893 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.209632186 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11073116 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135908446 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125912863 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821014772 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116183786 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131883548 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106690571 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.232110979 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101754975 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125034539 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102701787 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.12005367 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807749186 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127874947 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098938076 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125631809 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111140691 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.132876553 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131275538 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106626084 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.202370392 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250138034 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114856055 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132297738 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100632064 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.201673581 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103744167 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125892137 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101851583 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125026467 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.134029808 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106481332 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125924932 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191623275 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175555734 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.237141281 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.564709065 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102372086 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12547379 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248385103 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101815472 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.324982635 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132887771 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.242989813 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186561383 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098267181 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.35523058 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.210194113 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.211944073 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106081147 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.211444647 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09967386 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131451092 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179493707 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124858102 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110182866 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.195537911 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.119398709 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139325344 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.172916143 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102040574 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.27259685 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098880655 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186095769 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104653845 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136695422 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325453484 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102373328 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145422074 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179602508 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129589098 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101501622 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.759870478 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102344581 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136817765 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.134159191 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.240801815 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184901773 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132948743 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110177041 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137918448 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178895659 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.254167554 seconds)
  done (took 47.890604886 seconds)
done (took 64.614792861 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.32189223 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282373747 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.326600149 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236339466 seconds)
  done (took 2.154238084 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.200619079 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169427704 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.16323448 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.100166587 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.170490757 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.122809501 seconds)
  done (took 1.834571176 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.512231465 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.396144259 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.365484497 seconds)
  done (took 2.183428845 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.28244607 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.302232576 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.378470059 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.474421787 seconds)
  done (took 2.460044278 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.231030436 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.141129707 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112986431 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.155563638 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.189266502 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.191673906 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.158743729 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.166751871 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.14532615 seconds)
  done (took 2.455503971 seconds)
done (took 12.006218795 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.307789894 seconds)
    (2/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.313773565 seconds)
    (3/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.184930854 seconds)
    (4/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.232669098 seconds)
    (5/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.259101605 seconds)
    (6/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.259091058 seconds)
    (7/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.256037406 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.121604471 seconds)
    (9/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.125289219 seconds)
    (10/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.250302185 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.103915446 seconds)
    (12/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.27631956 seconds)
    (13/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152015572 seconds)
    (14/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.316185928 seconds)
    (15/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.104164499 seconds)
    (16/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.232064809 seconds)
    (17/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.18681083 seconds)
    (18/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.212516981 seconds)
    (19/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.21752003 seconds)
    (20/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.159974809 seconds)
    (21/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.248874474 seconds)
    (22/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.140615417 seconds)
    (23/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.180158965 seconds)
    (24/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.288704949 seconds)
    (25/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.118680057 seconds)
    (26/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.204961974 seconds)
    (27/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.162755232 seconds)
    (28/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.222335937 seconds)
    (29/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.167464355 seconds)
    (30/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142430206 seconds)
    (31/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.127187251 seconds)
    (32/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.156878487 seconds)
    (33/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107180528 seconds)
    (34/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.217154222 seconds)
    (35/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.186962854 seconds)
    (36/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.22481488 seconds)
    (37/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.179612253 seconds)
    (38/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.144236758 seconds)
    (39/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.143618409 seconds)
    (40/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.155953705 seconds)
    (41/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.112168758 seconds)
    (42/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.135236591 seconds)
    (43/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.219482213 seconds)
    (44/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.208498304 seconds)
    (45/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.269734933 seconds)
    (46/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.112409931 seconds)
    (47/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.090502472 seconds)
    (48/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.130765333 seconds)
    (49/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.087049408 seconds)
    (50/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.133087665 seconds)
    (51/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10694461 seconds)
    (52/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.158560994 seconds)
    (53/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.130957484 seconds)
    (54/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.218771635 seconds)
    (55/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107234116 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.131946534 seconds)
    (57/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.17730485 seconds)
    (58/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.216651077 seconds)
    (59/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.119138993 seconds)
    (60/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.247525693 seconds)
    (61/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.127918126 seconds)
    (62/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.105012746 seconds)
    (63/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.112360336 seconds)
    (64/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11653618 seconds)
    (65/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.131375707 seconds)
    (66/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.09797887 seconds)
    (67/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.219994677 seconds)
    (68/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.132356083 seconds)
    (69/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.205033308 seconds)
    (70/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.11786813 seconds)
    (71/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.163236926 seconds)
    (72/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.213611443 seconds)
    (73/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.112793912 seconds)
    (74/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.104190616 seconds)
    (75/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.203331139 seconds)
    (76/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.143115281 seconds)
    (77/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.088134716 seconds)
    (78/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.204560425 seconds)
    (79/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.129634204 seconds)
    (80/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.088758335 seconds)
    (81/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.140266505 seconds)
    (82/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.153731996 seconds)
    (83/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.153829048 seconds)
    (84/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.087049077 seconds)
    (85/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.301649727 seconds)
    (86/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.132114639 seconds)
    (87/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.202737576 seconds)
    (88/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.159781847 seconds)
    (89/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.139689368 seconds)
    (90/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.088491412 seconds)
    (91/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.132216774 seconds)
    (92/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.104293385 seconds)
    (93/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.122449397 seconds)
    (94/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.099952241 seconds)
    (95/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.115231192 seconds)
    (96/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.121400554 seconds)
    (97/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.16128362 seconds)
    (98/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.160266982 seconds)
    (99/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.088829834 seconds)
    (100/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.133113831 seconds)
    (101/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.127652993 seconds)
    (102/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.124695939 seconds)
    (103/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.13174976 seconds)
    (104/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.114879166 seconds)
    (105/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.114795739 seconds)
    (106/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.171013045 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.143177153 seconds)
    (108/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.153011038 seconds)
    (109/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.114034672 seconds)
    (110/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.219500785 seconds)
    (111/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.132132586 seconds)
    (112/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.1135417 seconds)
    (113/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.132276782 seconds)
    (114/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.106335572 seconds)
    (115/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.13301493 seconds)
    (116/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.143240631 seconds)
    (117/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.097865232 seconds)
    (118/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.128494817 seconds)
    (119/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.08776777 seconds)
    (120/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100449196 seconds)
    (121/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.129553097 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.130980559 seconds)
    (123/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.101380408 seconds)
    (124/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.112228896 seconds)
    (125/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.112198112 seconds)
    (126/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.137775918 seconds)
    (127/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.088859683 seconds)
    (128/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.11332622 seconds)
    (129/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.146729378 seconds)
    (130/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.121152542 seconds)
    (131/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.115783814 seconds)
    (132/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.145778145 seconds)
    (133/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.113352415 seconds)
    (134/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113160375 seconds)
    (135/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.125712564 seconds)
    (136/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.147526985 seconds)
    (137/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.132623984 seconds)
    (138/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.176948012 seconds)
    (139/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.101659912 seconds)
    (140/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.112414375 seconds)
    (141/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.107651148 seconds)
    (142/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.113478697 seconds)
    (143/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.089323669 seconds)
    (144/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.142313776 seconds)
    (145/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.088115106 seconds)
    (146/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.113878651 seconds)
    (147/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115589324 seconds)
    (148/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.128666591 seconds)
    (149/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.103931625 seconds)
    (150/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.133427662 seconds)
    (151/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.13333396 seconds)
    (152/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.088323452 seconds)
    (153/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.088182877 seconds)
    (154/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.113807111 seconds)
    (155/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.089587126 seconds)
    (156/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.137007792 seconds)
    (157/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.131867144 seconds)
    (158/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.104527172 seconds)
    (159/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.141201791 seconds)
    (160/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.1052286 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.139428197 seconds)
    (162/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.08851158 seconds)
    (163/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.121059203 seconds)
    (164/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107412817 seconds)
    (165/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.1724191 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.1325494 seconds)
    (167/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.106384349 seconds)
    (168/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.112944669 seconds)
    (169/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.104547138 seconds)
    (170/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.161779435 seconds)
    (171/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.155380675 seconds)
    (172/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.180121208 seconds)
    (173/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.114353243 seconds)
    (174/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.088947812 seconds)
    (175/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.169011822 seconds)
    (176/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.114655522 seconds)
    (177/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.096549079 seconds)
    (178/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.088779847 seconds)
    (179/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.130049394 seconds)
    (180/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.105199033 seconds)
    (181/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139068145 seconds)
    (182/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.088681086 seconds)
    (183/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.126732624 seconds)
    (184/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.146329476 seconds)
    (185/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.123482252 seconds)
    (186/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.17092846 seconds)
    (187/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.180587058 seconds)
    (188/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.220300078 seconds)
    (189/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.122466176 seconds)
    (190/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.128500091 seconds)
    (191/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.088857592 seconds)
    (192/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.121988586 seconds)
    (193/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101682181 seconds)
    (194/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.113909298 seconds)
    (195/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089910032 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.128787817 seconds)
    (197/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.215809666 seconds)
    (198/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.089742318 seconds)
    (199/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.089037175 seconds)
    (200/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.143257178 seconds)
    (201/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.133519135 seconds)
    (202/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.128935582 seconds)
    (203/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.151034341 seconds)
    (204/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.09809839 seconds)
    (205/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.133261947 seconds)
    (206/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.088826518 seconds)
    (207/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.193153159 seconds)
    (208/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.114537601 seconds)
    (209/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.090767731 seconds)
    (210/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.146531373 seconds)
    (211/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.096968112 seconds)
    (212/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.113196512 seconds)
    (213/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10871724 seconds)
    (214/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.129678209 seconds)
    (215/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109171694 seconds)
    (216/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.141058404 seconds)
    (217/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.089350587 seconds)
    (218/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.113961339 seconds)
    (219/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.096837183 seconds)
    (220/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.112808065 seconds)
    (221/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089545417 seconds)
    (222/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.131871407 seconds)
    (223/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090060395 seconds)
    (224/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.124917258 seconds)
  done (took 33.069225013 seconds)
done (took 33.991630844 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.424604677 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.144897278 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.138248026 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112395945 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.158910765 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115065059 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.140238225 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.140840009 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.110555702 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.128060941 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102302639 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.138896612 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.137640059 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.131731777 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.14017228 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.10549764 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.130880541 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.138571308 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.113330135 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.139738761 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.133085564 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13161139 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.136860336 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105130936 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.158886622 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10734916 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.137796409 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112509081 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.137055674 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.129313384 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.112855231 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.130337468 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.115417667 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.141735731 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102618845 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.131000023 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103333917 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.122146857 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.129070478 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.107754388 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.137294498 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.105007629 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.139332084 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.130166833 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.106679194 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.128096294 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103318408 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.14031841 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.103560171 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.138191903 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10659467 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.142437766 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.12809507 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102609938 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.127379743 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.106189923 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.138581122 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103142371 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.139198737 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103279218 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.130942778 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103353987 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.133385544 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10284454 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.13234242 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.130285824 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.105797247 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.131351875 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.103088296 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131028458 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103813071 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.130234497 seconds)
done (took 10.213268517 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.114245559 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185135175 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.160405335 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.136346383 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.158978496 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.145140955 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.142848869 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127620142 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138941585 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.152878298 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.130933502 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.151881844 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.168074891 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.136648267 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119611733 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.1338932 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.110719888 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.143994447 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.165693808 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.153124027 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.137298633 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.137209355 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159002669 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.126115319 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.136982324 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.155026435 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112339688 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.135050993 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.135645148 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128059509 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.153895597 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.111411381 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.138795264 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.14941779 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117694634 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.135649029 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.144132363 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.108894782 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.134414239 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.10864148 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.147493112 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.14870904 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10972058 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.145719506 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.133688538 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113436458 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.13735025 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.110790941 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.138240993 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.105897955 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.138980442 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157705446 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.135661971 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.112203007 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.136408315 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112161215 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.138016126 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.137754769 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.114782984 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.138316644 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.109688036 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.136349751 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113147646 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.15650227 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.137849765 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.136950744 seconds)
  done (took 9.908444806 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.132385609 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.168017789 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.145046649 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119366902 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.140699525 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126604063 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10166307 seconds)
  done (took 1.910615006 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.108144537 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.159562918 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136574452 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.163145973 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.151505266 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.16653835 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12046895 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.128823542 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.126756112 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.140006942 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.157225362 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.184673241 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.104855363 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142365283 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.16430118 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.10368524 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.165590665 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.10348623 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137361535 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.162460383 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.108461411 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.151551394 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.14401699 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10504929 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.151471318 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.106025803 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.198745364 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141456835 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10326116 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.136586153 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.135350874 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.200969806 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.126268885 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.139669747 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.101888511 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.159210351 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.151059894 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108161228 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.154672068 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.133827657 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.125643225 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.136710186 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.137708443 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.109395728 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.13690996 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.119449747 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.141211159 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.137357937 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.1099429 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.158431752 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114504774 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.153734566 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.130764312 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.108108293 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.139384399 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110176739 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.143457492 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.134363253 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133796392 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.137818595 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.156120826 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131082317 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.152816789 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.156704946 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121410175 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.152992799 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.152807051 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.110199794 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137294201 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.112315082 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.157768311 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.133869936 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11528562 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.145924889 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112691839 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.158619715 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.158189758 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108431302 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.142785316 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107166474 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.134156987 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103756986 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.147256218 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.133889354 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.10621796 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147237378 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11548421 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.137885794 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.133146518 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.126003189 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.133634561 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.140612673 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.115672297 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.133566026 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145508061 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132575979 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.141268932 seconds)
  done (took 14.144489998 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.111608788 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.130554581 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.110909234 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131309281 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105809411 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.131609253 seconds)
  done (took 1.7157489 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140882391 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.136926155 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.147199077 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.113936258 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.192905054 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.156826944 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.16036845 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114587143 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156101846 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.147287273 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131198957 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.160281443 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.156221802 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.115017159 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.160453789 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.140281331 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.134464953 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.135575674 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.121697541 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136598908 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.147042928 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.115969162 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.136852173 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.154243906 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.114696532 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.141181255 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.139845155 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.121818542 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.146326268 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114844943 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.142563849 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.139744055 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11282812 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.140609379 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.160386924 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.113290388 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135895907 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.14350695 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.113693644 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.141252969 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.134061769 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.136441046 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.145837226 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.11751852 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.141537549 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.138607973 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.118188871 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.141014678 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.159646316 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.117547533 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.144536519 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.139149147 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.114947102 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.144279042 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.112563842 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142557402 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.143746906 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.134103977 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.142940898 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.139743751 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.111737458 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.142014951 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.141217015 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11771854 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.139760793 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.142199836 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.113177275 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.139922738 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109713257 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.140374387 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.142879477 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.110860187 seconds)
  done (took 10.791493593 seconds)
done (took 39.440500231 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.161604718 seconds)
  done (took 2.150243182 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.890978606 seconds)
  done (took 1.884204883 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.163495395 seconds)
  done (took 19.189127245 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.558528951 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.637468631 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.990695841 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181082934 seconds)
  done (took 3.358427456 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.008036592 seconds)
  done (took 2.024925117 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.33748882 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.284783365 seconds)
  done (took 1.621888694 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.864942094 seconds)
  done (took 1.871609298 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.378079526 seconds)
  done (took 3.382540028 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.377956236 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.216063538 seconds)
  done (took 1.610778037 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.60524928 seconds)
  done (took 1.612021156 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.170092779 seconds)
  done (took 37.182922742 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.252582068 seconds)
  done (took 1.275280223 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.324384233 seconds)
  done (took 1.338323815 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.77841264 seconds)
  done (took 4.793519042 seconds)
done (took 84.302441231 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.121361605 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.144754893 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118721522 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142482017 seconds)
  done (took 1.533019434 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125061326 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.138566417 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.116675553 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.13940272 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.147341287 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.114187765 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.138596667 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119610763 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.140214441 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.114785018 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.140792296 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.139604213 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.113923102 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.138017227 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.110880285 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.141464371 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.115310065 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.14029774 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.139392266 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.114292147 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.139345111 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.114056318 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.142821535 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.139390989 seconds)
  done (took 4.139441559 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.121528714 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.135801677 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112653378 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135249577 seconds)
  done (took 1.521488726 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126993927 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.155037836 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.125939909 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.149354902 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.155569211 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.126283346 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.136766178 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.109060222 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140011989 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.145869288 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.110387086 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157698798 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.153665537 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.107078324 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.148726194 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.102736183 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.132911315 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.126998916 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.148215045 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.147696035 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.110040287 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.147055904 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.117448981 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.149744112 seconds)
  done (took 4.249861439 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.217584731 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.122900297 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.161060331 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.185260521 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.134979443 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.135542933 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.162322024 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.115489119 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.140951896 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.107889374 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.137488424 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.192208391 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.114333203 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.138907774 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.136250948 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.115408183 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.143385776 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.140247504 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.111655477 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.14931528 seconds)
  done (took 3.886435189 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122346408 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.135613243 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.105980301 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.13556382 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.115884531 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.13906699 seconds)
  done (took 1.780395293 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111913879 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103393071 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.132864864 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.103056609 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.137650676 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104239803 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.13029208 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.10359506 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.131506409 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103907767 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.13060156 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102749405 seconds)
  done (took 2.418692656 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.23932323 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.133870316 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13656731 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110101994 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.140985698 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.107953941 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.151087518 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107618758 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.191151957 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.138070037 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.150470925 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.190199562 seconds)
  done (took 2.830285233 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233136229 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113069022 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286004707 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.39558722 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176457618 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185478214 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.296307403 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185215405 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20464928 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157048114 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215085782 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176085688 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173371474 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198802548 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158313697 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.174730297 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223205568 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219819781 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166258151 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22545004 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183576293 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186709145 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200912253 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170732674 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155142649 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176688549 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.109249327 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146374349 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191387626 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18920923 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192380267 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166686422 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157147512 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219553529 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260880486 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198383123 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.326233732 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153497195 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.21297695 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.203944523 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287160765 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158396129 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214620297 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17309137 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121056953 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228758715 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174051783 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.198488359 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.123176972 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160511055 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200864922 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193506111 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.229640129 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128949868 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.348885087 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163673383 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.135897606 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19861655 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236750762 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210140582 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18670367 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.112744915 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233427764 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202608538 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199030356 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.164462081 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187354248 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142564007 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195467161 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215846817 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196701658 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185297293 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.228110729 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124063023 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181810492 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189755263 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172818254 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200113247 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179186028 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.139980832 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14060993 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155736837 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146473553 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.20490187 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113860467 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224348916 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153947333 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.203848206 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252184213 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148786548 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180689402 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183019373 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186629527 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166227775 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.137967401 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164830543 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.18158793 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176468511 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121931459 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176793992 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164473773 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.1439048 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142617982 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.143736548 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179591102 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.153071605 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186892667 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183707749 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.119460544 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184940846 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169700019 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.178099196 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189826756 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209048398 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152390263 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121820266 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241585553 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148023769 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.156662346 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195229383 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206619911 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.184230478 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156188595 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188253753 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213725571 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162374402 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207618231 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161817202 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153215538 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.16978954 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177787774 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176968462 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.145748711 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14957768 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.172465884 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21218996 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.146696803 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155504286 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193180838 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117181173 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147378231 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161273023 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12722309 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.161956786 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.170038472 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.157489171 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17458313 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150140835 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173709996 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177556861 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162497554 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240240959 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1234462 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.179570119 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167690615 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.109197942 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.227411044 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205537575 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119730603 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204897599 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.216300647 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218708861 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183360957 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14915266 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200429138 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120618305 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.139073903 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185871414 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179292078 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182354396 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.203180953 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213090772 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.185308418 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.172754326 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1684361 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185171492 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.195671025 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174090894 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.165922167 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181553658 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185520763 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.141785235 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.114577036 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.146643835 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157875781 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121490413 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152497507 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200206461 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183014305 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208375249 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181648423 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159052257 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20295481 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.145249884 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185039129 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.192286206 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157937977 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20631674 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201428338 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187402113 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161291821 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191015565 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.109514613 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146407037 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.151061448 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186235865 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123666534 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154507326 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162135837 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204545069 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194996878 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168772252 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222421523 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186412832 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244284595 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.111550019 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.183223405 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191102632 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176618802 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.206469482 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125017145 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.180844223 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19911497 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163492383 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212657145 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180629167 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187730375 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250035735 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.177036503 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120959705 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169511334 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186997464 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160460517 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182676375 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165139144 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124892771 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173650936 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.156594772 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144546419 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201062917 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16226402 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199308047 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.179343437 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19447071 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144837504 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132866365 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18376596 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166145566 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.137510365 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19078165 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207552723 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164001186 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178030932 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195284278 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149107809 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.336821422 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212105821 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20476958 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157812093 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162084916 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181207891 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150608309 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184297774 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202865962 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133623713 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201525268 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180050572 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.164448669 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154835631 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138086357 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172908907 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.172083813 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.154037285 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.173571012 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.162534775 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204878145 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163093465 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178259571 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184029225 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.138324442 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.175708894 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160547779 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222558474 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178268153 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198362179 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.177707836 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.187357376 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2084211 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114331438 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149395757 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.146172003 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204860502 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122491334 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179530952 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.232523543 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218049918 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179826621 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189414476 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158472366 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.113530769 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180821713 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168605668 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218644567 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1621039 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157798314 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211528188 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.17223095 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149877999 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154432671 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332956326 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136589652 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222115283 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109985931 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.302664984 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145978953 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122286708 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18172738 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189972915 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.152752143 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.205644683 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186348775 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163823716 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152294033 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157866587 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238507915 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229335507 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190857263 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195954483 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.163896959 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179837451 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183072404 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197662955 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162979957 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.135039959 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183095524 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203581595 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.235236955 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.122712831 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183761363 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183416091 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180509915 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193422181 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155454411 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208545729 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150099063 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187136851 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159147482 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115063028 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178800999 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.204566058 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153395025 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196961728 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178279032 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151144491 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116817797 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17197134 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178824641 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164336429 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.119834847 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228425082 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.118742748 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184410346 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202817479 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14962648 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145339994 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166795013 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151193786 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162137915 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133746662 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156658792 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.193523458 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204310059 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.150909963 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198264775 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192819111 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185153023 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180358037 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165492508 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.651852248 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.148733095 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205409294 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168627828 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209684039 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170009427 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187370476 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182076914 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139815434 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18936668 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170368589 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.240138061 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185901837 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179263287 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151059101 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163704768 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135581207 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.152134482 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173543468 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182736766 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12929008 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15733456 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178230729 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167417951 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.165129217 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128950863 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20694688 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169114636 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2017096 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237198156 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129547935 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188184025 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225125299 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119671845 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181403182 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194123159 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162924693 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170907407 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.120229694 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156654723 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201419552 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.145051002 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182357763 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150338137 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182321599 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18397782 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.154837995 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181606373 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162856089 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181320542 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11683499 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.176105492 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178609662 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150792538 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.117593926 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177878752 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178626998 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.180387504 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146330272 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165857934 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202328238 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.145746204 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123921252 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332145053 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179209785 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216306643 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.173934206 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125351591 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16498771 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175301771 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174375117 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180111042 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.11955264 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153963056 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.152051505 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.204221964 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.146827695 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179567961 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20605267 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181597397 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209108422 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.167543791 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284243819 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15951156 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146153622 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.152872129 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.15058044 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160325972 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125151142 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165847364 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213577724 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200305151 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.174643198 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.16673368 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14771434 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.115720746 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153156725 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183824524 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144475162 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178902411 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163735068 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.13873608 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164981338 seconds)
  done (took 86.590947827 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172859199 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.163225734 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168366627 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.217299567 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188678189 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.276583311 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226545481 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247836692 seconds)
  done (took 2.787679496 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.12313176 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157310506 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.16277036 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146117534 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.145775707 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.373671921 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.156881046 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.116299001 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.205173039 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.157845282 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.142678316 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.654757233 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.142420016 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142833838 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.136731237 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.116478186 seconds)
  done (took 4.199625981 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.427851797 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.575983848 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.249170886 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.272281849 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.250966626 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.197560922 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.79443108 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.183268288 seconds)
  done (took 13.085894084 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.151026814 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.163884246 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.282657001 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.195211921 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.180897618 seconds)
  done (took 2.111192016 seconds)
done (took 132.143360077 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.118295019 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.145072135 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.114299189 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.146537636 seconds)
  done (took 1.644450868 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.131661255 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.128300875 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10420936 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.127619773 seconds)
  done (took 1.621898694 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.518474502 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.097510049 seconds)
  done (took 1.77971928 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.143423793 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.157618833 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.158823095 seconds)
  done (took 1.60364673 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.12516219 seconds)
  done (took 1.258602968 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.12459672 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.145612982 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.141065971 seconds)
  done (took 1.554609084 seconds)
done (took 10.597602709 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14562036 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.44899216 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434264277 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127850956 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.764527416 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.396833422 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.060893851 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174909388 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185105 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108016815 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160240503 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.74090832 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.017167866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.389731737 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.00141952 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.414979941 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.691795 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142723322 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144847448 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111249833 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.038441763 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108074016 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141946587 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11111457 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.720019777 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.413312838 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140903655 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.399939944 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109253455 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143971952 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.399517706 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140707474 seconds)
  done (took 17.651174132 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157921293 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.201259158 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148249873 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110898686 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.146039373 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111450256 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150677328 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152371694 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200182749 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109682728 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159283588 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109221397 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.14576572 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110050484 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162986604 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108851841 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.14328607 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111056892 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.149155801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141213663 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.129067817 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139038384 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111798537 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142182668 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108960809 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.152910952 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109989674 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.152478852 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139881023 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115444683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.144579344 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109940371 seconds)
  done (took 5.526152512 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.163263182 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.21048153 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150114441 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144364569 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190996471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142708071 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.227102601 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.17613171 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204040514 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109910423 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160464522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109235917 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.178464542 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139972724 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.132852054 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.140313667 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112820578 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14274187 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115964333 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143687359 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159766162 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110411398 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.142436672 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112308616 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.140261067 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.12413172 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14138382 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.151870503 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110196084 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144928258 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116230713 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141124686 seconds)
  done (took 5.84184834 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.121946978 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.148221708 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.127187565 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.159680065 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.113337857 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.147646064 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.117777222 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.143815334 seconds)
  done (took 2.224866103 seconds)
done (took 32.385314781 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137051947 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.1541676 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.124991937 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151445483 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.145357271 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.140091388 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.121368359 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.139595544 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.118601831 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.157617289 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108798268 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.142348953 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.124968711 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.147060319 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.12674124 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.152514235 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.162069141 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.127019529 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.141976484 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.120486545 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.142096371 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.131221093 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.147484549 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.110063706 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.167780071 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.143395238 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.128264383 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.145495607 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.114976824 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.142570893 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.126053412 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.147072212 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111535217 seconds)
  done (took 5.635823068 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.144107966 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.187067987 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.107946883 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.141451683 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.182736093 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.108164473 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.169571885 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.108002373 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.139531883 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.10808615 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.138853479 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.135278235 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.175662161 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.173538754 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.188984672 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.145064072 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.167535996 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.180562332 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.132382509 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.180874431 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.170254409 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.107928546 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.175241523 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.180621588 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.107919057 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.139172856 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.152277084 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.171423667 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.184061186 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.17360333 seconds)
  done (took 5.73846475 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124138329 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.157988015 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137757762 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214836727 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.184637122 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.125273475 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.157039149 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.161320409 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.139237705 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.141782417 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12226435 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.175122365 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.159222973 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122931602 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.148055258 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.126530068 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.163696488 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.112751908 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.150822606 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130012524 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.16266484 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.155712253 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.126112482 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152720018 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110133538 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.152024657 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.116199695 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.157183347 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.148888164 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.121185015 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.146471416 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114349701 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.145908994 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.120554736 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.147278553 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.149734157 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.133991934 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152781764 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.124311845 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.178824855 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.15206971 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.116050827 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.165291718 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.159296932 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.145857729 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.149738522 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122373082 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.153187915 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.110747991 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.163303038 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125950128 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.144117116 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.158739486 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.111544417 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.141676895 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119425776 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.14362751 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.114248162 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.151932364 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.115230958 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.164531614 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119164916 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.151713885 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.1439437 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.121198241 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.142038492 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11132874 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147781323 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.136535415 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.149513401 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.175137714 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113581954 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.149025534 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.120638353 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.150363111 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120910293 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.143201264 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.118828551 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.152448214 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.117085514 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.152861959 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.145090449 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116218763 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.160588629 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.127138841 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.151370451 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.147644381 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.118880803 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.14541061 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.113383472 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.158001242 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.113243099 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.146980949 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.122097515 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.143885755 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.114160357 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.15009492 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.115616555 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.143360907 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.163433888 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116959888 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.142135208 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130261988 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.145106221 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.115962341 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.152897898 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12404241 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.143147614 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.115893809 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.151126356 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.142382787 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.118226213 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.147006126 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.111631756 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.156173518 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.123461498 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.149277615 seconds)
  done (took 17.48461248 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.272996529 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.246341186 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.218551526 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.336471255 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.167490773 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.172594246 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.242351416 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.196190328 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112766854 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.184498716 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.200843461 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.204718563 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.144454206 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.144318009 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.279018798 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.304944175 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.178375605 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.187471993 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.184983187 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.1673341 seconds)
  done (took 5.318622158 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.13357976 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.184057169 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.174221658 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.171692273 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.113242951 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158950434 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112419746 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.160575923 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.113325675 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.154056841 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.142609732 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.122708085 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.146551317 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.116502662 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.162633657 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.161130059 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.117470439 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150868061 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.12966143 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.150246104 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.146061346 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.166311353 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12296271 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.17423849 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.120768138 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.160401661 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.111035216 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.152743956 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.140559667 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.112276707 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.149572248 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.127660707 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152309035 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.113197155 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.150056372 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.144432072 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.109803106 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.113776221 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.147772101 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.14744386 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129895351 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.147725867 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.113551203 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.145654451 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.121844272 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.141688272 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.117654174 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.151341121 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.148837174 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.122244207 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.151140282 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.117477378 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.152853544 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125277054 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.142083328 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.122954033 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.157206336 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.150539426 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119339241 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.145205914 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110714172 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.149808886 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.111581425 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.150298489 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.117644584 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.160568158 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.154315238 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112299685 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.150997344 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117261429 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.149481799 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.162900613 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13361077 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.143082133 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.109726074 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.166397655 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.109984425 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.132869856 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.122536235 seconds)
  done (took 12.111468556 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.146102795 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.145980651 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131890307 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.181151477 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.158521153 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.123096905 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.113348522 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.166478198 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.152938108 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.12129515 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.153104971 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127480351 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.173532201 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.158591608 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.113671333 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160583924 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.117841484 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.186531366 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.165319134 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144806526 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.157613175 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.118332022 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.160694103 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.157284397 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.146267738 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.159340573 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.17957395 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.118263265 seconds)
  done (took 5.334389977 seconds)
done (took 52.776196289 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.353179817 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.482881175 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.254279965 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.255033545 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.275951026 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.296779336 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.253361502 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.447762587 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.035693296 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.241662489 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.256861849 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.253597939 seconds)
done (took 28.579759202 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.337028857 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.879828812 seconds)
    (2/2) benchmarking "String"...
    done (took 1.592943302 seconds)
  done (took 4.644855047 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.257097756 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.254267165 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.496449316 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.253472329 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.271193724 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.269396096 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.264191912 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.262219558 seconds)
  done (took 16.244948977 seconds)
done (took 26.657396422 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.31254406 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.452576835 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.505939678 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.272302366 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.251016293 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.252474462 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.24354063 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.293436453 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.262328714 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.241035484 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.268233809 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.521576549 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.24007304 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.646756601 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.238726426 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.267284689 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.280600811 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.471137465 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.253455782 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.319144097 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.240810807 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.259226124 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.264394919 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.275321202 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.269159753 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.259735877 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.284290068 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.248405421 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.442065791 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.279669528 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.303455436 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.256526553 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.288497116 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.254587737 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.385351392 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.292814887 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.430263448 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.26159974 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.245118333 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.262565903 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.438998909 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.695988969 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.257971841 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.243852336 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.262089711 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.325274298 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.244563991 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.020296033 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.260573197 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.24629378 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.290858346 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.646272139 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.269388048 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.270704436 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.261363228 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.499967311 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.260290203 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.310529764 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.291683736 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.274219052 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.256503445 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.255952687 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.3029093 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.269081287 seconds)
  done (took 147.028861524 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.260136101 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.255858203 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.257487121 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.281803437 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.256982603 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.257541856 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.258035036 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.259380425 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.256068536 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.25546318 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.259450617 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.255107145 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.260917059 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.235503854 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.258605187 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.280802877 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.263107655 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.278381385 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.275831922 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.262120762 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.286559663 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.25491225 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.258846536 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.259591944 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.300855962 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.355542986 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.290470874 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.258875825 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.258477288 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.261389373 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.260871414 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.26047621 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.920963852 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.114871082 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.280796129 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.280391513 seconds)
  done (took 82.310693687 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.261526026 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.262252399 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.260176152 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.296060645 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.25998257 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.884404219 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.886481399 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.99311087 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.479862946 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.263732515 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.756674875 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.560420517 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.257839261 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.358966312 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.273755788 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.25833984 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.260023074 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.262143295 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.276747475 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.286187894 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.26348151 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.264236368 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.877631571 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.272704877 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.355225226 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.465367741 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.276216496 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299935583 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.66612321 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.260406974 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298076401 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.602016261 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.310653669 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.260318426 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.651751113 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.130023226 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.378835139 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.261094411 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30093249 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.259033855 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.555066144 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.258954331 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.26453954 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.268367376 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959557703 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.262329494 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.889398687 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.2645961 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.25166212 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.260622976 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.265424966 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.668987146 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.99315308 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.277182632 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.263792161 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.266067072 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.264571261 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.263274829 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.300872236 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.489904013 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.380824796 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.266871437 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.270860388 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299466342 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.265459586 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.515603084 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.258487346 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.963747852 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.336621403 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.377019762 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.871170201 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.26272272 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.365560884 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.386282698 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.261495619 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.267751397 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.264871307 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.264999227 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.379666635 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.264478511 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.716235657 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.262582463 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.448345776 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.279044164 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.779346293 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.367288054 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.260748034 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.693897272 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.261496688 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.263750216 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.053161017 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362603175 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.262439167 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.267287878 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.264027349 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.717066489 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.889969367 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.547914695 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.267590341 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.576173531 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.268472041 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.726381776 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.860073487 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.016322898 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.270735995 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.385279665 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.446170869 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.282275124 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.267392558 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.777490398 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.269121136 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.329251125 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.266375776 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.670282704 seconds)
  done (took 375.227499274 seconds)
done (took 605.742478213 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.957699913 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.907462224 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.047102938 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.93257294 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.903161742 seconds)
  done (took 10.934207205 seconds)
done (took 12.117283121 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.474676571 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.474522673 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.334942811 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.475142669 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.302170781 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.498038908 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.454832375 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.291402403 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.381222486 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.358831814 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.384326363 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.326837884 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.308163509 seconds)
  done (took 19.251528761 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54622902 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.269744962 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.352365553 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.5225769 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.308613754 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.546865949 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.579056724 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.27052811 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.40588121 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.279668882 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.281129798 seconds)
  done (took 18.547662743 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.544835328 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.270373268 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.336749598 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528227306 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.309980166 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.55405869 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.602458766 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.268994818 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.397763942 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.284323722 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.28435316 seconds)
  done (took 18.568968145 seconds)
done (took 57.55213023 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.314352324 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.441728161 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.29479459 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.283821156 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.278417545 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.281526929 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.282214811 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.28080785 seconds)
  done (took 11.64550517 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.277740482 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.275262507 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.27900207 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.277981663 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.275716487 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.274266493 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.278285036 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.274884771 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.280701456 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.276616483 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.28033213 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.277540135 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.279218235 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.275593804 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.277333797 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.281063535 seconds)
  done (took 21.630649155 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.28053148 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.277548693 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.277621386 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.276634598 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.275608354 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.277798768 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.276489969 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.273957424 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.277249827 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.277779297 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.277010025 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.274395864 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.274912777 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.274798614 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.280907037 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.276956659 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.278001878 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.274737327 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.279996259 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.274824982 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.277225839 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.273938748 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.275867446 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.278310829 seconds)
  done (took 31.832902348 seconds)
done (took 66.291961033 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.278218342 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.286895245 seconds)
  done (took 5.753610472 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.33793253 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.341896803 seconds)
  done (took 3.870513829 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.279277139 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.280574948 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.279422162 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.279435907 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.280945231 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.279711843 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.280922782 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.279384806 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.279116332 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.284649736 seconds)
  done (took 13.989888271 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.280930203 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.279763414 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.279970494 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.281580134 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.280686817 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.279275879 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.280236582 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.281041244 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.282059197 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.280396445 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.279745948 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.279847469 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.281441826 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.279216841 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.281921752 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.281966281 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.279745212 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.278195312 seconds)
  done (took 24.239886368 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.296186106 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.302961853 seconds)
  done (took 3.787981813 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.420248273 seconds)
    (2/7) benchmarking "second"...
    done (took 1.32131082 seconds)
    (3/7) benchmarking "month"...
    done (took 1.397300075 seconds)
    (4/7) benchmarking "year"...
    done (took 1.38688395 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.319410539 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.29985724 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.320834498 seconds)
  done (took 10.656123344 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.282438598 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.478644404 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.592858662 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.818021429 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.282975101 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.32899529 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.16010153 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.326798186 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.317253176 seconds)
  done (took 14.781911747 seconds)
done (took 78.26871291 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.276579862 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.346192152 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.283088963 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.30638382 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.61303546 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.318671813 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.27672353 seconds)
done (took 16.611592075 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.268358133 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.269675744 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.258128617 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.270612195 seconds)
  done (took 10.256697978 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.275288237 seconds)
    (2/2) benchmarking "read"...
    done (took 1.62157239 seconds)
  done (took 5.088409137 seconds)
done (took 16.537464988 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284134911 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.283533993 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.284086246 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.279460727 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.279308002 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.283571325 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.280563555 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.277189879 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.27926768 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.282951363 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.281378378 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.282227381 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.283015054 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.281326507 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283453601 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277405341 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280046957 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283989678 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.277538874 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278407485 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279068817 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282348707 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.280038345 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.278325969 seconds)
  done (took 31.934568408 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.283390204 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.279421656 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.285827971 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.279955133 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.279041848 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.281440074 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.285240557 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.279485284 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.281174569 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.286554719 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282945125 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.279400396 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.282473424 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.279365623 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282189043 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.279655643 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.282216252 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281315089 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282533683 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.281903245 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.281417262 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279789776 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.281894711 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283813119 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.282699983 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281776727 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.284098998 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.281342806 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284379843 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.27821781 seconds)
  done (took 39.646646746 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.287824077 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.291072895 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.282880981 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.282651843 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.282240692 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.28415681 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.281147474 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.282828398 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.285565357 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.285139272 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.282942509 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.282293335 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.281817375 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.284063304 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.283694993 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.28321552 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.282283759 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.282557024 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.281962179 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.283744602 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.285850169 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.28220565 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.282586362 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.286340994 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.28271447 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.283906557 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.284618329 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.282766889 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.285545209 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.281675091 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.283617498 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.283579764 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.285481991 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.283465783 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.284451746 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.283158953 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.289326211 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.291465907 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.282479346 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.286309924 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.282329205 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.280270096 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.283678024 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.282654023 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.28568256 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.285433905 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.284694689 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.285053942 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.284132362 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.285644403 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.283785722 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.284208438 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.283584246 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.283946364 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.283084948 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.281128655 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.283909228 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.286595886 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.283530273 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.284775942 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.287332358 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.285614162 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.28401183 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.286154672 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.284807058 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.285191815 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.286562241 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.284741948 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.284563112 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.284159735 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.286774857 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.284687715 seconds)
  done (took 93.662543801 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.286003037 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282349845 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284910564 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.282184675 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285457007 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285270949 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.284112561 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287203775 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282400407 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.286916217 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284658597 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.285650755 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281379907 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286499075 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286440812 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.283748898 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.288715149 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283730893 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.285673999 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286460381 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287201639 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.283568368 seconds)
  done (took 29.46597929 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28794034 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.290410135 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.28170856 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.287391138 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.284616222 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.290677851 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.286609566 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.290195495 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286574983 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285420786 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284407073 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287031934 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.285358562 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284512421 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283968705 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288323481 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285332779 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287743614 seconds)
  done (took 24.355960929 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.285063496 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.285980209 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.287913219 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.285865975 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.284930376 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.290490653 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284456368 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.287194913 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.291615924 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.287582725 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.291537665 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288505378 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.28883543 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286465044 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291219466 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.286086577 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.289902344 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287431437 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288771982 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28599101 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.287343534 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289545446 seconds)
  done (took 29.531144496 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290643867 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.289693263 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.286775309 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.28631377 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.288032524 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.292591706 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.291981589 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.286439112 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.289664776 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.289871492 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288724984 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.289768967 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.291803287 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291248599 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.289152236 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28675174 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291297259 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288263696 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291247685 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.285517572 seconds)
  done (took 26.986396787 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294159876 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292814336 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292732664 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293686416 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292538497 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.293021404 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294756338 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.291956156 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294901122 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290547081 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294867096 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.294487481 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295973924 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291601933 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29183566 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292122844 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295307239 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293446447 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293470044 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294976543 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.2932841 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294393457 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294915743 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.294019346 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296665215 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.294558747 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294639121 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292730956 seconds)
  done (took 37.427678429 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293645796 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.293882885 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.292328815 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.2911728 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.291256859 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.288631795 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.290119562 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.291852189 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.291556395 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288576853 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.293706507 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.29449183 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.293104545 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.294457604 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.293794064 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.292508539 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293061811 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.289933645 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290041087 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290076237 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.293227273 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291505064 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.293189891 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.289969899 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293380545 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.296225015 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292420411 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.293055967 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29683509 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.292209697 seconds)
  done (took 39.968809409 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.343369188 seconds)
    (2/2) benchmarking "in"...
    done (took 1.340931408 seconds)
  done (took 3.886548962 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.292185003 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295701545 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.296513086 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.29432538 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.292508131 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.295800846 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.294918842 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294189658 seconds)
  done (took 11.561835416 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.294673132 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.294891239 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.297687165 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.293250539 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.297191388 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.296634351 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.303138912 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.315593143 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.29584261 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.296898651 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.303696999 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.307660333 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.300083073 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.295346185 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.292917675 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.296475554 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.294309985 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.295095902 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.297601582 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.297259826 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.295635302 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.297887178 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.301190003 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.294633743 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.299113901 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.304761314 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.298616229 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.297280462 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295312082 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.299432566 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.297846138 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.292904403 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.298066277 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.297570015 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.298982275 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.296411306 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.307211084 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.320685912 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.301535643 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.29623019 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.298252249 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.29578085 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.301326707 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.300786963 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302210224 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.295606619 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.297657554 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.295263504 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.294819121 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.302574018 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.30554246 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.296256367 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.294085673 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.300413709 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.299237273 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.304410313 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.319016613 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.305290025 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.311136283 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.313399776 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.311722608 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.322475612 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.301058959 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.29893326 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.311110054 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.32349947 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.305828564 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.319375378 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.294614282 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.299064452 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.305016025 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.310787 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.325251736 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.301422665 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.301944634 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.298306882 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.299528651 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.299420263 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.307771093 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.324610702 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.301799755 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.300172312 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.310202308 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.323682285 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.302234983 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.302606913 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.299566488 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.301493976 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.302065005 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.312502326 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.320244905 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.303965381 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.299622943 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.303570763 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.301531317 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.301122707 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.301635239 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.305435255 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.301250452 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.302487688 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.301080188 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.305817304 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.313128114 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.303057503 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.30143106 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.309026118 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.303221657 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.299833614 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.307586396 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.304219682 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.299260632 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.305594925 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.309183548 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.302618024 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.307618333 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.311358467 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.302027212 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.306757556 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.301605536 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.303689678 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.312403807 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.333289389 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.302648264 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.299706565 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.308240108 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.316585333 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.302917224 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.30852364 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.304120679 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.299666447 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.300675022 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.301883805 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.304393354 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.30512689 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.303186418 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.304925768 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.301852851 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.302354335 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.304681634 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.306029653 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.305554211 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.301267606 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.30463919 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.305977449 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.305405356 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.307932866 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.311529524 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.303331345 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.306613207 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.305697799 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.300534939 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.303316741 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.308667266 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.304195625 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.306615439 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.304757997 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.305159411 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.304567763 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.305676054 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.30637505 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.304649775 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.304402584 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.310362097 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.304122165 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.307936193 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.305340468 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.305368536 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.305002589 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.304998671 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.306772869 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.308165697 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.304931979 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.309962497 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.315919474 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.307243193 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.307443933 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.309263514 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.305023611 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.310221914 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.307209838 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.308916229 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.316869013 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.305334528 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.315722694 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.306464979 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.305313745 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.308646195 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.309323792 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.309210401 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.310066281 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.311704444 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.316527157 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.318429904 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.331852462 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.306881743 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.313390345 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.310746485 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.313820946 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.313594826 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.308280947 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.309114569 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.308544018 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.311547772 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.308806201 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.312057959 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.310030269 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.310082157 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.309804161 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.309813625 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.310018005 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.3115783 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.308901122 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.310153662 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.304197004 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.308775203 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.308032079 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.307705619 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.30918166 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.305465043 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.308835212 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.312738331 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.309553544 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.31357366 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.808086367 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310687328 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.312450388 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.310801717 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.311731799 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.318527338 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.313066532 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.315642025 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.326699563 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.333667288 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.313084674 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.318113355 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.331696589 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.314192963 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.316205652 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.315094737 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.31247302 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.315217346 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.321969148 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.312373957 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.308440702 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.31033438 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.311443295 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.312268029 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.316844486 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.307455489 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.311259394 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.308999586 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.313205703 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.309151097 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.312437343 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.313193536 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.310585946 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.311348066 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.309930171 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.309734291 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.312269211 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.31262326 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.316130369 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.310751018 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.316587333 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.320030392 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.318808949 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.314025727 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.311985034 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.313340368 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.316255697 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.313338852 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.314669254 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.315346615 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.324215061 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.336230429 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.32012447 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.314934978 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.313041791 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.319429053 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.316629754 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.318164759 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.316577782 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.316828905 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.315771198 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.316162401 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.310857304 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.315773556 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.315181392 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.313826131 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.315177847 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.320659136 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.312975954 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.314137368 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.315116979 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.312706873 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.314527511 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.313878438 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.312152662 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.315386306 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.31669686 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.312869307 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.316123571 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.322638287 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.335424033 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.317104868 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.316139035 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.315010311 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.316180949 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.315882958 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.314903616 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.317374795 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.324374994 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.320993052 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.326630495 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.317932496 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.32822717 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.313748087 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.319756144 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.323359813 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.313885568 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.314736887 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.316960394 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.317815115 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.320994828 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.335073285 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.319884843 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.32134207 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.316079812 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.314964151 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.317032055 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.314995963 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.314766824 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.314561769 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.326312377 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.338627721 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.320101297 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.317869847 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.313818379 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.316420058 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.314569795 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.311680628 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.319782484 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.317250168 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.318251801 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.318544223 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.317600917 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.318704232 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.316531917 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.316960957 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.317066053 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.318911088 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.32355523 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.338152703 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.323751229 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.319068283 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.323427118 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.31647993 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.322617086 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.337331101 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.319753631 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.317771108 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.320714635 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.31663586 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.31894919 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.319659725 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.320217021 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.322217477 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.324231071 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.321103204 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.32052763 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.321792345 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.320709471 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.319123508 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.335313282 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.344519257 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.322421867 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.32855374 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.318542476 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.319523668 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.323622593 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.317778353 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.319449172 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.323870892 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.33574618 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.328174633 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.319760216 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.320993285 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.321688534 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.322255212 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.321442813 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.32119649 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.320553654 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.321277782 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.319632484 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.318832133 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.325444703 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.320798633 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.32164699 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.320303274 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.32309381 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.329811814 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.318480771 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.3207197 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.320582619 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.323210875 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.321982226 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.321774561 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.318904837 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.325943399 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.326391804 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.321227788 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.330946704 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.332939173 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.323887624 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.316500708 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.318911287 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.320062467 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.3216692 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.321746415 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.324955349 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.322254393 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.325643153 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.323371442 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.324965261 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.324371698 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.322605289 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.31986121 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.320722851 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.324349518 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.332037893 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.322359201 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.323272405 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.319392955 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.320706312 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.321886346 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.324176452 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.329656529 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.325370886 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.335569107 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.330099335 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.32976077 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.328396187 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.328001114 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.333081237 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.324879646 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.328498948 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.32229562 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.326068828 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.325139427 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.329804894 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.325730972 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.333133896 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.326877054 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.32622011 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.33385298 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.345083955 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.327152718 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.327140498 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.329720409 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.327748589 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.326828649 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.32801008 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.328892648 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.335237747 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.344343419 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.323637006 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.329417121 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.323050651 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.32947698 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.329233309 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.326557761 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.329305269 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.323797703 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.324961107 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.327771664 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.327500839 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.322269013 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.322610133 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.327994552 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.328011271 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.332862402 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.324474874 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.325488976 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.32325887 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.325378916 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.326597596 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.326266112 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.323293105 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.323504285 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.328401801 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.329282259 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.328547897 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.329681671 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.323145624 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.330968251 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.328695083 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.326894039 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.332707033 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.339296697 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.337974596 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.323307854 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.328405739 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.330113867 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.332539539 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.325606646 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.32747837 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.32839932 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.326160771 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.32925194 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.326440978 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.328625721 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.329914911 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.345412054 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.349244184 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.328474599 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.32864327 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.32987885 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.323861409 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.327134057 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.327060869 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.330806192 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.3323403 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.33552241 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.327318767 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.332066678 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.346486776 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.326740805 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.335122793 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.332666814 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.339900969 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.330984379 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.325675146 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.325833121 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.332536669 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.346807858 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.330929041 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.339332059 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.361152816 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.349706886 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.329647122 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.329065236 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.330223102 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.33017768 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.330667031 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.329068942 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.330355072 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.334498117 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.330656861 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.329796771 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.333733004 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.331302659 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.330845517 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.328051426 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.330593828 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.332317124 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.329629116 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.330797044 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.331292495 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.327924573 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.33124971 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.331097687 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.333116771 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.343777185 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.353678548 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.330677101 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.334089181 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.329385138 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.333605701 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.336293202 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.346610866 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.339180946 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.332500702 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.332843399 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.336191198 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.33382791 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.331991592 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.331440755 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.335114812 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.336228746 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.335049548 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.345918781 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.354072449 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.337484319 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.332152815 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.333527736 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.334052924 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.33378915 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.335934622 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.333405651 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.331847424 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.336161249 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.337817213 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.334927241 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.335106093 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.333680339 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.343469477 seconds)
  done (took 786.857287491 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.332949474 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.334016744 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.334124957 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.329879565 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331666352 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.329992909 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.33043879 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.331569781 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.333313082 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.334683902 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.332812107 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.332122161 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.332285576 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.334092108 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.334941616 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.330651947 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.334070782 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.332444409 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.333080847 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.333136194 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.334295385 seconds)
  done (took 29.223282666 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.335274413 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.330878057 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.333289287 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.331514478 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332163267 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.335330784 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.335720256 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334018446 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.334474037 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333655188 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.334471655 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335078092 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.334057492 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.333081213 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33437622 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.334052275 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.334146039 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.332718937 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.337873433 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.333273956 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.334547186 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.334482643 seconds)
  done (took 30.590915796 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.336856215 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.333427735 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.33495074 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.331723975 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.336604015 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.33417782 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.336915506 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.336578309 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.339868875 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.337568878 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.336205292 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.338876584 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.346787904 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.343952991 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.337292682 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.339487266 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.339129726 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.338498737 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.336760203 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.336644507 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.34578525 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.333831158 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.336647824 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.336558042 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.33562266 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.341077152 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.342042962 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.337201526 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.341173795 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.344565495 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.337447132 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.337773588 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.341713401 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.337997432 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.337691256 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.344464613 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.337047499 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.337617732 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.339048684 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.349795344 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.360581972 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.339336944 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.346265259 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.341587668 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.341973328 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.340444414 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.347279249 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.334939188 seconds)
  done (took 65.542924058 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.938794015 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.963063875 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.964169088 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.958350619 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.963859132 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.955486308 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.960829109 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.966299347 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.950078105 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.943040508 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.95413672 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.946771262 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.950816503 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.962889746 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.947888612 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.948875817 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.950936189 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.950861775 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.971500723 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.945067926 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.943975985 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.95337582 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.947238748 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.948487282 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.961744085 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.944295397 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.952475888 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.944730591 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.948109886 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.96032937 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.951541435 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.951068356 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.957182215 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.945353818 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.957063501 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.962139686 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.949389995 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.947968433 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.953279574 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.948237276 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.965891479 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.94605271 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.948805303 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.955848953 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.945441039 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.9523975 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.960948015 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.948943753 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.952043219 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.954448936 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.952842529 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.964832527 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.956588148 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.950808488 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.959983677 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.951163621 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.954306358 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.96045224 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.948196855 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.950019178 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.947889377 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.94985205 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.96323945 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.947816898 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.950349484 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.954871378 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.952874321 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.960999864 seconds)
  done (took 134.073336007 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.34290656 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.342153034 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.344623279 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.344023692 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.342732139 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.340918648 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.342988425 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.341385031 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.341790845 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.3442628 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.343019651 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.344393058 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.342755432 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.345113399 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.344498248 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.345898552 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.34527332 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.345437379 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.343339487 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.345309611 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.344555605 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.344187134 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.346413497 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.346043291 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.348433036 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.347806456 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.345275361 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.346312773 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.34841589 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.345305721 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.348502353 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.347169611 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.348672131 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.345205161 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.346103623 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.346571108 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.346188878 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.347213965 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.347706632 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.345858108 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.34911318 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.346674149 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.348777854 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.349421744 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.350465502 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.348192884 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.347338961 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.347108282 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.348517909 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.348516756 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.346296746 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.345851098 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349125741 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.345765595 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.347963593 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.345217663 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.3472062 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.346478774 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349104542 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.349609702 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.348532446 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.346193404 seconds)
  done (took 84.707777372 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348667249 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.347779277 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.343152739 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.344679245 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.349532977 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.34540273 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.348395551 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.349271642 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.351108468 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.351597414 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347722441 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.344449737 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346729975 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349947895 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.345560238 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346672034 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346350405 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.345917439 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.349573912 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.345082849 seconds)
  done (took 28.198782632 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.346993703 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.349285583 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.346333884 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.344708448 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.345769548 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.348879831 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.350343423 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34976195 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347339248 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348006717 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.349864435 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.348725469 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346045834 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.349260765 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.347581897 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.346564125 seconds)
  done (took 22.817654702 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.346362974 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.349894137 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.347424983 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.352673945 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.348204258 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.347038831 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.350859239 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.347994867 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.344662981 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.352565584 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.35015354 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.35232585 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.348627464 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.349293601 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.348880419 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.354412021 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.350179302 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.34948826 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.3519182 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.350202068 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.349003973 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.350144152 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.349241765 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.356352236 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.350147187 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.34933136 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.347933034 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.349106127 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.350917718 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.352700815 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.349791192 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.348385004 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.347795083 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.349495382 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.350961644 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.348225508 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.351605678 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.349736363 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.355162558 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.350519992 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.352157332 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.34922295 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.353428953 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.350886395 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.349301912 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.353254571 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.349659291 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.349800013 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.349215723 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.347444933 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.352788004 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.352111638 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.353320094 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.353213869 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.355059589 seconds)
  done (took 75.524640454 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.353374466 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.35375363 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.351685572 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.352202748 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.353944689 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.349578853 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.355960596 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.353716538 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353797267 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.355370761 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.35103465 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.357577008 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.349881016 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.35307859 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.353562389 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.353654522 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.352173175 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.353860815 seconds)
  done (took 25.611366627 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.352702774 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.355572823 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.354458631 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.353647018 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.35147251 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.356681766 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.354006618 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.355152678 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355340296 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.351378453 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351208789 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.357304566 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.35603107 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.355611808 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.354822481 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351804818 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.354633249 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.355183127 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.351671124 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.354508161 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.356458642 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.354749293 seconds)
  done (took 31.04702251 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.357359901 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.356714097 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.357891885 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.372830795 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.374622729 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.357163422 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.354340135 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.354550832 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.379553421 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.406105936 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.403912652 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.375915365 seconds)
  done (took 17.708838274 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354035721 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35517486 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.355246492 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356654123 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355849701 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354635059 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355523696 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355100781 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356334438 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353549157 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354297173 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358019024 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355384058 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355683593 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358707758 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359712747 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352605014 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354258343 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354523039 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357146366 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354393805 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354735169 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354307409 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356502198 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356284212 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357583242 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361324947 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358420318 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355404169 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356969049 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359985063 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356924469 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360948019 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357927595 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359758683 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360412847 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352375083 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355904922 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357943605 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356383661 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.358568833 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358315942 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357344512 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356303717 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35903211 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354852094 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356311019 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352536298 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357699456 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35904595 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357722056 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35685936 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358374857 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357144028 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359099127 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359417728 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356954396 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356558684 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358522128 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355251532 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358077252 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35843201 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358275383 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358622719 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362149748 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356406297 seconds)
  done (took 90.817000084 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356964535 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.357438457 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358709843 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357463547 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357217258 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358349731 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360106242 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356392367 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358842489 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358954659 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360194718 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355041792 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358552227 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359102013 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356616498 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355973764 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356555074 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359193429 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354183274 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361753045 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354867391 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35647018 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358025431 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359431357 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360666468 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361131865 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357859677 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362477664 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360077577 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361568771 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357532543 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35898061 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35967505 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.358031501 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358728504 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361655385 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357631478 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362596867 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359558588 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362631543 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358095914 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361570959 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361889146 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35971212 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358945912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358927839 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358445806 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362917867 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35716286 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364064549 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362977706 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363123718 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358477904 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362517784 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361088355 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362887626 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359263989 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359141144 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357958271 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363340795 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364660924 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363158778 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361745114 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35911981 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360843999 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360912756 seconds)
  done (took 90.995110103 seconds)
done (took 1883.335497398 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.525365108 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.482845201 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.365391059 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.370056384 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.358533571 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.386386234 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.369311801 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.356905205 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.361420314 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.362554956 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.362038257 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.547526604 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.35796311 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.357652678 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.364190039 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.457160876 seconds)
  done (took 27.650140085 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.393785728 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.369819735 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.499058179 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.383176621 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.393286017 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.572226966 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.42739826 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.367457354 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.56590835 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.387246559 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.358184763 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.3880768 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.370565665 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.364383764 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.382076328 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.574529977 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.648395699 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.362899191 seconds)
  done (took 30.070454897 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.88600118 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.396311292 seconds)
  done (took 5.546888968 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.388947265 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.365823353 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.371532582 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.369200099 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.358284045 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.356184079 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.364080407 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.365445347 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.380598445 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.511270067 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.370931904 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.378398451 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.387267805 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.368129871 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.364639111 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.410241414 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.539611123 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.36398377 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.364352225 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.372019085 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.370548232 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.471867249 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.411146353 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.367344834 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.508349291 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.372950945 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.372253272 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.376885642 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.49603805 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.369202082 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.369087639 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.370884735 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.372231086 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.297955625 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.84835364 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.389530999 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.392264195 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.377473366 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.367922403 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.512513888 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.37099586 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.381091264 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.36280882 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.852461236 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.513779319 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.504928634 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.376767571 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.386863833 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.370407006 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.440097948 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.372559455 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.369914545 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.416067376 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.247479206 seconds)
  done (took 87.407380586 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.372949809 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.361639293 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.544788389 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.378038411 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.35886878 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.360599648 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.363938264 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.693139578 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.36984981 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.361516448 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.721712027 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.993567058 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.381780941 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.44497192 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.266361131 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.417826029 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.365643789 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.380829334 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.363055744 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.364573782 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.947615274 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.362651165 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.379286744 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.54548188 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.403183605 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.922588089 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.35734276 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.368478117 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.365989337 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.36084445 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.93786942 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.387500107 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.42103127 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.362524672 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.6622161 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.783663044 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.739151404 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.363914143 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.376325863 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.361494608 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.372294388 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.906237092 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.758093689 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.359969094 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.362548614 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.909768762 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.359921086 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.372451669 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.373714063 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.622453521 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.366759477 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.366815306 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.379510151 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.3610644 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.363863437 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.484054436 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.44276024 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.92431607 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.35998172 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.361751546 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.42691163 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.368390738 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.360523128 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.365032723 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.366132782 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.762753871 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.558988292 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.365915637 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.76403314 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.922300709 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.380083264 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.995116327 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.383899469 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.39051913 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.577691722 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.364737646 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.36455732 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.934080874 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.382280863 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.360222676 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.74810311 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.367943425 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.716210212 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.397620163 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.365576722 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.958284707 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.364817238 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.454508614 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.36613561 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.368659786 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.363786838 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.367973196 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.668881325 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.41969845 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.36587253 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.368651818 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.37368728 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.366783403 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.36281684 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.375676768 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.990733961 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.389323229 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.365940124 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.368543954 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.367075769 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.364916462 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.368410265 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.364963421 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.646401281 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.367554391 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.387721872 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.369349206 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.365109472 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.373935104 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.539558205 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.37528324 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.718053349 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.366173421 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.36376315 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.38502555 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.369015357 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.373603341 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.367052162 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.372416043 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.270960078 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.630638302 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.388926503 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.389152318 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.370368073 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.369482988 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.364939748 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.380785979 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.402799265 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.369677782 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.205575304 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.39094368 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.371386923 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.369377639 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.3781235 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.366650692 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.393773227 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.371770001 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.674021419 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.669745032 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.562989782 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.375593254 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.36976779 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.197751673 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.401625553 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.552042444 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.389047517 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.366981131 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.622633592 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.6066152 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.36932137 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.367280479 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.369254957 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.636094116 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.37268365 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.684950925 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.971586628 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.390557545 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.369559101 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.213331394 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.092897791 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.370257956 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.372265331 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.7179008 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.389025154 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.368001424 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.369943689 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.372522909 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.371164971 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.372478244 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.36982668 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.371164056 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.370691071 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.415079282 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.573639965 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.394521601 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.371807793 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.92286159 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.385743445 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.374092464 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.378125361 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.377232882 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.372628545 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.450598073 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.378079813 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.387905503 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.370494826 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.381790591 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.934997034 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.369945165 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.372474705 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.569166513 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.127232921 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.388457995 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.373015794 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.387653633 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.272200084 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.945204866 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.393102032 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.728784486 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.380176895 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.414495454 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.373188419 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.43176231 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.943947167 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.376560239 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.388980337 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.081465326 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.388515007 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.888997811 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.372101819 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.371428189 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.014598024 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.39170869 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.371227028 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.369647607 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.38953566 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.677544734 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.375638447 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.420612657 seconds)
  done (took 508.270645034 seconds)
done (took 660.20957704 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.378357674 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.374613991 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.362647518 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.375730623 seconds)
  done (took 10.76807126 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.384841428 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.382623266 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.386075892 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.38004696 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.384625585 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.386350324 seconds)
  done (took 9.590684028 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.376629265 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.374695324 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.374102821 seconds)
  done (took 8.409579353 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.61543631 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.401064058 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.746034281 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.408729978 seconds)
  done (took 9.456014033 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.387315536 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.384740583 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.386086685 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.387701955 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.387319874 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.391451494 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.387841691 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.387055067 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.388158421 seconds)
  done (took 13.769890683 seconds)
done (took 53.270744612 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.467236437 seconds)
    (2/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.146570481 seconds)
    (3/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.482162225 seconds)
    (4/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.515339874 seconds)
    (5/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.282207806 seconds)
    (6/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.380771109 seconds)
    (7/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.624043156 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.419581897 seconds)
    (9/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.472438865 seconds)
    (10/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.146385957 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.412566463 seconds)
    (12/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.090370778 seconds)
    (13/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.577288364 seconds)
    (14/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.480591967 seconds)
    (15/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.395780654 seconds)
    (16/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.491818274 seconds)
    (17/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.396676758 seconds)
    (18/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.454247711 seconds)
    (19/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.382624646 seconds)
    (20/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.494582702 seconds)
    (21/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.377116904 seconds)
    (22/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.383001775 seconds)
    (23/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.091117927 seconds)
    (24/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.519824955 seconds)
    (25/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.392193863 seconds)
    (26/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.515320654 seconds)
    (27/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.426395645 seconds)
    (28/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.534057257 seconds)
    (29/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.394995442 seconds)
    (30/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.467251212 seconds)
    (31/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.410363994 seconds)
    (32/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.430976263 seconds)
    (33/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.444436043 seconds)
    (34/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.041009311 seconds)
    (35/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.612092961 seconds)
    (36/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.224313613 seconds)
    (37/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.466651461 seconds)
    (38/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.409129374 seconds)
    (39/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.419826418 seconds)
    (40/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.411730558 seconds)
    (41/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.39950069 seconds)
    (42/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.391777161 seconds)
    (43/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.546570728 seconds)
    (44/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.374770238 seconds)
    (45/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.466009149 seconds)
    (46/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.518653723 seconds)
    (47/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.038803475 seconds)
    (48/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.390127957 seconds)
    (49/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.540839987 seconds)
    (50/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.572205452 seconds)
    (51/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.429911096 seconds)
    (52/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.467934228 seconds)
    (53/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.384587016 seconds)
    (54/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.365053101 seconds)
    (55/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.424828252 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.50447273 seconds)
    (57/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.434603074 seconds)
    (58/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.155919032 seconds)
    (59/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.530894997 seconds)
    (60/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.650225948 seconds)
    (61/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.396213926 seconds)
    (62/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.394012451 seconds)
    (63/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.146709144 seconds)
    (64/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.410322875 seconds)
    (65/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.543693047 seconds)
    (66/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.458107362 seconds)
    (67/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.583881372 seconds)
    (68/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.585474177 seconds)
    (69/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.484965222 seconds)
    (70/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.605900577 seconds)
    (71/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.385089719 seconds)
    (72/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.48776717 seconds)
    (73/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.381773233 seconds)
    (74/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.394630619 seconds)
    (75/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.15091381 seconds)
    (76/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.417504708 seconds)
    (77/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.441081036 seconds)
    (78/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.060395286 seconds)
    (79/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.403581584 seconds)
    (80/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.307381644 seconds)
    (81/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.447902304 seconds)
    (82/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.550484876 seconds)
    (83/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.508774479 seconds)
    (84/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.155110488 seconds)
    (85/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.77242747 seconds)
    (86/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.406028935 seconds)
    (87/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.381707373 seconds)
    (88/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.500602486 seconds)
    (89/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.463975882 seconds)
    (90/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.466091933 seconds)
    (91/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.48590517 seconds)
    (92/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.394094152 seconds)
    (93/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.522263099 seconds)
    (94/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.488340042 seconds)
    (95/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.376580299 seconds)
    (96/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.531167944 seconds)
    (97/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.427788701 seconds)
    (98/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.404653485 seconds)
    (99/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.381378749 seconds)
    (100/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.387564107 seconds)
    (101/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.437561237 seconds)
    (102/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.449118234 seconds)
    (103/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.485260376 seconds)
    (104/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.728365169 seconds)
    (105/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.578086072 seconds)
    (106/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.423464516 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.467560872 seconds)
    (108/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.408252367 seconds)
    (109/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.409977507 seconds)
    (110/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.369023263 seconds)
    (111/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.483461751 seconds)
    (112/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.417498793 seconds)
    (113/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.384699916 seconds)
    (114/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.774495344 seconds)
    (115/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.49143797 seconds)
    (116/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.395525968 seconds)
    (117/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.383174952 seconds)
    (118/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.394313201 seconds)
    (119/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.605551199 seconds)
    (120/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.487520121 seconds)
    (121/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.399998068 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.443540278 seconds)
    (123/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.487272346 seconds)
    (124/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.041230966 seconds)
    (125/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.596972748 seconds)
    (126/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.39859923 seconds)
    (127/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.470775572 seconds)
    (128/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.49709275 seconds)
    (129/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.408747341 seconds)
    (130/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.552899783 seconds)
    (131/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.411750038 seconds)
    (132/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.471296494 seconds)
    (133/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.370907698 seconds)
    (134/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.395653165 seconds)
    (135/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.430132082 seconds)
    (136/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.528556376 seconds)
    (137/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.442090682 seconds)
    (138/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.435461019 seconds)
    (139/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.552931936 seconds)
    (140/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.50131721 seconds)
    (141/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.396346581 seconds)
    (142/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.147613348 seconds)
    (143/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.561967992 seconds)
    (144/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.634151163 seconds)
    (145/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.407747298 seconds)
    (146/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.375387999 seconds)
    (147/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.443464404 seconds)
    (148/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.400400562 seconds)
    (149/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.394865652 seconds)
    (150/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.402611803 seconds)
    (151/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.39034161 seconds)
    (152/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.502687013 seconds)
    (153/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.439567148 seconds)
    (154/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.226524989 seconds)
    (155/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.026402973 seconds)
    (156/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.613245657 seconds)
    (157/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.495090226 seconds)
    (158/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.404090953 seconds)
    (159/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.484237394 seconds)
    (160/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.400136588 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.412273615 seconds)
    (162/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.46909171 seconds)
    (163/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.56274595 seconds)
    (164/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.501133464 seconds)
    (165/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.45308673 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.466919751 seconds)
    (167/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.405218392 seconds)
    (168/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.523505849 seconds)
    (169/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.412749566 seconds)
    (170/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.398849748 seconds)
    (171/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.610501852 seconds)
    (172/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.378107635 seconds)
    (173/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.171653171 seconds)
    (174/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.493402326 seconds)
    (175/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.469207008 seconds)
    (176/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.041170026 seconds)
    (177/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.675762597 seconds)
    (178/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.438017436 seconds)
    (179/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.376844939 seconds)
    (180/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.580781325 seconds)
    (181/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.41837905 seconds)
    (182/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.544469794 seconds)
    (183/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.501131935 seconds)
    (184/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.619700632 seconds)
    (185/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.391028711 seconds)
    (186/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.479797838 seconds)
    (187/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.492748466 seconds)
    (188/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.04982706 seconds)
    (189/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.499355607 seconds)
    (190/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.400516897 seconds)
    (191/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.449836613 seconds)
    (192/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.506514752 seconds)
    (193/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.433846122 seconds)
    (194/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.385392513 seconds)
    (195/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.305500841 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.424469005 seconds)
    (197/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.10421054 seconds)
    (198/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.112205441 seconds)
    (199/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.378816796 seconds)
    (200/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.447312276 seconds)
    (201/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.445597061 seconds)
    (202/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.41203224 seconds)
    (203/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.787225879 seconds)
    (204/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.552364003 seconds)
    (205/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.483505189 seconds)
    (206/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.415183864 seconds)
    (207/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.592023801 seconds)
    (208/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.043706944 seconds)
    (209/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.618927353 seconds)
    (210/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.616955303 seconds)
    (211/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.442527226 seconds)
    (212/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.524875036 seconds)
    (213/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.52485126 seconds)
    (214/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.408309357 seconds)
    (215/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.57136226 seconds)
    (216/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.57587158 seconds)
    (217/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.479103649 seconds)
    (218/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.587097092 seconds)
    (219/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.457968457 seconds)
    (220/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.515243246 seconds)
    (221/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.528486613 seconds)
    (222/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.402213925 seconds)
    (223/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.383327269 seconds)
    (224/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.285714808 seconds)
  done (took 382.06924812 seconds)
done (took 383.350200412 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.447896314 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.578275216 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.401193287 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.400775859 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.446028295 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.406991074 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.432028924 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.407836473 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.406973425 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.405847859 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.399785972 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.400619739 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.415205189 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.435286987 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.514231254 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.409592151 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.402380075 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.40344865 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.440521042 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.456484723 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.4415755 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.446926102 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.414398619 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.401432468 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.449682656 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.448683524 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.411315215 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.398627638 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.398651712 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.442418624 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.409259109 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.402109052 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.455329774 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.45252775 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.445512118 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.404851236 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.448649089 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.58001783 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.438554481 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.436796097 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.407101829 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.454381718 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.415480752 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.412373787 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.454812023 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.415674375 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.449462079 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.527795412 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.41123138 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.39272573 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.446980667 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.467043653 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.407978747 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.3965398 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.398111402 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.525093827 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.405552359 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.45108266 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.407537241 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.448266501 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.517782722 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.451977956 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.469081058 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.449292763 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.410092705 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.418299212 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.40795169 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.462898638 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.403603248 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.446648262 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.447734701 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.411358649 seconds)
done (took 112.631107529 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.53352735 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.401045682 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.564398266 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.403285916 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.57343718 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.554412467 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.403299808 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.404963648 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.398969108 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.223819654 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.402090649 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.402128317 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.397398533 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.403316969 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.53602441 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.408278618 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.402689992 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.124451618 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.405851963 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.547619831 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.402223055 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.402767252 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.407249226 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.236122959 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.404354619 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.401207815 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.551068904 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.40558686 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.121715136 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.39912769 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.403602109 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.122785359 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.548882047 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.422872783 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.414484626 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.411586713 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.579228445 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.418395092 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.535464372 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.539212787 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.564987916 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.444311223 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.40097669 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.404877213 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.410065878 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.408512844 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.402618019 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.42680515 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.403542516 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.40496924 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.125435768 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.41708659 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.413069564 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.402580117 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.405067644 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.426080576 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.40326414 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.406816923 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.550923758 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.410717919 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.541695142 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.232817855 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.22794548 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.406143852 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.402052562 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.404627167 seconds)
  done (took 113.369051479 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.471794342 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.481796625 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.528932384 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.410377162 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.459121275 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.536052214 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.413243776 seconds)
  done (took 11.603121029 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.416779195 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.4099959 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.455693498 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.459156398 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.406676198 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.626821148 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408278296 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.418838739 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.406241476 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.485426096 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.40784568 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.410380154 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.416905753 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.403260436 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.457142643 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.422906214 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.527116401 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.411767248 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.413407614 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.561779233 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.40912138 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.415340056 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.483161004 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.422024894 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.410271533 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.418633419 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.355736907 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.410026708 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.409011432 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.411987662 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.407073317 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.516954835 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.412530414 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.405644055 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.40998466 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.571049235 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.412664887 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.4098388 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.409699963 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.4104277 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.412544611 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.412448683 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.413082488 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.408264221 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.411426982 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.433817351 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.411296854 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.407464667 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.412282075 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.415119809 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.487803913 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.4122412 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.411320893 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.406410184 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.489464628 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.421925534 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.412336074 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.408256239 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.40943597 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.410763433 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.567651882 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.460459963 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.415111906 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.459711558 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412198223 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.413860324 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.412735661 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.41537332 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.500482096 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.413379807 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.459499923 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.407127191 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.639569971 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.436614015 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.417982753 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.417430923 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.413237557 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.41476009 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.411269932 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.421757411 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.411327486 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.415426315 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.419518737 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.41116185 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.41365039 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.595970094 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.569704047 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.409700682 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.427927631 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.421643269 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.413686715 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.486202913 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.414307435 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.411654632 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.469749388 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.530104644 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.492117587 seconds)
  done (took 145.776570312 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.425740958 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.431108122 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.416623136 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.441767779 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.418321559 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.416078227 seconds)
  done (took 9.861130294 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.418349557 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.415844957 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.414703606 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.41192939 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.41245766 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.413257091 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.421449443 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.42044941 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.421924337 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.413281337 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.418459958 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.423036379 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.413845467 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.417428137 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.416777822 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.418777539 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.41450663 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.416642097 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.418975882 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.41653345 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.415853574 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.418656131 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.417929656 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.419643511 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.424327924 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.418942928 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.438943493 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.414816633 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.416635367 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.421716779 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.438858127 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.419276832 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.421221443 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.423597145 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.420901862 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.422354897 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.422679587 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.419599162 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.419017052 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.418422159 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.422522927 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.417004828 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.418583672 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.419122663 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.419206044 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.424865111 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.42672993 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.438136187 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.417518689 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.421287283 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.421253602 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.42145203 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.418742592 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.420689883 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.418585029 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.443701698 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.424091686 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.418218736 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.420007382 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.420104848 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.420953421 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.416618092 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.422908679 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.421966744 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.413769396 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.421366894 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.41976163 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.420267055 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.420210372 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.419651367 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.419618803 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.419611777 seconds)
  done (took 104.577215205 seconds)
done (took 386.485957949 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.323675486 seconds)
  done (took 4.640632905 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.549803299 seconds)
  done (took 3.868537663 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.903592767 seconds)
  done (took 25.23338279 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.416197853 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.456477525 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.415042749 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.418701509 seconds)
  done (took 11.022041863 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.820599997 seconds)
  done (took 4.139239659 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.412253951 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.407174908 seconds)
  done (took 6.139156226 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.786993888 seconds)
  done (took 4.105784694 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.941840674 seconds)
  done (took 4.270073327 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.415178911 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.428244433 seconds)
  done (took 6.169101096 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.396883297 seconds)
  done (took 3.710300495 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 38.441235892 seconds)
  done (took 39.759725833 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.41574091 seconds)
  done (took 3.740895868 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.448496596 seconds)
  done (took 3.767037943 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.447510775 seconds)
  done (took 6.762439127 seconds)
done (took 128.642714281 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.410873472 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.411323595 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.409192015 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.412582382 seconds)
  done (took 10.959872414 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.473431483 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.47562942 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.475139937 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.47620384 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.469355635 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.476170743 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.450383327 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.450826487 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.47466321 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.474645782 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.473036551 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.472964678 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.471992601 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.448715934 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.472687058 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.479540268 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.476495013 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.473237358 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.448030514 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.476259869 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.423773251 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.474592235 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.475366768 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.42223423 seconds)
  done (took 36.505763941 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.923815035 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.50424182 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.579752496 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.478312777 seconds)
  done (took 7.803419594 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.500687588 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.502402922 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.514827595 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.551442922 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.566387648 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.515342907 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.448146439 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.442379519 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.431197588 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.500921277 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.553258085 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.489490183 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.580898316 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.423570313 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.628783733 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.423473614 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.425511501 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.50105709 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.551869887 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.563817266 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.426816972 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.499976528 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.505910541 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.495993907 seconds)
  done (took 37.36028513 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.432676701 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.438165562 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.42577796 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.436860928 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.423432956 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.420879382 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.425568204 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.430314853 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.421906415 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.423529777 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.421490496 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.435396762 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.426580162 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.422480344 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.432395264 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.422960722 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.428957719 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.428611918 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.424480539 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.429153297 seconds)
  done (took 29.868395572 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.420203244 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.418265673 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.769518234 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.677786033 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.420088193 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.41390431 seconds)
  done (took 14.439082499 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.506530612 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.671169255 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.428641183 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.837461815 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.918030176 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.422738193 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.430632131 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.714282549 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.086814009 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.066677042 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.491850307 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.508081717 seconds)
  done (took 21.407420428 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.417771876 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.419221656 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.437299567 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.438885189 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.492155144 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.435730224 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.434956368 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.419850409 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.493601723 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.498165191 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.43133114 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.493543053 seconds)
  done (took 22.737161799 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519088269 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.421503837 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.422479815 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500356176 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42004905 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273310924 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.430207489 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.182421983 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.443246571 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694880375 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433678427 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514257507 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.682503877 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421409198 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.440624778 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.427972452 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652160317 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996458784 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421815839 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429607773 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452675939 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428384296 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.426922665 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.664640959 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.419299815 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423282829 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.68644801 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.423342696 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748565862 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437545395 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434415402 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42497699 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694882348 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133447819 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535318621 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.659825751 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424784762 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.438141854 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.435760086 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.430246705 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420408144 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.426318174 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439447022 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425214117 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.425068397 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425371217 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196821329 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.44478525 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.420017977 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.425722416 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.726790269 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519633317 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.430821046 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.425031519 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431102204 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422079334 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.428202099 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524144503 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008081818 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422959862 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423477384 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.428666676 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.423201457 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428521079 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103024868 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.429398813 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.428218102 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.429394684 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426849195 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.431093188 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440863203 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42534018 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.44941953 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425996727 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224587144 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.438774026 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425214805 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048912407 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424120887 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.431615652 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658995639 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42338871 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428631244 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.424753104 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.427475066 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.233573938 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433741769 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.41621101 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446951169 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.19385347 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.682010483 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446182164 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459304341 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.650786114 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.412750627 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428911159 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.437433417 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42676326 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44942994 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.192230519 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444443736 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.426882614 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686613665 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.636374795 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429785998 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.446800259 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946715995 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441493242 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.446534567 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.428661745 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.670361413 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.092902796 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.441231581 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430541554 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440805882 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426779725 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286364533 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427801204 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.534838162 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.443464214 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719812146 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.320950064 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42871425 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498678614 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431808896 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.4291638 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432822382 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427745903 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.427312589 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.661557203 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459944895 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.439666289 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.433382346 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431878506 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.42532433 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427760455 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.445613075 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.658481402 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429861725 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709865296 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429202636 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431014719 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42718575 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.653017692 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.435573448 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.765317539 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.695759099 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448383848 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.452007395 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.446253947 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451390909 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534835864 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448515633 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.448616884 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.693694817 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.434274521 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.436128662 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438293605 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428658893 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436457694 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.437705089 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447294454 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096269353 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400129541 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.43757433 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325846425 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.446026528 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496887711 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.439137292 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.672882159 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.426290092 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447525495 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.435143646 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.434227877 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656246514 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.444380174 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.434284068 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511030508 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.950989734 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116735016 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440487909 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.431971675 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.4307928 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.431152185 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434206911 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432207217 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432616368 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.675886352 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.444734506 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.436915893 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.104033513 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435716851 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.435763846 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.436674145 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.447304439 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.440263236 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436367814 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.431442815 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429601982 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450224788 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.44906294 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579996328 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.451404562 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.432263685 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.950116984 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.442272827 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.433763218 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.437103602 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473126787 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.444587459 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301975001 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698191934 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437272683 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740859796 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.444255386 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.446261645 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.434558886 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452855063 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448365404 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.448306207 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443861828 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.447684271 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.436576895 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436459987 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011665031 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257703113 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052049283 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4363627 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.443544743 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.44054392 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.204550479 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454755136 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435254975 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706265018 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.201693178 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452676464 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959277468 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.462987756 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.305901952 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.739993104 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672487772 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.44030741 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.433767644 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.760062502 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650310741 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47614138 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.450080418 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44092046 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.416708437 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043672131 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.452978103 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538294052 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211646446 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45423709 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.439562492 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.474747114 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.434880404 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886575505 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.454669647 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44001364 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.446620589 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.444053869 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306476953 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.441623253 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438675807 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127327589 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.437729322 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.979476256 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452527222 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.683604485 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.449317768 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.445392208 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.445063857 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.431078066 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.693747633 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.746261691 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440332001 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.436410889 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084676043 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.305317163 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.445231732 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442368567 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294534981 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452700859 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.779229596 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.448428003 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.45819455 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444042383 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.436708719 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437288852 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.43825856 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.447116005 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415100634 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018833958 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.453275274 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445884565 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43970591 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443402359 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.700530219 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.455952046 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.113416961 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671893344 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454449363 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46613978 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.444235432 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450453987 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.424568774 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.439830145 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.443302285 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468208882 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.664979033 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.455197507 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.425118602 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.445493389 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.657092813 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.445933656 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.44635723 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721093951 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.439729783 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.466539902 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265697857 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472830589 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.448885055 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445392176 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.457039013 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463872727 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516013371 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.69275989 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.455269455 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.455791148 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899844964 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477521786 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447023819 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.46124314 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539803626 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456520904 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.439831008 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.219263219 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122693572 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263001998 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.119442778 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.757338257 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.44775874 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452699104 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447938461 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605794373 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448204212 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719090659 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445887498 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.44894817 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472745264 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450276411 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443061802 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662989923 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722837288 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442193647 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460919693 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448276973 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.445569527 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.458092376 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.659211749 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028874109 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083198541 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444323374 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.451088275 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.22074545 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.737704102 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448083856 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447997811 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448500568 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.467610142 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.453796648 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.45042795 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453964965 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590188583 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756738429 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169954663 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.470272155 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.478669779 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.966094672 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450534036 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.701693327 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445923511 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.697765225 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12224238 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.270724836 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720241961 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519987831 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.698466051 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.441179345 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610195815 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.444562861 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.444209187 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445522981 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449139684 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.442376901 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.456292896 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124815272 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.71077923 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.451005804 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.456724114 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473763073 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.456985423 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.668894951 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.294781379 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.674076923 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.459789095 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.452430086 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.448483123 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124048429 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.752567897 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446539995 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.447653697 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717996266 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.447630234 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471458803 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.965033126 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.446523513 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083903385 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.424072847 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468682182 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450062689 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255074543 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118459881 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.456101478 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028998237 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.446405374 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45979421 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725048863 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.458074162 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.450320112 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730313219 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.452572404 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.448145845 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.696113512 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.117048998 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.347058844 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.473665031 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466100308 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.450942598 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44861103 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528973587 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444771781 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47512192 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.921229203 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.463904101 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449310968 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460420177 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.463225555 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455138908 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.450576924 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450020878 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.454939071 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.444706144 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.441541465 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.454435893 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55602742 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062551572 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469187836 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.13297086 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.779439287 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.708571826 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.451894305 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.439540759 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.452378155 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453072381 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448700077 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449174161 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.463209139 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085832862 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.452076024 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.464737151 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.45856824 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.452563983 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662942865 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.459036712 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696016152 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452759851 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470776852 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.438738841 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455207971 seconds)
  done (took 1012.104407002 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.49640587 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.515674238 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.487194049 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.467273459 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.514528307 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.465938128 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.523841419 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.520069631 seconds)
  done (took 21.346083089 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.464654441 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.460277417 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.461234845 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.456329309 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.464111257 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.995969413 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.482156699 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.46189481 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.466277193 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.456491859 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.4604697 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.43869194 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.463931072 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.460254144 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.442003335 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.462490383 seconds)
  done (took 34.254988884 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.756777961 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.730126971 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.981168847 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.45287488 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.48055877 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.457492162 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.853679608 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.4660124 seconds)
  done (took 28.532257808 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.468444087 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.466860189 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.465164995 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.466267365 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.46894292 seconds)
  done (took 8.689497069 seconds)
done (took 1287.327638622 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.458926911 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.463205598 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.459305025 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.462708643 seconds)
  done (took 7.197340693 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.446559194 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.440480342 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.448782201 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.450778167 seconds)
  done (took 10.137813006 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.295088861 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.187124813 seconds)
  done (took 5.83782384 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.972314957 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.980449478 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.96630221 seconds)
  done (took 7.274268222 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.788308778 seconds)
  done (took 3.141583374 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.389200554 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.46271534 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.167871468 seconds)
  done (took 8.375991289 seconds)
done (took 43.317925161 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.456076747 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.712239174 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.611397463 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.462909779 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.642264346 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.614535434 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.219982053 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.454807516 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.481721073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.46505267 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.457009498 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.64395857 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.200564352 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.709357926 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.203781356 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.70982026 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.622421335 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.469798291 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.45407051 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.465739371 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.218862454 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.470431637 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.473099354 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.472124301 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.6191786 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.60547063 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.45909746 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.712064635 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.45798522 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.457808539 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.602641363 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.472145201 seconds)
  done (took 85.435218208 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.463801099 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.468907496 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.456663311 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.486710507 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.456141258 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.458921312 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.477206872 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.457073256 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.453258768 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.45390055 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.457281321 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.482479815 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.46907165 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.45602668 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.493380469 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.453677787 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.488238688 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.462654119 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.4565151 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.475221852 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.469927347 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.4548253 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.48086037 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.459608856 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.485511676 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.46055965 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.473930861 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.461218324 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.45619655 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.475276826 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.461940698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.458435704 seconds)
  done (took 80.286681876 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.463812224 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.459552347 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.457771427 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.490897965 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.458605213 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.490694253 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.460726884 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.458871771 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.461158687 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.47460585 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.469728835 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.474329438 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.456567508 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.453461615 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.461037965 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.461560384 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.457161544 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.462253337 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.460683181 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.458640057 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.458635531 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.462359149 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.459555913 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.468838709 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.46131456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.467436564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.4596496 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.460040166 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.462275671 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.455544539 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.464480725 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.473293404 seconds)
  done (took 80.206915836 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.744958945 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.465960626 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.46838286 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.457299784 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.468401979 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.46952149 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.462660073 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.748352016 seconds)
  done (took 15.643055504 seconds)
done (took 262.925243386 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.466259213 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.036356907 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.505663503 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.463357255 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.49076638 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.496376849 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.711873773 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.503295363 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.706530019 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.482120264 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.489067943 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.472359404 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.385120527 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.626865081 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.380990015 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.463579908 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.470891657 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.476880953 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.116942175 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.757867175 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.489071356 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.478036081 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.375760589 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.498476205 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.463095693 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.560105647 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.576429207 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.691442233 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.63521092 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.560268494 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.058004478 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.467175434 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.465198674 seconds)
  done (took 68.180953529 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.472966606 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.591172766 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.475126322 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.472327472 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.5947914 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.471805815 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.472911786 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.474377835 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.474352138 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.474028357 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.472823019 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.473229737 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.478362487 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.522107994 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.59709983 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.484116583 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.470219367 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.592186526 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.474324937 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.46977021 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.518189795 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.473879065 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.477964409 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.519455806 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.471448074 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.475063683 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.594032489 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.475972445 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.474983446 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.591720076 seconds)
  done (took 46.450565321 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.476747404 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.131931279 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.292774209 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.477871447 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.476691089 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.474539226 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.819725343 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.473507523 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.471864473 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.471379638 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.028915994 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.475149818 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.513225639 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.31486596 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.471781804 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.470036696 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.475771881 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.474097557 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.154589498 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.486406572 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.84025068 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.475807978 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.826052407 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.484810678 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.496328889 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.478794666 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.481001522 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.404877796 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.483117335 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.036365247 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.406876361 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.808009205 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.308289578 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.306291677 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.401575755 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.482882193 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.47914776 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.05051721 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.479809928 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.476235483 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.820594643 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.4778828 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.316009431 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.194469778 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.494059668 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.474873579 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.426298635 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.035457917 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.763977762 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.488764977 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.331408783 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.476118727 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.479158399 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.481115184 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.763380336 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.477410216 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.477872651 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.449335739 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.481126441 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.820450183 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.479616583 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.479627706 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.143733362 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.480367848 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.143804199 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.486829069 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.486965276 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.501586058 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.330978408 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.484932792 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.227258645 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.497011387 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.47806698 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.039431618 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.142832238 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.478644214 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.483725199 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.146872501 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.36922239 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.813263628 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.486405087 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.378835075 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.820541431 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.486015677 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.484646823 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.48527352 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.481124785 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.558642434 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.810176862 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.155807978 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.215732035 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.510248919 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.824714573 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.491659709 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.483783376 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.476431179 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.508992462 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.482796784 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.320793949 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.222049848 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.502498108 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.487965635 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.233609804 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.505003148 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.824688097 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.490054974 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.339732817 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.485736816 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.557415936 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.481761382 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.492460554 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.504791268 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.824083037 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.489900272 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.48418507 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.20403271 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.066228582 seconds)
  done (took 209.096350375 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.479963438 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.473040906 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.474719621 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.472900356 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.474438588 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.482323657 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.478569927 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.479509171 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.484974902 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.480450175 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.512242285 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.486908306 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.482319748 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.477093069 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.477323028 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.475086995 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.493292436 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.481825306 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.47675494 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.478008951 seconds)
  done (took 46.993716787 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.48659496 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.135238981 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.108151485 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.480202235 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.48454649 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.485964953 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.554013816 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.484847633 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.482367056 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.833058604 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.689748205 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.482986703 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.480113034 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.48512944 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.107602135 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.475424504 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.843888461 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.151066752 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.48725461 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.135913536 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.476487787 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.488501893 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.48505334 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.139780809 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.835283172 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.826637733 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.553805317 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.141187635 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.480492306 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.485918793 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.141581974 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.486652901 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.489202914 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.138113125 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.499086899 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.502193059 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.483269281 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.5557116 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.561356404 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.839652347 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.205864795 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.822328366 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.498646502 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.67744828 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.4903322 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.472872195 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.143108176 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.50161151 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.479963625 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.488686472 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.495836627 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.115117492 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.503202368 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.112149452 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.499701664 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.488376244 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.138368084 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.112928163 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.128152048 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.688471453 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.488366762 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.823969938 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.48362516 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.143929469 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.503816774 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.491337137 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.489708035 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.69457828 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.145967551 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.822645936 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.838706578 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.837577699 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.48752804 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.556639287 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.506892864 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.902450111 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.55277523 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.938654732 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.842535707 seconds)
  done (took 136.474720575 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.793648967 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.607689603 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.940631438 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.148204397 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.480757043 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.620013463 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.611878807 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.771778914 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.488653435 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.56113777 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.220498461 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.588117047 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.310878579 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.575253965 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.595625924 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.648100512 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.932643333 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.497531556 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.163126726 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.202263263 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.484308849 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.602614616 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.087935135 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.740668892 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.48798359 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.081728362 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.505326864 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.233332042 seconds)
  done (took 57.365339699 seconds)
done (took 565.916767245 seconds)
SAVING RESULT...
DONE!
